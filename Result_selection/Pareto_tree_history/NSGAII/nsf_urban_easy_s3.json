{"1": [{"determining": "( ( ARS - MRS ) + ( CRS + ARS ) )", "choosing": "( ( RRSe - CS ) * ( DS * MUM ) )", "obj1": 0.26720647773279355, "obj2": 0.5877033984751164}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + DS ) - ( DS * MUC ) )", "obj1": 0.9251012145748988, "obj2": 0.07910319061090687}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ACS - ( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * ( CS * CS ) )", "obj1": 0.10526315789473684, "obj2": 0.7009925372949614}, {"determining": "( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) - ( PN / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,DS ) / MUC ) )", "obj1": 0.3967611336032389, "obj2": 0.5422264015569513}, {"determining": "( ( ACS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / ( Const + DDR ) )", "choosing": "( ( Max( MUR,RCSe ) / Min( RRSe ,CS ) ) - ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6937159508639679}, {"determining": "( ( ( MDR * MRS ) / Min( MDR ,AMS ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,( PN - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( MUM ,RCSe ),MUM ) * ( RMSe / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * MDR ) / Min( FirstVNF_Mem ,ARS ) ) - ( Min( PN ,PN ) + ( FirstVNF_CPU_Server + Const ) ) )", "choosing": "( ( RMSe / CS ) - ( RMSe - ( CS - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "Max( Min( ( MLU + RMSe ) ,( MUR * DS ) ),( ( RMSe * MUC ) * ( MLU - CS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.5082742242909215}, {"determining": "Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "Min( ( RRSe - CS ) ,( RRSe / MUC ) )", "obj1": 0.2631578947368421, "obj2": 0.5959844833246117}, {"determining": "( Min( ( Const - ( CRS * FirstVNF_Mem_Server ) ) ,AMS ) - ( ( Max( Const,AMS ) * AMS ) / Max( ACS,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( ( CS - MLU ) - ( MUR / RMSe ) ) + Min( ( RMSe * MUM ) ,( MUR - DS ) ) ) * Min( ( ( MUM - DS ) / Max( RCSe,MUM ) ) ,Min( ( DS - MLU ) ,( RMSe * RCSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6874747915151421}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ),( Min( ACS ,DDR ) / ( FirstVNF_CPU_Server * AMS ) ) ) - Max( ( ( FirstVNF_CPU - ARS ) + ( FirstVNF_CPU - AMS ) ),( ( ARS / ARS ) + ( FirstVNF_RAM / RRS ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - DS ) ) + CS ) + Max( ( MUM - CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.1108489557346684}, {"determining": "( Min( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ,Min( ( Const - PN ) ,Min( FirstVNF_CPU ,ARS ) ) ) - ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,CS ) / MUM ) * ( ( DS * CS ) / ( MUM + CS ) ) ) + ( ( Max( MLU,CS ) / CS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MLU ) * ( MUM + DS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6490941421380297}, {"determining": "Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - Min( MRS ,ACS ) ) * Max( Max( DDR,FirstVNF_CPU_Server ),Min( CRS ,CRS ) ) ),( Min( ( BR - FirstVNF_RAM_Server ) ,( Const - FirstVNF_RAM ) ) - ( ( BR * FirstVNF_Mem_Server ) - ( AMS - MDR ) ) ) )", "choosing": "Max( Max( ( MUR / RMSe ),MLU ),( RRSe + MUR ) )", "obj1": 0.3299595141700405, "obj2": 0.582930392956553}, {"determining": "( ( ( ( MRS / FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU ) ) - ( Max( MRS,ARS ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( Min( MRS ,Const ) * ( CRS / BR ) ) / ( Min( MRS ,RRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) / ( RRSe - RCSe ) ) * Min( Min( DS ,RCSe ) ,Min( CS ,MUC ) ) ) + ( ( ( RCSe + DS ) + ( MUR + MUM ) ) + ( Min( MUM ,MLU ) + Max( MUR,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( Max( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ),( Min( ACS ,DDR ) / ( FirstVNF_CPU_Server * AMS ) ) ) - Max( ( ( BR - ARS ) + ( FirstVNF_CPU - AMS ) ),( ( ARS / ARS ) + ( FirstVNF_RAM / RRS ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - DS ) ) + CS ) + Max( ( MUM - CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / Min( MDR ,AMS ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7215285870950907}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( RMSe * RRSe ) )", "obj1": 0.5809716599190283, "obj2": 0.3534860452140066}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.11438949079010077}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,DS ) / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.4633710421763071}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.056101444827210425}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ( Min( Min( MDR ,FirstVNF_Mem_Server ) ,( BR + FirstVNF_Mem ) ) * ( ( DDR / FirstVNF_CPU_Server ) / ( PN - AMS ) ) ) ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,( FirstVNF_Mem / PN ) ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( ( ( RRSe + DS ) * ( DS - CS ) ) * ( ( CS / RRSe ) - Min( MUC ,CS ) ) ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / Min( MUM ,RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) / ( Min( RRSe ,MLU ) / ( RMSe / CS ) ) ) + ( Min( Min( CS ,MUC ) ,Min( RMSe ,RCSe ) ) / ( Max( MUM,MUR ) / ( MUR / RCSe ) ) ) ) - Min( ( ( ( CS * MUR ) * ( RMSe / RMSe ) ) - Min( ( CS - CS ) ,Max( DS,MUR ) ) ) ,( Min( Max( RCSe,CS ) ,( CS * MUM ) ) - ( ( MUC / MLU ) + ( MUM / CS ) ) ) ) ) / ( Min( Max( ( ( RCSe / CS ) * ( DS / MUM ) ),Max( ( RRSe + DS ),Max( MUC,MUM ) ) ) ,( Max( ( RRSe - MUC ),( MLU * MUC ) ) + ( ( MUM / MLU ) / ( RRSe + MUM ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( DS ,MUC ) ) + ( Max( MUC,MUR ) + ( RMSe * RCSe ) ) ) * Max( ( ( MUM / RMSe ) + Min( RCSe ,RMSe ) ),( ( DS - MLU ) - Max( MUC,CS ) ) ) ) ) ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( Min( MUM ,MUM ),Max( MUR,CS ) ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.9919028340080972, "obj2": 0.010747361081334665}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,DS ) / MUC ) )", "obj1": 0.8663967611336032, "obj2": 0.10261533258145991}, {"determining": "( ( FirstVNF_CPU_Server + Const ) + CRS )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) ) ,MUM ) - ( CS - MUR ) )", "obj1": 0.3076923076923077, "obj2": 0.5672847436119138}, {"determining": "Max( Min( ( ( PN - Const ) / ( ARS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( ( ( BR - FirstVNF_RAM ) / ( RRS - FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server - MDR ),Max( BR,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( RMSe / MUR ) + ( DS * CS ) ) - ( ( CS / DS ) * Max( DS,MLU ) ) ) ,Min( ( ( MUR + MUC ) + Max( DS,MUR ) ) ,( ( MUR + MUC ) * ( MUM / CS ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.6402159982992105}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MLU ) * ( MUM + DS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6490941421380297}, {"determining": "( ( ARS - MRS ) + ( CRS + ARS ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,DS ) / MUC ) )", "obj1": 0.38461538461538464, "obj2": 0.5571773298881796}, {"determining": "( Min( ( Const - ( CRS * FirstVNF_Mem_Server ) ) ,AMS ) - ( ( Max( Const,AMS ) * AMS ) / Max( ACS,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( ( CS - MLU ) - ( MUR / RMSe ) ) + Min( ( RMSe * MUM ) ,( MUR - DS ) ) ) * Min( ( ( MUM - DS ) / Max( RCSe,MUM ) ) ,Min( ( DS - MLU ) ,( RMSe * RCSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6874747915151421}, {"determining": "( Max( ARS,MRS ) + ( CRS + ARS ) )", "choosing": "( ( RMSe - CS ) * ( DS * MUM ) )", "obj1": 0.242914979757085, "obj2": 0.60816609314818}, {"determining": "( Min( FirstVNF_CPU_Server ,Const ) + Min( FirstVNF_CPU ,AMS ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.12753036437246965, "obj2": 0.6879587615967627}, {"determining": "( ( FirstVNF_CPU_Server + Const ) + Min( CRS ,AMS ) )", "choosing": "Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.5082742242909215}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.2732793522267207, "obj2": 0.5678192393512371}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "Max( Min( ( MLU + RMSe ) ,( MUR * DS ) ),( ( RMSe * MUC ) * ( MLU - CS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.5082742242909215}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "Max( Min( ( MLU + RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) )", "obj1": 0.39473684210526316, "obj2": 0.5310368872923862}, {"determining": "Min( ( ( ( ( ( Max( ( RRS * AMS ),Max( DDR,FirstVNF_RAM ) ) * ( ( MDR / MDR ) / ( ARS / DDR ) ) ) / Max( Max( ( RRS * FirstVNF_CPU_Server ),Min( ARS ,PN ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - MDR ) ) ) ) / Min( Min( ( ( CRS - MRS ) + ( MDR - RRS ) ) ,( ( CRS * FirstVNF_CPU ) * ( ARS / AMS ) ) ) ,( Max( ( FirstVNF_Mem_Server / MDR ),( ACS - FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Max( Const,ARS ) ) ) ) ) - ( ( Min( ( ( DDR * AMS ) + Max( FirstVNF_CPU,RRS ) ) ,Max( ( ACS / AMS ),( RRS + FirstVNF_RAM ) ) ) - ( ( ( PN - Const ) + Max( RRS,Const ) ) / ( ( ACS / RRS ) - ( BR / FirstVNF_Mem ) ) ) ) - ( Min( ( ( FirstVNF_CPU - RRS ) + Max( RRS,MDR ) ) ,Max( ( FirstVNF_CPU + PN ),Max( MDR,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( ACS * MDR ) ) - ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( Max( ( ( ( Const + ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / Min( ACS ,FirstVNF_Mem ) ) ),( Min( Max( MRS,FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( Min( AMS ,MRS ) - ( RRS - BR ) ) ) ),Max( Max( ( Max( FirstVNF_CPU,CRS ) * Min( BR ,CRS ) ),( ( FirstVNF_Mem + CRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ),( Min( ( AMS + AMS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( Max( Const,Const ) / ( BR / FirstVNF_Mem ) ) ) ) ) / ( ( Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem_Server ) ),Min( ( MDR / FirstVNF_Mem_Server ) ,( Const - MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + FirstVNF_Mem_Server ) ) / ( ( MDR + AMS ) * Min( ACS ,FirstVNF_RAM ) ) ) ) - ( ( ( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( ( MRS + RRS ) / ( PN * FirstVNF_CPU_Server ) ) ) / ( ( ( RRS / BR ) / ( FirstVNF_Mem / AMS ) ) / Max( Min( BR ,RRS ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( CRS / BR ) ) / ( Max( Const,ACS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + FirstVNF_CPU ),( CRS - FirstVNF_CPU_Server ) ) * ( ( RRS + MRS ) / ( MDR + RRS ) ) ) ) ,( ( Max( ( MDR * PN ),( CRS / FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),Min( PN ,ARS ) ) ) + ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( ARS + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ACS / MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + AMS ) / ( CRS / FirstVNF_RAM ) ) - Min( Max( BR,BR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) + Max( CRS,FirstVNF_RAM_Server ) ),( ( CRS - AMS ) * ( MRS * RRS ) ) ) ) / ( ( Max( ( BR - CRS ),( RRS / FirstVNF_CPU ) ) / ( Min( BR ,AMS ) / ( FirstVNF_CPU - RRS ) ) ) - ( Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / DDR ) ) * ( ( ACS / PN ) / Min( BR ,AMS ) ) ) ) ) ),Max( Max( Min( Min( Max( Min( PN ,DDR ),Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( ( ACS - RRS ) ,Max( BR,ARS ) ) ) ,( ( ( DDR * CRS ) + ( FirstVNF_RAM * PN ) ) - ( Max( CRS,CRS ) + ( FirstVNF_RAM + MDR ) ) ) ),( ( ( ( FirstVNF_CPU + MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) + ( ( MDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server / Const ) ) ) / Min( ( Max( PN,BR ) + ( RRS / FirstVNF_CPU ) ) ,( Min( MRS ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ),Max( Max( ( Max( ( RRS / FirstVNF_RAM ),( MRS - AMS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( CRS + ACS ) ) ),( ( Max( MRS,Const ) - ( FirstVNF_Mem * ACS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( RRS / DDR ) ) ) ),( ( ( ( AMS - PN ) * ( FirstVNF_RAM_Server / DDR ) ) / ( ( FirstVNF_RAM - ARS ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS - CRS ) ) - ( ( MDR - ACS ) / ( MDR / AMS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.577054446512959}, {"determining": "Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.24493927125506074, "obj2": 0.5905185360857299}, {"determining": "Min( Min( ( ARS * FirstVNF_RAM ) ,( MDR / ( CRS - CRS ) ) ) ,Max( FirstVNF_CPU,ARS ) )", "choosing": "Max( ( Min( ( MUC * RMSe ) ,DS ) * Max( Min( CS ,MLU ),( DS / RRSe ) ) ),( Min( MUM ,CS ) - RCSe ) )", "obj1": 0.38866396761133604, "obj2": 0.5532401404047291}, {"determining": "( ( ARS - MRS ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ARS ) )", "choosing": "( ( Max( DS,DS ) - CS ) * ( DS * MUM ) )", "obj1": 0.0931174089068826, "obj2": 0.7105757216763555}, {"determining": "( ( ACS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / ( Const + DDR ) )", "choosing": "( ( Max( MUR,RCSe ) / Min( RRSe ,CS ) ) - ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6937159508639679}, {"determining": "( Min( MDR ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUC ) ),( RCSe * MUR ) )", "obj1": 0.840080971659919, "obj2": 0.1108489557346684}, {"determining": "( ( ( FirstVNF_CPU_Server + Const ) + Min( CRS ,AMS ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) )", "obj1": 0.402834008097166, "obj2": 0.518727630937335}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU - RCSe ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.09919028340080972, "obj2": 0.7075520744860813}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( ( MUM + ( RCSe - DS ) ) / ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.5156491928293897}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.1108489557346684}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ACS - ( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * ( CS * CS ) )", "obj1": 0.10526315789473684, "obj2": 0.7009925372949614}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.10526315789473684, "obj2": 0.7009925372949614}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,MRS ),FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "Max( Min( ( MLU + RMSe ) ,( MUR * DS ) ),( DS * ( MLU - CS ) ) )", "obj1": 0.4048582995951417, "obj2": 0.5177755756440392}, {"determining": "( Max( ( Const - ( CRS * FirstVNF_Mem_Server ) ),AMS ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS - MLU ) - ( MUR / RMSe ) ) + Min( ( RMSe * MUM ) ,( MUR - DS ) ) ) * Min( ( ( MUM - DS ) / ( CS / MUR ) ) ,Min( ( DS - MLU ) ,( RMSe * CS ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6874747915151421}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,( PN - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( MUM ,RCSe ),MUM ) * ( RMSe / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * MDR ) / Min( FirstVNF_Mem ,ARS ) ) - ( Min( PN ,PN ) + ( FirstVNF_CPU_Server + Const ) ) )", "choosing": "( ( RMSe / CS ) - ( RMSe - ( CS - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ),( Min( ACS ,DDR ) / ( FirstVNF_CPU_Server * AMS ) ) ) - Max( ( ( FirstVNF_CPU - ARS ) + ( FirstVNF_CPU - AMS ) ),( ( ARS / ARS ) + ( FirstVNF_RAM / RRS ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - DS ) ) + CS ) + Max( ( MUM - CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ,Min( ( Const - PN ) ,Min( FirstVNF_CPU ,ARS ) ) ) - ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,CS ) / MUM ) * ( ( DS * CS ) / ( MUM + CS ) ) ) + ( ( Max( MLU,CS ) / CS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU ) ) - ( Max( MRS,ARS ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( Min( MRS ,Const ) * ( CRS / BR ) ) / ( Min( MRS ,RRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) / ( RRSe - RCSe ) ) * Min( Min( DS ,RCSe ) ,Min( CS ,MUC ) ) ) + ( ( ( RCSe + DS ) + ( MUR + MUM ) ) + ( Min( MUM ,MLU ) + Max( MUR,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU ) ) - ( Max( MRS,ARS ) * Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) * ( ( Min( MRS ,Const ) * ( CRS / BR ) ) / ( Min( MRS ,RRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + DS ) - ( DS * MUC ) ) + ( ( ( RCSe + DS ) + ( MUR + MUM ) ) + ( Min( MUM ,MLU ) + Max( MUR,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU ) ) - ( Max( MRS,ARS ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( Min( MRS ,Const ) * ( CRS / BR ) ) / ( Min( MRS ,RRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) / ( RRSe - RCSe ) ) * Min( Min( DS ,RMSe ) ,Min( CS ,MUC ) ) ) + ( ( ( RCSe + DS ) + ( MUR + MUM ) ) + ( Min( MUM ,MLU ) + Max( MUR,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ( Const - PN ) ,Min( FirstVNF_CPU ,ARS ) ) ) - ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,CS ) / MUM ) * ( ( DS * CS ) / ( MUC + CS ) ) ) + ( ( Max( MLU,CS ) / CS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ,Min( ( Const - PN ) ,Min( FirstVNF_CPU ,ARS ) ) ) - ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "Min( Max( MUC,MLU ) ,Min( MUM ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( ( ARS + FirstVNF_RAM_Server ) / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - MUR ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( FirstVNF_RAM - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM + ( Max( RCSe,MUC ) - MUR ) ) - ( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / Min( MDR ,AMS ) ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Min( ( ( MUM - DS ) / Max( RCSe,MUM ) ) ,Min( ( DS - MLU ) ,( RMSe * CS ) ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / Min( MDR ,AMS ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,( CRS - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe - CS ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( ( ( PN - Const ) / ( ARS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM + DS ) - Max( DS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( MDR / Min( MRS ,FirstVNF_Mem_Server ) ) ) - ( PN / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,MUM ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( ARS + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "Max( ( Min( MUM ,Max( CS,CS ) ) - RCSe ),Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ,Min( ( Const - PN ) ,Min( FirstVNF_CPU ,ARS ) ) ) - ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "Min( Max( MUC,MLU ) ,Min( MUM ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ),( Min( ACS ,DDR ) / ( FirstVNF_CPU_Server * AMS ) ) ) - Max( ( ( BR - ARS ) + ( FirstVNF_CPU - AMS ) ),( ( ARS / ARS ) + ( FirstVNF_RAM / RRS ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - DS ) ) + CS ) + Max( ( MUM - CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7215285870950907}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( RMSe * RRSe ) )", "obj1": 0.5809716599190283, "obj2": 0.3534860452140066}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.11438949079010077}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "Max( Min( ( MLU + RMSe ) ,( MUR * DS ) ),( ( RMSe * MUC ) * ( MLU - CS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.41568306557421414}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,DS ) / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.4633710421763071}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUC ) ),( ( ( Max( MLU,CS ) / CS ) * RCSe ) * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.022124490016778745}, {"determining": "( ( FirstVNF_CPU_Server + Const ) + CRS )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) ) ,MUM ) - ( CS - MUR ) )", "obj1": 0.3076923076923077, "obj2": 0.5672847436119138}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.9190283400809717, "obj2": 0.05098542039220912}, {"determining": "Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( MUC / CS ) ) + CS )", "obj1": 0.3522267206477733, "obj2": 0.5400823555805644}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.08625850448404496}, {"determining": "( Min( FirstVNF_CPU_Server ,Const ) + Min( FirstVNF_CPU ,AMS ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.13360323886639677, "obj2": 0.6807782789526989}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU - RCSe ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.9089068825910931, "obj2": 0.0665937113352265}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MLU ) * ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6491530443304053}, {"determining": "Max( ( ARS - ( AMS / ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( DS / CS ) ) + ( Min( ( Max( RCSe,MUC ) - MUR ) ,DS ) - MUC ) )", "obj1": 0.19838056680161945, "obj2": 0.6212773462746385}, {"determining": "( ( Max( FirstVNF_CPU,ARS ) + Const ) + Min( CRS ,AMS ) )", "choosing": "Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( Max( ( Min( ( MUC * RMSe ) ,DS ) * Max( Min( CS ,MLU ),( DS / RRSe ) ) ),( Min( MUM ,CS ) - RCSe ) ) * ( MLU - CS ) ) )", "obj1": 0.39473684210526316, "obj2": 0.5248868435294621}, {"determining": "Min( Min( ( ARS * FirstVNF_RAM ) ,( MDR / ( CRS - CRS ) ) ) ,Max( FirstVNF_CPU,ARS ) )", "choosing": "Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.5082742242909215}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + FirstVNF_CPU_Server ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.3582995951417004, "obj2": 0.5368468562488184}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,DS ) / MUC ) )", "obj1": 0.8663967611336032, "obj2": 0.10261533258145991}, {"determining": "( ( FirstVNF_CPU_Server + Const ) + Min( CRS ,AMS ) )", "choosing": "Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.5082742242909215}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ACS - ( ( DDR * CRS ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( DS + ( MUC / CS ) ),MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.17813765182186234, "obj2": 0.634717412860528}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe + ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.611683491719571}, {"determining": "Min( ( ( ( ( ( Max( ( RRS * AMS ),Max( DDR,FirstVNF_RAM ) ) * ( ( MDR / MDR ) / ( ARS / DDR ) ) ) / Max( Max( ( RRS * FirstVNF_CPU_Server ),Min( ARS ,PN ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - MDR ) ) ) ) / Min( Min( ( ( CRS - MRS ) + ( MDR - RRS ) ) ,( ( CRS * FirstVNF_CPU ) * ( ARS / AMS ) ) ) ,( Max( ( FirstVNF_Mem_Server / MDR ),( ACS - FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Max( Const,ARS ) ) ) ) ) - ( ( Min( ( ( DDR * AMS ) + Max( FirstVNF_CPU,RRS ) ) ,Max( ( ACS / AMS ),( RRS + FirstVNF_RAM ) ) ) - ( ( ( PN - Const ) + Max( RRS,Const ) ) / ( ( ACS / RRS ) - ( BR / FirstVNF_Mem ) ) ) ) - ( Min( ( ( FirstVNF_CPU - RRS ) + Max( RRS,MDR ) ) ,Max( ( FirstVNF_CPU + PN ),Max( MDR,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( ACS * MDR ) ) - ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( Max( ( ( ( Const + ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / Min( ACS ,FirstVNF_Mem ) ) ),( Min( Max( MRS,FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( Min( AMS ,MRS ) - ( RRS - BR ) ) ) ),Max( Max( ( Max( FirstVNF_CPU,CRS ) * Min( BR ,CRS ) ),( ( FirstVNF_Mem + CRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ),( Min( ( AMS + AMS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( Max( Const,Const ) / ( BR / FirstVNF_Mem ) ) ) ) ) / ( ( Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem_Server ) ),Min( ( MDR / FirstVNF_Mem_Server ) ,( Const - MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + FirstVNF_Mem_Server ) ) / ( ( MDR + AMS ) * Min( ACS ,FirstVNF_RAM ) ) ) ) - ( ( ( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( ( MRS + RRS ) / ( PN * FirstVNF_CPU_Server ) ) ) / ( ( ( RRS / BR ) / ( FirstVNF_Mem / AMS ) ) / Max( Min( BR ,RRS ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( CRS / BR ) ) / ( Max( Const,ACS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + FirstVNF_CPU ),( CRS - FirstVNF_CPU_Server ) ) * ( ( RRS + MRS ) / ( MDR + RRS ) ) ) ) ,( ( Max( ( MDR * PN ),( CRS / FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),Min( PN ,ARS ) ) ) + ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( ARS + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ACS / MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + AMS ) / ( CRS / FirstVNF_RAM ) ) - Min( Max( BR,BR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) + Max( CRS,FirstVNF_RAM_Server ) ),( ( CRS - AMS ) * ( MRS * RRS ) ) ) ) / ( ( Max( ( BR - CRS ),( RRS / FirstVNF_CPU ) ) / ( Min( BR ,AMS ) / ( FirstVNF_CPU - RRS ) ) ) - ( Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / DDR ) ) * ( ( ACS / PN ) / Min( BR ,AMS ) ) ) ) ) ),Max( Max( Min( Min( Max( Min( PN ,DDR ),Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( ( ACS - RRS ) ,Max( BR,ARS ) ) ) ,( ( ( DDR * CRS ) + ( FirstVNF_RAM * PN ) ) - ( Max( CRS,CRS ) + ( FirstVNF_RAM + MDR ) ) ) ),( ( ( ( FirstVNF_CPU + MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) + ( ( MDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server / Const ) ) ) / Min( ( Max( PN,BR ) + ( RRS / FirstVNF_CPU ) ) ,( Min( MRS ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ),Max( Max( ( Max( ( RRS / FirstVNF_RAM ),( MRS - AMS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( CRS + ACS ) ) ),( ( Max( MRS,Const ) - ( FirstVNF_Mem * ACS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( RRS / DDR ) ) ) ),( ( ( ( AMS - PN ) * ( FirstVNF_RAM_Server / DDR ) ) / ( ( FirstVNF_RAM - ARS ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS - CRS ) ) - ( ( MDR - ACS ) / ( MDR / AMS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.6078201310027824}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.2732793522267207, "obj2": 0.5678192393512371}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ( Min( Min( MDR ,FirstVNF_Mem_Server ) ,( BR + FirstVNF_Mem ) ) - ( ( DDR / FirstVNF_CPU_Server ) / ( PN - AMS ) ) ) ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,( FirstVNF_Mem / PN ) ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.9898785425101214, "obj2": 0.013051264589671817}, {"determining": "( ( ACS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / ( Const + DDR ) )", "choosing": "( ( Max( MUR,RCSe ) / Min( RRSe ,CS ) ) - ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6937159508639679}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MLU ) * ( MUM + DS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6490941421380297}, {"determining": "Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.24493927125506074, "obj2": 0.5905185360857299}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.1108489557346684}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.2611336032388664, "obj2": 0.5731424284330607}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.10121457489878542, "obj2": 0.7006644070581479}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - DS ) - MUR ) * Max( CS,CS ) )", "obj1": 0.08097165991902834, "obj2": 0.710750023748799}, {"determining": "( Min( FirstVNF_CPU_Server ,Const ) + Min( FirstVNF_CPU ,AMS ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.12753036437246965, "obj2": 0.6879587615967627}, {"determining": "Min( ( ( ( ( ( Max( ( RRS * AMS ),Max( DDR,FirstVNF_RAM ) ) * ( ( MDR / MDR ) / ( ARS / DDR ) ) ) / Max( Max( ( RRS * FirstVNF_CPU_Server ),Min( ARS ,PN ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - MDR ) ) ) ) / Min( Min( ( ( CRS - MRS ) + ( MDR - RRS ) ) ,( ( CRS * FirstVNF_CPU ) * ( ARS / AMS ) ) ) ,( Max( ( FirstVNF_Mem_Server / MDR ),( ACS - FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Max( Const,ARS ) ) ) ) ) - ( ( Min( ( ( DDR * AMS ) + Max( FirstVNF_CPU,RRS ) ) ,Max( ( ACS / AMS ),( RRS + FirstVNF_RAM ) ) ) - ( ( ( PN - Const ) + Max( RRS,Const ) ) / ( ( ACS / RRS ) - ( BR / FirstVNF_Mem ) ) ) ) - ( Min( ( ( FirstVNF_CPU - RRS ) + Max( RRS,MDR ) ) ,Max( ( FirstVNF_CPU + PN ),Max( MDR,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( ACS * MDR ) ) - ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( Max( ( ( ( Const + ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / Min( ACS ,FirstVNF_Mem ) ) ),( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ),Max( Max( ( Max( FirstVNF_CPU,CRS ) * Min( BR ,CRS ) ),( ( FirstVNF_Mem + CRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ),( Min( ( AMS + AMS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( Max( Const,Const ) / ( BR / FirstVNF_Mem ) ) ) ) ) / ( ( Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem_Server ) ),Min( ( MDR / FirstVNF_Mem_Server ) ,( Const - MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + FirstVNF_Mem_Server ) ) / ( ( MDR + AMS ) * Min( ACS ,FirstVNF_RAM ) ) ) ) - ( ( ( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( ( MRS + RRS ) / ( PN * FirstVNF_CPU_Server ) ) ) / ( ( ( RRS / BR ) / ( FirstVNF_Mem / AMS ) ) / Max( Min( BR ,RRS ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( CRS / BR ) ) / ( Max( Const,ACS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + FirstVNF_CPU ),( CRS - FirstVNF_CPU_Server ) ) * ( ( RRS + MRS ) / ( MDR + RRS ) ) ) ) ,( ( Max( ( MDR * PN ),( CRS / FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),Min( PN ,ARS ) ) ) + ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( ARS + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ACS / MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + AMS ) / ( CRS / FirstVNF_RAM ) ) - Min( Max( BR,BR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) + Max( CRS,FirstVNF_RAM_Server ) ),( ( CRS - AMS ) * ( MRS * RRS ) ) ) ) / ( ( Max( ( BR - CRS ),( RRS / FirstVNF_CPU ) ) / ( Min( BR ,AMS ) / ( FirstVNF_CPU - RRS ) ) ) - ( Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / DDR ) ) * ( ( ACS / PN ) / Min( BR ,AMS ) ) ) ) ) ),Max( Max( Min( Min( Max( Min( PN ,DDR ),Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( ( ACS - RRS ) ,Max( BR,ARS ) ) ) ,( ( ( DDR * CRS ) + ( FirstVNF_RAM * PN ) ) - ( Max( CRS,CRS ) + ( FirstVNF_RAM + MDR ) ) ) ),( ( ( ( FirstVNF_CPU + MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) + ( ( MDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server / Const ) ) ) / Min( ( Max( PN,BR ) + ( RRS / FirstVNF_CPU ) ) ,( Min( MRS ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ),Max( Max( ( Max( ( RRS / FirstVNF_RAM ),( MRS - AMS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( CRS + ACS ) ) ),( ( Max( MRS,Const ) - ( FirstVNF_Mem * ACS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( RRS / DDR ) ) ) ),( ( ( ( AMS - PN ) * ( FirstVNF_RAM_Server / DDR ) ) / ( ( FirstVNF_RAM - ARS ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS - CRS ) ) - ( ( MDR - ACS ) / ( MDR / AMS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.577054446512959}, {"determining": "Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.24493927125506074, "obj2": 0.5905185360857299}, {"determining": "( ( ARS - MRS ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ARS ) )", "choosing": "( ( Max( DS,DS ) - CS ) * ( DS * MUM ) )", "obj1": 0.0931174089068826, "obj2": 0.7105757216763555}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.07692307692307693, "obj2": 0.717934997047891}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.056101444827210425}, {"determining": "( Min( MDR ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUC ) ),( RCSe * MUR ) )", "obj1": 0.840080971659919, "obj2": 0.1108489557346684}, {"determining": "Max( Min( ( ( ARS - MRS ) + ( CRS + ARS ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( ( ( BR - FirstVNF_RAM ) / ( RRS - FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server - MDR ),Max( BR,CRS ) ) ) )", "choosing": "Min( ( ( ( RMSe / MUR ) + ( DS * CS ) ) - ( ( CS / DS ) * ( DS * MLU ) ) ) ,( DS * MUM ) )", "obj1": 0.39878542510121456, "obj2": 0.5191172866337458}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ( Min( Min( MDR ,FirstVNF_Mem_Server ) ,( BR + FirstVNF_Mem ) ) * ( ( DDR / FirstVNF_CPU_Server ) / ( PN - AMS ) ) ) ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,( FirstVNF_Mem / PN ) ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( ( ( RRSe + DS ) * ( DS - CS ) ) * ( ( CS / RRSe ) - Min( MUC ,CS ) ) ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / Min( MUM ,RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) / ( Min( RRSe ,MLU ) / ( RMSe / CS ) ) ) + ( Min( Min( CS ,MUC ) ,Min( RMSe ,RCSe ) ) / ( Max( MUM,MUR ) / ( MUR / RCSe ) ) ) ) - Min( ( ( ( CS * MUR ) * ( RMSe / RMSe ) ) - Min( ( CS - CS ) ,Max( DS,MUR ) ) ) ,( Min( Max( RCSe,CS ) ,( CS * MUM ) ) - ( ( MUC / MLU ) + ( MUM / CS ) ) ) ) ) / ( Min( Max( ( ( RCSe / CS ) * ( DS / MUM ) ),Max( ( RRSe + DS ),Max( MUC,MUM ) ) ) ,( Max( ( RRSe - MUC ),( MLU * MUC ) ) + ( ( MUM / MLU ) / ( RRSe + MUM ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( DS ,MUC ) ) + ( Max( MUC,MUR ) + ( RMSe * RCSe ) ) ) * Max( ( ( MUM / RMSe ) + Min( RCSe ,RMSe ) ),( ( DS - MLU ) - Max( MUC,CS ) ) ) ) ) ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( Min( MUM ,MUM ),Max( MUR,CS ) ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.9919028340080972, "obj2": 0.010747361081334665}, {"determining": "( ( Max( Min( ( ( MDR * MRS ) / ( MDR / AMS ) ) ,MRS ),FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "Max( Min( ( MLU + RMSe ) ,( MUR * DS ) ),Min( Min( DS ,MLU ) ,( RMSe * CS ) ) )", "obj1": 0.4109311740890688, "obj2": 0.5100966197172156}, {"determining": "Min( ( ( ( ( ( Max( ( RRS * AMS ),Max( DDR,FirstVNF_RAM ) ) * ( ( MDR / MDR ) / ( ARS / DDR ) ) ) / Max( Max( ( RRS * FirstVNF_CPU_Server ),Min( ARS ,PN ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - MDR ) ) ) ) / Min( Min( ( ( CRS - MRS ) + ( MDR - RRS ) ) ,( ( CRS * FirstVNF_CPU ) * ( ARS / AMS ) ) ) ,( Max( ( FirstVNF_Mem_Server / MDR ),( ACS - FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Max( Const,ARS ) ) ) ) ) - ( ( Min( ( ( DDR * AMS ) + Max( FirstVNF_CPU,RRS ) ) ,Max( ( ACS / AMS ),( RRS + FirstVNF_RAM ) ) ) - ( ( ( PN - Const ) + Max( RRS,Const ) ) / ( ( ACS / RRS ) - ( BR / FirstVNF_Mem ) ) ) ) - ( Min( ( ( FirstVNF_CPU - RRS ) + Max( RRS,MDR ) ) ,Max( ( FirstVNF_CPU + PN ),Max( MDR,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( ACS * MDR ) ) - ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( Max( ( ( ( Const + ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / Min( ACS ,FirstVNF_Mem ) ) ),( Min( Max( MRS,FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( Min( AMS ,MRS ) - ( RRS - BR ) ) ) ),Max( Max( ( Max( FirstVNF_CPU,CRS ) * Min( BR ,CRS ) ),( ( FirstVNF_Mem + CRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ),( Min( ( AMS + AMS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( Max( Const,Const ) / ( BR / FirstVNF_Mem ) ) ) ) ) / ( ( Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem_Server ) ),Min( ( MDR / FirstVNF_Mem_Server ) ,( Const - MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + FirstVNF_Mem_Server ) ) / ( ( MDR + AMS ) * Min( ACS ,FirstVNF_RAM ) ) ) ) - ( ( ( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( ( MRS + RRS ) / ( PN * FirstVNF_CPU_Server ) ) ) / ( ( ( RRS / BR ) / ( FirstVNF_Mem / AMS ) ) / Max( Min( BR ,RRS ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( CRS / BR ) ) / ( Max( Const,ACS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + FirstVNF_CPU ),( CRS - FirstVNF_CPU_Server ) ) * ( ( RRS + MRS ) / ( MDR + RRS ) ) ) ) ,( ( Max( ( MDR * PN ),( CRS / FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),Min( PN ,ARS ) ) ) + ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( ARS + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ACS / MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + AMS ) / ( CRS / FirstVNF_RAM ) ) - Min( Max( BR,BR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) + Max( CRS,FirstVNF_RAM_Server ) ),( ( CRS - AMS ) * ( MRS * RRS ) ) ) ) / ( ( Max( ( BR - CRS ),( RRS / FirstVNF_CPU ) ) / ( Min( BR ,AMS ) / ( FirstVNF_CPU - RRS ) ) ) - ( Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / DDR ) ) * ( ( ACS / PN ) / Min( BR ,AMS ) ) ) ) ) ),Max( Max( Min( Min( Max( Min( PN ,DDR ),Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( ( ACS - RRS ) ,Max( BR,ARS ) ) ) ,( ( ( DDR * CRS ) + ( FirstVNF_RAM * PN ) ) - ( Max( CRS,CRS ) + ( FirstVNF_RAM + MDR ) ) ) ),( ( ( ( FirstVNF_CPU + MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) + ( ( MDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server / Const ) ) ) / Min( ( Max( PN,BR ) + ( RRS / FirstVNF_CPU ) ) ,( Min( MRS ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ),Max( Max( ( Max( ( RRS / FirstVNF_RAM ),( MRS - AMS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( CRS + ACS ) ) ),( ( Max( MRS,Const ) - ( FirstVNF_Mem * ACS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( RRS / DDR ) ) ) ),( ( ( ( AMS - PN ) * ( FirstVNF_RAM_Server / DDR ) ) / ( ( FirstVNF_RAM - ARS ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS - CRS ) ) - ( ( MDR - ACS ) / ( MDR / AMS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.577054446512959}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU - RCSe ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.09919028340080972, "obj2": 0.7075520744860813}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.12753036437246965, "obj2": 0.6879587615967627}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ( Min( Min( MDR ,FirstVNF_Mem_Server ) ,( BR + FirstVNF_Mem ) ) - ( ( DDR / FirstVNF_CPU_Server ) / ( PN - AMS ) ) ) ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,( FirstVNF_Mem / PN ) ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ARS + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( ( ( RRSe + DS ) * ( DS - CS ) ) * ( ( CS / RRSe ) - Min( MUC ,CS ) ) ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / ( MUM + RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( Max( ( MUM - CS ),RRSe ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( Min( MUM ,MUM ),Max( MUR,CS ) ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.9919028340080972, "obj2": 0.010747361081334665}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.056101444827210425}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( ( MUM + ( RCSe - DS ) ) / ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.5156491928293897}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( ( MUM + ( RCSe - DS ) ) / ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.5156491928293897}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Min( Const ,BR ) )", "choosing": "( ( Max( MUC,( MLU - RCSe ) ) - DS ) * Max( CS,MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7075520744860813}], "4": [{"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + FirstVNF_CPU_Server ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( DDR,RRS ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + RRSe ) ) * Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ,Min( ( Const - PN ) ,Min( FirstVNF_CPU ,ARS ) ) ) - ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "Min( Max( MUC,MLU ) ,Min( MUM ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( Const + DDR ) )", "choosing": "( ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7877710840708687}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - MUR ),( Max( Max( MUC,RRSe ),DS ) / MUC ) )", "obj1": 0.7489878542510121, "obj2": 0.22020719671278707}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( Max( CS,Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.25763616835134445}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3988767379602578}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.11438949079010077}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),( RMSe * RRSe ) )", "obj1": 0.5870445344129555, "obj2": 0.33481393259094355}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4109311740890688, "obj2": 0.4507107427766327}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( RMSe * RRSe ) )", "obj1": 0.5647773279352226, "obj2": 0.3716782613331357}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUC ) ),( ( ( Max( MLU,CS ) / CS ) * RCSe ) * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.022124490016778745}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server * ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RCSe,MUC ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7223504284256468}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( ( MUM + ( RCSe - DS ) ) / ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.5156491928293897}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( RRS + CRS ) ) ,( ( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUM,MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.061622764654066096}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( FirstVNF_RAM_Server - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( ( RMSe - MUR ) ,( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.08588586977809162}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6396480599105531}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ACS - ( ARS + MRS ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + Max( CS,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.5192606576075656}, {"determining": "Max( ( ARS - ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.31781376518218624, "obj2": 0.5544545251449959}, {"determining": "Max( ( FirstVNF_RAM_Server - ( AMS - FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) )", "obj1": 0.2834008097165992, "obj2": 0.5597134479271296}, {"determining": "Max( ( ARS - ( AMS / ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( DS / CS ) ) + ( Min( ( Max( RCSe,MUC ) - MUR ) ,DS ) - MUC ) )", "obj1": 0.19838056680161945, "obj2": 0.6212773462746385}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.9190283400809717, "obj2": 0.05098542039220912}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ARS,( DDR * CRS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.12753036437246965, "obj2": 0.6797354098277957}, {"determining": "Min( ( ( ( ( ( Max( ( RRS * AMS ),Max( DDR,FirstVNF_RAM ) ) * ( ( MDR / MDR ) / ( ARS / DDR ) ) ) / Max( Max( ( RRS * FirstVNF_CPU_Server ),Min( ARS ,PN ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - MDR ) ) ) ) / Min( Min( ( ( CRS - MRS ) + ( MDR - RRS ) ) ,( ( CRS * FirstVNF_CPU ) * ( ARS / AMS ) ) ) ,( Max( ( FirstVNF_Mem_Server / MDR ),( ACS - FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Max( Const,ARS ) ) ) ) ) - ( ( Min( ( ( DDR * AMS ) + Max( FirstVNF_CPU,RRS ) ) ,Max( ( ACS / AMS ),( RRS + FirstVNF_RAM ) ) ) - ( ( ( PN - Const ) + Max( RRS,Const ) ) / ( ( ACS / RRS ) - ( BR / FirstVNF_Mem ) ) ) ) - ( Min( ( ( FirstVNF_CPU - RRS ) + Max( RRS,MDR ) ) ,Max( ( FirstVNF_CPU + PN ),Max( MDR,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( ACS * MDR ) ) - ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( Max( ( ( ( Const + ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / Min( ACS ,FirstVNF_Mem ) ) ),( Min( Max( MRS,FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( Min( AMS ,MRS ) - ( RRS - BR ) ) ) ),Max( Max( ( Max( FirstVNF_CPU,CRS ) * Min( BR ,CRS ) ),( ( FirstVNF_Mem + CRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ),( Min( ( AMS + AMS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( Max( Const,Const ) / ( BR / FirstVNF_Mem ) ) ) ) ) / ( ( Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem_Server ) ),Min( ( MDR / FirstVNF_Mem_Server ) ,( Const - MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + FirstVNF_Mem_Server ) ) / ( ( MDR + AMS ) * Min( ACS ,FirstVNF_RAM ) ) ) ) - ( ( ( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( ( MRS + RRS ) / ( PN * FirstVNF_CPU_Server ) ) ) / ( ( ( RRS / BR ) / ( FirstVNF_Mem / AMS ) ) / Max( Min( BR ,RRS ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( CRS / BR ) ) / ( Max( Const,ACS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + FirstVNF_CPU ),( CRS - FirstVNF_CPU_Server ) ) * ( ( RRS + MRS ) / ( MDR + RRS ) ) ) ) ,( ( Max( ( MDR * PN ),( CRS / FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),Min( PN ,ARS ) ) ) + ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( ARS + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ACS / MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + AMS ) / ( CRS / FirstVNF_RAM ) ) - Min( Max( BR,BR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) + Max( CRS,FirstVNF_RAM_Server ) ),( ( CRS - AMS ) * ( MRS * RRS ) ) ) ) / ( ( Max( ( BR - CRS ),( RRS / FirstVNF_CPU ) ) / ( Min( BR ,AMS ) / ( FirstVNF_CPU - RRS ) ) ) - ( Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / DDR ) ) * ( ( ACS / PN ) / Min( BR ,AMS ) ) ) ) ) ),Max( Max( Min( Min( Max( Min( PN ,DDR ),Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( ( ACS - RRS ) ,Max( BR,ARS ) ) ) ,( ( ( DDR * CRS ) + ( FirstVNF_RAM * PN ) ) - ( Max( CRS,CRS ) + ( FirstVNF_RAM + MDR ) ) ) ),( ( ( ( FirstVNF_CPU + MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) + ( ( MDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server / Const ) ) ) / Min( ( Max( PN,BR ) + ( RRS / FirstVNF_CPU ) ) ,( Min( MRS ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ),Max( Max( ( Max( ( RRS / FirstVNF_RAM ),( MRS - AMS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( CRS + ACS ) ) ),( ( Max( MRS,Const ) - ( FirstVNF_Mem * ACS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( RRS / DDR ) ) ) ),( ( ( ( AMS - PN ) * ( FirstVNF_RAM_Server / DDR ) ) / ( ( FirstVNF_RAM - ARS ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS - CRS ) ) - ( ( MDR - ACS ) / ( MDR / AMS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.6078201310027824}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ( Min( Min( MDR ,FirstVNF_Mem_Server ) ,( BR + FirstVNF_Mem ) ) - ( ( DDR / FirstVNF_CPU_Server ) / ( PN - AMS ) ) ) ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,( FirstVNF_Mem / PN ) ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) ) ,MUM ) - ( CS - MUR ) )", "obj1": 0.9898785425101214, "obj2": 0.011787076014646281}, {"determining": "( ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) / ( Const + DDR ) )", "choosing": "( ( Max( MUR,RCSe ) / Min( RRSe ,CS ) ) - ( Max( ( ( RRSe - RCSe ) - ( DS + RRSe ) ),MLU ) * Min( DS ,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6763423745772772}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( RMSe * MUM ) )", "obj1": 0.5668016194331984, "obj2": 0.36434530633021656}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ( Min( Min( MDR ,FirstVNF_Mem_Server ) ,( BR + FirstVNF_Mem ) ) * ( ( DDR / FirstVNF_CPU_Server ) / ( PN - AMS ) ) ) ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,MDR ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( Max( RCSe,( MLU - RCSe ) ) - DS ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / Min( MUM ,RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) / ( Min( RRSe ,MLU ) / ( RMSe / CS ) ) ) + ( Min( Min( CS ,MUC ) ,Min( RMSe ,RCSe ) ) / ( Max( MUM,MUR ) / ( MUR / RCSe ) ) ) ) - Min( ( ( ( CS * MUR ) * ( RMSe / RMSe ) ) - Min( ( CS - CS ) ,Max( DS,MUR ) ) ) ,( Min( Max( RCSe,CS ) ,( CS * MUM ) ) - ( ( MUC / MLU ) + ( MUM / CS ) ) ) ) ) / ( Min( Max( ( ( RCSe / CS ) * ( DS / MUM ) ),Max( ( RRSe + DS ),Max( MUC,MUM ) ) ) ,( Max( ( RRSe - MUC ),( MLU * MUC ) ) + ( ( MUM / MLU ) / ( RRSe + MUM ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( DS ,MUC ) ) + ( Max( MUC,MUR ) + ( RMSe * RCSe ) ) ) * Max( ( ( MUM / RMSe ) + Min( RCSe ,RMSe ) ),( ( DS - MLU ) - Max( MUC,CS ) ) ) ) ) ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( Min( MUM ,MUM ),Max( MUR,CS ) ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6980552352744159}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.9190283400809717, "obj2": 0.05098542039220912}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6317859701123177}, {"determining": "( ( Min( Max( Min( Min( Min( ( DDR / RRS ) ,Min( PN ,CRS ) ) ,Max( ( FirstVNF_Mem_Server + ARS ),( MRS * MRS ) ) ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),( FirstVNF_CPU / Const ) ) / ( ( AMS - PN ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),Max( Min( ( ( FirstVNF_Mem / CRS ) + ( MRS * FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - BR ) / Min( MRS ,FirstVNF_CPU_Server ) ) ),( Min( ( PN / BR ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ,( ( Max( Min( ( MDR / CRS ) ,( FirstVNF_RAM_Server * Const ) ),( Max( BR,RRS ) / ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / Max( ( ( ACS / BR ) * ( FirstVNF_RAM_Server + AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( ACS / ACS ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MRS + DDR ) ) * ( ( FirstVNF_RAM_Server - MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) / ( ( Min( FirstVNF_CPU ,MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Max( ( BR - PN ),( DDR / RRS ) ) ) ) ) ) - ( ( ( ( ( Max( FirstVNF_CPU,RRS ) + ( Const + FirstVNF_Mem ) ) * Max( Min( ARS ,MDR ),( MDR / ARS ) ) ) * ( Max( ( RRS / DDR ),( MDR / Const ) ) + Min( ( CRS + PN ) ,Max( Const,PN ) ) ) ) * Max( Max( Max( ( ARS * BR ),Max( FirstVNF_CPU_Server,DDR ) ),( Max( ACS,FirstVNF_CPU_Server ) - ( AMS + PN ) ) ),( ( Min( MDR ,FirstVNF_Mem ) * Min( CRS ,MDR ) ) + ( Max( Const,BR ) + ( PN * CRS ) ) ) ) ) / ( ( ( ( Min( Const ,Const ) * ( FirstVNF_CPU_Server + PN ) ) - Max( ( MRS * BR ),( RRS + Const ) ) ) / ( ( ( BR / BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ARS / FirstVNF_CPU ) / ( ACS * Const ) ) ) ) / ( Min( Max( ( Const / BR ),Min( BR ,FirstVNF_Mem ) ) ,( ( AMS * AMS ) * ( RRS - CRS ) ) ) / ( ( ( PN - BR ) * ( RRS * BR ) ) - Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),( ARS - MDR ) ) ) ) ) ) ) * Min( ( ( ( ( Min( ( Const - FirstVNF_RAM ) ,( FirstVNF_Mem_Server * AMS ) ) * Max( ( ARS / FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,RRS ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,CRS ),Max( Const,PN ) ),( ( MRS + Const ) - ( Const + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( ( FirstVNF_RAM_Server / PN ) / ( BR - RRS ) ) + ( ( ACS * DDR ) / ( MDR - FirstVNF_Mem_Server ) ) ) ,( ( ( MRS * FirstVNF_RAM_Server ) - ( DDR - Const ) ) * Max( ( AMS * DDR ),( CRS - MDR ) ) ) ) ) / ( Min( ( ( Max( PN,FirstVNF_RAM_Server ) * ( CRS - AMS ) ) * ( ( FirstVNF_Mem * BR ) - Max( MDR,MRS ) ) ) ,( ( Min( RRS ,MDR ) * Max( AMS,MDR ) ) * Min( ( MRS - AMS ) ,( PN * FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_RAM_Server,MDR ) - ( RRS / AMS ) ),Max( ( FirstVNF_CPU / DDR ),Max( ACS,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM / RRS ) ) - Min( ( RRS / FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ) ,Max( ( Max( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( RRS + FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * Max( ARS,FirstVNF_Mem_Server ) ) ),Min( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,Max( ARS,FirstVNF_RAM_Server ) ) ,( ( MDR - MRS ) / Max( ACS,AMS ) ) ) ) / ( ( ( Min( CRS ,FirstVNF_CPU ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) - ( Max( ARS,BR ) / ( PN - FirstVNF_Mem ) ) ) * Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( RRS - ACS ) ),Max( Min( CRS ,PN ),Min( FirstVNF_CPU_Server ,AMS ) ) ) ) ),Max( ( ( ( ( ACS + FirstVNF_CPU_Server ) * ( PN * MDR ) ) / Min( Min( FirstVNF_CPU_Server ,ACS ) ,Min( Const ,RRS ) ) ) / Min( Max( ( FirstVNF_RAM_Server * CRS ),Min( FirstVNF_RAM ,MDR ) ) ,( ( FirstVNF_Mem + MRS ) + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ),( Min( Max( ( RRS + BR ),( FirstVNF_RAM * MRS ) ) ,( ( CRS - ACS ) - ( ARS * FirstVNF_CPU ) ) ) * Min( ( ( ACS - RRS ) - Min( RRS ,FirstVNF_CPU ) ) ,( Max( ARS,FirstVNF_CPU ) + ( FirstVNF_RAM * MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( ( DS + RCSe ) + ( MUR - RMSe ) ) + ( Min( RCSe ,DS ) + ( MUC / CS ) ) ) / ( ( ( MUM * RRSe ) - Min( MUM ,MUR ) ) + Min( ( RCSe * RMSe ) ,( MLU - RCSe ) ) ) ) + ( Max( Min( ( RMSe / RRSe ) ,( MLU / DS ) ),( Min( MUC ,MLU ) + Max( MLU,RRSe ) ) ) - ( Max( ( MUR - RMSe ),( MUC + DS ) ) - ( Max( RRSe,CS ) / ( MLU * RCSe ) ) ) ) ) + ( ( ( ( Max( CS,RMSe ) - ( RRSe - MUM ) ) + Min( ( RCSe + MUM ) ,( MLU / CS ) ) ) - Max( Max( ( MLU + RRSe ),( RCSe / RRSe ) ),( Min( RRSe ,CS ) + ( MUC - RMSe ) ) ) ) / ( Min( ( Max( RCSe,MUM ) / Max( DS,MUR ) ) ,( ( DS / MUC ) * Max( RMSe,RCSe ) ) ) * ( ( ( RCSe + CS ) - ( RMSe - DS ) ) + ( ( MUR / MUM ) + ( MUM * RRSe ) ) ) ) ) ) / ( Min( ( ( ( ( MUC * MLU ) / Max( RCSe,MLU ) ) - Min( Max( DS,MUR ) ,( RMSe / DS ) ) ) - Max( ( Max( RMSe,CS ) * ( MLU * RMSe ) ),( ( MLU - CS ) * Max( RCSe,RMSe ) ) ) ) ,( ( ( ( CS + CS ) + ( CS * DS ) ) + ( Min( MUC ,CS ) / ( RRSe + CS ) ) ) / ( ( ( RCSe / RCSe ) * ( DS - MUM ) ) + ( Max( RRSe,MUM ) * ( MUC - MLU ) ) ) ) ) * ( ( ( ( Min( MUR ,MUR ) - Min( DS ,MUC ) ) * Max( ( MLU * RMSe ),Min( MUC ,CS ) ) ) + ( Max( ( CS * MUR ),Max( RMSe,CS ) ) + Max( ( MUM - CS ),( MUC * MUM ) ) ) ) + ( ( Min( Max( CS,MUC ) ,( CS - MUR ) ) / Max( ( MLU / RRSe ),( MUM / RMSe ) ) ) * ( ( ( RMSe * MUC ) + ( RRSe - MUC ) ) - Min( Max( RMSe,MLU ) ,( MUM + MUM ) ) ) ) ) ) ),( Max( Min( ( Max( Max( Max( MUR,MUC ),Min( CS ,MUR ) ),( Min( RMSe ,MLU ) + Min( MUM ,MUC ) ) ) - Min( Max( ( MLU + MLU ),( RMSe - RMSe ) ) ,Max( Max( RRSe,MUC ),Max( DS,CS ) ) ) ) ,Max( ( Max( Min( MUC ,MUR ),Max( MUC,MUM ) ) - ( ( RRSe * MUC ) / ( RCSe * CS ) ) ),( Min( Max( MLU,MUR ) ,( DS - DS ) ) * Max( ( MUC * CS ),( RMSe - MUC ) ) ) ) ),( Max( ( ( Min( RMSe ,RCSe ) * ( RMSe / DS ) ) / ( ( MUR / MUC ) / Max( RRSe,MLU ) ) ),Max( ( Max( RRSe,RRSe ) * ( CS / RCSe ) ),( ( RCSe * RMSe ) * ( MUM / DS ) ) ) ) + ( Max( ( Min( RMSe ,RCSe ) * Min( RRSe ,RCSe ) ),( Min( CS ,CS ) / Max( CS,DS ) ) ) - ( ( ( MUC + MUR ) / Max( MUC,RMSe ) ) * ( ( MUM + CS ) * Max( MLU,MUR ) ) ) ) ) ) / ( ( ( Max( Min( Max( CS,DS ) ,Max( RCSe,DS ) ),( ( CS + CS ) / ( MLU / CS ) ) ) * ( ( Min( CS ,RCSe ) * ( RCSe / MUM ) ) + ( Max( MLU,MUR ) - ( RCSe * MUR ) ) ) ) * Max( ( ( Max( MUC,RRSe ) * ( RRSe * RCSe ) ) - ( ( RCSe - RRSe ) * ( RMSe + MUM ) ) ),Min( ( ( MUC - MLU ) / ( RMSe + DS ) ) ,Min( Min( CS ,MUM ) ,( RCSe * CS ) ) ) ) ) + Max( ( ( ( ( RMSe - RCSe ) + Max( DS,RRSe ) ) * ( ( MUM - MUM ) + ( CS + DS ) ) ) + ( Max( ( DS + MUM ),( RMSe - MUM ) ) * ( Max( RRSe,MLU ) - ( MLU * RRSe ) ) ) ),Min( Max( ( ( MUM + MUC ) + ( RMSe - RCSe ) ),( ( MUC + MLU ) + Min( MUR ,MUR ) ) ) ,Max( ( ( RRSe * MUC ) / ( RCSe / RRSe ) ),Max( Min( CS ,MUC ),Min( DS ,MUM ) ) ) ) ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.10529742807084412}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + MUC ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7042352174778732}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe + ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.611683491719571}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ( ARS - ( AMS * ( MDR / FirstVNF_CPU_Server ) ) ),( DDR * CRS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,Max( MUC,RRSe ) ) - MUC ) ),MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.17611336032388664, "obj2": 0.6322929391378976}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) + MDR )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MUR - CS ) ) ) ,MUM ) - Max( CS,CS ) )", "obj1": 0.2165991902834008, "obj2": 0.6091957758569562}, {"determining": "( ( ACS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / ( Const + DDR ) )", "choosing": "( ( Max( MUR,RCSe ) / Min( RRSe ,CS ) ) - ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6937159508639679}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( Max( BR,CRS ),( MRS / BR ) ) )", "choosing": "Max( Min( ( MLU + RMSe ) ,( MUR * DS ) ),( ( DS * MLU ) * ( MLU - CS ) ) )", "obj1": 0.5850202429149798, "obj2": 0.35054199848434425}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + FirstVNF_CPU_Server ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.33805668016194335, "obj2": 0.5537882256866428}, {"determining": "( ( Max( Min( ( ( MDR * MRS ) / Min( MDR ,AMS ) ) ,MRS ),FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ),( MRS / BR ) ) )", "choosing": "Max( ( DS + RRSe ),Min( ( DS - MLU ) ,( RMSe * CS ) ) )", "obj1": 0.39878542510121456, "obj2": 0.5188009434194343}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + FirstVNF_CPU_Server ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.3582995951417004, "obj2": 0.5368468562488184}, {"determining": "Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.242914979757085, "obj2": 0.5907042894665512}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - DS ) - MUR ) * Max( CS,CS ) )", "obj1": 0.08097165991902834, "obj2": 0.710750023748799}, {"determining": "Max( ( ARS - ( AMS * FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( MUC / CS ) ) + CS )", "obj1": 0.3522267206477733, "obj2": 0.5400823555805644}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + FirstVNF_CPU_Server ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.3582995951417004, "obj2": 0.5368468562488184}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.08625850448404496}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Max( DS,DS ) / MUC ) )", "obj1": 0.8663967611336032, "obj2": 0.10261533258145991}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + FirstVNF_CPU_Server ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.34615384615384615, "obj2": 0.5472889365289867}, {"determining": "Min( ( ( ( ( ( Max( ( RRS * AMS ),Max( DDR,FirstVNF_RAM ) ) * ( ( MDR / MDR ) / ( ARS / DDR ) ) ) / Max( Max( ( RRS * FirstVNF_CPU_Server ),Min( ARS ,PN ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - MDR ) ) ) ) / Min( Min( ( ( CRS - MRS ) + ( MDR - RRS ) ) ,( ( CRS * FirstVNF_CPU ) * ( ARS / AMS ) ) ) ,( Max( ( FirstVNF_Mem_Server / MDR ),( ACS - FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Max( Const,ARS ) ) ) ) ) - ( ( Min( ( ( DDR * AMS ) + Max( FirstVNF_CPU,RRS ) ) ,Max( ( ACS / AMS ),( RRS + FirstVNF_RAM ) ) ) - ( ( ( PN - Const ) + Max( RRS,Const ) ) / ( ( ACS / RRS ) - ( BR / FirstVNF_Mem ) ) ) ) - ( Min( ( ( FirstVNF_CPU - RRS ) + Max( RRS,MDR ) ) ,Max( ( FirstVNF_CPU + PN ),Max( MDR,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( ACS * MDR ) ) - ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( Max( ( ( ( Const + ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / Min( ACS ,FirstVNF_Mem ) ) ),( Min( Max( MRS,FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( Min( AMS ,MRS ) - ( RRS - BR ) ) ) ),Max( Max( ( Max( FirstVNF_CPU,CRS ) * Min( BR ,CRS ) ),( ( FirstVNF_Mem + CRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ),( Min( ( AMS + AMS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( Max( Const,Const ) / ( BR / FirstVNF_Mem ) ) ) ) ) / ( ( Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem_Server ) ),Min( ( MDR / FirstVNF_Mem_Server ) ,( Const - MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + FirstVNF_Mem_Server ) ) / ( ( MDR + AMS ) * Min( ACS ,FirstVNF_RAM ) ) ) ) - ( ( ( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( ( MRS + RRS ) / ( PN * FirstVNF_CPU_Server ) ) ) / ( ( ( RRS / BR ) / ( FirstVNF_Mem / AMS ) ) / Max( Min( BR ,RRS ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( CRS / BR ) ) / ( Max( Const,ACS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + FirstVNF_CPU ),( CRS - FirstVNF_CPU_Server ) ) * ( ( RRS + MRS ) / ( MDR + RRS ) ) ) ) ,( ( Max( ( MDR * PN ),( CRS / FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),Min( PN ,ARS ) ) ) + ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( ARS + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ACS / MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + AMS ) / ( CRS / FirstVNF_RAM ) ) - Min( Max( BR,BR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) + Max( CRS,FirstVNF_RAM_Server ) ),( ( CRS - AMS ) * ( MRS * RRS ) ) ) ) / ( ( Max( ( BR - CRS ),( RRS / FirstVNF_CPU ) ) / ( Min( BR ,AMS ) / ( FirstVNF_CPU - RRS ) ) ) - ( Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / DDR ) ) * ( ( ACS / PN ) / Min( BR ,AMS ) ) ) ) ) ),Max( Max( Min( Min( Max( Min( PN ,DDR ),Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( ( ACS - RRS ) ,Max( BR,ARS ) ) ) ,( ( ( DDR * CRS ) + ( FirstVNF_RAM * PN ) ) - ( Max( CRS,CRS ) + ( FirstVNF_RAM + MDR ) ) ) ),( ( ( ( FirstVNF_CPU + MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) + ( ( MDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server / Const ) ) ) / Min( ( Max( PN,BR ) + ( RRS / FirstVNF_CPU ) ) ,( Min( MRS ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ),Max( Max( ( Max( ( RRS / FirstVNF_RAM ),( MRS - AMS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( CRS + ACS ) ) ),( ( Max( MRS,Const ) - ( FirstVNF_Mem * ACS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( RRS / DDR ) ) ) ),( ( ( ( AMS - PN ) * ( FirstVNF_RAM_Server / DDR ) ) / ( ( FirstVNF_RAM - ARS ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS - CRS ) ) - ( ( MDR - ACS ) / ( MDR / AMS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.577054446512959}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.2732793522267207, "obj2": 0.5678192393512371}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Max( MUC,DS ) / MUC ) )", "obj1": 0.8643724696356275, "obj2": 0.10298512121606776}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RCSe ) / Min( RRSe ,CS ) ) - ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6937159508639679}], "5": [{"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( Const + DDR ) )", "choosing": "( ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7877710840708687}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + FirstVNF_CPU_Server ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( DDR,RRS ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + RRSe ) ) * Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( Const + DDR ) )", "choosing": "( ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7877710840708687}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * DDR )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.3562753036437247, "obj2": 0.5016973191133397}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4109311740890688, "obj2": 0.4507107427766327}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.12940910248826817}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.7530364372469636, "obj2": 0.17657402291667953}, {"determining": "Max( ( ARS - ( AMS * BR ) ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( RRSe / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.31781376518218624, "obj2": 0.5357286790705269}, {"determining": "( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe - ( DS + Min( MUC ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.7064777327935222, "obj2": 0.21486022789217513}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) - Max( MUC,RRSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2739371940750734}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( ( FirstVNF_CPU_Server + MDR ) + MDR ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MUR - CS ) ) ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.31444075962898105}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( Max( CS,Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.25763616835134445}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,MLU ) * Min( DS ,MUR ) ) * ( Max( RCSe,MUC ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7336615708198256}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.18253277223410455}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3229932552726389}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4898785425101215, "obj2": 0.38522160731949073}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( RMSe * MUM ) )", "obj1": 0.5506072874493927, "obj2": 0.378201801341319}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( MRS / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - MUR ),( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) + ( MUC / CS ) ) )", "obj1": 0.5728744939271255, "obj2": 0.3200171287287653}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.036300470434916535}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3988767379602578}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( RMSe * MUM ) )", "obj1": 0.5425101214574899, "obj2": 0.384950983854048}, {"determining": "( Min( ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Min( ( Max( RCSe,MUC ) - MUR ) ,DS ) - MUC ) )", "obj1": 0.8906882591093117, "obj2": 0.07966030950165214}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( RRS + CRS ) ) ,( ( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUM,MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.061622764654066096}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( ( Max( DS,DS ) / MUC ),MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.19433198380566802, "obj2": 0.6170000154159534}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.2732793522267207, "obj2": 0.5678192393512371}, {"determining": "Min( ( ( ( ( ( Max( ( RRS * AMS ),Max( DDR,FirstVNF_RAM ) ) * ( ( MDR / MDR ) / ( ARS / DDR ) ) ) / Max( Max( ( RRS * FirstVNF_CPU_Server ),Min( ARS ,PN ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - MDR ) ) ) ) / Min( Min( ( ( CRS - MRS ) + ( MDR - RRS ) ) ,( ( CRS * FirstVNF_CPU ) * ( ARS / AMS ) ) ) ,( Max( ( FirstVNF_Mem_Server / MDR ),( ACS - FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Max( Const,ARS ) ) ) ) ) - ( ( Min( ( ( DDR * AMS ) + Max( FirstVNF_CPU,RRS ) ) ,Max( ( ACS / AMS ),( RRS + FirstVNF_RAM ) ) ) - ( ( ( PN - Const ) + Max( RRS,Const ) ) / ( ( ACS / RRS ) - ( BR / FirstVNF_Mem ) ) ) ) - ( Min( ( ( FirstVNF_CPU - RRS ) + Max( RRS,MDR ) ) ,Max( ( FirstVNF_CPU + PN ),Max( MDR,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( ACS * MDR ) ) - ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( Max( ( ( ( Const + ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / Min( ACS ,FirstVNF_Mem ) ) ),( Min( Max( MRS,FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( Min( AMS ,MRS ) - ( RRS - BR ) ) ) ),Max( Max( ( Max( FirstVNF_CPU,CRS ) * Min( BR ,CRS ) ),( ( FirstVNF_Mem + CRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ),( Min( ( AMS + AMS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( Max( Const,Const ) / ( BR / FirstVNF_Mem ) ) ) ) ) / ( ( Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem_Server ) ),Min( ( MDR / FirstVNF_Mem_Server ) ,( Const - MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + FirstVNF_Mem_Server ) ) / ( ( MDR + AMS ) * Min( ACS ,FirstVNF_RAM ) ) ) ) - ( ( ( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( ( MRS + RRS ) / ( PN * FirstVNF_CPU_Server ) ) ) / ( ( ( RRS / BR ) / ( FirstVNF_Mem / AMS ) ) / Max( Min( BR ,RRS ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( CRS / BR ) ) / ( Max( Const,ACS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + FirstVNF_CPU ),( CRS - FirstVNF_CPU_Server ) ) * ( ( RRS + MRS ) / ( MDR + RRS ) ) ) ) ,( ( Max( ( MDR * PN ),( CRS / FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),Min( PN ,ARS ) ) ) + ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( ARS + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ACS / MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + AMS ) / ( CRS / FirstVNF_RAM ) ) - Min( Max( BR,BR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) + Max( CRS,FirstVNF_RAM_Server ) ),( ( CRS - AMS ) * ( MRS * RRS ) ) ) ) / ( ( Max( ( BR - CRS ),( RRS / FirstVNF_CPU ) ) / ( Min( BR ,AMS ) / ( FirstVNF_CPU - RRS ) ) ) - ( Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / DDR ) ) * ( ( ACS / PN ) / Min( BR ,AMS ) ) ) ) ) ),Max( Max( Min( Min( Max( Min( PN ,DDR ),Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( ( ACS - RRS ) ,Max( BR,ARS ) ) ) ,( ( ( DDR * CRS ) + ( FirstVNF_RAM * PN ) ) - ( Max( CRS,CRS ) + ( FirstVNF_RAM + MDR ) ) ) ),( ( ( ( FirstVNF_CPU + MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) + ( ( MDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server / Const ) ) ) / Min( ( Max( PN,BR ) + ( RRS / FirstVNF_CPU ) ) ,( Min( MRS ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ),Max( Max( ( Max( ( RRS / FirstVNF_RAM ),( MRS - AMS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( CRS + ACS ) ) ),( ( Max( MRS,Const ) - ( FirstVNF_Mem * ACS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( RRS / DDR ) ) ) ),( ( ( ( AMS - PN ) * ( FirstVNF_RAM_Server / DDR ) ) / ( ( FirstVNF_RAM - ARS ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS - CRS ) ) - ( ( MDR - ACS ) / ( MDR / AMS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.577054446512959}, {"determining": "Max( ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.2834008097165992, "obj2": 0.5597134479271296}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) - ( MRS / Min( Min( ARS ,( BR / FirstVNF_Mem ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( DS - RCSe ),( RMSe * RRSe ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.4676113360323887, "obj2": 0.3950118982389774}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.9190283400809717, "obj2": 0.05098542039220912}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6396480599105531}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.11438949079010077}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ( Min( Min( MDR ,FirstVNF_Mem_Server ) ,( BR + FirstVNF_Mem ) ) - ( ( DDR / FirstVNF_CPU_Server ) / ( PN - AMS ) ) ) ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,( FirstVNF_Mem / PN ) ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) ) ,MUM ) - ( CS - MUR ) )", "obj1": 0.9898785425101214, "obj2": 0.011787076014646281}, {"determining": "Max( ( FirstVNF_RAM_Server - ( AMS - FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) )", "obj1": 0.2834008097165992, "obj2": 0.5597134479271296}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / ARS ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe * Min( Max( CS,Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.25763616835134445}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6317859701123177}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ACS ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,MDR ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( Max( RCSe,( MLU - RCSe ) ) - DS ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / Min( MUM ,RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) / ( Min( RRSe ,MLU ) / ( RMSe / CS ) ) ) + ( Min( Min( CS ,MUC ) ,Min( RMSe ,RCSe ) ) / ( Max( MUM,MUR ) / ( MUR / RCSe ) ) ) ) - Min( ( ( ( CS * MUR ) * ( RMSe / RMSe ) ) - Min( ( CS - CS ) ,Max( DS,MUR ) ) ) ,( Min( Max( RCSe,CS ) ,( CS * MUM ) ) - ( ( MUC / MLU ) + ( MUM / CS ) ) ) ) ) / ( Min( Max( ( ( RCSe / CS ) * ( DS / MUM ) ),Max( ( RRSe + DS ),Max( MUC,MUM ) ) ) ,( Max( ( RRSe - MUC ),( MLU * MUC ) ) + ( ( MUM / MLU ) / ( RRSe + MUM ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( DS ,MUC ) ) + ( Max( MUC,MUR ) + ( RMSe * RCSe ) ) ) * Max( ( ( MUM / RMSe ) + Min( RCSe ,RMSe ) ),( ( DS - MLU ) - Max( MUC,CS ) ) ) ) ) ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( MUR,RCSe ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.015977077179582744}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( Max( CS,Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.02466994826251594}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe + ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.611683491719571}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) + MDR )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MUR - CS ) ) ) ,MUM ) - Max( CS,CS ) )", "obj1": 0.23279352226720648, "obj2": 0.6001659146703378}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ARS,( DDR * CRS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.1194331983805668, "obj2": 0.6856623417936615}, {"determining": "( ( Min( Max( Min( Min( Min( ( DDR / RRS ) ,Min( PN ,CRS ) ) ,Max( ( FirstVNF_Mem_Server + ARS ),( MRS * MRS ) ) ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),( FirstVNF_CPU / Const ) ) / ( ( AMS - PN ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),Max( Min( ( ( FirstVNF_Mem / CRS ) + ( MRS * FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - BR ) / Min( MRS ,FirstVNF_CPU_Server ) ) ),( Min( ( PN / BR ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ,( ( Max( Min( ( MDR / CRS ) ,( FirstVNF_RAM_Server * Const ) ),( Max( BR,RRS ) / ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / Max( ( ( ACS / BR ) * ( FirstVNF_RAM_Server + AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( ACS / ACS ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MRS + DDR ) ) * ( ( FirstVNF_RAM_Server - MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) / ( ( Min( FirstVNF_CPU ,MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Max( ( BR - PN ),( DDR / RRS ) ) ) ) ) ) - ( ( ( ( ( Max( FirstVNF_CPU,RRS ) + ( Const + FirstVNF_Mem ) ) * Max( Min( ARS ,MDR ),( MDR / ARS ) ) ) * ( Max( ( RRS / DDR ),( MDR / Const ) ) + Min( ( CRS + PN ) ,Max( Const,PN ) ) ) ) * Max( Max( Max( ( ARS * BR ),Max( FirstVNF_CPU_Server,DDR ) ),( Max( ACS,FirstVNF_CPU_Server ) - ( AMS + PN ) ) ),( ( Min( MDR ,FirstVNF_Mem ) * Min( CRS ,MDR ) ) + ( Max( Const,BR ) + ( PN * CRS ) ) ) ) ) / ( ( ( ( Min( Const ,Const ) * ( FirstVNF_CPU_Server + PN ) ) - Max( ( MRS * BR ),( RRS + Const ) ) ) / ( ( ( BR / BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ARS / FirstVNF_CPU ) / ( ACS * Const ) ) ) ) / ( Min( Max( ( Const / BR ),Min( BR ,FirstVNF_Mem ) ) ,( ( AMS * AMS ) * ( RRS - CRS ) ) ) / ( ( ( PN - BR ) * ( RRS * BR ) ) - Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),( ARS - MDR ) ) ) ) ) ) ) * Min( ( ( ( ( Min( ( Const - FirstVNF_RAM ) ,( FirstVNF_Mem_Server * AMS ) ) * Max( ( ARS / FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,RRS ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,CRS ),Max( Const,PN ) ),( ( MRS + Const ) - ( Const + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( ( FirstVNF_RAM_Server / PN ) / ( BR - RRS ) ) + ( ( ACS * DDR ) / ( MDR - FirstVNF_Mem_Server ) ) ) ,( ( ( MRS * FirstVNF_RAM_Server ) - ( DDR - Const ) ) * Max( ( AMS * DDR ),( CRS - MDR ) ) ) ) ) / ( Min( ( ( Max( PN,FirstVNF_RAM_Server ) * ( CRS - AMS ) ) * ( ( FirstVNF_Mem * BR ) - Max( MDR,MRS ) ) ) ,( ( Min( RRS ,MDR ) * Max( AMS,MDR ) ) * Min( ( MRS - AMS ) ,( PN * FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_RAM_Server,MDR ) - ( RRS / AMS ) ),Max( ( FirstVNF_CPU / DDR ),Max( ACS,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM / RRS ) ) - Min( ( RRS / FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ) ,Max( ( Max( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( RRS + FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * Max( ARS,FirstVNF_Mem_Server ) ) ),Min( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,Max( ARS,FirstVNF_RAM_Server ) ) ,( ( MDR - MRS ) / Max( ACS,AMS ) ) ) ) / ( ( ( Min( CRS ,FirstVNF_CPU ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) - ( Max( ARS,BR ) / ( PN - FirstVNF_Mem ) ) ) * Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( RRS - ACS ) ),Max( Min( CRS ,PN ),Min( FirstVNF_CPU_Server ,AMS ) ) ) ) ),Max( ( ( ( ( ACS + FirstVNF_CPU_Server ) * ( PN * MDR ) ) / Min( Min( FirstVNF_CPU_Server ,ACS ) ,Min( Const ,RRS ) ) ) / Min( Max( ( FirstVNF_RAM_Server * CRS ),Min( FirstVNF_RAM ,MDR ) ) ,( ( FirstVNF_Mem + MRS ) + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ),( Min( Max( ( RRS + BR ),( FirstVNF_RAM * MRS ) ) ,( ( CRS - ACS ) - ( ARS * FirstVNF_CPU ) ) ) * Min( ( ( ACS - RRS ) - Min( RRS ,FirstVNF_CPU ) ) ,( Max( ARS,FirstVNF_CPU ) + ( FirstVNF_RAM * MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( ( DS + RCSe ) + ( MUR - RMSe ) ) + ( Min( RCSe ,DS ) + ( MUC / CS ) ) ) / ( ( ( MUM * RRSe ) - Min( MUM ,MUR ) ) + Min( ( RCSe * RMSe ) ,( MLU - RCSe ) ) ) ) + ( Max( Min( ( RMSe / RRSe ) ,( MLU / DS ) ),( Min( MUC ,MLU ) + Max( MLU,RRSe ) ) ) - ( Max( ( MUR - RMSe ),( MUC + DS ) ) - ( Max( RRSe,CS ) / ( MLU * RCSe ) ) ) ) ) + ( ( ( ( Max( CS,RMSe ) - ( RRSe - MUM ) ) + Min( ( RCSe + MUM ) ,( MLU / CS ) ) ) - Max( Max( ( MLU + RRSe ),( RCSe / RRSe ) ),( Min( RRSe ,CS ) + ( MUC - RMSe ) ) ) ) / ( Min( ( Max( RCSe,MUM ) / Max( DS,MUR ) ) ,( ( DS / MUC ) * Max( RMSe,RCSe ) ) ) * ( ( ( RCSe + CS ) - ( RMSe - DS ) ) + ( ( MUR / MUM ) + ( MUM * RRSe ) ) ) ) ) ) / ( Min( ( ( ( ( MUC * MLU ) / Max( RCSe,MLU ) ) - Min( Max( DS,MUR ) ,( RMSe / DS ) ) ) - Max( ( Max( RMSe,CS ) * ( MLU * RMSe ) ),( ( MLU - CS ) * Max( RCSe,RMSe ) ) ) ) ,( ( ( ( CS + CS ) + ( CS * DS ) ) + ( Min( MUC ,CS ) / ( RRSe + CS ) ) ) / ( ( ( RCSe / RCSe ) * ( DS - MUM ) ) + ( Max( RRSe,MUM ) * ( MUC - MLU ) ) ) ) ) * ( ( ( ( Min( MUR ,MUR ) - Min( DS ,MUC ) ) * Max( ( MLU * RMSe ),Min( MUC ,CS ) ) ) + ( Max( ( CS * MUR ),Max( RMSe,CS ) ) + Max( ( MUM - CS ),( MUC * MUM ) ) ) ) + ( ( Min( Max( CS,MUC ) ,( CS - MUR ) ) / Max( ( MLU / RRSe ),( MUM / RMSe ) ) ) * ( ( ( RMSe * MUC ) + ( RRSe - MUC ) ) - Min( Max( RMSe,MLU ) ,( MUM + MUM ) ) ) ) ) ) ),( Max( Min( ( Max( Max( Max( MUR,MUC ),Min( CS ,MUR ) ),( Min( RMSe ,MLU ) + Min( MUM ,MUC ) ) ) - Min( Max( ( MLU + MLU ),( RMSe - RMSe ) ) ,Max( Max( RRSe,MUC ),Max( DS,CS ) ) ) ) ,Max( ( Max( Min( MUC ,MUR ),Max( MUC,MUM ) ) - ( ( RRSe * MUC ) / ( RCSe * CS ) ) ),( Min( Max( MLU,MUR ) ,( DS - DS ) ) * Max( ( MUC * CS ),( RMSe - MUC ) ) ) ) ),( Max( ( ( Min( RMSe ,RCSe ) * ( RMSe / DS ) ) / ( ( MUR / MUC ) / Max( RRSe,MLU ) ) ),Max( ( Max( RRSe,RRSe ) * ( CS / RCSe ) ),( ( RCSe * RMSe ) * ( MUM / DS ) ) ) ) + ( Max( ( Min( RMSe ,RCSe ) * Min( RRSe ,RCSe ) ),( Min( CS ,CS ) / Max( CS,DS ) ) ) - ( ( ( MUC + MUR ) / Max( MUC,RMSe ) ) * ( ( MUM + CS ) * Max( MLU,MUR ) ) ) ) ) ) / ( ( ( Max( Min( Max( CS,DS ) ,Max( RCSe,DS ) ),( ( CS + CS ) / ( MLU / CS ) ) ) * ( ( Min( CS ,RCSe ) * ( RCSe / MUM ) ) + ( Max( MLU,MUR ) - ( RCSe * MUR ) ) ) ) * Max( ( ( Max( MUC,RRSe ) * ( RRSe * RCSe ) ) - ( ( RCSe - RRSe ) * ( RMSe + MUM ) ) ),Min( ( ( MUC - MLU ) / ( RMSe + DS ) ) ,Min( Min( CS ,MUM ) ,( RCSe * CS ) ) ) ) ) + Max( ( ( ( ( RMSe - RCSe ) + Max( DS,RRSe ) ) * ( ( MUM - MUM ) + ( CS + DS ) ) ) + ( Max( ( DS + MUM ),( RMSe - MUM ) ) * ( Max( RRSe,MLU ) - ( MLU * RRSe ) ) ) ),Min( Max( ( ( MUM + MUC ) + ( RMSe - RCSe ) ),( ( MUC + MLU ) + Min( MUR ,MUR ) ) ) ,Max( ( ( RRSe * MUC ) / ( RCSe / RRSe ) ),Max( Min( CS ,MUC ),Min( DS ,MUM ) ) ) ) ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.10529742807084412}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( FirstVNF_RAM_Server - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( ( RMSe - MUR ) ,( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.08588586977809162}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,Max( ( FirstVNF_RAM_Server / Max( ARS,( DDR * CRS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5875103662821642}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.9190283400809717, "obj2": 0.05098542039220912}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + MUC ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7042352174778732}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ARS,( DDR * AMS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( Max( ( RMSe - RCSe ),( RMSe * MUM ) ) ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.10931174089068826, "obj2": 0.6929123848356321}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) + MDR )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MUR - CS ) ) ) ,MUM ) - Max( CS,CS ) )", "obj1": 0.22469635627530365, "obj2": 0.601281387501356}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( RRS / MRS ) / ( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) - ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.01975169082774602}], "6": [{"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),CRS )", "choosing": "( ( ( RCSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.05465587044534413, "obj2": 0.7525086967038025}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * RRS ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MLU / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.6538461538461539, "obj2": 0.2549694543298562}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) + ( DS + RRSe ) ) )", "obj1": 0.7024291497975709, "obj2": 0.2069553426322733}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) - Min( Max( CS,Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.16775809850058906}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4109311740890688, "obj2": 0.4507107427766327}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.611336032388664, "obj2": 0.28215892962200556}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.5647773279352226, "obj2": 0.3183062370753515}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + MUC ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7042352174778732}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * DDR )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) ) ,MUM ) - ( CS - MUR ) )", "obj1": 0.39068825910931176, "obj2": 0.48661295555180867}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3988767379602578}, {"determining": "Max( ( ARS - ( AMS * BR ) ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( RRSe / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.31781376518218624, "obj2": 0.5357286790705269}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.7530364372469636, "obj2": 0.17657402291667953}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / ARS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RRSe ,RCSe ) + DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.34615384615384615, "obj2": 0.5104888291808777}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( Min( ARS ,( BR / FirstVNF_Mem ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.5344129554655871, "obj2": 0.34616588699808415}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5080971659919028, "obj2": 0.36502773766228286}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3229932552726389}, {"determining": "( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe - ( DS + Min( MUC ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.7206477732793523, "obj2": 0.204408174140158}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( DS + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.31983805668016196, "obj2": 0.5300436362396985}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.12940910248826817}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4898785425101215, "obj2": 0.38522160731949073}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( ( Max( DS,DS ) / MUC ),MUC ) - MUR ) * Max( CS,CS ) )", "obj1": 0.19433198380566802, "obj2": 0.6170000154159534}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + DDR ) )", "choosing": "( ( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) * Min( DS ,MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7324099475039976}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ARS,( DDR * AMS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( Max( ( RMSe - RCSe ),( RMSe * MUM ) ) ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.10931174089068826, "obj2": 0.6929123848356321}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.12940910248826817}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.35721482355024725}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ARS,( DDR * CRS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.13360323886639677, "obj2": 0.6834556459745844}, {"determining": "( ( FirstVNF_CPU - PN ) * DDR )", "choosing": "( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) )", "obj1": 0.3562753036437247, "obj2": 0.5016973191133397}, {"determining": "Max( ( FirstVNF_RAM_Server - ( AMS - FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) )", "obj1": 0.2834008097165992, "obj2": 0.5597134479271296}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6317859701123177}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / CS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.18268290666479806}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,MDR ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC * CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6481880185857728}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( RRS / MRS ) / ( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) - ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.8522267206477733, "obj2": 0.10182545662350953}, {"determining": "Max( ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.2834008097165992, "obj2": 0.5597134479271296}, {"determining": "( Min( ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Min( ( Max( RCSe,MUC ) - MUR ) ,DS ) - MUC ) )", "obj1": 0.8906882591093117, "obj2": 0.07966030950165214}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.11438949079010077}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( Min( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) + DDR ) )", "choosing": "( ( Min( Min( MUM ,MUC ) ,( MUC + RRSe ) ) * Min( DS ,MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7338452435225405}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS * MUC ) * ( MLU - CS ) ) ) ,MUM ) - ( CS - MUR ) )", "obj1": 0.39068825910931176, "obj2": 0.48661295555180867}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( FirstVNF_RAM_Server - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe - RCSe ),( RMSe * RRSe ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.868421052631579, "obj2": 0.0882683939653703}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe + ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.611683491719571}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,MUC ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07378365126482557}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - DDR ) * ( MRS / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) * Min( DS ,MUR ) ) * ( Max( RCSe,MUC ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) ) )", "obj1": 0.48582995951417, "obj2": 0.3933210685180521}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) * ( Const / BR ) ) ) + ( FirstVNF_RAM_Server - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( ( RMSe - MUR ) ,( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.08588586977809162}, {"determining": "Max( ( FirstVNF_RAM_Server - ( AMS - FirstVNF_Mem_Server ) ),( DDR * CRS ) )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.23684210526315788, "obj2": 0.5953543837784898}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ACS ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,MDR ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( Max( RCSe,( MLU - RCSe ) ) - DS ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / Min( MUM ,RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) / ( Min( RRSe ,MLU ) / ( RMSe / CS ) ) ) + ( Min( Min( CS ,MUC ) ,Min( RMSe ,RCSe ) ) / ( Max( MUM,MUR ) / ( MUR / RCSe ) ) ) ) - Min( ( ( ( CS * MUR ) * ( RMSe / RMSe ) ) - Min( ( CS - CS ) ,Max( DS,MUR ) ) ) ,( Min( Max( RCSe,CS ) ,( CS * MUM ) ) - ( ( MUC / MLU ) + ( MUM / CS ) ) ) ) ) / ( Min( Max( ( ( RCSe / CS ) * ( DS / MUM ) ),Max( ( RRSe + DS ),Max( MUC,MUM ) ) ) ,( Max( ( RRSe - MUC ),( MLU * MUC ) ) + ( ( MUM / MLU ) / ( RRSe + MUM ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( DS ,MUC ) ) + ( Max( MUC,MUR ) + ( RMSe * RCSe ) ) ) * Max( ( ( MUM / RMSe ) + Min( RCSe ,RMSe ) ),( ( DS - MLU ) - Max( MUC,CS ) ) ) ) ) ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( MUR,RCSe ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.015977077179582744}, {"determining": "( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) - Max( MUC,RRSe ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.27978850051083753}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUM ,RCSe ),( MUC + RCSe ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6344788940897069}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5714001475492104}], "7": [{"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),CRS )", "choosing": "( ( ( RCSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.05465587044534413, "obj2": 0.7525086967038025}, {"determining": "( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) - Max( ( MRS * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - Min( ( Min( MUM ,MUC ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),CRS )", "choosing": "( ( ( RCSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.05465587044534413, "obj2": 0.7525086967038025}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.31146478726347515}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS + Min( Min( ARS ,( BR / FirstVNF_Mem ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) + CS )", "obj1": 0.5890688259109311, "obj2": 0.3057515451484189}, {"determining": "( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.4736622698200504}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( RRS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + DS ) ) )", "obj1": 0.6923076923076923, "obj2": 0.21307899268658675}, {"determining": "( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.6558704453441295, "obj2": 0.2515252625117137}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( ( PN - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / Min( Const ,BR ) ) ) * ( Const / BR ) ) ) + ( CRS - ( MDR / ( ( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) - ( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( MLU - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC - CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.057283406697337905}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( MUR + ( ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) - Min( Max( CS,Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.036219665219882284}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8522267206477733, "obj2": 0.08109124095493882}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU - DDR ) ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) - Min( ( CS - Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.7955465587044535, "obj2": 0.16550108449192372}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6732658167823127}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,MUC ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.17199035665114715}, {"determining": "( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( MLU + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) - Max( MUC,RRSe ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.27978850051083753}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.13031950588480723}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.35721482355024725}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( Const / BR ) )", "choosing": "( Min( Max( Min( ( MLU / RMSe ) ,( MUR * DS ) ),( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) ) ,MUM ) - ( CS - MUR ) )", "obj1": 0.31781376518218624, "obj2": 0.522877215605125}, {"determining": "( DDR + ( Min( ( Max( ( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2793522267206478, "obj2": 0.5589423795924764}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / ARS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RRSe ,RCSe ) + DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.34615384615384615, "obj2": 0.5104888291808777}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * RRS ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MLU / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.6538461538461539, "obj2": 0.2549694543298562}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe + ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.611683491719571}, {"determining": "( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe - ( DS + Min( MUC ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.7206477732793523, "obj2": 0.204408174140158}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ACS ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,MDR ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( Max( RCSe,( MLU - RCSe ) ) - DS ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / Min( MUM ,RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) / ( Min( RRSe ,MLU ) / ( RMSe / CS ) ) ) + ( Min( Min( CS ,MUC ) ,Min( RMSe ,RCSe ) ) / ( Max( MUM,MUR ) / ( MUR / RCSe ) ) ) ) - Min( ( ( ( CS * MUR ) * ( RMSe / RMSe ) ) - Min( ( CS - CS ) ,Max( DS,MUR ) ) ) ,( Min( Max( RCSe,CS ) ,( CS * MUM ) ) - ( ( MUC / MLU ) + ( MUM / CS ) ) ) ) ) / ( Min( Max( ( ( RCSe / CS ) * ( DS / MUM ) ),Max( ( RRSe + DS ),Max( MUC,MUM ) ) ) ,( Max( ( RRSe - MUC ),( MLU * MUC ) ) + ( ( MUM / MLU ) / ( RRSe + MUM ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( DS ,MUC ) ) + ( Max( MUC,MUR ) + ( RMSe * RCSe ) ) ) * Max( ( ( MUM / RMSe ) + Min( RCSe ,RMSe ) ),( ( DS - MLU ) - Max( MUC,CS ) ) ) ) ) ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( MUR,RCSe ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.015977077179582744}, {"determining": "( Min( ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( Min( ( Max( RCSe,MUC ) - MUR ) ,DS ) - MUC ) )", "obj1": 0.8906882591093117, "obj2": 0.07966030950165214}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4109311740890688, "obj2": 0.4507107427766327}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5904870906011561}, {"determining": "( ( RRS - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS - ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.291497975708502, "obj2": 0.5433384567722426}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + ( ARS - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( DS + ( RRSe / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) + ( ( RCSe - CS ) * MUM ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.024280314613688604}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4109311740890688, "obj2": 0.4507107427766327}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.8441295546558705, "obj2": 0.1045730505146612}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3623481781376518, "obj2": 0.4893506876809689}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( AMS + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( CS * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.8947368421052632, "obj2": 0.061296530881886746}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( DS + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3097165991902834, "obj2": 0.5360959878496189}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2857542845349291}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,MDR ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ARS / BR ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5972714072954387}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) - Min( Max( CS,Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.16775809850058906}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( Max( Min( MUM ,RCSe ),( MUC + RCSe ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6439238715548696}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( ARS,( DDR * AMS ) ) ),( ACS - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( Max( ( RMSe - RCSe ),( RMSe * MUM ) ) ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.10931174089068826, "obj2": 0.6929123848356321}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( MUM + RRSe ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3988767379602578}, {"determining": "( ( FirstVNF_CPU - PN ) * DDR )", "choosing": "( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) )", "obj1": 0.3562753036437247, "obj2": 0.5016973191133397}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5714001475492104}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( MRS / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * RRSe ) )", "obj1": 0.9919028340080972, "obj2": 0.0036014312769623857}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5714001475492104}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6280321458023272}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / CS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.18268290666479806}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + DDR ) )", "choosing": "( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.10526315789473684, "obj2": 0.6964003817296313}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( DDR * CRS ) + DDR ) )", "choosing": "( ( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) * Min( DS ,MUR ) ) * ( ( RRSe - RCSe ) - MUC ) )", "obj1": 0.06477732793522267, "obj2": 0.7370598802173758}], "8": [{"determining": "Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RRSe - ( DS + Min( MUM ,CS ) ) ) - MUR ),Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) - Max( ( MRS * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - Min( ( Min( MUM ,MUC ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) - ( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( ( MUM / DS ) / ( MLU * DS ) ) + Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.13029585086182582}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.31146478726347515}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( Min( RRSe ,RCSe ) ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.5222672064777328, "obj2": 0.3624556381803578}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( RRS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + DS ) ) )", "obj1": 0.6923076923076923, "obj2": 0.21307899268658675}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3988767379602578}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.8441295546558705, "obj2": 0.1045730505146612}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU - DDR ) ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( ( ( ( MUM / DS ) / ( MLU * DS ) ) - Min( ( MUC + CS ) ,Min( MUM ,RRSe ) ) ) - Min( ( CS - Max( CS,RCSe ) ) ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.7955465587044535, "obj2": 0.16550108449192372}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( MUM + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.24450350869723575}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS + Min( Min( ARS ,( BR / FirstVNF_Mem ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) + CS )", "obj1": 0.5890688259109311, "obj2": 0.3057515451484189}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( ( ACS - FirstVNF_RAM ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe + ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.611683491719571}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( MUM + RRSe ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3988767379602578}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.31376518218623484, "obj2": 0.5180121387108262}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUM ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.8643724696356275, "obj2": 0.0715165823095677}, {"determining": "( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) + MRS )", "choosing": "( Min( ( Min( RCSe ,DS ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4708251490210459}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( ACS * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( MLU + RMSe ) - Max( ( RMSe * MLU ),RCSe ) ) - ( CS - DS ) )", "obj1": 0.4089068825910931, "obj2": 0.4492510405786411}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6732658167823127}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.35721482355024725}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / AMS ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( ( Max( RMSe,MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.6295546558704453, "obj2": 0.2681768778103201}, {"determining": "( ( RRS - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS - ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.291497975708502, "obj2": 0.5433384567722426}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03689481218726995}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / MLU ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2773279352226721, "obj2": 0.5572141615739711}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( RRS + CRS ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),Min( MUM ,MUR ) ) ) - Min( ( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7152414662298369}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / ARS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RRSe ,RCSe ) + DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.34615384615384615, "obj2": 0.5104888291808777}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( DS + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3097165991902834, "obj2": 0.5360959878496189}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU )", "choosing": "( ( DS + ( ( ( DS + ( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,CS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3582995951417004, "obj2": 0.4843842436450615}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * RRS ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MLU / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.6538461538461539, "obj2": 0.2549694543298562}, {"determining": "( ( ( Min( ( Max( ( ( RRS + BR ) * ( Const + CRS ) ),( Min( Const ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * DDR ) ) ) / ACS ) ,Max( ( ( ( AMS / BR ) + ( MRS * CRS ) ) / ( ( DDR - PN ) / ( MDR * FirstVNF_RAM ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ,( ( PN * MRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server * ARS ) ,( PN - MRS ) ) ) + ( ( ( BR + FirstVNF_CPU ) * ( ARS + AMS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( DDR + MDR ) ) ) ) * ( ( ( ( MDR - ARS ) * Min( ACS ,BR ) ) - ( ( CRS / FirstVNF_RAM ) / ( CRS - RRS ) ) ) * Max( Min( ( ARS / RRS ) ,( BR - PN ) ),( ( DDR * DDR ) * Max( FirstVNF_CPU,MDR ) ) ) ) ) ) * ( Max( ( ( ( ( PN * DDR ) - ( AMS - MDR ) ) + Max( ( Const + FirstVNF_RAM ),( FirstVNF_Mem_Server * PN ) ) ) + Max( ( ( DDR / MDR ) - ( RRS / FirstVNF_Mem_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,( FirstVNF_CPU - CRS ) ) ) ),Min( Min( Min( Max( FirstVNF_CPU_Server,ACS ) ,MDR ) ,( ( Const / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + AMS ) ) ) ,( ( ( DDR / CRS ) - Max( ACS,FirstVNF_RAM ) ) / Max( ( RRS / BR ),( MRS * CRS ) ) ) ) ) * Max( Min( ( Max( Max( ACS,FirstVNF_Mem ),( DDR - MDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Max( ( PN - AMS ),Max( FirstVNF_CPU,MDR ) ) / Min( Min( MRS ,CRS ) ,( Const + FirstVNF_Mem_Server ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,Const ) / Min( MRS ,DDR ) ) - ( ( MDR - RRS ) - Max( BR,MRS ) ) ) / ( ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * ARS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ) ) + ( ( Max( ( ( ( Max( MRS,ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS - MRS ) * Max( PN,CRS ) ) ) - Min( ( ( MRS / PN ) + ( FirstVNF_RAM / PN ) ) ,( ( FirstVNF_RAM_Server / BR ) * ( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( Max( CRS,FirstVNF_CPU ) / ( Const / FirstVNF_RAM_Server ) ) / Min( Min( CRS ,RRS ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) / ( ( Max( PN,ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( ( MRS - FirstVNF_RAM ) ,Max( BR,ACS ) ) ) ) ) + ( Max( Max( Min( ( DDR / FirstVNF_RAM ) ,( PN * ARS ) ),( Max( FirstVNF_RAM,MDR ) - Max( PN,Const ) ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,Max( CRS,ACS ) ) * Min( Max( FirstVNF_RAM_Server,Const ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) * ( Min( ( PN - FirstVNF_Mem_Server ) ,Min( ACS ,ACS ) ) * ( ( ACS + FirstVNF_Mem ) * Min( MRS ,PN ) ) ) ) ) ) / Min( Min( Max( ( ( ( DDR - AMS ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_CPU / ACS ) ) ),Min( ( ( FirstVNF_RAM_Server * RRS ) * Max( MDR,Const ) ) ,Min( ( BR + CRS ) ,( MRS / FirstVNF_RAM ) ) ) ) ,( ( ( ( Const - FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( ( DDR + MDR ) + ( AMS + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem * MRS ) * ( DDR + FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Max( MDR,ACS ) ) ) ) ) ,( ( Max( ( ( PN * MDR ) - ( RRS / RRS ) ),( ( PN + MDR ) * Max( RRS,RRS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( DDR - MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,ARS ) ) ) ) * ( ( Max( ( RRS / MRS ),Min( PN ,Const ) ) - ( ( Const / AMS ) - ( ARS / ARS ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( AMS / FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,ACS ) / Min( AMS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( ( ( Max( MLU,CS ) - ( DS / RCSe ) ) + ( ( RRSe / MUM ) / ( RMSe - RMSe ) ) ) - ( ( Max( RMSe,CS ) + Max( MUC,RCSe ) ) * ( ( MLU - CS ) * Max( RMSe,CS ) ) ) ) / Max( ( Max( RCSe,( MLU - RCSe ) ) - DS ),Min( ( Max( MUR,MUM ) - ( RRSe - MUM ) ) ,( ( DS / MUC ) / ( DS - MLU ) ) ) ) ) ,( ( Max( Min( Min( RMSe ,CS ) ,( MUC + RRSe ) ),( Min( RMSe ,CS ) + ( RRSe + RRSe ) ) ) + ( Max( Min( DS ,DS ),Min( CS ,MUC ) ) + ( Min( RCSe ,CS ) * ( CS * CS ) ) ) ) * Min( Min( ( Min( CS ,CS ) + Min( MUC ,MUR ) ) ,( ( MUR / RRSe ) / Min( MUM ,RMSe ) ) ) ,( ( Min( CS ,RMSe ) * ( RRSe * RMSe ) ) - ( ( DS + MUR ) + Min( CS ,MUM ) ) ) ) ) ) ,Min( Min( ( Max( ( ( RRSe / MUC ) * ( MLU - MLU ) ),( ( RMSe - RRSe ) * Min( RMSe ,CS ) ) ) - Max( Min( ( DS - RCSe ) ,( RCSe / MUR ) ),Max( ( MLU * MUR ),( RRSe + RRSe ) ) ) ) ,Max( ( Max( ( RMSe / MLU ),Min( RMSe ,MUM ) ) - ( ( RRSe - MUM ) * ( DS + MLU ) ) ),Max( Min( ( RCSe * RRSe ) ,( CS / DS ) ),Min( ( MUR * MUM ) ,( MUC / RMSe ) ) ) ) ) ,( Max( ( ( Max( RCSe,RCSe ) / Max( RRSe,DS ) ) / Max( ( RMSe * MUR ),Min( RCSe ,RMSe ) ) ),( Min( Max( MUM,MUR ) ,( RRSe / DS ) ) / ( Min( MUR ,RRSe ) - ( MUR * MUR ) ) ) ) * Max( ( Min( Max( MUR,RRSe ) ,( MUR / MLU ) ) * ( Max( RMSe,RCSe ) - Max( MUM,MUC ) ) ),Max( Max( ( MLU * CS ),Max( MUM,MLU ) ),( ( MUC / MUC ) + Max( RMSe,RCSe ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) / ( Min( RRSe ,MLU ) / ( RMSe / CS ) ) ) + ( Min( Min( CS ,MUC ) ,Min( RMSe ,RCSe ) ) / ( Max( MUM,MUR ) / ( MUR / RCSe ) ) ) ) - Min( ( ( ( CS * MUR ) * ( RMSe / RMSe ) ) - Min( ( CS - CS ) ,Max( DS,MUR ) ) ) ,( Min( Max( RCSe,CS ) ,( CS * MUM ) ) - ( ( MUC / MLU ) + ( MUM / CS ) ) ) ) ) / ( Min( Max( ( ( RCSe / CS ) * ( DS / MUM ) ),Max( ( RRSe + DS ),Max( MUC,MUM ) ) ) ,( Max( ( RRSe - MUC ),( MLU * MUC ) ) + ( ( MUM / MLU ) / ( RRSe + MUM ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( DS ,MUC ) ) + ( Max( MUC,MUR ) + ( RMSe * RCSe ) ) ) * Max( ( ( MUM / RMSe ) + Min( RCSe ,RMSe ) ),( ( DS - MLU ) - Max( MUC,CS ) ) ) ) ) ) / ( ( ( Max( ( Max( MLU,DS ) + Min( DS ,RRSe ) ),Max( MUR,RCSe ) ) / ( ( ( RRSe * RMSe ) - ( MUC - RRSe ) ) * ( ( MLU * DS ) + ( MLU / RRSe ) ) ) ) - ( ( Min( ( CS * MUR ) ,( MUM * MUR ) ) * ( ( DS * MUR ) + ( MUC / RMSe ) ) ) - Max( Max( ( MUC * RCSe ),( RMSe / DS ) ),( Min( RRSe ,MUR ) / ( RRSe + DS ) ) ) ) ) - ( ( ( ( ( MUM + RCSe ) + Max( MUC,MUM ) ) * Min( Max( CS,DS ) ,( MUR * MUM ) ) ) * ( ( ( RCSe * RMSe ) / Max( DS,MLU ) ) - ( ( MUC / MUC ) / ( MUC * MUR ) ) ) ) * ( ( ( Max( RMSe,RCSe ) - ( MLU / RRSe ) ) * Max( ( MUM * RRSe ),Min( MUR ,RRSe ) ) ) * ( Max( Max( CS,MUM ),( MLU + RCSe ) ) - Max( ( MLU + RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.015977077179582744}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( ( PN - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / Min( Const ,BR ) ) ) * ( Const / BR ) ) ) + ( CRS - ( MDR / ( ( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) - ( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( MLU - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC - CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.057283406697337905}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2591093117408907, "obj2": 0.5643426616834933}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6280321458023272}, {"determining": "( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.7773279352226721, "obj2": 0.16639112380290447}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8522267206477733, "obj2": 0.08109124095493882}, {"determining": "( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27464042539696726}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.41700404858299595, "obj2": 0.44069082479446126}, {"determining": "( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( DS + ( CS / CS ) ) + ( Min( RCSe ,Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) ) - MUC ) )", "obj1": 0.7186234817813765, "obj2": 0.20544552493519228}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( ( FirstVNF_CPU - PN ) * DDR )", "choosing": "( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) )", "obj1": 0.24898785425101214, "obj2": 0.5846039792199474}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * Min( Const ,BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe / DS ) - MUC ) )", "obj1": 0.7550607287449392, "obj2": 0.1664414087681709}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( Min( RCSe ,DS ) + RRSe ) ) )", "obj1": 0.5931174089068826, "obj2": 0.29460731126833367}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS + Min( Min( ARS ,( BR / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / MUR ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) + CS )", "obj1": 0.1194331983805668, "obj2": 0.6887155388637249}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - ( RCSe - MUC ) ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.22469635627530365, "obj2": 0.6025193638508182}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( Const / BR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6349081942506675}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,MUC ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.17199035665114715}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( DDR + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5758494735313124}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( AMS + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( CS * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.8947368421052632, "obj2": 0.061296530881886746}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + ( ARS - ( AMS * ( RRS / MRS ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( DS + ( RRSe / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) + ( ( RCSe - CS ) * ( Max( RCSe,MUC ) - MUR ) ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.01994877632587481}], "9": [{"determining": "( ( PN - FirstVNF_RAM_Server ) + MRS )", "choosing": "( Min( ( Min( RCSe ,DS ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - ( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RRSe - ( DS + Min( MUM ,CS ) ) ) - MUR ),Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( RRSe - RCSe ) - ( DS + DS ) ) )", "obj1": 0.451417004048583, "obj2": 0.38332330754874894}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.31146478726347515}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( ( DS + ( CS / CS ) ) + ( Min( RCSe ,Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) ) - MUC ) )", "obj1": 0.5141700404858299, "obj2": 0.3724016413076444}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / ARS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RRSe ,RCSe ) + DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.34615384615384615, "obj2": 0.5104888291808777}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU )", "choosing": "( ( DS + ( ( ( DS + ( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,CS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3582995951417004, "obj2": 0.4843842436450615}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS + Min( Min( ARS ,( BR / FirstVNF_Mem ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) + CS )", "obj1": 0.5890688259109311, "obj2": 0.3057515451484189}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.053756700914471635}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - ( MRS / CRS ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),Max( Max( ( DS * MUM ),( MUC / CS ) ),MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956446928637189}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Const ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( ( ( RRSe / MUR ) * ( MUM + DS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.8137651821862348, "obj2": 0.12487945700985305}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) + ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.35721482355024725}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / FirstVNF_Mem_Server ) ) ) + ( AMS - ( MDR / BR ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( RRSe ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( MLU - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.18904248385415903}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7223504284256468}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + ( ARS - ( AMS * ( RRS / MRS ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( DS + ( RRSe / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) + ( ( RCSe - CS ) * ( Max( RCSe,MUC ) - MUR ) ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.01994877632587481}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.31376518218623484, "obj2": 0.5180121387108262}, {"determining": "( ( FirstVNF_CPU - PN ) * DDR )", "choosing": "( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) )", "obj1": 0.24898785425101214, "obj2": 0.5846039792199474}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( ACS * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( MLU + RMSe ) - Max( ( RMSe * MLU ),RCSe ) ) - ( CS - DS ) )", "obj1": 0.4089068825910931, "obj2": 0.4492510405786411}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.042379988452157985}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUM ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( RRSe / MUR ) ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.2502115412929653}, {"determining": "( ( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.6842105263157895, "obj2": 0.2304792188182874}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,MUC ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.17199035665114715}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.8441295546558705, "obj2": 0.1045730505146612}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - ( RCSe - MUC ) ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.22469635627530365, "obj2": 0.6025193638508182}, {"determining": "( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,MUC ) ) ) )", "obj1": 0.7955465587044535, "obj2": 0.1479230532166902}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / AMS ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( ( Max( RMSe,MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.6295546558704453, "obj2": 0.2681768778103201}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( RRS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + DS ) ) )", "obj1": 0.6923076923076923, "obj2": 0.21307899268658675}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_RAM / BR ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC + MUR ) ) * ( Max( RRSe,RCSe ) - ( Min( RCSe ,DS ) + RRSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6393497791285182}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( DS + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3097165991902834, "obj2": 0.5360959878496189}, {"determining": "( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) + MRS )", "choosing": "( Min( ( Min( RCSe ,DS ) + Max( RCSe,RMSe ) ) ,Max( ( DS + ( MUC / CS ) ),( MUC / CS ) ) ) - Min( Max( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.46982474705245403}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.15547785260321242}, {"determining": "( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) + MRS )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.4433198380566802, "obj2": 0.4184262264388229}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - MUM ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.06471325387873386}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - Max( FirstVNF_RAM,MRS ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) ) )", "obj1": 0.8036437246963563, "obj2": 0.13218917953798068}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUM ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + MLU ) + ( Min( RCSe ,DS ) - MUC ) ),RRSe ) ) ) )", "obj1": 0.8643724696356275, "obj2": 0.07084058609009361}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / MLU ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2773279352226721, "obj2": 0.5572141615739711}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2591093117408907, "obj2": 0.5643426616834933}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server / BR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,MUC ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Min( RCSe ,DS ) - MUC ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7105045674999997}, {"determining": "( ( ( ( DDR - Const ) * ( ( Const / BR ) + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) / Max( RCSe,RMSe ) ) ,Max( ( ( Min( RCSe ,DS ) / MUC ) * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.24254819956361015}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.28978588414292245}, {"determining": "( ( RRS - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS - ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.291497975708502, "obj2": 0.5433384567722426}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.28090993409285175}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( DS + ( DS / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6693335255519273}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7611336032388664, "obj2": 0.16117765151098337}, {"determining": "( ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) - ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.708502024291498, "obj2": 0.20624458947532695}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( FirstVNF_CPU_Server / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) )", "obj1": 0.19635627530364372, "obj2": 0.6234401785424647}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS + Min( Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / Min( Const ,BR ) ) ) * ( Const / BR ) ) ,( BR / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / MUR ) ) + ( RCSe - CS ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) + CS )", "obj1": 0.20242914979757085, "obj2": 0.620510787194854}], "10": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( PN - FirstVNF_RAM_Server ) + MRS )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) + MRS )", "choosing": "( Min( ( Min( RCSe ,DS ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - ( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( ( BR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( MUC - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.31899376210490976}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( Min( ( Max( ACS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( Min( ( RRSe * RCSe ) ,( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.35442195493111694}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( ACS * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( MLU + RMSe ) - Max( ( RMSe * MLU ),RCSe ) ) - ( CS - DS ) )", "obj1": 0.4089068825910931, "obj2": 0.4492510405786411}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS + Min( Min( ARS ,( BR / FirstVNF_Mem ) ) ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) + CS )", "obj1": 0.5890688259109311, "obj2": 0.3057515451484189}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.3866396761133603, "obj2": 0.46944586482186035}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU )", "choosing": "( ( DS + ( ( ( DS + ( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,CS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3582995951417004, "obj2": 0.4843842436450615}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / ARS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RRSe ,RCSe ) + DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.34615384615384615, "obj2": 0.5104888291808777}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.31146478726347515}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01771348654975944}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.31376518218623484, "obj2": 0.5180121387108262}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( ( RRSe - ( DS + Min( MUM ,CS ) ) ) - ( RCSe + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.06680161943319839, "obj2": 0.7416394988466709}, {"determining": "( DDR + ( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2591093117408907, "obj2": 0.5643426616834933}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Const ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,CS ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( ( ( RRSe / MUR ) * ( MUM + DS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.09087260157553145}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.8441295546558705, "obj2": 0.1045730505146612}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.28978588414292245}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / MLU ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2773279352226721, "obj2": 0.5572141615739711}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Const ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( DS + ( RRSe / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) + ( ( RCSe - CS ) * ( Max( RCSe,MUC ) - MUR ) ) ),( RCSe * ( MUM - Max( MUC,RRSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.11605760407059093}, {"determining": "( ( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( ( ( ARS / ACS ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.6842105263157895, "obj2": 0.2304792188182874}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( MUR - RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.35442195493111694}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7611336032388664, "obj2": 0.16117765151098337}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.15547785260321242}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.9008097165991903, "obj2": 0.05017404931053567}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.004800702357247236}, {"determining": "( ( FirstVNF_CPU - PN ) * DDR )", "choosing": "( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) )", "obj1": 0.24898785425101214, "obj2": 0.5846039792199474}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( CRS - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + Min( Min( RCSe ,DS ) ,MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.242914979757085, "obj2": 0.589084987152546}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / FirstVNF_Mem_Server ) ) ) + ( AMS - ( MDR / BR ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( RRSe ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( MLU - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.18904248385415903}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( ( RRSe / MUR ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.015693460372263785}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( DS + ( DS / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6693335255519273}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Max( MUR,MUC ) * ( ( RRSe - RCSe ) - ( Min( RCSe ,DS ) + RRSe ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6411650187053141}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - ( MRS / CRS ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),Max( Max( ( DS * MUM ),( MUC / CS ) ),MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956446928637189}, {"determining": "( Min( ( Max( FirstVNF_RAM,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ARS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( MUC,MUC ) ) ) )", "obj1": 0.7955465587044535, "obj2": 0.1479230532166902}, {"determining": "( ( RRS - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS - ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.291497975708502, "obj2": 0.5433384567722426}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - MUM ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.06471325387873386}, {"determining": "( ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) - ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.708502024291498, "obj2": 0.20624458947532695}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / AMS ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( ( Max( RMSe,MUR ) + ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.6295546558704453, "obj2": 0.2681768778103201}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Min( RCSe ,DS ) - MUC ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6312654892840736}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7223504284256468}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.04305149969462564}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - ( RCSe - MUC ) ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.22469635627530365, "obj2": 0.6025193638508182}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.0951417004048583, "obj2": 0.702040844140892}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.28090993409285175}, {"determining": "( ( ( ( DDR - Const ) * ( ( Const / BR ) + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) / Max( RCSe,RMSe ) ) ,Max( ( ( Min( RCSe ,DS ) / MUC ) * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.24254819956361015}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7307692307692307, "obj2": 0.18542502399435198}], "11": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "Min( Max( ( ( ( Max( ( ( BR * FirstVNF_CPU ) + Min( RRS ,FirstVNF_RAM ) ),( ( ACS / FirstVNF_Mem_Server ) / ( Const + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( BR - RRS ) ) + Min( ( FirstVNF_Mem + BR ) ,( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( ( Max( ACS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU / RRS ) ) - Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( MRS * RRS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) * ( ARS / CRS ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( PN,MDR ) ) ) ) ) + ( ( ( Max( ( PN / Const ),( MRS / DDR ) ) / ( ( DDR / Const ) + ( DDR * MRS ) ) ) + ( Max( ( ARS / FirstVNF_RAM_Server ),Min( ARS ,BR ) ) * ( ( RRS * FirstVNF_Mem ) / ( AMS + RRS ) ) ) ) + Max( ( ( Max( MRS,FirstVNF_Mem_Server ) + ( AMS / PN ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) - ( FirstVNF_CPU * PN ) ) ),( Max( Min( ACS ,FirstVNF_CPU_Server ),( PN * ACS ) ) / ( ( ARS / ACS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) ),( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * Max( ( MRS - BR ),Min( MDR ,DDR ) ) ) / ( ( ( DDR + BR ) + Min( Const ,MDR ) ) * ( ( FirstVNF_RAM_Server - Const ) + ( MDR * MRS ) ) ) ) / ( Min( ( ( RRS + PN ) + Max( BR,PN ) ) ,( ( MRS - FirstVNF_Mem_Server ) * Min( MDR ,FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * Const ) + ( FirstVNF_CPU_Server * DDR ) ) * Max( ( MDR / CRS ),( BR * FirstVNF_Mem_Server ) ) ) ) ) / Max( ( Min( ( ( PN + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,CRS ) ) ,( ( FirstVNF_CPU + Const ) * ( AMS - FirstVNF_RAM ) ) ) + Max( ( ( ARS - Const ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ),( ( PN + BR ) - ( FirstVNF_CPU_Server * AMS ) ) ) ),Max( ( Max( ( MRS + FirstVNF_CPU ),Max( FirstVNF_RAM_Server,ARS ) ) + ( ( FirstVNF_CPU_Server - MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) ),( ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) / Max( ( BR * FirstVNF_Mem ),( AMS * FirstVNF_RAM ) ) ) ) ) ) ) ,( ( ( ( Min( ( Max( DDR,AMS ) * Max( BR,AMS ) ) ,( Min( CRS ,DDR ) + ( MDR + FirstVNF_Mem ) ) ) * Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Min( BR ,PN ) ),( ( RRS * PN ) - Max( FirstVNF_CPU,DDR ) ) ) ) * ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM,BR ) ) + ( ( MRS - BR ) + Max( RRS,AMS ) ) ) / ( Min( ( MRS + FirstVNF_RAM ) ,Max( MDR,ARS ) ) - Min( ( DDR - ACS ) ,( FirstVNF_CPU_Server / Const ) ) ) ) ) - Max( ( ( ( ( DDR + MRS ) + ( MDR - MDR ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( FirstVNF_RAM_Server - MDR ) ) ) - Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( FirstVNF_CPU - RRS ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / Const ) ) ) ),Max( Min( ( Max( FirstVNF_Mem,PN ) / Min( FirstVNF_CPU ,AMS ) ) ,( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( ACS - MRS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,MRS ) ) * ( ( FirstVNF_Mem_Server * RRS ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) * ( ( ( ( Min( Max( FirstVNF_CPU,FirstVNF_CPU ) ,( RRS * AMS ) ) / ( ( FirstVNF_RAM_Server / Const ) / ( MRS - CRS ) ) ) / ( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) + Max( Min( ACS ,FirstVNF_Mem ),( PN * Const ) ) ) ) / ( Max( ( ( FirstVNF_CPU_Server + PN ) - ( RRS - DDR ) ),( ( DDR - MDR ) / ( MDR - BR ) ) ) / ( Min( ( DDR + CRS ) ,( Const * DDR ) ) - Max( Max( PN,CRS ),Min( BR ,FirstVNF_CPU_Server ) ) ) ) ) + Min( Max( Min( Max( Min( AMS ,FirstVNF_CPU ),( FirstVNF_RAM * BR ) ) ,( ( ACS + MDR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ),( ( Min( AMS ,BR ) * ( Const / MRS ) ) / ( ( AMS / ARS ) / ( Const / Const ) ) ) ) ,( ( ( Min( Const ,ARS ) * Min( FirstVNF_Mem_Server ,DDR ) ) + Min( Max( PN,PN ) ,Min( CRS ,DDR ) ) ) * Max( ( Max( Const,DDR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ARS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( Min( ( RRSe - CS ) ,Max( MUR,MLU ) ) + ( Max( RMSe,CS ) * Max( MUC,MUC ) ) ),( Max( Min( MUC ,MUR ),Min( MUR ,MLU ) ) / ( ( DS + CS ) * ( MUR / CS ) ) ) ) + ( Max( ( ( MUC - RCSe ) * Max( CS,RMSe ) ),( Max( RRSe,MUR ) * ( DS + DS ) ) ) * Min( ( Min( RRSe ,DS ) + ( MUR + MUM ) ) ,( ( DS + RCSe ) * Max( RCSe,MUR ) ) ) ) ) + ( ( ( ( Max( MLU,MUM ) * Max( RCSe,RRSe ) ) * ( Min( MUC ,RMSe ) + ( MLU / CS ) ) ) + ( ( ( MLU * MUC ) / ( MUR / MUM ) ) * Min( ( CS - RRSe ) ,( RMSe / DS ) ) ) ) - ( Min( ( ( MUM - CS ) / ( DS + RMSe ) ) ,( ( RCSe * RMSe ) * Min( CS ,RCSe ) ) ) + Min( ( ( RMSe - RMSe ) / ( RCSe - DS ) ) ,( ( MUM / RCSe ) * ( MUC * RCSe ) ) ) ) ) ) - ( ( ( ( ( ( MLU * DS ) - ( RMSe - RRSe ) ) / ( ( MUR + RMSe ) / ( CS - MUM ) ) ) - ( ( Max( CS,MLU ) / ( RMSe + RMSe ) ) - ( Min( RMSe ,RCSe ) - ( RRSe + RRSe ) ) ) ) * Max( ( Max( ( MUM + MLU ),( MUM * RCSe ) ) - Min( Max( MUC,RMSe ) ,( MUC + MUC ) ) ),( ( Min( MUM ,RMSe ) + ( MUR / MUR ) ) - Max( ( MLU - RCSe ),( CS - CS ) ) ) ) ) - ( Max( ( Max( Max( RRSe,CS ),( MLU / MUM ) ) - ( Min( MLU ,MUC ) - Min( MUR ,MLU ) ) ),( ( ( DS - DS ) / ( MLU - MLU ) ) + ( ( DS / RRSe ) + ( RRSe * RRSe ) ) ) ) / ( ( Max( ( DS - RRSe ),( MUM / MUR ) ) / ( ( MUC / RRSe ) + ( MUC / RRSe ) ) ) - Min( Max( ( MLU * RCSe ),( CS * RRSe ) ) ,( Min( RMSe ,RMSe ) / ( MUC + CS ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( MUM,MUC ) + ( RRSe * RMSe ) ) * Min( Max( CS,MUC ) ,( DS * DS ) ) ) * ( ( ( RMSe / RRSe ) - ( RMSe - MLU ) ) / ( Max( MLU,MLU ) - ( MUM / MUC ) ) ) ) / ( ( ( Min( MUC ,RRSe ) / ( MUR * RCSe ) ) / ( Min( DS ,MLU ) / Min( DS ,MUM ) ) ) / Max( ( ( MUR * RRSe ) - Max( CS,MLU ) ),Min( ( MUM * MLU ) ,Min( RMSe ,DS ) ) ) ) ) - ( Min( ( ( ( RMSe * RRSe ) * ( RCSe * RMSe ) ) - ( ( MUM + RCSe ) * ( MLU + MLU ) ) ) ,( Min( ( RMSe + MUM ) ,( MUR / MUR ) ) * Max( Max( MUM,CS ),( DS / RRSe ) ) ) ) + ( Min( ( ( MUC - RCSe ) / ( MLU * MUR ) ) ,( ( RMSe / CS ) * Min( RMSe ,CS ) ) ) * ( Max( ( RMSe * CS ),( MLU - RRSe ) ) + Min( ( MUC - MUM ) ,( MLU - RMSe ) ) ) ) ) ) + ( Min( ( Min( Min( Min( DS ,MLU ) ,Max( RRSe,MUC ) ) ,Min( ( RMSe - CS ) ,( DS / CS ) ) ) + Min( ( ( MUR - MUR ) + ( MLU * MUM ) ) ,( ( RCSe + DS ) * Min( MUC ,DS ) ) ) ) ,( ( Min( ( MUR * DS ) ,( MUR + MUR ) ) - ( ( MUC / RCSe ) - Max( MUM,RRSe ) ) ) + Max( ( ( MUM + RRSe ) * Min( RRSe ,RMSe ) ),Min( ( RMSe + RCSe ) ,( MUM * MUM ) ) ) ) ) - ( Max( ( ( ( DS + CS ) / ( MUM - DS ) ) + ( ( MLU + MUC ) * Max( MUC,CS ) ) ),( ( ( MLU / MUC ) - ( DS + RCSe ) ) * ( ( MUM * MUR ) / ( RRSe + CS ) ) ) ) / ( ( ( ( MUR * MLU ) - ( DS + MUC ) ) + ( Min( RCSe ,DS ) + ( MUM + RRSe ) ) ) + Max( Max( ( MUM / MUM ),Min( RCSe ,RCSe ) ),( ( RMSe / RMSe ) * ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) + MRS )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10276455906660595}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Const ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( ( RRSe / MUR ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.10028386932526367}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3153222771460974}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7307692307692307, "obj2": 0.18542502399435198}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.31146478726347515}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( RRS / MRS ) * ( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),Max( ( ( DS * MUM ) - ( MUC / CS ) ),MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6295546558704453, "obj2": 0.26399445235964525}, {"determining": "Max( ( ( Max( Min( ( ( Min( Const ,RRS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( Min( ARS ,PN ) * Max( FirstVNF_CPU,ACS ) ) ) ,Min( Min( ( ARS - MRS ) ,( FirstVNF_RAM + BR ) ) ,( Max( RRS,ACS ) - ( DDR / ARS ) ) ) ),( ( Min( ( RRS + MRS ) ,( FirstVNF_RAM / DDR ) ) * ( Max( FirstVNF_CPU_Server,CRS ) + ( MRS - RRS ) ) ) * ( Min( ( DDR + MDR ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - BR ) * Min( ARS ,MDR ) ) ) ) ) / ( ( ( ( ( MRS - RRS ) - Max( RRS,AMS ) ) / Min( ( FirstVNF_Mem - RRS ) ,( BR + ACS ) ) ) / ( ( ( AMS * AMS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( PN,AMS ) * ( MRS - CRS ) ) ) ) / ( Max( Min( ( CRS * MRS ) ,Min( FirstVNF_Mem ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ARS ) - ( AMS * FirstVNF_RAM_Server ) ) / ( ( MDR * PN ) + Max( DDR,RRS ) ) ) ) ) ) + ( ( ( ( Max( ( BR - FirstVNF_Mem_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU * MRS ),( DDR / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( RRS ,MRS ) ) ,Max( ( MDR - MDR ),( AMS - FirstVNF_RAM_Server ) ) ) ) * ( Max( ( Min( ARS ,Const ) - ( BR * CRS ) ),( Min( FirstVNF_CPU ,MRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( Min( ( ARS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + Max( Max( ARS,Const ),( ACS * CRS ) ) ) ) ) - ( Max( ( ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_CPU,Const ) ) - ( ( AMS + Const ) * Min( FirstVNF_RAM ,ARS ) ) ),( Max( Max( FirstVNF_RAM,ACS ),Max( FirstVNF_RAM_Server,Const ) ) / ( Max( Const,PN ) / Max( PN,ACS ) ) ) ) + Max( Min( Min( Max( AMS,DDR ) ,Min( ARS ,MDR ) ) ,Max( ( CRS - Const ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),Min( Max( ( MDR + FirstVNF_RAM ),( RRS * FirstVNF_Mem_Server ) ) ,( ( ARS * AMS ) - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( DDR + AMS ) * ( ARS / ACS ) ) / ( Min( CRS ,ACS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem * DDR ) ,Max( CRS,MRS ) ) - ( Min( CRS ,AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( Max( PN,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,PN ) ) ) - Max( ( ( FirstVNF_CPU + BR ) + Min( BR ,RRS ) ),Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU - RRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,MRS ) * Min( RRS ,ARS ) ) ) / ( ( ( CRS - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * ( Max( RRS,Const ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) - ( ( Max( ( RRS * CRS ),( BR * MDR ) ) * Max( ( FirstVNF_Mem + Const ),( ACS + AMS ) ) ) - ( Min( ( AMS - AMS ) ,Max( ACS,FirstVNF_CPU ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Min( Min( ( RRS / ACS ) ,( FirstVNF_Mem_Server - DDR ) ) ,( ( ACS / PN ) + ( RRS * CRS ) ) ) * ( ( ( ACS + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) + Min( ( AMS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) / Max( ( ( ( Const - FirstVNF_Mem ) / ( FirstVNF_CPU + Const ) ) - ( ( CRS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( Max( AMS,FirstVNF_RAM ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) * ( RRS * DDR ) ) ) ) ) / ( Min( Max( ( ( RRS / ACS ) / Min( Const ,BR ) ),( FirstVNF_CPU + DDR ) ) ,( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( MRS ,PN ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( MRS ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server + Const ) ) - ( ( MDR + BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ),( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) * Min( ( MRS / ARS ) ,( RRS - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,RRSe ) * Min( MUM ,( MUC - ( DS + ( RRSe - Min( DS ,( MUM * RCSe ) ) ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.4307717567997327}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.34992830081241183}, {"determining": "( ( RRS - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS - ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.291497975708502, "obj2": 0.5433384567722426}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU )", "choosing": "( ( DS + ( ( ( DS + ( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,CS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3582995951417004, "obj2": 0.4843842436450615}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.3037245239715763}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) / MUR ) * MUC ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7044534412955465, "obj2": 0.20113391216223425}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - RCSe ) - ( MLU + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * DDR )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) + ( Min( MUC ,DS ) - MUC ) )", "obj1": 0.21052631578947367, "obj2": 0.6154841653970571}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / MDR ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( MUC ,CS ) ) ) / MUR ) * DS )", "obj1": 0.694331983805668, "obj2": 0.22139468712308483}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.04305149969462564}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( MDR / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RMSe - MUR ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.03459759131691288}, {"determining": "( ( ( ( DDR - Const ) * ( ( Const / BR ) + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) / Max( RCSe,RMSe ) ) ,Max( ( ( Min( RCSe ,DS ) / MUC ) * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6906641025406196}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( ACS * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( MLU + RMSe ) - Max( ( RMSe * MLU ),RCSe ) ) - ( CS - DS ) )", "obj1": 0.4089068825910931, "obj2": 0.4492510405786411}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Min( ARS ,( BR / FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Min( RCSe ,DS ) - MUC ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6306595145504508}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( ARS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( RCSe - ( RCSe + Min( MUC ,CS ) ) ) - MUR ),RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.597165991902834, "obj2": 0.2873934890640145}, {"determining": "( ( ( ( DDR - Const ) * ( ( Const / BR ) + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) / Max( RCSe,RMSe ) ) ,Max( ( ( Min( RCSe ,DS ) / MUC ) * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.24254819956361015}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / ARS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RRSe ,RCSe ) + DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.34615384615384615, "obj2": 0.5104888291808777}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + Const ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,CS ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( MUC ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( ( ( RRSe / MUR ) * ( MUM + DS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.09087260157553145}, {"determining": "( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( RCSe - ( ( RMSe * MLU ) + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.4230769230769231, "obj2": 0.4458622173428589}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( RRS + CRS ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,PN ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) * ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),( ( RMSe - MUR ) + ( ( DS + ( MUC / MLU ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.2300699347482046}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,BR ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( DS + ( ( DS + ( MUC / CS ) ) + ( Min( DS ,DS ) / MUC ) ) ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.06708052780469251}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.39271255060728744, "obj2": 0.4691190462131446}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3785425101214575, "obj2": 0.46969046093972067}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Max( MUR,MUC ) * ( ( RRSe - RCSe ) - ( Min( RCSe ,DS ) + RRSe ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6411650187053141}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / FirstVNF_Mem_Server ) ) ) + ( AMS - ( MDR / BR ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( RRSe ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( MLU - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.18904248385415903}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe - Max( CS,CS ) ) + ( ( RCSe - MUM ) * MUC ) ),( RCSe * ( DS + ( ( DS + ( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.06470374972947007}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) )", "obj1": 0.9008097165991903, "obj2": 0.05017404931053567}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.35442195493111694}, {"determining": "( Min( ( Max( ACS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( Min( ( RRSe * RCSe ) ,( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( DS + ( DS / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6693335255519273}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.31376518218623484, "obj2": 0.5180121387108262}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.28090993409285175}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.58742295773608}, {"determining": "( ( FirstVNF_CPU - PN ) * DDR )", "choosing": "( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) )", "obj1": 0.24898785425101214, "obj2": 0.5846039792199474}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7432497916701369}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.9574898785425101, "obj2": 0.01947978714965977}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( ( RMSe - MUR ) + ( ( DS + ( MUC / MLU ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.2773279352226721, "obj2": 0.5572141615739711}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.566525777610327}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( ( Const / BR ) + ARS ) ) * ( ( MRS * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,RRS ) ) ) + ( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( Min( RCSe ,DS ) / MUC ) * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.24254819956361015}], "12": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) ) - Max( ( ACS * FirstVNF_Mem ),( MRS + BR ) ) )", "choosing": "( ( ( MLU + RMSe ) / Max( ( RMSe * MLU ),RCSe ) ) - ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( Max( ( ( BR * FirstVNF_CPU ) + Min( RRS ,FirstVNF_RAM ) ),( ( ACS / FirstVNF_Mem_Server ) / ( Const + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( BR - RRS ) ) + Min( ( FirstVNF_Mem + BR ) ,( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( ( Max( ACS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU / RRS ) ) - Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( MRS * RRS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) * ( ARS / CRS ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( PN,MDR ) ) ) ) ) + ( ( ( Max( ( PN / Const ),( MRS / DDR ) ) / ( ( DDR / Const ) + ( DDR * MRS ) ) ) + ( Max( ( ARS / FirstVNF_RAM_Server ),Min( ARS ,BR ) ) * ( ( RRS * FirstVNF_Mem ) / ( AMS + RRS ) ) ) ) + Max( ( ( Max( MRS,FirstVNF_Mem_Server ) + ( AMS / PN ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) - ( FirstVNF_CPU * PN ) ) ),( Max( Min( ACS ,FirstVNF_CPU_Server ),( PN * ACS ) ) / ( ( ARS / ACS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) ),( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * Max( ( MRS - BR ),Min( MDR ,DDR ) ) ) / ( ( ( DDR + BR ) + Min( Const ,MDR ) ) * ( ( FirstVNF_RAM_Server - Const ) + ( MDR * MRS ) ) ) ) / ( Min( ( ( RRS + PN ) + Max( BR,PN ) ) ,( ( MRS - FirstVNF_Mem_Server ) * Min( MDR ,FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * Const ) + ( FirstVNF_CPU_Server * DDR ) ) * Max( ( MDR / CRS ),( BR * FirstVNF_Mem_Server ) ) ) ) ) / Max( ( Min( ( ( PN + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,CRS ) ) ,( ( FirstVNF_CPU + Const ) * ( AMS - FirstVNF_RAM ) ) ) + Max( ( ( ARS - Const ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ),( ( PN + BR ) - ( FirstVNF_CPU_Server * AMS ) ) ) ),Max( ( Max( ( MRS + FirstVNF_CPU ),Max( FirstVNF_RAM_Server,ARS ) ) + ( ( FirstVNF_CPU_Server - MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) ),( ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) / Max( ( BR * FirstVNF_Mem ),( AMS * FirstVNF_RAM ) ) ) ) ) ) ) ,( ( ( ( Min( ( Max( DDR,AMS ) * Max( BR,AMS ) ) ,( Min( CRS ,DDR ) + ( MDR + FirstVNF_Mem ) ) ) * Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Min( BR ,PN ) ),( ( RRS * PN ) - Max( FirstVNF_CPU,DDR ) ) ) ) * ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM,BR ) ) + ( ( MRS - BR ) + Max( RRS,AMS ) ) ) / ( Min( ( MRS + FirstVNF_RAM ) ,Max( MDR,ARS ) ) - Min( ( DDR - ACS ) ,( FirstVNF_CPU_Server / Const ) ) ) ) ) - Max( ( ( ( ( DDR + MRS ) + ( MDR - MDR ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( FirstVNF_RAM_Server - MDR ) ) ) - Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( FirstVNF_CPU - RRS ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / Const ) ) ) ),Max( Min( ( Max( FirstVNF_Mem,PN ) / Min( FirstVNF_CPU ,AMS ) ) ,( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( ACS - MRS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,MRS ) ) * ( ( FirstVNF_Mem_Server * RRS ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) * ( ( ( ( Min( Max( FirstVNF_CPU,FirstVNF_CPU ) ,( RRS * AMS ) ) / ( ( FirstVNF_RAM_Server / Const ) / ( MRS - CRS ) ) ) / ( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) + Max( Min( ACS ,FirstVNF_Mem ),( PN * Const ) ) ) ) / ( Max( ( ( FirstVNF_CPU_Server + PN ) - ( RRS - DDR ) ),( ( DDR - MDR ) / ( MDR - BR ) ) ) / ( Min( ( DDR + CRS ) ,( Const * DDR ) ) - Max( Max( PN,CRS ),Min( BR ,FirstVNF_CPU_Server ) ) ) ) ) + Min( Max( Min( Max( Min( AMS ,FirstVNF_CPU ),( FirstVNF_RAM * BR ) ) ,( ( ACS + MDR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ),( ( Min( AMS ,BR ) * ( Const / MRS ) ) / ( ( AMS / ARS ) / ( Const / Const ) ) ) ) ,( ( ( Min( Const ,ARS ) * Min( FirstVNF_Mem_Server ,DDR ) ) + Min( Max( PN,PN ) ,Min( CRS ,DDR ) ) ) * Max( ( Max( Const,DDR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ARS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( Min( ( RRSe - CS ) ,Max( MUR,MLU ) ) + ( Max( RMSe,CS ) * Max( MUC,MUC ) ) ),( Max( Min( MUC ,MUR ),Min( MUR ,MLU ) ) / ( ( DS + CS ) * ( MUR / CS ) ) ) ) + ( Max( ( ( MUC - RCSe ) * Max( CS,RMSe ) ),( Max( RRSe,MUR ) * ( DS + DS ) ) ) * Min( ( Min( RRSe ,DS ) + ( MUR + MUM ) ) ,( ( DS + RCSe ) * Max( RCSe,MUR ) ) ) ) ) + ( ( ( ( Max( MLU,MUM ) * Max( RCSe,RRSe ) ) * ( Min( MUC ,RMSe ) + ( MLU / CS ) ) ) + ( ( ( MLU * MUC ) / ( MUR / MUM ) ) * Min( ( CS - RRSe ) ,( RMSe / DS ) ) ) ) - ( Min( ( ( MUM - CS ) / ( DS + RMSe ) ) ,( ( RCSe * RMSe ) * Min( CS ,RCSe ) ) ) + Min( ( ( RMSe - RMSe ) / ( RCSe - DS ) ) ,( ( MUM / RCSe ) * ( MUC * RCSe ) ) ) ) ) ) - ( ( ( ( ( ( MLU * DS ) - ( RMSe - RRSe ) ) / ( ( MUR + RMSe ) / ( CS - MUM ) ) ) - ( ( Max( CS,MLU ) / ( RMSe + RMSe ) ) - ( Min( RMSe ,RCSe ) - ( RRSe + RRSe ) ) ) ) * Max( ( Max( ( MUM + MLU ),( MUM * RCSe ) ) - Min( Max( MUC,RMSe ) ,( MUC + MUC ) ) ),( ( Min( MUM ,RMSe ) + ( MUR / MUR ) ) - Max( ( MLU - RCSe ),( CS - CS ) ) ) ) ) - ( Max( ( Max( Max( RRSe,CS ),( MLU / MUM ) ) - ( Min( MLU ,MUC ) - Min( MUR ,MLU ) ) ),( ( ( DS - DS ) / ( MLU - MLU ) ) + ( ( DS / RRSe ) + ( RRSe * RRSe ) ) ) ) / ( ( Max( ( DS - RRSe ),( MUM / MUR ) ) / ( ( MUC / RRSe ) + ( MUC / RRSe ) ) ) - Min( Max( ( MLU * RCSe ),( CS * RRSe ) ) ,( Min( RMSe ,RMSe ) / ( MUC + CS ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( MUM,MUC ) + ( RRSe * RMSe ) ) * Min( Max( CS,MUC ) ,( DS * DS ) ) ) * ( ( ( RMSe / RRSe ) - ( RMSe - MLU ) ) / ( Max( MLU,MLU ) - ( MUM / MUC ) ) ) ) / ( ( ( Min( MUC ,RRSe ) / ( MUR * RCSe ) ) / ( Min( DS ,MLU ) / Min( DS ,MUM ) ) ) / Max( ( ( MUR * RRSe ) - Max( CS,MLU ) ),Min( ( MUM * MLU ) ,Min( RMSe ,DS ) ) ) ) ) - ( Min( ( ( ( RMSe * RRSe ) * ( RCSe * RMSe ) ) - ( ( MUM + RCSe ) * ( MLU + MLU ) ) ) ,( Min( ( RMSe + MUM ) ,( MUR / MUR ) ) * Max( Max( MUM,CS ),( DS / RRSe ) ) ) ) + ( Min( ( ( MUC - RCSe ) / ( MLU * MUR ) ) ,( ( RMSe / CS ) * Min( RMSe ,CS ) ) ) * ( Max( ( RMSe * CS ),( MLU - RRSe ) ) + Min( ( MUC - MUM ) ,( MLU - RMSe ) ) ) ) ) ) + ( Min( ( Min( Min( Min( DS ,MLU ) ,Max( RRSe,MUC ) ) ,Min( ( RMSe - CS ) ,( DS / CS ) ) ) + Min( ( ( MUR - MUR ) + ( MLU * MUM ) ) ,( ( RCSe + DS ) * Min( MUC ,DS ) ) ) ) ,( ( Min( ( MUR * DS ) ,( MUR + MUR ) ) - ( ( MUC / RCSe ) - Max( MUM,RRSe ) ) ) + Max( ( ( MUM + RRSe ) * Min( RRSe ,RMSe ) ),Min( ( RMSe + RCSe ) ,( MUM * MUM ) ) ) ) ) - ( Max( ( ( ( DS + CS ) / ( MUM - DS ) ) + ( ( MLU + MUC ) * Max( MUC,CS ) ) ),( ( ( MLU / MUC ) - ( DS + RCSe ) ) * ( ( MUM * MUR ) / ( RRSe + CS ) ) ) ) / ( ( ( ( MUR * MLU ) - ( DS + MUC ) ) + ( Min( RCSe ,DS ) + ( MUM + RRSe ) ) ) + Max( Max( ( MUM / MUM ),Min( RCSe ,RCSe ) ),( ( RMSe / RMSe ) * ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( MUC ,CS ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5165158598627071}, {"determining": "Max( ( ACS - ( AMS * FirstVNF_RAM_Server ) ),( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / ARS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RRSe ,RCSe ) + DS ) - MUC ) ),( Max( RCSe,MUC ) - MUR ) ) / CS ) ) + CS )", "obj1": 0.34615384615384615, "obj2": 0.5104888291808777}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( Min( MUM ,MUR ) / RRSe ) ) + ( Max( MUC,MUC ) - MUC ) )", "obj1": 0.8137651821862348, "obj2": 0.08320125441960056}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7307692307692307, "obj2": 0.18542502399435198}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10276455906660595}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3153222771460974}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( BR / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( DS + ( MUC / CS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4209584349657519}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( MDR / FirstVNF_CPU_Server ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6356275303643725, "obj2": 0.23394290827716346}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU )", "choosing": "( ( DS + ( ( ( DS + ( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,CS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.3582995951417004, "obj2": 0.4843842436450615}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) + ( Min( MUC ,DS ) - MUC ) )", "obj1": 0.26720647773279355, "obj2": 0.5604384861083268}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( AMS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.608128985453426}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.46356275303643724, "obj2": 0.34780914130177587}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) + ( RCSe * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.08905157910876638}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Min( ARS ,( BR / FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Min( RCSe ,DS ) - MUC ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6306595145504508}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( RRS / MRS ) * ( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),Max( ( ( DS * MUM ) - ( MUC / CS ) ),MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6295546558704453, "obj2": 0.26399445235964525}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.04305149969462564}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8623481781376519, "obj2": 0.07227080949699144}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) - Min( MRS ,FirstVNF_Mem_Server ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) - ( MRS / Min( ARS ,( BR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.3037245239715763}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( ARS,Const ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( MUC ,CS ) ) ) - MUR ),RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.611336032388664, "obj2": 0.2722678799973711}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,Max( ( DS * MLU ),Min( MUM ,MUR ) ) ) - Min( ( RCSe * ( DS - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.025288880429475497}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) * ( Const / FirstVNF_Mem_Server ) ) ) + ( AMS - ( MDR / BR ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),RMSe ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( MLU - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014733546962159314}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7432497916701369}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( RCSe - ( DS + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.39271255060728744, "obj2": 0.4691190462131446}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( ACS * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( MLU + RMSe ) - Max( ( RMSe * MLU ),RCSe ) ) - ( CS - DS ) )", "obj1": 0.4089068825910931, "obj2": 0.4492510405786411}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( RRS + CRS ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,PN ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe - MUR ) + ( ( RCSe - CS ) * MUC ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) * ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),( ( RMSe - MUR ) + ( ( DS + ( MUC / MLU ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.2300699347482046}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( ( ( DS + ( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) + ( Min( RCSe ,DS ) - MUC ) ) / CS ) ) + ( ( RCSe * DS ) - MUC ) )", "obj1": 0.5404858299595142, "obj2": 0.3057647960966149}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / PN ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.9939271255060729, "obj2": 0.0027313171397128767}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) + ( RCSe * RMSe ) ) * Max( ( DS * MUM ),( MUC / CS ) ) ) - ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) )", "obj1": 0.7550607287449392, "obj2": 0.09550207837815776}, {"determining": "( Min( ( ( Const * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) + Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.05016229380693779}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.566525777610327}, {"determining": "( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( MRS / BR ) ) )", "choosing": "( ( ( RCSe - ( ( RMSe * MLU ) + Min( Min( RCSe ,DS ) ,CS ) ) ) - CS ) * Max( CS,CS ) )", "obj1": 0.4230769230769231, "obj2": 0.4458622173428589}, {"determining": "( Min( ( Max( ACS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( Min( ( RRSe * RCSe ) ,( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( ( FirstVNF_CPU - PN ) * DDR )", "choosing": "( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) )", "obj1": 0.24898785425101214, "obj2": 0.5846039792199474}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( DDR + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - RCSe ) - ( MUM + DS ) ) - ( DS + DS ) ) )", "obj1": 0.44534412955465585, "obj2": 0.35932447316643606}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( Min( DS ,( Min( MUC ,CS ) / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6972994661884651}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7302800206216609}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( DS + ( DS / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6693335255519273}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / MDR ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( MUC ,CS ) ) ) / MUR ) * DS )", "obj1": 0.694331983805668, "obj2": 0.22139468712308483}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( RRSe ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.31465334371969794}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6046558254925657}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - RCSe ) - ( MLU + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( ( FirstVNF_CPU - PN ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,( MUC / RRSe ) ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.713048111937463}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6421862598198457}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ) * DDR )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) + ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - MUC ) )", "obj1": 0.22672064777327935, "obj2": 0.6027205134275926}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( Max( Min( MUR ,RCSe ),( ( RMSe * RRSe ) - RCSe ) ) / MUR ) * MUC ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + ( MUC / MUM ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.19611742953282146}], "13": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR - FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( ( MUM + MUR ) / RRSe ) ) + ( Max( MUC,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,FirstVNF_Mem_Server ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ) ) - Max( ( ACS * FirstVNF_Mem ),( MRS + BR ) ) )", "choosing": "( ( ( MLU + RMSe ) / Max( ( RMSe * MLU ),RCSe ) ) - ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.43321984818199455}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.514683545605311}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) + ( RCSe * RMSe ) ) * Max( ( DS * MUM ),( MUC / CS ) ) ) - ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.15798639386721036}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ( AMS - ( MDR / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( RMSe,( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.3930924693795474}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Min( MRS ,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUR ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUC + DS ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.11503687623003854}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( MUC ,CS ) ) ) - MUR ),RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5364372469635628, "obj2": 0.28847412682440604}, {"determining": "( Min( MRS ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( ARS,Const ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5991902834008097, "obj2": 0.2795829573340468}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5922377322117726}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / Min( RRS ,AMS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( MDR / FirstVNF_CPU_Server ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RCSe ) * ( ( DS + ( Max( ( ( RMSe + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6376518218623481, "obj2": 0.23264976651150115}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) + ( Min( MUC ,DS ) - MUC ) )", "obj1": 0.26720647773279355, "obj2": 0.5604384861083268}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5752549881475216}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( ARS,Const ) / ( PN + DDR ) ) ) ) ) * ( Const / BR ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,( ( RRSe / MUR ) * MUC ) ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.26378002129536}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6421862598198457}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ARS ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const * BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe * Max( RCSe,( RCSe + Min( MUC ,CS ) ) ) ) - ( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.24349511095153395}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8623481781376519, "obj2": 0.07227080949699144}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) * ( Const / FirstVNF_Mem_Server ) ) ) + ( AMS - ( MDR / BR ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),RMSe ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( MLU - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01473354696215931}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( ( CRS - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - ( DS + Min( MUC ,CS ) ) ) - MUR ) * Max( CS,CS ) )", "obj1": 0.14777327935222673, "obj2": 0.6621176337851284}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - RCSe ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05403371724119441}, {"determining": "( Min( ( Max( ACS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( Min( ( RRSe * RCSe ) ,( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.608128985453426}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) / ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) )", "choosing": "( Min( ( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) + ( Max( ( DS * MLU ),Min( MUM ,MUR ) ) * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08347304690648799}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( Max( MRS,FirstVNF_CPU ) + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ) * DDR )", "choosing": "( ( DS + ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( MUC ,CS ) ) ) - MUR ) ) + ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC + MUR ),MUC ) - MUR ) ) / CS ) ) - MUC ) )", "obj1": 0.11336032388663968, "obj2": 0.6906435000692647}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5242914979757085, "obj2": 0.30328991730679167}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( Min( MUM ,MUR ) / RRSe ) ) + ( Max( MUC,MUC ) - MUC ) )", "obj1": 0.819838056680162, "obj2": 0.07848842644507174}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Min( ARS ,( BR / FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Min( RCSe ,DS ) - MUC ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6306595145504508}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( DDR + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - RCSe ) - ( MUM + DS ) ) - ( DS + DS ) ) )", "obj1": 0.44534412955465585, "obj2": 0.35932447316643606}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( Max( Max( Min( ( ( ( MLU - MUC ) * ( MLU - MUM ) ) / ( ( RRSe / RCSe ) * ( RMSe + MUM ) ) ) ,( ( Min( RCSe ,MUM ) - ( CS + RCSe ) ) / ( ( DS + RMSe ) / ( DS + RCSe ) ) ) ),Min( Max( ( ( MUM + DS ) + Min( MUR ,CS ) ),( ( CS / CS ) - Max( CS,CS ) ) ) ,( Min( ( MUC / MUC ) ,( RCSe * CS ) ) - ( ( RRSe + RMSe ) / Min( MUC ,CS ) ) ) ) ),( ( Max( ( ( MUM + MUM ) * Min( CS ,DS ) ),( ( DS + RMSe ) * Max( MUR,MUC ) ) ) / ( Max( Max( DS,RRSe ),( RCSe / MUM ) ) - ( Max( CS,MUM ) * ( MLU + CS ) ) ) ) * ( Max( ( Min( DS ,MLU ) + Max( DS,DS ) ),( ( RRSe + MUM ) - ( MLU + MLU ) ) ) + ( ( Min( MLU ,RMSe ) + Min( MLU ,MUR ) ) + ( Min( RRSe ,CS ) * ( MUM + DS ) ) ) ) ) ) ,( ( ( Max( Min( ( DS / MUM ) ,( RCSe - MLU ) ),( ( RCSe - CS ) / ( RRSe / RRSe ) ) ) * ( ( Max( MUR,MLU ) * ( CS * MUM ) ) + ( Max( RRSe,RRSe ) * Min( MLU ,MLU ) ) ) ) - Max( ( ( ( RMSe - DS ) * ( MUC / RMSe ) ) + Min( ( RRSe + DS ) ,( MUC + MUM ) ) ),( ( ( RMSe - RMSe ) / ( MLU + DS ) ) / ( ( MUM / CS ) - ( RCSe * DS ) ) ) ) ) * ( ( ( ( ( DS + MUM ) - Max( MUM,DS ) ) + ( ( RCSe + MUM ) * Min( MUR ,MLU ) ) ) * Max( ( ( MUC * MUM ) * Max( RCSe,MUM ) ),( Max( RCSe,RRSe ) + Max( RRSe,DS ) ) ) ) * Min( ( ( ( RCSe + MLU ) - Min( MUC ,MLU ) ) * ( ( RCSe - MUM ) - ( RRSe - MUM ) ) ) ,( ( ( CS + MUM ) / ( RMSe + MLU ) ) / ( ( MUR / MLU ) / Min( MUR ,MUM ) ) ) ) ) ) ),( ( ( Max( ( Min( ( MUC + MUR ) ,( RMSe - RCSe ) ) + ( ( RCSe / DS ) + Max( MUR,MUM ) ) ),( ( Max( DS,RMSe ) / ( MUR * MUR ) ) * Max( ( CS + CS ),( RMSe / CS ) ) ) ) + Max( ( Max( ( DS / RRSe ),( DS * RMSe ) ) * Min( ( RCSe - MUR ) ,Min( MUR ,MUC ) ) ),( ( Min( RRSe ,RMSe ) + ( RCSe / RCSe ) ) / ( ( MLU * MUC ) * ( MUR / MUC ) ) ) ) ) / Min( ( ( ( Min( CS ,MUM ) / ( MUM + RCSe ) ) - Max( ( RCSe - MUM ),Max( DS,MUC ) ) ) + ( ( Max( DS,RMSe ) - ( MUM / RRSe ) ) * Max( ( MUC + MUM ),( MUM * CS ) ) ) ) ,Min( ( Max( Max( DS,DS ),Max( DS,MLU ) ) - Max( ( DS * MUC ),Max( RCSe,MUR ) ) ) ,( ( Max( RRSe,MUR ) + ( MUC / DS ) ) / ( ( CS / MUC ) / ( RCSe * RRSe ) ) ) ) ) ) + ( Max( ( ( Min( ( DS - DS ) ,( RRSe * MUR ) ) - ( ( RMSe * MUR ) * ( MLU + RCSe ) ) ) / Max( ( ( CS - CS ) + ( CS - MUM ) ),( ( MUC * MUR ) / ( RRSe / RRSe ) ) ) ),( Min( ( ( DS * RCSe ) + ( MUM * RMSe ) ) ,Min( ( RMSe * MUM ) ,( MUM + MUM ) ) ) * ( ( Max( RCSe,RCSe ) * Max( MLU,DS ) ) - ( ( MUR - MUC ) * ( RCSe * RRSe ) ) ) ) ) + ( ( ( ( ( MLU / MUR ) / Max( RRSe,RCSe ) ) * ( Max( RRSe,RCSe ) / ( RCSe + RCSe ) ) ) - ( ( ( MLU / RCSe ) - Max( RCSe,RRSe ) ) * ( ( RCSe * MLU ) * ( RMSe - RCSe ) ) ) ) / ( Min( ( ( MLU / DS ) - Max( CS,MUC ) ) ,( ( MLU + RRSe ) / ( DS / MUR ) ) ) / ( Max( ( RCSe * MUC ),Min( MLU ,CS ) ) + Max( ( MUM + DS ),( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.31465334371969794}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const + BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MLU / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.33108542384450956}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7218932791920346}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( ( DS + ( DS / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6693335255519273}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7432497916701369}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.46963562753036436, "obj2": 0.34240020453865927}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8623481781376519, "obj2": 0.07227080949699144}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( AMS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.608128985453426}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( MDR / FirstVNF_CPU_Server ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6376518218623481, "obj2": 0.23264976651150115}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10276455906660595}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.566525777610327}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server / AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,PN ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe * RMSe ) ) ,( ( DS + ( MUC / RRSe ) ) + ( Min( MUC ,MUC ) - MUC ) ) ) - ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.007650586358796944}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( Min( MUM ,MUR ) / RRSe ) ) + ( Max( MUC,MUC ) - MUC ) )", "obj1": 0.8137651821862348, "obj2": 0.08320125441960056}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3153222771460974}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Min( ARS ,( BR / FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( RCSe,MUC ) / MUR ) ) / CS ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( Min( RCSe ,DS ) - MUC ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6306595145504508}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( Min( DS ,( Min( MUC ,CS ) / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6972994661884651}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ACS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * Max( MUM,Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.32097347599652704}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( MDR / FirstVNF_CPU_Server ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6356275303643725, "obj2": 0.23394290827716346}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,DDR ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM * DS ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.04238355912887678}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) + ( RCSe * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.025898740103428138}], "14": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( Min( MUM ,MUR ) / RRSe ) ) + ( Max( MUC,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR - FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( ( MUM + MUR ) / RRSe ) ) + ( Max( MUC,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) - ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( MUM,MUR ) + Max( RCSe,RMSe ) ) ,( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) + ( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4332198481819945}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.16158707216979212}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const - BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS / Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RMSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.514683545605311}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( ( MDR / FirstVNF_CPU_Server ),RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ),Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - MUC ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.2590885628936792}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ARS ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.23135495117102978}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.514683545605311}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ARS ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const * BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe * Max( RCSe,( RCSe + Min( MUC ,CS ) ) ) ) - ( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.24349511095153395}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13633474292290085}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( AMS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5822719793396284}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUR ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11461871761476199}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.26759203037354307}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4185587349883053}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ( AMS - ( MDR / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( RMSe,( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.3930924693795474}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( Min( MUC ,CS ) * MUC ) ) - ( RCSe + Min( MUC ,CS ) ) ) - MUR ),RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5242914979757085, "obj2": 0.3029518590665762}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) + ( Min( MUC ,DS ) - MUC ) )", "obj1": 0.26720647773279355, "obj2": 0.5604384861083268}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7611336032388664, "obj2": 0.09312241148834825}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7432497916701369}, {"determining": "( Min( ( Max( ACS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( Min( ( RRSe * RCSe ) ,( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5752549881475216}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( Min( DS ,( Min( MUC ,CS ) / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6972994661884651}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) + ( ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,ARS ) ) / Max( ( RRS / MRS ),( FirstVNF_CPU + DDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ACS ) + ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,DDR ) ) * Max( ( FirstVNF_CPU + BR ),( MRS + AMS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM * DS ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.04238355912887678}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) + ( RCSe * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.025898740103428138}, {"determining": "( DDR + ( ( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) + CS ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6595548575368965}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) + ( Min( MUC ,DS ) - MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.06527475127018721}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RCSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.5141700404858299, "obj2": 0.3054544499542828}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3153222771460974}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.07647037992162155}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( DS * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.41898711389815635}, {"determining": "( Min( ( AMS - ( Const / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) / ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUC ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10276455906660595}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.46963562753036436, "obj2": 0.34240020453865927}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) / ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) / BR ) ) ) ) )", "choosing": "( Min( ( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) + ( Max( ( DS * MLU ),Min( MUM ,MUR ) ) * RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( MUR ,RCSe ) )", "obj1": 0.7955465587044535, "obj2": 0.0805290943651753}, {"determining": "( ( FirstVNF_RAM_Server + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS * MUM ),( MUC / CS ) ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.9493927125506073, "obj2": 0.018160798353914157}, {"determining": "( Min( ( AMS - ( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS * MUM ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6224219359733927}, {"determining": "Max( ( AMS - ( MDR / FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RRSe - RCSe ) - ( MUM + DS ) ) - ( DS + DS ) ) * ( CS - CS ) )", "obj1": 0.08299595141700405, "obj2": 0.7117605003227357}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ACS ) ) )", "choosing": "( ( MUM + ( Min( MUM ,MUR ) / RRSe ) ) + Min( Max( MUC,MUC ) ,MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.07782384806782508}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.608128985453426}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4251012145748988, "obj2": 0.3911124672998419}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( DDR + ( Max( MRS,ACS ) / ( PN + DDR ) ) ) ) ,( ( FirstVNF_Mem + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC * CS ) ) * ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + DS ) ) )", "obj1": 0.44534412955465585, "obj2": 0.35932447316643606}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6517590471034315}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - RCSe ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05403371724119441}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.566525777610327}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) + AMS ) - ( MRS / Min( ARS ,( BR / ( Max( Max( RRS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN + FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( ( DS * MUM ) + ( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.05633408115341415}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Min( ARS ,( BR / FirstVNF_Mem ) ) ) * DDR )", "choosing": "( ( DS + ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( MUC ,CS ) ) ) - MUR ) ) + ( Max( ( Min( RCSe ,DS ) - MUC ),( MUC + RCSe ) ) - MUC ) )", "obj1": 0.1902834008097166, "obj2": 0.6196468449336866}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6421862598198457}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.608128985453426}], "15": [{"determining": "Min( Min( ( ( Min( ( ( ( MDR + CRS ) - ( AMS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + CRS ) + ( MRS * FirstVNF_CPU ) ) ) ,( ( Max( AMS,FirstVNF_CPU ) / ( ACS - DDR ) ) - ( Max( BR,BR ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) - Max( Min( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),Max( MRS,MRS ) ) ,Min( Max( PN,FirstVNF_Mem ) ,( PN * FirstVNF_Mem ) ) ),( ( ( DDR / FirstVNF_CPU ) * ( PN * RRS ) ) * ( Max( Const,FirstVNF_CPU_Server ) * ( ARS + ACS ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU_Server / MDR ) / Min( FirstVNF_Mem ,ARS ) ) - Max( Max( CRS,MRS ),( MDR / ARS ) ) ) / ( ( ( AMS - MRS ) * ( FirstVNF_Mem_Server + BR ) ) + ( ( FirstVNF_CPU_Server - ARS ) / ( ARS / PN ) ) ) ) + ( ( ( ( PN + FirstVNF_Mem_Server ) / ( FirstVNF_Mem + CRS ) ) * Max( ( FirstVNF_CPU_Server / Const ),Max( MRS,FirstVNF_Mem_Server ) ) ) + ( Min( Min( FirstVNF_Mem ,MDR ) ,( BR + MRS ) ) * ( ( FirstVNF_CPU_Server * AMS ) * ( MDR * Const ) ) ) ) ) ) ,Max( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM,ACS ) ) + ( Max( Const,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ),Min( Min( ( ARS - MDR ) ,( ACS - BR ) ) ,Min( ( AMS - FirstVNF_CPU_Server ) ,( BR / BR ) ) ) ) - Min( Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( MDR + DDR ) ) ,( Max( RRS,DDR ) + ( CRS / PN ) ) ) ,( Min( Max( MDR,CRS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( DDR - Const ) * ( CRS * DDR ) ) ) ) ),( Max( Max( Min( Min( Const ,FirstVNF_Mem ) ,Min( DDR ,FirstVNF_RAM ) ),( ( FirstVNF_CPU - ACS ) + ( FirstVNF_Mem - AMS ) ) ),( ( ( FirstVNF_Mem_Server / MDR ) - ( FirstVNF_CPU_Server + PN ) ) + Min( Min( MRS ,MRS ) ,Max( FirstVNF_CPU_Server,MRS ) ) ) ) + ( Min( ( Max( PN,FirstVNF_CPU_Server ) + ( Const * Const ) ) ,( ( Const / FirstVNF_RAM_Server ) / ( CRS + DDR ) ) ) * ( ( ( BR * RRS ) * ( AMS + FirstVNF_Mem ) ) - ( ( ARS / FirstVNF_CPU ) + ( FirstVNF_CPU + AMS ) ) ) ) ) ) ) ,Max( ( Min( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - ( FirstVNF_Mem / PN ) ) + ( Min( FirstVNF_RAM ,ACS ) / Min( BR ,PN ) ) ) - Max( ( Max( MDR,Const ) + ( FirstVNF_Mem - PN ) ),( ( FirstVNF_CPU_Server - Const ) * ( DDR - CRS ) ) ) ) ,( ( ( ( BR / FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( DDR + MRS ) - Min( FirstVNF_RAM ,CRS ) ) ) + Max( ( ( Const + DDR ) * ( FirstVNF_Mem - MDR ) ),Max( Min( MDR ,FirstVNF_CPU_Server ),Min( ARS ,RRS ) ) ) ) ) + ( ( ( Min( ( Const + DDR ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Max( FirstVNF_RAM,MDR ) ) ) + Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( AMS * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM * MDR ) + ( DDR - FirstVNF_CPU ) ) ) ) - ( ( ( ( ARS / BR ) + ( FirstVNF_Mem + Const ) ) + Min( ( ARS - FirstVNF_Mem ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) * ( ( ( RRS - FirstVNF_Mem ) * ( RRS + ARS ) ) / ( Max( MDR,FirstVNF_Mem ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) ) ),( ( ( Max( ( Max( BR,AMS ) + ( BR / FirstVNF_RAM ) ),( ( FirstVNF_CPU - ARS ) / ( ACS * AMS ) ) ) - ( ( Min( AMS ,FirstVNF_Mem ) / ( DDR - AMS ) ) + ( ( Const * PN ) + ( FirstVNF_RAM * DDR ) ) ) ) + Max( ( ( Max( MRS,RRS ) + ( BR + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( RRS / MRS ) ) ),( ( ( RRS - RRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( AMS - FirstVNF_RAM ) - ( BR / FirstVNF_RAM ) ) ) ) ) - Min( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Max( BR,FirstVNF_CPU_Server ) ) - Max( Min( Const ,CRS ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) / Max( Min( ( CRS + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,Const ) ),Max( ( Const + PN ),( MDR / AMS ) ) ) ) ,( Max( ( Min( FirstVNF_RAM ,BR ) * ( ACS * MRS ) ),Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_RAM_Server - Const ) ) ) + ( ( ( AMS - AMS ) * ( MDR / ACS ) ) - Min( Max( BR,FirstVNF_CPU ) ,Min( FirstVNF_Mem ,DDR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Max( Max( ( ( MUC + MUR ) - Max( MUM,MUM ) ),( Min( RMSe ,MUR ) - Max( RMSe,CS ) ) ),Max( ( ( DS * RRSe ) + ( RCSe + RCSe ) ),Max( ( MUM / RCSe ),( MLU * CS ) ) ) ) / Min( Min( Min( ( DS * MUR ) ,( RCSe * DS ) ) ,( Min( MLU ,DS ) * ( RMSe * MUC ) ) ) ,Min( ( ( MUR + RCSe ) * ( RRSe * RRSe ) ) ,( Min( RMSe ,MUC ) / ( MUC - MUR ) ) ) ) ) / ( Max( ( ( ( CS - MUM ) - ( MUR / MUR ) ) - Min( ( RRSe - RMSe ) ,( RMSe - CS ) ) ),Max( ( ( RRSe / DS ) + ( RCSe + MUM ) ),( ( MLU - MLU ) / Max( RRSe,RRSe ) ) ) ) / ( ( ( ( DS - RCSe ) * ( MUC / RMSe ) ) - ( Min( MUR ,CS ) - ( MUM + MUC ) ) ) * Max( ( ( MUR - RRSe ) + ( MUR / RCSe ) ),( ( RRSe * RMSe ) + ( MLU * MUC ) ) ) ) ) ) * ( ( Min( Min( ( Min( RCSe ,RRSe ) / ( MUM * MUR ) ) ,( ( CS + MUM ) * ( MUR + MLU ) ) ) ,Min( Min( ( DS * CS ) ,( MUC * CS ) ) ,( ( RMSe - RRSe ) - Max( DS,RRSe ) ) ) ) - ( Min( Min( ( MUR - CS ) ,( CS + DS ) ) ,( Min( RRSe ,MLU ) - ( RCSe / RCSe ) ) ) / ( Min( ( MUC / DS ) ,Min( RCSe ,MUR ) ) * ( ( CS - RCSe ) * ( MUR + RCSe ) ) ) ) ) + Min( ( ( ( ( RCSe - MLU ) + Max( MUR,MLU ) ) - ( Max( MUR,RCSe ) + ( MLU + MUM ) ) ) + Max( Max( ( MUR / MUR ),( RRSe - MUC ) ),( ( RCSe + MUM ) / Min( RMSe ,MLU ) ) ) ) ,Max( ( ( ( MUR / RCSe ) - Max( CS,MUC ) ) + Max( Max( MUR,CS ),Min( MUC ,MLU ) ) ),( Min( ( RMSe * DS ) ,Min( MLU ,MUC ) ) + ( ( MUM * MUC ) / Min( CS ,RCSe ) ) ) ) ) ) ),Max( Min( Min( ( ( Min( ( RCSe + MUC ) ,( RCSe * RCSe ) ) + ( ( MUC - DS ) / ( MUM * MLU ) ) ) * Min( Min( ( MUM + RRSe ) ,Min( MUM ,RMSe ) ) ,( Min( RRSe ,MUR ) / ( DS * MUR ) ) ) ) ,( ( ( ( MUR * RCSe ) + ( DS + MUC ) ) + ( ( RMSe * MLU ) + ( RMSe + MUC ) ) ) - ( ( Max( MLU,RMSe ) - ( MLU - MUR ) ) * ( ( RMSe / MUR ) / ( RMSe * RMSe ) ) ) ) ) ,( ( ( ( ( CS + DS ) + ( MUC / RRSe ) ) - ( Max( RRSe,RCSe ) - Min( MUR ,MUR ) ) ) - ( ( ( MUC + MUC ) * Max( MLU,RCSe ) ) - ( Max( MUR,CS ) * ( CS / RCSe ) ) ) ) - ( ( ( ( MUR + RMSe ) + ( RCSe / RMSe ) ) / Min( ( RMSe / MLU ) ,( MUR / MUR ) ) ) - ( ( ( MLU * RCSe ) * ( DS + MUC ) ) / ( Min( RRSe ,RMSe ) - ( CS - MUC ) ) ) ) ) ),( Max( ( Min( ( ( RRSe - MUM ) / ( MUR * RCSe ) ) ,( Max( MUM,MUC ) * Max( RMSe,RRSe ) ) ) * ( ( ( RMSe / MUR ) / ( RRSe + MUC ) ) + ( Max( MUM,MUC ) / ( MUR - RMSe ) ) ) ),( ( ( Min( MUR ,MUC ) / ( MUM * DS ) ) / Min( ( DS + RCSe ) ,Min( CS ,MUR ) ) ) - ( ( ( RMSe / RMSe ) * ( CS - MUM ) ) - ( ( RMSe / DS ) * Min( DS ,CS ) ) ) ) ) * ( ( Min( Max( Min( RRSe ,CS ),( MUM * CS ) ) ,Min( ( MUR - RRSe ) ,Max( MUC,RMSe ) ) ) / ( ( ( DS + RMSe ) * ( MUC + CS ) ) * ( ( CS * RCSe ) + ( DS * CS ) ) ) ) - ( Min( ( ( RRSe * CS ) / Min( MLU ,RCSe ) ) ,( ( RCSe / RCSe ) / ( MLU + RCSe ) ) ) - ( Min( ( RMSe / MUC ) ,Max( RCSe,MLU ) ) / ( ( RMSe / RRSe ) - Max( MLU,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( Min( MUM ,MUR ) / RRSe ) ) + ( Max( MUC,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.21310840059719943}, {"determining": "( Min( ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( DS * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5132056939559675}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.16158707216979212}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4332198481819945}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.2769949411597303}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( MRS / BR ) ) )", "choosing": "( Min( MUR ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe + MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.48582995951417, "obj2": 0.3083518479202467}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.566525777610327}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.517881302000741}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( ( MDR / FirstVNF_CPU_Server ),RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ),Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - MUC ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.2590885628936792}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( DDR + ( Max( MRS,ACS ) / ( PN + DDR ) ) ) ) ,( ( FirstVNF_Mem + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC * CS ) ) * ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + DS ) ) )", "obj1": 0.44534412955465585, "obj2": 0.35932447316643606}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( MUC,MUC ) ) - Min( ( RCSe * ( DS - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.038992782767157105}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) - ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( MUM,MUR ) + Max( RCSe,RMSe ) ) ,( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) + ( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4332198481819945}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.3765182186234818, "obj2": 0.4141551165309367}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( ARS + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RCSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( MUM + RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12237852745347903}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RCSe ) * ( ( DS / ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3958944080421346}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( AMS / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.025874540848027244}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( AMS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5822719793396284}, {"determining": "( ( FirstVNF_RAM_Server + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS * MUM ),( MUC / CS ) ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.9493927125506073, "obj2": 0.018160798353914157}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) * Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3351550427964809}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5752549881475216}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( Min( DS ,( Min( MUC ,CS ) / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6972994661884651}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / AMS ) ),MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( Max( ( ( RMSe * RRSe ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) + ( Min( MUC ,DS ) - MUC ) )", "obj1": 0.20445344129554655, "obj2": 0.6078195100466682}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.46963562753036436, "obj2": 0.34240020453865927}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13633474292290085}, {"determining": "( DDR + ( ( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) + CS ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6595548575368965}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6846253605106487}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.26759203037354307}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6421862598198457}, {"determining": "( Min( ( Max( ACS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( Min( ( RRSe * RCSe ) ,( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.4433198380566802, "obj2": 0.3849283655969753}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7611336032388664, "obj2": 0.09312241148834825}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.07647037992162155}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR - FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( DS + ( ( MUM + MUR ) / RRSe ) ) + ( Max( MUC,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) - MUC ) )", "obj1": 0.9858299595141701, "obj2": 0.01699430083082396}, {"determining": "( Min( ( ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6295367935937668}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - RCSe ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05403371724119441}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( ( MDR / FirstVNF_CPU_Server ),RRS ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( RCSe * ( MUM - Max( ( ( DS + ( MUC / CS ) ) + ( ( Min( RCSe ,DS ) * ( MUM + DS ) ) + ( ( RCSe - MUC ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.2590885628936792}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ACS ) ) )", "choosing": "( ( MUM + ( Min( MUM ,MUR ) / RRSe ) ) + Min( Max( MUC,MUC ) ,MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.07782384806782508}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / ARS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( CS ,RRSe ) ) ) - MUR ) * DS )", "obj1": 0.0708502024291498, "obj2": 0.7337241538038236}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.618972033195553}, {"determining": "( Min( ( AMS - ( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS * MUM ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6224219359733927}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7202469957569456}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7753036437246964, "obj2": 0.0864616628358404}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.26759203037354307}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS - FirstVNF_CPU ) / ( MDR / MRS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) * Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - ( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) * RRSe ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.1000450528533188}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( CS / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.9898785425101214, "obj2": 0.004697632482996396}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( DS + ( Min( MUM ,MUR ) / RRSe ) ) + ( Max( MUC,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) - MUC ) )", "obj1": 0.8704453441295547, "obj2": 0.06712785745046093}], "16": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / RRS ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( MUR ,RCSe ),( CS - DS ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Min( ( ( ( MDR + CRS ) - ( AMS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + CRS ) + ( MRS * FirstVNF_CPU ) ) ) ,( ( Max( AMS,FirstVNF_CPU ) / ( ACS - DDR ) ) - ( Max( BR,BR ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) - Max( Min( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),Max( MRS,MRS ) ) ,Min( Max( PN,FirstVNF_Mem ) ,( PN * FirstVNF_Mem ) ) ),( ( ( DDR / FirstVNF_CPU ) * ( PN * RRS ) ) * ( Max( Const,FirstVNF_CPU_Server ) * ( ARS + ACS ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU_Server / MDR ) / Min( FirstVNF_Mem ,ARS ) ) - Max( Max( CRS,MRS ),( MDR / ARS ) ) ) / ( ( ( AMS - MRS ) * ( FirstVNF_Mem_Server + BR ) ) + ( ( FirstVNF_CPU_Server - ARS ) / ( ARS / PN ) ) ) ) + ( ( ( ( PN + FirstVNF_Mem_Server ) / ( FirstVNF_Mem + CRS ) ) * Max( ( FirstVNF_CPU_Server / Const ),Max( MRS,FirstVNF_Mem_Server ) ) ) + ( Min( Min( FirstVNF_Mem ,MDR ) ,( BR + MRS ) ) * ( ( FirstVNF_CPU_Server * AMS ) * ( MDR * Const ) ) ) ) ) ) ,Max( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM,ACS ) ) + ( Max( Const,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ),Min( Min( ( ARS - MDR ) ,( ACS - BR ) ) ,Min( ( AMS - FirstVNF_CPU_Server ) ,( BR / BR ) ) ) ) - Min( Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( MDR + DDR ) ) ,( Max( RRS,DDR ) + ( CRS / PN ) ) ) ,( Min( Max( MDR,CRS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( DDR - Const ) * ( CRS * DDR ) ) ) ) ),( Max( Max( Min( Min( Const ,FirstVNF_Mem ) ,Min( DDR ,FirstVNF_RAM ) ),( ( FirstVNF_CPU - ACS ) + ( FirstVNF_Mem - AMS ) ) ),( ( ( FirstVNF_Mem_Server / MDR ) - ( FirstVNF_CPU_Server + PN ) ) + Min( Min( MRS ,MRS ) ,Max( FirstVNF_CPU_Server,MRS ) ) ) ) + ( Min( ( Max( PN,FirstVNF_CPU_Server ) + ( Const * Const ) ) ,( ( Const / FirstVNF_RAM_Server ) / ( CRS + DDR ) ) ) * ( ( ( BR * RRS ) * ( AMS + FirstVNF_Mem ) ) - ( ( ARS / FirstVNF_CPU ) + ( FirstVNF_CPU + AMS ) ) ) ) ) ) ) ,Max( ( Min( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - ( FirstVNF_Mem / PN ) ) + ( Min( FirstVNF_RAM ,ACS ) / Min( BR ,PN ) ) ) - Max( ( Max( MDR,Const ) + ( FirstVNF_Mem - PN ) ),( ( FirstVNF_CPU_Server - Const ) * ( DDR - CRS ) ) ) ) ,( ( ( ( BR / FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( DDR + MRS ) - Min( FirstVNF_RAM ,CRS ) ) ) + Max( ( ( Const + DDR ) * ( FirstVNF_Mem - MDR ) ),Max( Min( MDR ,FirstVNF_CPU_Server ),Min( ARS ,RRS ) ) ) ) ) + ( ( ( Min( ( Const + DDR ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Max( FirstVNF_RAM,MDR ) ) ) + Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( AMS * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM * MDR ) + ( DDR - FirstVNF_CPU ) ) ) ) - ( ( ( ( ARS / BR ) + ( FirstVNF_Mem + Const ) ) + Min( ( ARS - FirstVNF_Mem ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) * ( ( ( RRS - FirstVNF_Mem ) * ( RRS + ARS ) ) / ( Max( MDR,FirstVNF_Mem ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) ) ),( ( ( Max( ( Max( BR,AMS ) + ( BR / FirstVNF_RAM ) ),( ( FirstVNF_CPU - ARS ) / ( ACS * AMS ) ) ) - ( ( Min( AMS ,FirstVNF_Mem ) / ( DDR - AMS ) ) + ( ( Const * PN ) + ( FirstVNF_RAM * DDR ) ) ) ) + Max( ( ( Max( MRS,RRS ) + ( BR + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( RRS / MRS ) ) ),( ( ( RRS - RRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( AMS - FirstVNF_RAM ) - ( BR / FirstVNF_RAM ) ) ) ) ) - Min( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Max( BR,FirstVNF_CPU_Server ) ) - Max( Min( Const ,CRS ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) / Max( Min( ( CRS + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,Const ) ),Max( ( Const + PN ),( MDR / AMS ) ) ) ) ,( Max( ( Min( FirstVNF_RAM ,BR ) * ( ACS * MRS ) ),Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_RAM_Server - Const ) ) ) + ( ( ( AMS - AMS ) * ( MDR / ACS ) ) - Min( Max( BR,FirstVNF_CPU ) ,Min( FirstVNF_Mem ,DDR ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Max( Max( ( ( MUC + MUR ) - Max( MUM,MUM ) ),( Min( RMSe ,MUR ) - Max( RMSe,CS ) ) ),Max( ( ( DS * RRSe ) + ( RCSe + RCSe ) ),Max( ( MUM / RCSe ),( MLU * CS ) ) ) ) / Min( Min( Min( ( DS * MUR ) ,( RCSe * DS ) ) ,( Min( MLU ,DS ) * ( RMSe * MUC ) ) ) ,Min( ( ( MUR + RCSe ) * ( RRSe * RRSe ) ) ,( Min( RMSe ,MUC ) / ( MUC - MUR ) ) ) ) ) / ( Max( ( ( ( CS - MUM ) - ( MUR / MUR ) ) - Min( ( RRSe - RMSe ) ,( RMSe - CS ) ) ),Max( ( ( RRSe / DS ) + ( RCSe + MUM ) ),( ( MLU - MLU ) / Max( RRSe,RRSe ) ) ) ) / ( ( ( ( DS - RCSe ) * ( MUC / RMSe ) ) - ( Min( MUR ,CS ) - ( MUM + MUC ) ) ) * Max( ( ( MUR - RRSe ) + ( MUR / RCSe ) ),( ( RRSe * RMSe ) + ( MLU * MUC ) ) ) ) ) ) * ( ( Min( Min( ( Min( RCSe ,RRSe ) / ( MUM * MUR ) ) ,( ( CS + MUM ) * ( MUR + MLU ) ) ) ,Min( Min( ( DS * CS ) ,( MUC * CS ) ) ,( ( RMSe - RRSe ) - Max( DS,RRSe ) ) ) ) - ( Min( Min( ( MUR - CS ) ,( CS + DS ) ) ,( Min( RRSe ,MLU ) - ( RCSe / RCSe ) ) ) / ( Min( ( MUC / DS ) ,Min( RCSe ,MUR ) ) * ( ( CS - RCSe ) * ( MUR + RCSe ) ) ) ) ) + Min( ( ( ( ( RCSe - MLU ) + Max( MUR,MLU ) ) - ( Max( MUR,RCSe ) + ( MLU + MUM ) ) ) + Max( Max( ( MUR / MUR ),( RRSe - MUC ) ),( ( RCSe + MUM ) / Min( RMSe ,MLU ) ) ) ) ,Max( ( ( ( MUR / RCSe ) - Max( CS,MUC ) ) + Max( Max( MUR,CS ),Min( MUC ,MLU ) ) ),( Min( ( RMSe * DS ) ,Min( MLU ,MUC ) ) + ( ( MUM * MUC ) / Min( CS ,RCSe ) ) ) ) ) ) ),Max( Min( Min( ( ( Min( ( RCSe + MUC ) ,( RCSe * RCSe ) ) + ( ( MUC - DS ) / ( MUM * MLU ) ) ) * Min( Min( ( MUM + RRSe ) ,Min( MUM ,RMSe ) ) ,( Min( RRSe ,MUR ) / ( DS * MUR ) ) ) ) ,( ( ( ( MUR * RCSe ) + ( DS + MUC ) ) + ( ( RMSe * MLU ) + ( RMSe + MUC ) ) ) - ( ( Max( MLU,RMSe ) - ( MLU - MUR ) ) * ( ( RMSe / MUR ) / ( RMSe * RMSe ) ) ) ) ) ,( ( ( ( ( CS + DS ) + ( MUC / RRSe ) ) - ( Max( RRSe,RCSe ) - Min( MUR ,MUR ) ) ) - ( ( ( MUC + MUC ) * Max( MLU,RCSe ) ) - ( Max( MUR,CS ) * ( CS / RCSe ) ) ) ) - ( ( ( ( MUR + RMSe ) + ( RCSe / RMSe ) ) / Min( ( RMSe / MLU ) ,( MUR / MUR ) ) ) - ( ( ( MLU * RCSe ) * ( DS + MUC ) ) / ( Min( RRSe ,RMSe ) - ( CS - MUC ) ) ) ) ) ),( Max( ( Min( ( ( RRSe - MUM ) / ( MUR * RCSe ) ) ,( Max( MUM,MUC ) * Max( RMSe,RRSe ) ) ) * ( ( ( RMSe / MUR ) / ( RRSe + MUC ) ) + ( Max( MUM,MUC ) / ( MUR - RMSe ) ) ) ),( ( ( Min( MUR ,MUC ) / ( MUM * DS ) ) / Min( ( DS + RCSe ) ,Min( CS ,MUR ) ) ) - ( ( ( RMSe / RMSe ) * ( CS - MUM ) ) - ( ( RMSe / DS ) * Min( DS ,CS ) ) ) ) ) * ( ( Min( Max( Min( RRSe ,CS ),( MUM * CS ) ) ,Min( ( MUR - RRSe ) ,Max( MUC,RMSe ) ) ) / ( ( ( DS + RMSe ) * ( MUC + CS ) ) * ( ( CS * RCSe ) + ( DS * CS ) ) ) ) - ( Min( ( ( RRSe * CS ) / Min( MLU ,RCSe ) ) ,( ( RCSe / RCSe ) / ( MLU + RCSe ) ) ) - ( Min( ( RMSe / MUC ) ,Max( RCSe,MLU ) ) / ( ( RMSe / RRSe ) - Max( MLU,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( DS * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5132056939559675}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4332198481819945}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.46963562753036436, "obj2": 0.34240020453865927}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.2945394038870251}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( DDR + ( Max( MRS,ACS ) / ( PN + DDR ) ) ) ) ,( ( FirstVNF_Mem + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC * CS ) ) * ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + DS ) ) )", "obj1": 0.44534412955465585, "obj2": 0.35932447316643606}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.1662787110891394}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.517881302000741}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.252419319310906}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4332198481819945}, {"determining": "( Min( ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( DS * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5132056939559675}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5891676135602683}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( AMS / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5822719793396284}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe - RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.4230769230769231, "obj2": 0.3837792786720102}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.566525777610327}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.21382590824607214}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.07647037992162155}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.819838056680162, "obj2": 0.08352350249059706}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.3765182186234818, "obj2": 0.4141551165309367}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( ( DS + ( Min( MUM ,MUR ) / RRSe ) ) + ( Max( MUC,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) - MUC ) )", "obj1": 0.8704453441295547, "obj2": 0.06712785745046093}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.3866396761133603, "obj2": 0.40717828696230085}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS - FirstVNF_CPU ) / ( MDR / MRS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) * Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - ( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) * RRSe ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.1000450528533188}, {"determining": "( Min( ( ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6143309610694003}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.2769949411597303}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7753036437246964, "obj2": 0.0864616628358404}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.26589766893103445}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - MUC ) ) ,( MLU * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.42825818076659705}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( Min( ( Min( DS ,( Min( MUC ,CS ) / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ,RRSe ) ,( MUC + MUR ) ) * ( ( RRSe - RCSe ) - ( DS + RRSe ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6972994661884651}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6406366029497614}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_CPU ) ) * Min( Min( FirstVNF_RAM_Server ,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MLU ) * DS )", "obj1": 0.06072874493927125, "obj2": 0.7396532647060159}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),Min( MUC ,RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.27787509818494094}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6537644022148468}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / Const ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6846253605106487}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RCSe ) * ( ( DS / ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3958944080421346}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ACS ) ) )", "choosing": "( ( MUM + ( Min( MUM ,MUR ) / RRSe ) ) + Min( Max( MUC,MUC ) ,MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.07782384806782508}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.011291799344074175}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.5757192754077018}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / MDR ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - MUC ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.056344286873432736}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,PN ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / RRSe ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7043116518588322}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( CRS / ARS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + Min( CS ,RRSe ) ) ) - MUR ) * DS )", "obj1": 0.0708502024291498, "obj2": 0.7337241538038236}, {"determining": "( ( FirstVNF_RAM_Server + ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS * MUM ),( MUC / CS ) ) * ( ( DS + ( Max( Min( MUR ,RCSe ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.9210526315789473, "obj2": 0.03374195741908924}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.12949874793611765}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( ( PN + DDR ) + DDR ) ) ) ) ,( ( FirstVNF_Mem - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) * ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RCSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / RMSe ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS / ( Max( ( ( DS * ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.11442069612448595}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9048582995951417, "obj2": 0.04390471155494433}, {"determining": "( DDR + ( ( ( Max( MDR,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( Min( DS ,Min( Max( Min( MUR ,( DS + MUM ) ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * CS ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.713960144982214}], "17": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / RRS ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( MUR ,RCSe ),( CS - DS ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.1662787110891394}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.12949874793611765}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.4676113360323887, "obj2": 0.30546841214346265}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( DDR + ( Max( MRS,ACS ) / ( PN + DDR ) ) ) ) ,( ( FirstVNF_Mem + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC * CS ) ) * ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + DS ) ) )", "obj1": 0.44534412955465585, "obj2": 0.35932447316643606}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.23279352226720648, "obj2": 0.551046032982392}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Max( ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) / FirstVNF_CPU_Server ),( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( CS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.477532756653438}, {"determining": "( Min( ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49786159397840524}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8502024291497976, "obj2": 0.05735767864581475}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2586540893919551}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS - BR ) ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5803126848592728}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5502166218619287}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.252419319310906}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / Max( MDR,BR ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.44738307065689625}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7753036437246964, "obj2": 0.0864616628358404}, {"determining": "( Min( ( ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + ( ( RMSe * RRSe ) - RCSe ) ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6143309610694003}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS * Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_RAM ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( ( DS * MUM ) * ( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( DS * CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5607287449392713, "obj2": 0.25401159194831335}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ACS ) ) )", "choosing": "( ( MUM + ( Min( MUM ,MUR ) / RRSe ) ) + Min( Max( MUC,MUC ) ,MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.07782384806782508}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) * ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Min( ( DS * MUM ) ,( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6317131323114511}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.819838056680162, "obj2": 0.08352350249059706}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.3765182186234818, "obj2": 0.4141551165309367}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - MUC ) ) ,( MLU * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.42825818076659705}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / Max( PN,DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( DS,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.36812932066665444}, {"determining": "( Min( ( Max( MRS,FirstVNF_Mem ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( ( PN + DDR ) + DDR ) ) ) ) ,( ( FirstVNF_Mem - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) * ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RCSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / RMSe ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS / ( Max( ( ( DS * ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.11442069612448595}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.3866396761133603, "obj2": 0.40717828696230085}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.21382590824607214}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_CPU ) ) * Min( Min( FirstVNF_RAM_Server ,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MLU ) * DS )", "obj1": 0.06072874493927125, "obj2": 0.7396532647060159}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.9777327935222672, "obj2": 0.007388691329284649}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( DDR + ( Max( MRS,ACS ) / ( PN + PN ) ) ) / BR ) ) ) )", "choosing": "( Min( ( Min( Min( MUM ,RMSe ) ,( MUC * MUM ) ) * ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + MUM ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.017676052613310178}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.2769949411597303}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6406366029497614}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / MDR ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - MUC ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.05634225553657008}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.517881302000741}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( MUC / CS ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6619423463741242}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.39606837818260876}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5891676135602683}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS - FirstVNF_CPU ) / ( MDR / MRS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) * Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - ( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) * RRSe ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.1000450528533188}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,PN ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / RRSe ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7043116518588322}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,MUR ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3938339314141598}, {"determining": "( ( FirstVNF_RAM_Server + ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS * MUM ),( MUC / CS ) ) * ( ( DS + ( Max( Min( MUR ,RCSe ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.9210526315789473, "obj2": 0.03374195741908924}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03233015902846936}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe - RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.4230769230769231, "obj2": 0.3837792786720102}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),Min( MUC ,RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.27787509818494094}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.2945394038870251}], "18": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - RRSe ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.3556312119809089}, {"determining": "( Min( ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49786159397840524}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.12949874793611765}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3129488100482503}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - ( RCSe + ( MUC * CS ) ) ) ,MUR ) * DS )", "obj1": 0.31983805668016196, "obj2": 0.4603310498268694}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.21382590824607214}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( Min( MUM ,RMSe ) ,( MUC * MUM ) ) * ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + MUM ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe * DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.10923182041738216}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2586540893919551}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.1662787110891394}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6017283308056255}, {"determining": "( ( FirstVNF_RAM_Server + ( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( MRS / Min( ARS ,( BR / ( ( Max( RRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) - Min( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) * Min( Const ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS * MUM ),( MUC / CS ) ) * ( ( DS + ( Max( Min( MUR ,RCSe ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.9210526315789473, "obj2": 0.03374195741908924}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.517881302000741}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8502024291497976, "obj2": 0.05735767864581475}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - ( ACS + ( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( Min( MUM ,RMSe ) ,( MUR * MUM ) ) * ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + DS ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.701172665588245}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS * Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_RAM ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( ( DS * MUM ) * ( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( DS * CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5607287449392713, "obj2": 0.25401159194831335}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) - ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - ( MUC / CS ) ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6285846671863253}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ACS ) ) )", "choosing": "( ( MUM + ( Min( MUM ,MUR ) / RRSe ) ) + Min( Max( MUC,MUC ) ,MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.07782384806782508}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.2945394038870251}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.252419319310906}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( ( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) * Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( Min( ( Min( MUM ,MUR ) + ( RCSe - RMSe ) ) ,Max( ( DS * MUM ),( RMSe / CS ) ) ) - ( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) * RRSe ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04893319629587964}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.819838056680162, "obj2": 0.08352350249059706}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7753036437246964, "obj2": 0.0864616628358404}, {"determining": "( ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + ( MUC / CS ) ) - Min( Max( Min( MUR ,MLU ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5459940639250483}, {"determining": "( Min( ( ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( Const,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6485278259025166}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,MUR ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3938339314141598}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5230049663606243}, {"determining": "( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,PN ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) - Max( ACS,( ARS / BR ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / RRSe ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7228209883973856}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.1662787110891394}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / Max( MDR,BR ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUR + RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.44738307065689625}, {"determining": "( DDR + ( Min( ( Max( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ),MRS ) / ( RRS + CRS ) ) ,( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) * Min( Const ,BR ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( MUC / CS ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6619423463741242}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.3866396761133603, "obj2": 0.40717828696230085}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.34210526315789475, "obj2": 0.4377058531766149}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - MUC ) ) ,( MLU * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.42825818076659705}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.4676113360323887, "obj2": 0.30546841214346265}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.36639676113360325, "obj2": 0.4222484866252872}, {"determining": "( ( Const / BR ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( DS + DS ) ) ) ) - ( DS + DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.716429624501707}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.2745511691591475}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6406366029497614}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Min( FirstVNF_RAM_Server ,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.06072874493927125, "obj2": 0.7396532647060159}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS - BR ) ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5803126848592728}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( CS + MUM ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.4008097165991903, "obj2": 0.39787383514462793}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_CPU ) ) * Min( Min( FirstVNF_RAM_Server ,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MLU ) * DS )", "obj1": 0.06072874493927125, "obj2": 0.7396532647060159}], "19": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - RRSe ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3129488100482503}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.23930975523599243}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7753036437246964, "obj2": 0.0864616628358404}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.3556312119809089}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.5789473684210527, "obj2": 0.2243069816244913}, {"determining": "( ( Const / BR ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) + ( DS + DS ) ) ) ) - ( DS + DS ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6991550145206789}, {"determining": "( Min( ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.1662787110891394}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11859459020462387}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.3556312119809089}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) - Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5020242914979757, "obj2": 0.2888995084731307}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,MUR ) ) ,Min( ( DS * MUM ) ,( MUC / CS ) ) ) - Min( ( ( RRSe * MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( RRSe / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3838666990247092}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.12949874793611765}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.517881302000741}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ACS ) ) )", "choosing": "( ( MUM + ( Min( MUM ,MUR ) / RRSe ) ) + Min( Max( MUC,MUC ) ,MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.07782384806782508}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / MRS ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RMSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.31983805668016196, "obj2": 0.4603310498268694}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.05965378638895441}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.819838056680162, "obj2": 0.08352350249059706}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS + ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( MUC * MUM ),( MUC / CS ) ) - MUR ) ) / CS ) ) - ( DS + RRSe ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.018119594139088452}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.21382590824607214}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS - BR ) ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUC ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.9574898785425101, "obj2": 0.02573890605831635}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,CRS ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( RCSe - ( RCSe + ( MUC * CS ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10230667739050742}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MUC + ( RCSe * DS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - MUC ) ) ,( MLU * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.033331171477950124}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,MUR ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6558704453441295, "obj2": 0.16087357557061427}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2586540893919551}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.1720647773279352, "obj2": 0.6205896383224485}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.1662787110891394}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.8765182186234818, "obj2": 0.05437898504900093}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - ( RCSe + ( MUC * CS ) ) ) ,MUR ) * DS )", "obj1": 0.31983805668016196, "obj2": 0.4603310498268694}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.3319838056680162, "obj2": 0.4540775582839574}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / AMS ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,MUR ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( MUC - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4133182793384855}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( ( MRS / FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( MUR + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.2945394038870251}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS - BR ) ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5803126848592728}, {"determining": "( ( ARS - PN ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1083327700347327}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5889021373822455}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.12949874793611765}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.2745511691591475}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( Const * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5803126848592728}, {"determining": "( ( PN + ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUM ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.005608857039677324}, {"determining": "( Min( ( Max( MRS,( FirstVNF_Mem / BR ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.551046032982392}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) ) ) - MUR ) * DS )", "obj1": 0.05465587044534413, "obj2": 0.7517062745258797}], "20": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / MRS ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6616942978231963}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( RCSe / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.17336788498317776}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.05965378638895441}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2586540893919551}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7753036437246964, "obj2": 0.0864616628358404}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( ( AMS + ( MRS / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( RRSe / MUR ),RRSe ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05160610245778526}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.3556312119809089}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.1720647773279352, "obj2": 0.6205896383224485}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5889021373822455}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,MUR ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( RRSe / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.3908832264418665}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / MDR ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - ( RCSe + MUR ) ) - MUR ) * DS )", "obj1": 0.9271255060728745, "obj2": 0.03783721842691256}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5225934393562546}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.1720647773279352, "obj2": 0.6205896383224485}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3129488100482503}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.517881302000741}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( ( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.24104651434296956}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,MUR ) ) ,Min( ( DS * MUM ) ,( MUC / CS ) ) ) - Min( ( ( RRSe * MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( RRSe / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3838666990247092}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.3556312119809089}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - ( DS + ( MUC / CS ) ) ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.43151151366640633}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ACS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.22351090243383304}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3765182186234818, "obj2": 0.41346454821707634}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) ) ) - MUR ) * DS )", "obj1": 0.05465587044534413, "obj2": 0.7517062745258797}, {"determining": "( ( PN + AMS ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const / FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MLU ),Min( MUR ,MUR ) ) ) - Min( ( RCSe * ( MLU - ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) / MUC ) ) ) ) ,( Max( MUM,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6738064805627388}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / AMS ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( ( MUM * MUR ) + Max( RCSe,MUR ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( ( ( RRSe / MUR ) * MUC ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS / ( MUC / CS ) ) + ( ( DS + DS ) + ( ( MUC - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4133182793384855}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.21382590824607214}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.1322529479026622}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.819838056680162, "obj2": 0.08352350249059706}, {"determining": "( Min( ( AMS + ( MRS - FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.31983805668016196, "obj2": 0.4603310498268694}, {"determining": "( ( Const / BR ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) + ( DS + DS ) ) ) ) - ( DS + DS ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6991550145206789}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3129488100482503}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( DS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.2390021216662301}, {"determining": "( ( PN + ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) - ( MRS / Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ARS / BR ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.005541757358242182}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.46356275303643724, "obj2": 0.30424697426052594}, {"determining": "( Min( ( Max( MRS,( FirstVNF_Mem / BR ) ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5485258176698963}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / MRS ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RMSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.31983805668016196, "obj2": 0.4603310498268694}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS / ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12596761095031597}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11859459020462387}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUC ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6800001103579844}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( Const - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) + ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4341279187045496}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + MUM ) ) - MUR ) * DS )", "obj1": 0.3340080971659919, "obj2": 0.4512421320717372}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) ) ) - MUR ) * DS )", "obj1": 0.8724696356275303, "obj2": 0.05517732416436822}], "21": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + MRS ) ) ) * ( FirstVNF_Mem - BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( CS ,DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / MRS ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS + ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( DS + DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6421356911147778}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.46356275303643724, "obj2": 0.30424697426052594}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + RCSe ) ) - ( DS + DS ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2641943071535586}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( Const - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) + ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) / MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11859459020462387}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5889021373822455}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( RRS + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( AMS / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.4008097165991903, "obj2": 0.37609712831460423}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.05965378638895441}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6734806257557892}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( ( ( ( DS + Max( ( ( RRSe - RCSe ) - ( MUM * DS ) ),( DS + DS ) ) ) - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3157894736842105, "obj2": 0.4747934464263317}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( ( MRS / FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.4392712550607287, "obj2": 0.34427156647524526}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - MUR )", "obj1": 0.9352226720647774, "obj2": 0.022941197505652718}, {"determining": "( ( Const / BR ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) + ( DS + DS ) ) ) ) - ( DS + DS ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6991550145206789}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.4057242603452883}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.16582293665389697}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9534412955465587, "obj2": 0.017362428348947932}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) + ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( Max( DS,Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6008188183802796}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) ) ) - MUR ) * DS )", "obj1": 0.05465587044534413, "obj2": 0.7517062745258797}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) - DS ) )", "obj1": 0.8238866396761133, "obj2": 0.08192196382944625}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.31884444883910973}, {"determining": "( Min( ( AMS - ( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( PN - FirstVNF_RAM_Server ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / RRS ) ) )", "choosing": "( ( RMSe * RRSe ) * ( ( DS + ( Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) / CS ) ) - ( DS + RRSe ) ) )", "obj1": 0.6720647773279352, "obj2": 0.15439795056399064}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUC ) * MUC ) ) ),( RCSe * ( DS - Max( ( RRSe / MUR ),RRSe ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.25513738251339174}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( MDR / FirstVNF_CPU_Server ) ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( DS * Min( Max( Min( RCSe ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) ) ) - MUR ) * DS )", "obj1": 0.9089068825910931, "obj2": 0.035693076049734665}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( RCSe * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.42524275711552584}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * ( RCSe + ( MUC * CS ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5273138880200748}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.1720647773279352, "obj2": 0.6205896383224485}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08630511881478316}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( CRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,CS ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( ( MUC + RCSe ) ,MUR ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5158873854917847}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ACS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.22351090243383304}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS / ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12596761095031597}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.17336788498317776}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2411732610478963}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.680161943319838, "obj2": 0.15263577780220933}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.3556312119809089}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3765182186234818, "obj2": 0.41346454821707634}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + MUM ) ) - MUR ) * DS )", "obj1": 0.3340080971659919, "obj2": 0.4512421320717372}, {"determining": "( Min( ( Max( MRS,( FirstVNF_Mem / BR ) ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5485258176698963}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.819838056680162, "obj2": 0.08352350249059706}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.21382590824607214}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( RCSe / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.17336788498317776}, {"determining": "( ( Const / BR ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) - ( MUC + DS ) ) ) ) - ( DS + DS ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6991550145206789}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4339297301559477}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUC ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6800001103579844}], "22": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / ( RRS + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + MRS ) ) ) * ( FirstVNF_Mem - BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( CS ,DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3765182186234818, "obj2": 0.41346454821707634}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.0594366056877671}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS / ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12596761095031597}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( DS - MUC ) ),( Max( ( DS * MUM ),( DS + DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5704103342933957}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3769332879151076}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17804199131810194}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08611847387462623}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.46356275303643724, "obj2": 0.30424697426052594}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.049674419375891}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( ( ( ( DS + Max( ( ( RRSe - RCSe ) - ( MUM * DS ) ),( DS + DS ) ) ) - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3157894736842105, "obj2": 0.4747934464263317}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.1720647773279352, "obj2": 0.6205896383224485}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - MUR )", "obj1": 0.9352226720647774, "obj2": 0.022941197505652718}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5, "obj2": 0.2810838699009314}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.3319838056680162, "obj2": 0.4463973915110428}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( Const - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) + ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( Max( MRS,( FirstVNF_Mem / BR ) ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( ( MDR / FirstVNF_CPU_Server ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * Max( ( ( DS + ( MUC / MUM ) ) + ( Min( RMSe ,DS ) - MUC ) ),( MUM - MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.005598210510048388}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) - DS ) )", "obj1": 0.8238866396761133, "obj2": 0.08192196382944625}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5889021373822455}, {"determining": "( Min( ( Max( MRS,( FirstVNF_Mem / BR ) ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5485258176698963}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN * ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + MUM ) ) - MUR ) * DS )", "obj1": 0.15789473684210525, "obj2": 0.6304505534565927}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.34013678557834154}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) * ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) / Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.23598711442878093}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS + ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUC ) * MUC ) ) ),( RCSe * ( DS - Max( ( RRSe / MUR ),RRSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6521901704066263}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_Mem / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( ( RCSe - ( RCSe + MUM ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.0432626932355291}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) + ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( Max( ( DS * MUM ),( MUC / CS ) ) - CS ) * MUC ) ) ) ,Max( Max( DS,Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6008188183802796}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( BR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.06275303643724696, "obj2": 0.7382810603598342}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RRSe / MUR ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.3574520473128517}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ),RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM - DS ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.48591526557487563}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9534412955465587, "obj2": 0.017362428348947932}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.31884444883910973}, {"determining": "( ( Const / BR ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + ( ( ( RRSe - RCSe ) - ( MUM * DS ) ) + ( DS + DS ) ) ) ) - ( DS + DS ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6991550145206789}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( RRS + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( AMS / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.4008097165991903, "obj2": 0.37609712831460423}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( Min( RCSe ,DS ) - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.031970808927291476}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.680161943319838, "obj2": 0.15263577780220933}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.8157894736842105, "obj2": 0.08486550691921343}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.671519832181296}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( CRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,CS ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( ( MUC + RCSe ) ,MUR ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5158873854917847}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6746313485006324}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( DS + DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25212907264958684}, {"determining": "( ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( ( DS * MUM ) / RRSe ) ) ) - MUR ) * DS )", "obj1": 0.08097165991902834, "obj2": 0.7164247248249488}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( ACS - FirstVNF_RAM ) ) * ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) ) ) - MUR ) * DS )", "obj1": 0.05465587044534413, "obj2": 0.7517062745258797}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( MDR / FirstVNF_CPU_Server ) ) ) ) + ( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( DS * Min( Max( Min( RCSe ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) ) ) - MUR ) * DS )", "obj1": 0.9089068825910931, "obj2": 0.035693076049734665}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.28849595930383226}], "23": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( ( MRS + Const ) / ( RRS + CRS ) ) ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - ( MDR / ( RRS + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17804199131810194}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.2520434317433869}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3765182186234818, "obj2": 0.41346454821707634}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) * ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) / Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.23598711442878093}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS / ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12596761095031597}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08611847387462623}, {"determining": "( Min( ( AMS + ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2304722663690188}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( ( MDR / MRS ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( MUR ,RCSe ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.10904360297316491}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.42266439847899406}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( CS - DS ) ) ) ) - MUR ) * DS )", "obj1": 0.24696356275303644, "obj2": 0.5387399934522784}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.2735729929166815}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( ( ( ( DS + Max( ( ( RRSe - RCSe ) - ( MUM * DS ) ),( DS + DS ) ) ) - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3157894736842105, "obj2": 0.4747934464263317}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6790583709271834}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10234348359793985}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( PN - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS + ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUC ) * ( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) ),( RCSe * ( DS - Max( ( RRSe / MUR ),RRSe ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6449217821893014}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( Const - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) + ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + MRS ) ) ) * ( FirstVNF_Mem - BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.2651821862348178, "obj2": 0.5190991009909605}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - DS ) * DS )", "obj1": 0.3441295546558704, "obj2": 0.43720778051181847}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,MDR ) + ( MDR / MRS ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.7075199933587311}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44969585723551003}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9534412955465587, "obj2": 0.017362428348947932}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.680161943319838, "obj2": 0.15263577780220933}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3769332879151076}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * ( ( MRS + Const ) / ( RRS + CRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( MUC * CS ) )", "obj1": 0.6032388663967612, "obj2": 0.20681842280130122}, {"determining": "( Min( ( Max( MRS,( FirstVNF_Mem / BR ) ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5485258176698963}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.15587044534412955, "obj2": 0.6266902981308147}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5, "obj2": 0.2810838699009314}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) - ( RCSe + Min( ( DS * MUM ) ,CS ) ) ) - MUR ),Min( MUC ,RRSe ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.8157894736842105, "obj2": 0.08486550691921343}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.6882591093117408, "obj2": 0.15016080195830278}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051003762032895285}, {"determining": "( Min( ( AMS - ( MDR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,( RMSe + ( MUC * CS ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.5867000175858097}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.46356275303643724, "obj2": 0.30424697426052594}, {"determining": "( Min( ( AMS - ( ( ( ARS - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,CRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / Max( MRS,FirstVNF_CPU ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM / MUR ) * MUC ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) )", "obj1": 0.9757085020242915, "obj2": 0.014056515190309978}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( RRS + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( AMS / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.4008097165991903, "obj2": 0.37609712831460423}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.1700404858299595, "obj2": 0.6115933570436546}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ) - MUR ) * DS )", "obj1": 0.2732793522267207, "obj2": 0.5069227518342607}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.680161943319838, "obj2": 0.15263577780220933}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_Mem / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( ( RCSe - ( RCSe + MUM ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.0432626932355291}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( DDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUC ) * MUC ) ) ),( RCSe * ( DS - Max( ( RRSe / MUR ),RRSe ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7150611480325706}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6606318927816096}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.34013678557834154}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.4493927125506073, "obj2": 0.31834286385142235}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( FirstVNF_Mem_Server / MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( ( DS * MUM ) / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6705181748376237}], "24": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( ( MRS + Const ) / ( RRS + CRS ) ) ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( ( RCSe - CS ) * MUC ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07296032565885859}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_Mem / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( ( RCSe - ( RCSe + MUM ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.0432626932355291}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( ( ( ( DS + Max( ( ( RRSe - RCSe ) - ( MUM * DS ) ),( DS + DS ) ) ) - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3157894736842105, "obj2": 0.4747934464263317}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44969585723551003}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - DS ) * DS )", "obj1": 0.3724696356275304, "obj2": 0.40783335701185003}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_Mem + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( CS ,DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06747288494099071}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5526315789473685, "obj2": 0.24122173034747452}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08611847387462623}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17804199131810194}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MUC / MUM ) ) * ( ( ( RRSe - Min( ( MUC + RCSe ) ,MUR ) ) - ( DS + DS ) ) - ( DS + DS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3769332879151076}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.35789007825141417}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + ACS ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - ( RMSe + ( MUC * RRSe ) ) ) - MUR ) * DS )", "obj1": 0.2165991902834008, "obj2": 0.5714676134792895}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5668016194331984, "obj2": 0.2296091168541093}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MLU ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.20469621225802787}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6790583709271834}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + MRS ) ) ) * ( FirstVNF_Mem - BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.2651821862348178, "obj2": 0.5190991009909605}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / PN ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( MUR + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03525281811736231}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.15587044534412955, "obj2": 0.6266902981308147}, {"determining": "( Min( ( AMS - ( MDR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( Min( MRS ,Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( ( ( RRSe - Min( MUM ,DS ) ) - ( DS + RRSe ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6392531628068031}, {"determining": "( Min( ( AMS - ( MDR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,( RMSe + ( MUC * CS ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.5867000175858097}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( PN / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( RCSe - ( RCSe + ( MUC * CS ) ) ) * DS )", "obj1": 0.29554655870445345, "obj2": 0.49230727203937735}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051003762032895285}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) * Max( RCSe,RMSe ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.28986540132504873}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - ( RCSe - ( RCSe + ( MUC * CS ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.025926304019105124}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( ( MDR / MRS ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( MUR ,RCSe ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.10904360297316491}, {"determining": "( MDR / ( AMS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),Max( Max( ( DS * MUM ),( MUR / CS ) ),MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.7037001907971489}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1605239374361108}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( ( ( ( MUM / MUR ) * MUC ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( Min( MUR ,RCSe ) * ( MUC + RCSe ) ) - DS ) ) * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.6558704453441295, "obj2": 0.169389452841442}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.6902834008097166, "obj2": 0.14583835763162642}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS + Max( ( ( RRSe - RCSe ) - ( MUM * DS ) ),( DS + DS ) ) ) - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.47368421052631576, "obj2": 0.29948969217306304}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.4493927125506073, "obj2": 0.31834286385142235}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ACS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / RRSe ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.33939737125294195}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( FirstVNF_Mem_Server / MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( ( DS * MUM ) / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6705181748376237}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( CS - DS ) ) ) ) - MUR ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5379459242435989}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.343135903098465}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.21688797821693892}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( Const / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RMSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6547804914327457}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,MDR ) + ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + ( DS + ( MUC / CS ) ) ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14633840986219787}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( RRS + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( AMS / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.4008097165991903, "obj2": 0.37609712831460423}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( DDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUC ) * MUC ) ) ),( RCSe * ( DS - Max( ( RRSe / MUR ),RRSe ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7150611480325706}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.46356275303643724, "obj2": 0.30424697426052594}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / ARS ) ) ) ) ) * ( Const / BR ) ) ) / ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10227211264233736}], "25": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / MDR ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( CS - DS ) ) ) ) - MUR ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5379459242435989}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( ( RCSe - CS ) * MUC ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07296032565885859}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5991902834008097, "obj2": 0.20403124575316683}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.15789473684210525, "obj2": 0.625836931911465}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25202267752804325}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + ACS ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - ( RMSe + ( MUC * RRSe ) ) ) - MUR ) * DS )", "obj1": 0.2165991902834008, "obj2": 0.5714676134792895}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( ( ( ( DS + Max( ( ( RRSe - RCSe ) - ( MUM * DS ) ),( DS + DS ) ) ) - ( RCSe + ( MUC * ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.3157894736842105, "obj2": 0.4747934464263317}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( Max( MLU,RMSe ) - ( ( RMSe * RRSe ) - RCSe ) ) - DS ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17804199131810194}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051003762032895285}, {"determining": "( Min( ( AMS - ( MDR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( FirstVNF_CPU + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( Max( Min( MUM ,MUR ),Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,( RMSe + ( MUC * CS ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.5867000175858097}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( ( DS * MUM ) / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27509142276372056}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - DS ) * DS )", "obj1": 0.3724696356275304, "obj2": 0.40783335701185003}, {"determining": "( Min( ( AMS + ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( RMSe + RCSe ) ) - ( MLU + DS ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3492443568512013}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + MRS ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67563663439244}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_Mem + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( CS ,DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06747288494099071}, {"determining": "( Min( ( AMS - ( MDR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( Min( MRS ,Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( ( ( RRSe - Min( MUM ,DS ) ) - ( DS + RRSe ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6392531628068031}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( CRS / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - ( RCSe + ( MUC * ( MUC * CS ) ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.3765182186234818, "obj2": 0.40299764599419613}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( PN / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.4832916052577539}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_RAM ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.38025241889426314}, {"determining": "( Min( ( AMS - ( MDR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,( RMSe + ( MUC * CS ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.5867000175858097}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) * DS )", "obj1": 0.9858299595141701, "obj2": 0.007185433978003146}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe + ( RRSe * CS ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - ( RCSe - ( RCSe + ( MUC * CS ) ) ) )", "obj1": 0.9534412955465587, "obj2": 0.017499099905419556}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28329309077108444}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.508684390132051}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.2893336869235056}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( RRS + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( AMS / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.4008097165991903, "obj2": 0.37609712831460423}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( MUC * ( MUM + DS ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.03950113582389248}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( CRS / Const ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( RMSe * RRSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.6923076923076923, "obj2": 0.14387466198235282}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.4493927125506073, "obj2": 0.31834286385142235}, {"determining": "( ( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUC ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01571822784298794}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.2145748987854251, "obj2": 0.5723110674253822}, {"determining": "( MDR / ( AMS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),Max( Max( ( DS * MUM ),( MUR / CS ) ),MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.7037001907971489}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ACS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / RRSe ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.33939737125294195}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5526315789473685, "obj2": 0.24122173034747452}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( Const / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RMSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6547804914327457}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / PN ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "Max( ( Min( ( Min( MUM ,MUR ) + Max( RRSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( MUC + RCSe ) ) ,( ( RRSe / MUR ) * MUC ) ) ),( MUM * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( MUR + ( ( RCSe - CS ) * MUC ) ) ),RRSe ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03525281811736231}, {"determining": "( Min( ( AMS - ( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08611847387462623}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5147490794417512}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_Mem / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( ( RCSe - ( RCSe + MUM ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.0432626932355291}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235828121383782}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44969585723551003}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Min( Max( MRS,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( ( MDR / MRS ) / ( PN + FirstVNF_RAM_Server ) ) ) / ACS ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),( RCSe * ( DS / Max( ( Min( DS ,( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10104868435662973}], "26": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / MDR ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( CRS / Const ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( RMSe * RRSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.6923076923076923, "obj2": 0.14387466198235282}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.17304943866457462}, {"determining": "( Min( ( MDR / FirstVNF_RAM ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( MUR,( MUC / CS ) ) ) - Min( Max( Min( MUR ,( RMSe + ( MUC * CS ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.5862019755987788}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RRSe * CS ) ) ) ,Max( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ),( MUC / CS ) ) ) - ( RCSe - ( RCSe + ( MUC * CS ) ) ) )", "obj1": 0.9210526315789473, "obj2": 0.029881283573469617}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5526315789473685, "obj2": 0.24122173034747452}, {"determining": "( Min( ( AMS - ( FirstVNF_CPU_Server / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + CS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6148258468695273}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44969585723551003}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) + ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) ,Min( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( ( DS * MUM ) / MUR ) * ( RCSe - MUC ) ) ) ) ,( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5564670629976018}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RCSe + ( MUC / RRSe ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.2750561913306367}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + MRS ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67563663439244}, {"determining": "( Min( ( AMS - ( MDR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + CRS ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( DDR - FirstVNF_RAM ) + ( Min( MRS ,Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( ( ( RRSe - Min( MUM ,DS ) ) - ( DS + RRSe ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,MUR ) - MUC ) ),CS ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6392531628068031}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),Max( ( DS * MUM ),( MUC / CS ) ) ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10662449500490297}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_RAM ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.38025241889426314}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.2985736830833722}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25202267752804325}, {"determining": "( Min( ( AMS + ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( RMSe + RCSe ) ) - ( MLU + DS ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3492443568512013}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( RRS + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) + Min( ( AMS - ( AMS / FirstVNF_CPU_Server ) ) ,Min( ARS ,( BR / ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) + ( ACS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.4008097165991903, "obj2": 0.37609712831460423}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.15789473684210525, "obj2": 0.625836931911465}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_Mem + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( CS ,DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06747288494099071}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28329309077108444}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe - ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5931174089068826, "obj2": 0.21860213076598323}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051003762032895285}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.4493927125506073, "obj2": 0.31834286385142235}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.19149377069252577}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6816623743608484}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,Min( MUC ,CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.0786967204516528}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ACS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / RRSe ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.33939737125294195}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( Const / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RMSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6547804914327457}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.47175327732066985}, {"determining": "( MDR / ( AMS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) + MUC ) ),Max( Max( ( DS * MUM ),( MUR / CS ) ),MUR ) ) + RCSe ) ) ,( ( MUM / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.7037001907971489}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( DDR - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * ( MUM - DS ) ) ) ) - Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.2550607287449393, "obj2": 0.534526818859715}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ARS - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.046559764166613685}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( MUC * ( CS - DS ) ),RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( ( DS * MUM ) / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34812729591129943}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.20647773279352227, "obj2": 0.5728283984714182}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,( ( MRS + Const ) / ( RRS + CRS ) ) ) / ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.4534412955465587, "obj2": 0.3139872855625915}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( ( RCSe - CS ) * MUC ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07296032565885859}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( PN * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,MUM ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6547804914327457}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( ( MDR / MRS ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),( RCSe * ( DS - Max( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - DS ) * MUC ) ) ),Max( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ),MUR ) ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10104154300319214}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5048612392978874}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - DS ) * DS )", "obj1": 0.3724696356275304, "obj2": 0.40783335701185003}], "27": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( FirstVNF_CPU_Server / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + CS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( ( Const - FirstVNF_RAM ) - ( BR / ( RRS + CRS ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( CRS / Const ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( DDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( RMSe * RRSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ),( MUC / CS ) ) ) - ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RRSe ) ) )", "obj1": 0.6923076923076923, "obj2": 0.14387466198235282}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.17300016219166767}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25202267752804325}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44969585723551003}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - DS ) * DS )", "obj1": 0.3724696356275304, "obj2": 0.40783335701185003}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ARS - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.046559764166613685}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_Mem + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( CS ,DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06747288494099071}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.2985736830833722}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RCSe + ( MUC / RRSe ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.2750561913306367}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( ( DS * MUM ) / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9210526315789473, "obj2": 0.029709812761831135}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051003762032895285}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.47175327732066985}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03849851996521246}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.16396761133603238, "obj2": 0.6104735808140087}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( ( MRS + FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / MUR ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS - RCSe ) ) - ( MLU + DS ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5991872075743092}, {"determining": "( Min( ( MDR / FirstVNF_Mem ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.3623481781376518, "obj2": 0.4147993735346804}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / MRS ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( Const / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( DS / RCSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.01756303558895092}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}, {"determining": "( ( ( ( Max( ( Max( Max( Const,CRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Max( Max( CRS,FirstVNF_CPU_Server ),( PN - CRS ) ) ),Min( Min( ( Const + FirstVNF_CPU ) ,( PN + ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Min( CRS ,CRS ) ) ) ) * ( ( Min( ( Const * FirstVNF_RAM ) ,Max( BR,FirstVNF_CPU ) ) / ( ( PN / ACS ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) + ( ( Min( MDR ,FirstVNF_RAM_Server ) - ( AMS - ARS ) ) - ( ( MDR / AMS ) / ( ACS / DDR ) ) ) ) ) + Max( ( ( ( ( CRS + MDR ) / ( RRS - FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_CPU_Server - Const ) ,( ARS - AMS ) ) ) * Max( ( ( ARS / CRS ) - ( ARS * ACS ) ),( ( MDR - FirstVNF_Mem ) - Min( ARS ,ARS ) ) ) ),( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( MRS * PN ) ) - ( Max( RRS,RRS ) * ( AMS + FirstVNF_CPU ) ) ) / ( Min( ( PN / RRS ) ,( Const / Const ) ) + ( Max( Const,FirstVNF_RAM_Server ) - ( DDR + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Max( Const,FirstVNF_RAM ) ) ,Max( ( MRS * RRS ),( ACS + ARS ) ) ) + ( Min( ( BR * ARS ) ,( MDR * ACS ) ) - ( Max( FirstVNF_CPU,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) ) ) / ( ( ( Max( BR,ACS ) + Min( DDR ,FirstVNF_Mem_Server ) ) * ( Max( DDR,DDR ) / Max( MDR,MRS ) ) ) + ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) - ( ( AMS + BR ) + Min( ARS ,ARS ) ) ) ) ) * ( ( ( ( ( CRS + MRS ) * Min( MDR ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU * Const ) - ( Const + MRS ) ) ) / ( Max( ( ACS / MDR ),( RRS - ARS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( ACS - RRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_Mem - MDR ) ) + Max( Min( Const ,FirstVNF_RAM_Server ),( FirstVNF_RAM - DDR ) ) ) * Min( ( ( DDR / DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( PN * FirstVNF_CPU_Server ) * ( PN - ACS ) ) ,( ( MDR - CRS ) / ( RRS / CRS ) ) ) + Min( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS * PN ) ) ,( ( BR * FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + ( Min( ARS ,FirstVNF_CPU_Server ) * Max( ACS,FirstVNF_RAM ) ) ) + Max( ( ( AMS - RRS ) + ( AMS / MRS ) ),( Max( FirstVNF_Mem,BR ) + ( FirstVNF_Mem_Server + MDR ) ) ) ) ) / ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) / Min( Const ,CRS ) ) + ( Max( AMS,AMS ) / ( MDR / FirstVNF_CPU_Server ) ) ) * Min( ( Max( PN,FirstVNF_Mem ) - ( RRS - ACS ) ) ,Max( ( MRS + FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) * ( Max( ( Min( ARS ,Const ) / ( FirstVNF_CPU_Server / AMS ) ),( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( PN + ACS ) ) ) + Max( ( ( FirstVNF_Mem * DDR ) * ( ACS + FirstVNF_Mem ) ),Max( ( ARS / RRS ),( BR * MRS ) ) ) ) ) ) - ( Min( ( Max( ( Max( FirstVNF_Mem_Server,AMS ) * ( FirstVNF_RAM / CRS ) ),( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM - Const ) ) ) + Max( ( ( CRS + AMS ) - Max( FirstVNF_CPU,RRS ) ),( ( Const + FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) ) ) ,( ( Max( ( DDR + BR ),Max( Const,FirstVNF_Mem_Server ) ) + ( ( MDR - FirstVNF_Mem_Server ) * ( ACS - ARS ) ) ) - Min( ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - MDR ) ) ,Min( ( MRS / CRS ) ,( FirstVNF_CPU / AMS ) ) ) ) ) - ( Min( ( ( ( MRS + Const ) + ( Const - BR ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ,( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( PN * PN ) ) + ( ( MRS - FirstVNF_Mem_Server ) + Max( RRS,DDR ) ) ) ) - ( ( Min( Max( FirstVNF_CPU_Server,Const ) ,Max( BR,CRS ) ) + ( Max( ACS,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) * ( Min( ( PN + Const ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( MRS / RRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - MUM ) + ( RMSe * RCSe ) ) + ( ( MUC + RCSe ) - RCSe ) )", "obj1": 0.97165991902834, "obj2": 0.012924434347799413}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( Max( MRS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( ( MUM / MUR ) * MUC ) ) ) - Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5535204068547561}, {"determining": "( Min( ( AMS - ( MDR * PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MUR ) + Max( RCSe,RMSe ) ) - Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35421313828763507}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_RAM ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.38025241889426314}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,Min( MUC ,CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.0786967204516528}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( AMS + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( Const / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR - ( MUC * CS ) ) ) - MLU ) * DS )", "obj1": 0.25303643724696356, "obj2": 0.5233694303727174}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5526315789473685, "obj2": 0.24122173034747452}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.20647773279352227, "obj2": 0.5728283984714182}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( FirstVNF_Mem + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.20243942083528302}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( MDR + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.08712110107695102}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) / ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09334754685715198}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,Min( MUC ,CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07202650475310095}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) + ( ACS + Const ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) ,Min( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( ( DS * MUM ) / MUR ) * ( RCSe - MUC ) ) ) ) ,( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.000584594911408359}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe - ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5931174089068826, "obj2": 0.21860213076598323}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + CRS ) ) ) ) ),( Const / BR ) ) ) + ( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS - ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.7206477732793523, "obj2": 0.12029104464607047}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + MRS ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67563663439244}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ACS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( Min( ( Min( MUR ,RCSe ) - ( MUC + RCSe ) ) ,( ( MUM / RRSe ) * MUC ) ) * ( ( ( RRSe - Min( MUM ,MUR ) ) - ( DS + RCSe ) ) - ( MLU + DS ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.33255827635599283}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.38025241889426314}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MUC ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6666144852063061}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5016985293830425}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( DDR,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUC * CS ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.47175327732066985}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5526315789473685, "obj2": 0.24122173034747452}], "28": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( MUC * CS ) ) ) - ( ( RRSe / MUR ) * ( MUM + DS ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - ( FirstVNF_CPU_Server / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + CS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( ( MRS / FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( RCSe + DS ),( ( ( DS * MUM ) - ( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.1438500303985169}, {"determining": "( ( MDR / FirstVNF_CPU_Server ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUC * CS ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Min( MUM ,MUR ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6575570920259207}, {"determining": "( Min( ( AMS - ( MDR * PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MUR ) + Max( RCSe,RMSe ) ) - Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35421313828763507}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.16396761133603238, "obj2": 0.6104735808140087}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.17300016219166767}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.2985736830833722}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.33304328494276364}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_Mem + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),Min( CS ,DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06747288494099071}, {"determining": "( Max( Max( AMS,( MRS / FirstVNF_CPU_Server ) ),( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + ( MRS / BR ) ) ) + ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS * CRS ) ) ) )", "choosing": "( ( ( RRSe - ( MUR + ( ( CS / MUR ) + MUC ) ) ) / Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5472739398340911}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( FirstVNF_Mem + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.20243942083528302}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( DS + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7107575473382025}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ARS - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.046559764166613685}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.10323886639676114, "obj2": 0.684945672474363}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MUC ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6666144852063061}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.5980528613445698}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( DDR,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUC * CS ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4792301644823624}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,Max( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ),( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.451417004048583, "obj2": 0.3152316414580109}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MRS / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe - ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) + ( MUR + ( MUC * CS ) ) ) ) - MUR ) * DS )", "obj1": 0.06275303643724696, "obj2": 0.7423300747510314}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3910055045012725}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( FirstVNF_CPU / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / MUC ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( RRSe + DS ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.02618973739488034}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.19838056680161945, "obj2": 0.5866199638269657}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( ( MRS + FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / PN ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( ( Const / BR ),FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( ( CS - DS ) / CS ) ) - ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9534412955465587, "obj2": 0.016398887699381404}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5566801619433198, "obj2": 0.23751819278229733}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - DS ) * DS )", "obj1": 0.3724696356275304, "obj2": 0.40783335701185003}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + MRS ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67563663439244}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5161943319838057, "obj2": 0.2644855692136517}, {"determining": "Max( Min( FirstVNF_RAM_Server ,CRS ),( Min( ( DDR * ACS ) ,( ACS - BR ) ) * ( Max( FirstVNF_RAM_Server,ARS ) - ( CRS / MRS ) ) ) )", "choosing": "( Max( ( RCSe / ( RCSe + ( MUC / RRSe ) ) ),MUR ) * MUC )", "obj1": 0.06882591093117409, "obj2": 0.7269928876832337}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07202650475310095}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) + ( PN + DDR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MUC ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4158722106036222}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe - ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5931174089068826, "obj2": 0.21860213076598323}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.25303643724696356, "obj2": 0.5233694303727174}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( MRS + FirstVNF_CPU ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3801859901147231}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( RCSe + ( MUC / RRSe ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.2750561913306367}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( ( PN + ( ARS / ( MDR / Const ) ) ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) ) ) ) - RMSe ) * DS )", "obj1": 0.07489878542510121, "obj2": 0.7199544665472952}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25202267752804325}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( ( RRS + CRS ) + CRS ) ) ) ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( RMSe ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4533576175878423}, {"determining": "( MDR + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / MRS ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.10402624169743709}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5445344129554656, "obj2": 0.24764836229698792}], "29": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( MUC * CS ) ) ) - ( ( RRSe / MUR ) * ( MUM + DS ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( MDR / FirstVNF_CPU_Server ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUC * CS ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Min( MUM ,MUR ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6575570920259207}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.16396761133603238, "obj2": 0.6104735808140087}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.19838056680161945, "obj2": 0.5866199638269657}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * MUM ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.09029330172211965}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_CPU ),( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),DS ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( RRSe + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - CS ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.7874493927125507, "obj2": 0.0799747699889806}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / MRS ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( MUC ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4291497975708502, "obj2": 0.34109891716242857}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( ( MRS / FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( RCSe + DS ),( ( ( DS * MUM ) - ( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.14500509246268856}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.17300016219166767}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ARS - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.046559764166613685}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.5975359283529504}, {"determining": "( Min( ( AMS - ( MDR * PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MUR ) + Max( RCSe,RMSe ) ) - Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.059749127063385754}, {"determining": "( MDR + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / MRS ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.10402624169743709}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( DDR,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( ( CS - DS ) / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.4775022049839849}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( MUR / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13125090643895523}, {"determining": "( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + BR )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.058704453441295545, "obj2": 0.7365982216370377}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.31450684248730804}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.25303643724696356, "obj2": 0.5233694303727174}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) + ( PN + DDR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MUC ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4158722106036222}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25202267752804325}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + CS ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.009992567536910043}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_RAM_Server ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( MLU - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5119610254635815}, {"determining": "( Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( ( RRS + CRS ) + CRS ) ) ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUR ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7089754753145008}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( MRS + FirstVNF_CPU ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3801859901147231}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,BR ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( ( CS - DS ) / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - RMSe ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.48353885416552933}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( FirstVNF_CPU / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4008097165991903, "obj2": 0.3531821236013876}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( RMSe - Min( Max( Min( MUR ,RCSe ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) * ( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06588637357372709}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5445344129554656, "obj2": 0.24764836229698792}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Max( Max( AMS,( MRS / FirstVNF_CPU_Server ) ),( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + ( MRS / BR ) ) ) + ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS * CRS ) ) ) )", "choosing": "( ( ( RRSe - ( MUR + ( ( CS / MUR ) + MUC ) ) ) / Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5472739398340911}, {"determining": "( Min( ( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ,( ( PN - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / ( PN + Min( ( MRS + Const ) ,( ( RRS + CRS ) + CRS ) ) ) ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( DS + ( MUC / CS ) ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.27075599957303326}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / MUC ) ) )", "obj1": 0.7408906882591093, "obj2": 0.10063732421855381}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( ( MRS + FirstVNF_CPU ) / ( ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + ( RCSe * RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.26227788484246706}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + MRS ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67563663439244}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( FirstVNF_Mem + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.19569133644299935}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07202650475310095}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( BR / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MUC ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6666144852063061}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.33304328494276364}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( ( Max( MRS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( ( MUM / MUR ) * MUC ) ) ) - Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24493927125506074, "obj2": 0.552898923584972}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe - ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5931174089068826, "obj2": 0.21860213076598323}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - DS ) * DS )", "obj1": 0.3724696356275304, "obj2": 0.40783335701185003}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}], "30": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) / BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( ( MUC * CS ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( BR,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) )", "obj1": 0.3157894736842105, "obj2": 0.47140818371173426}, {"determining": "( Min( ( AMS + ( ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.30411826487975097}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe + ( RRSe * CS ) ) ) - DS ) * DS )", "obj1": 0.3724696356275304, "obj2": 0.40783335701185003}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( FirstVNF_CPU / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4008097165991903, "obj2": 0.3531821236013876}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.17300016219166767}, {"determining": "( Min( ( AMS - ( ACS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + BR )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.16396761133603238, "obj2": 0.6104735808140087}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07181716150809993}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12484593441162894}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.19838056680161945, "obj2": 0.5866199638269657}, {"determining": "( ( ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) / FirstVNF_CPU_Server ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( ( MUC / RRSe ) ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( ( MUC * CS ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) + Max( ( DS * Min( Min( MUM ,MUR ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6513315297859736}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.31450684248730804}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ARS - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.046559764166613685}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUR * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + Max( ARS,( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( DS,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.15466720818025015}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( MDR + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / MRS ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.10402624169743709}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN / ( ( MRS / FirstVNF_CPU ) / ( DDR + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RCSe / ( MUR * CS ) ) ) * MUR ) * DS )", "obj1": 0.2854251012145749, "obj2": 0.4942497143869614}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( MRS + FirstVNF_CPU ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3801859901147231}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) + ( PN + DDR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MUC ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4158722106036222}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + MRS ) / ( RRS + CRS ) ) ) ) ) * ( ( PN / ( ( MRS + Const ) / ( RRS + CRS ) ) ) / BR ) ) ) + ( MDR / MRS ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67563663439244}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.5910931174089069, "obj2": 0.21337381975783087}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( RMSe - Min( Max( Min( MUR ,RCSe ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) * ( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06588637357372709}, {"determining": "( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) + BR )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.058704453441295545, "obj2": 0.7365982216370377}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + CS ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.009992567536910043}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( RRS + CRS ) ) ) ) ) * ( PN / BR ) ) ) + ( FirstVNF_CPU - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( CRS / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / DS ) * MUR ),Min( MUC ,DS ) ) * ( Min( MUC ,RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5668016194331984, "obj2": 0.2317559864222556}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.25303643724696356, "obj2": 0.5233694303727174}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.33304328494276364}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / PN ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( FirstVNF_Mem + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * MUM ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + MUC ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6977074229751091}, {"determining": "( Min( ( AMS - ( MDR * PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MUR ) + Max( RCSe,RMSe ) ) - Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.059749127063385754}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,BR ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( ( DS + ( ( CS - DS ) / CS ) ) + ( ( DS + DS ) + ( ( DS - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - RMSe ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + DS ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.48353885416552933}, {"determining": "( Max( Max( AMS,( MRS / FirstVNF_CPU_Server ) ),( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + ( MRS / BR ) ) ) + ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS * CRS ) ) ) )", "choosing": "( ( ( RRSe - ( MUR + ( ( CS / MUR ) + MUC ) ) ) / Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5472739398340911}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_CPU ),( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),DS ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( RRSe + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - CS ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.7874493927125507, "obj2": 0.0799747699889806}, {"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,( FirstVNF_Mem_Server / DDR ) ) ) )", "choosing": "( ( ( MUM - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.06680161943319839, "obj2": 0.726403604895746}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU_Server ) / ( ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ACS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ) * Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( RRSe * CS ) - DS ) )", "obj1": 0.5465587044534413, "obj2": 0.2435721512663041}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( MUR / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13125090643895523}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( FirstVNF_Mem + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.19569133644299935}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( MRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / ACS ) ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RCSe / MUR ) * ( MUM + DS ) ) ) ) * ( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) - ( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6666144852063061}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( ( MRS / FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( RCSe + DS ),( ( ( DS * MUM ) - ( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + RRSe ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.14037060890163566}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + CS ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.009992567536910043}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( MRS + FirstVNF_CPU ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3801859901147231}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.504409829687812}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / MRS ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( MUC ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4291497975708502, "obj2": 0.34109891716242857}], "31": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( ( Max( MRS,AMS ) / ( PN + ( ( MRS + PN ) / ( RRS + CRS ) ) ) ) - BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( ( MUC * CS ) - Min( ( Min( MUR ,MUR ) - ( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) / BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( ( MUC * CS ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( BR,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) )", "obj1": 0.3157894736842105, "obj2": 0.47140818371173426}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( MDR / Const ) + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( ACS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Max( MUR,Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6482897525838184}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( MRS + FirstVNF_CPU ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.38305979130155815}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / ( MDR / Const ) ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.15452416538264788}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.15991902834008098, "obj2": 0.6227622582494419}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( RMSe + DS ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.25858067858505596}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( FirstVNF_CPU + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,MUR ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9595141700404858, "obj2": 0.019242259256788796}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + ARS ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( FirstVNF_Mem + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( ( DS * MUM ) - DS ) ) ,( Max( DS,( MUR / CS ) ) + ( ( RCSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.19548723427304424}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + BR )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7489878542510121, "obj2": 0.09734403000553814}, {"determining": "( Max( Max( AMS,( MRS / FirstVNF_CPU_Server ) ),( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + ( MRS / BR ) ) ) + ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS * CRS ) ) ) )", "choosing": "( ( ( RRSe - ( MUR + ( ( CS / MUR ) + MUC ) ) ) / Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5472739398340911}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ARS - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.046559764166613685}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.5910931174089069, "obj2": 0.21337381975783087}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU_Server ) / ( ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ACS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ) * Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( ( RRSe * CS ) - DS ) )", "obj1": 0.5465587044534413, "obj2": 0.23929644442211087}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( MRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / ACS ) ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RCSe / MUR ) * ( MUM + DS ) ) ) ) * ( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) - ( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6666144852063061}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.7813765182186235, "obj2": 0.08738927952840088}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Max( DS,( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5303643724696356, "obj2": 0.25203469977837667}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / CRS ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * MLU )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12482831869508701}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.7246963562753036, "obj2": 0.1154979396026973}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.4808936802301224}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( MUR + ( MUC * CS ) ) ) - MUR ) * ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.31450684248730804}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.17300016219166767}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5572454706499186}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5790339560329216}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( RRS + CRS ) ) ) ) ) * ( PN / BR ) ) ) + ( FirstVNF_CPU - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( CRS / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / DS ) * MUR ),Min( MUC ,DS ) ) * ( Min( MUC ,RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5668016194331984, "obj2": 0.2317559864222556}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( MUC ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.31865917375412367}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_CPU ),( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),DS ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( RRSe + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - CS ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.7874493927125507, "obj2": 0.0799747699889806}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.35782711117916943}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Min( ( Max( MRS,( ACS - FirstVNF_RAM ) ) / ( PN + ( ( MRS / FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( ( DS + ( MUC / CS ) ) + ( ( DS + DS ) + ( ( RCSe - CS ) * MUC ) ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( RCSe + DS ),( ( ( DS * MUM ) - ( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + RRSe ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.14034764550146675}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) + ( PN + DDR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MUC ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4158722106036222}, {"determining": "( Min( PN ,( BR / ( MDR / FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( ( RCSe + ( RRSe * CS ) ) / RRSe ) ) ) - RMSe ) * CS )", "obj1": 0.058704453441295545, "obj2": 0.7329201016624414}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - CS ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5603199473416858}, {"determining": "( Min( ( AMS - ( MDR * PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MUR ) + Max( RCSe,RMSe ) ) - Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.059749127063385754}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + Min( ( AMS - ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( DS * DS ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0017541778053532103}, {"determining": "( Min( ( AMS + ( ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_Mem ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) / Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3050919222705032}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) * MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06879791211062491}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MRS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC + CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5170853072861508}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ARS + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / BR ) ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ) - ( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( MUC / CS ) ),( Max( ( DS * DS ),( MUC / MUC ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4251012145748988, "obj2": 0.3447683847964756}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( MRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / ACS ) ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RCSe / MUR ) * ( MUM + DS ) ) ) ) * ( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) - ( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6921018050056832}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MDR / Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( RMSe - Min( Max( Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) * ( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8502024291497976, "obj2": 0.06422918186788773}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / MRS ) ) ) + ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( MUC ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4311740890688259, "obj2": 0.33993915981163236}], "32": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / CRS ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( ( Max( MRS,AMS ) / ( PN + ( ( MRS + PN ) / ( RRS + CRS ) ) ) ) - BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( ( MUC * CS ) - Min( ( Min( MUR ,MUR ) - ( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( BR,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) )", "obj1": 0.3157894736842105, "obj2": 0.47140818371173426}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - CS ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.5805578964624997}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.16396761133603238, "obj2": 0.6211150182730347}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) * MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06879791211062491}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( FirstVNF_CPU + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9595141700404858, "obj2": 0.019228214216965668}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( MRS + FirstVNF_CPU ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.38305979130155815}, {"determining": "( Max( Max( AMS,( MRS / FirstVNF_CPU_Server ) ),( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + ( MRS / BR ) ) ) + ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS * CRS ) ) ) )", "choosing": "( ( ( RRSe - ( MUR + ( ( CS / MUR ) + MUC ) ) ) / Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5472739398340911}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MDR / Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( RMSe - Min( Max( Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ),( ( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ) * ( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.8502024291497976, "obj2": 0.06422918186788773}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.42105263157894735, "obj2": 0.334267824016509}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( MRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / ACS ) ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RCSe / MUR ) * ( MUM + DS ) ) ) ) * ( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) - ( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6921018050056832}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.046521341233842405}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.48782340535452035}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) + ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM * DS ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.501756511415953}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) + ( PN + DDR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MUC ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4158722106036222}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( AMS - ( MDR / ARS ) ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( MDR / Const ) + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Max( RCSe,Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6424754073510923}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_CPU ),( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),DS ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( RRSe + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - CS ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.7874493927125507, "obj2": 0.0799747699889806}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / CRS ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * MLU )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( AMS - ( MDR * PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MUR ) + Max( RCSe,RMSe ) ) - Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.059749127063385754}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( RMSe + DS ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.2650073105345694}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Min( MRS ,Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( MUC ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( DS ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.3186308460074254}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.4808936802301224}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MRS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC + CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5170853072861508}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + Max( ARS,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) / MUR ) * ( MUM + DS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.34932142163304714}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( RRS + CRS ) ) ) ) ) * ( PN / BR ) ) ) + ( FirstVNF_CPU - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( CRS / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / DS ) * MUR ),Min( MUC ,DS ) ) * ( Min( MUC ,RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5668016194331984, "obj2": 0.2317559864222556}, {"determining": "( ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( ( RCSe + ( RRSe * CS ) ) / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.058704453441295545, "obj2": 0.7329201016624414}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.17228356966015798}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( Min( PN ,( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( FirstVNF_CPU / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ARS - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7201459598095437}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) / ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),DS ) ,( Max( DS,( MUC / CS ) ) + ( ( RMSe / DS ) / MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - CS ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.0916283882910112}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / Const ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( DS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.20242914979757085, "obj2": 0.5753412100370435}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.35782711117916943}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.5910931174089069, "obj2": 0.21337381975783087}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - CS ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5603199473416858}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( FirstVNF_CPU + Const ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) - Min( Max( Min( MUR ,RCSe ),( Max( Max( ( DS + ( MUC / CS ) ),( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.007130828093354355}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_Mem ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( MUC / CS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13696830148469422}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.15991902834008098, "obj2": 0.6227622582494419}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / ( MDR / Const ) ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.15452416538264788}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.28328441007779076}, {"determining": "( Min( ( AMS + ( ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_Mem ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) / Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3050919222705032}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( FirstVNF_CPU + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * CS ),( MUC / CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.014165915330764986}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MDR / Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( ( ( AMS - ( MDR / PN ) ) + ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( CRS + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( Min( Min( MUM ,RMSe ) ,Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.7813765182186235, "obj2": 0.08576815233981865}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / RCSe ) * ( MUM + DS ) ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5497320738872248}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( DS - ( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5303643724696356, "obj2": 0.2511801393284336}], "33": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( ( Max( MRS,AMS ) / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) - BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( ( MUC * CS ) - Min( ( Min( MUR ,MUR ) - ( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / ( MUM + DS ) ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / CRS ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( ( ( MRS + Const ) / ( FirstVNF_CPU + Const ) ) * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),DS ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( RMSe + DS ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11524818201936292}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.5987591121664804}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( BR,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) )", "obj1": 0.3340080971659919, "obj2": 0.45794599309354284}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Max( Max( AMS,( MRS / FirstVNF_CPU_Server ) ),( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) + ( MRS / BR ) ) ) + ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_RAM ) + ( ( MRS + Const ) / ( RRS * CRS ) ) ) )", "choosing": "( ( ( RRSe - ( MUR + ( ( CS / MUR ) + MUC ) ) ) / Max( ( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ),RMSe ) ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5472739398340911}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MRS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC + CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5170853072861508}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19817908953167396}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( MRS - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / ACS ) ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RCSe / MUR ) * ( MUM + DS ) ) ) ) * ( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) - ( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6921018050056832}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_CPU_Server / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / ACS ) ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6712843714303942}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( RCSe + ( MUM / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( MUC,( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) - ( MUM + DS ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.031981560362515156}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) + ( PN + DDR ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,MUC ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4158722106036222}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / ( MRS * ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( ( DS * DS ) / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3624237977883481}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( RRS + CRS ) ) ) ) ) * ( PN / BR ) ) ) + ( FirstVNF_CPU - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( CRS / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / DS ) * MUR ),Min( MUC ,DS ) ) * ( Min( MUC ,RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5668016194331984, "obj2": 0.2317559864222556}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MRS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3785425101214575, "obj2": 0.39574643535392057}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( BR,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) )", "obj1": 0.3157894736842105, "obj2": 0.47140818371173426}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Min( ( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,Min( Min( MUM ,MUR ) ,Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.24594516529759752}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( BR + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( ( ( RCSe / ( RCSe + Min( MUR ,MUM ) ) ) - RMSe ) * DS )", "obj1": 0.5890688259109311, "obj2": 0.21250214962578542}, {"determining": "( Min( ( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_Mem ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RRSe + ( MUC * ( MUC * CS ) ) ) ,( RCSe + ( RMSe * MLU ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13696830148469422}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( FirstVNF_CPU + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC + CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.9574898785425101, "obj2": 0.02120388649334222}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - CS ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.5805578964624997}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - CS ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5603199473416858}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.046521341233842405}, {"determining": "( Min( ( MDR / ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( ( MUC / CS ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / RCSe ) * ( MUM + DS ) ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5496165396748448}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) + ( FirstVNF_Mem - ( MDR / RRS ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * MUC ) * Min( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( DS,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( DS / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6611259918858257}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.4808936802301224}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( MUC ,( ( DS / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.308712391626557}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.48782340535452035}, {"determining": "( ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( ( RCSe + ( RRSe * CS ) ) / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.058704453441295545, "obj2": 0.7329201016624414}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.16396761133603238, "obj2": 0.6211150182730347}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( ( MRS / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( CRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) + ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( CS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.1681870774334815}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / Const ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( DS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.20242914979757085, "obj2": 0.5753412100370435}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_Mem ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( MUC / CS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13696830148469422}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) + ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM * DS ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.501756511415953}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.496221945522074}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( ( Min( RCSe ,DS ) - MUC ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.09923389413743043}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MDR / Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( FirstVNF_Mem / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) - MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.8259109311740891, "obj2": 0.06488254223574781}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + Max( ARS,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) / MUR ) * ( MUM + DS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.34932142163304714}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / ( MDR / Const ) ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.15311274782791542}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( DS - ( MUC / CS ) ) + ( ( RCSe / DS ) / MUC ) ) - ( MUR + ( MUC * CS ) ) ) - MUR ) * DS )", "obj1": 0.5303643724696356, "obj2": 0.2511801393284336}, {"determining": "( Min( ( AMS - ( MDR * PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( MDR + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MUR ) + Max( RCSe,RMSe ) ) - Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.059749127063385754}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / ( MDR / Const ) ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.15452416538264788}, {"determining": "( Min( ( AMS + ( ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( RMSe / DS ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.29829903459186086}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( AMS - ( MDR / ARS ) ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ( MDR / Const ) + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Max( RCSe,Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6424754073510923}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,RMSe ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.4311740890688259, "obj2": 0.3221077164648938}], "34": [{"determining": "Max( ( FirstVNF_RAM_Server * CRS ),( ( ( MRS * ACS ) * ( ACS - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / ARS ) - ( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( ( ( RMSe / ( RCSe + Min( MUC ,RRSe ) ) ) * MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( ( ( ( Min( ( ( ( AMS - FirstVNF_Mem_Server ) - ( CRS / FirstVNF_Mem_Server ) ) - Min( Max( PN,AMS ) ,( FirstVNF_RAM * BR ) ) ) ,( Min( ( MDR + FirstVNF_RAM ) ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( Min( BR ,BR ) + Max( MRS,RRS ) ) ) ) + ( ( ( ( FirstVNF_Mem + ARS ) - Min( CRS ,ACS ) ) - ( ( FirstVNF_RAM_Server / ACS ) * ( ARS - Const ) ) ) * Max( Max( Max( BR,DDR ),Min( ACS ,Const ) ),( ( PN / FirstVNF_CPU ) - ( RRS + FirstVNF_CPU_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server - AMS ) + Min( MDR ,BR ) ) / Max( Min( ARS ,BR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - Min( Max( Max( FirstVNF_CPU_Server,PN ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,Min( Min( DDR ,ARS ) ,( PN / FirstVNF_CPU_Server ) ) ) ) - Max( ( ( Min( ARS ,FirstVNF_CPU_Server ) + Min( PN ,BR ) ) - Min( ( Const / AMS ) ,( MRS / ACS ) ) ),Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( CRS * ACS ) ) ,( Max( Const,PN ) / ( BR + CRS ) ) ) ) ) ) - Max( Min( ( Max( ( Max( PN,FirstVNF_RAM ) + Min( DDR ,Const ) ),( ( MRS / RRS ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) * Max( Max( ( PN + ARS ),( FirstVNF_CPU_Server * ARS ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - ( RRS - FirstVNF_CPU ) ) ) ) ,Max( ( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) / ( ( MRS * FirstVNF_Mem_Server ) + ( MDR - ARS ) ) ),Max( Max( ( DDR - PN ),( AMS - FirstVNF_CPU_Server ) ),( Max( Const,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ),Min( ( ( Max( ( FirstVNF_Mem_Server * AMS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + Max( Max( CRS,BR ),( CRS - PN ) ) ) - ( Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( MDR / Const ) ) - ( ( FirstVNF_CPU_Server - ACS ) + ( MRS + MRS ) ) ) ) ,( Min( ( Min( PN ,ACS ) + ( RRS / RRS ) ) ,Max( ( FirstVNF_Mem_Server - AMS ),( RRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( DDR + Const ) - ( ARS + AMS ) ),( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,ARS ) ) ) ) ) ) ) / Max( ( ( Min( ( Min( ( MRS / FirstVNF_RAM ) ,Max( BR,CRS ) ) / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( PN * AMS ) ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) / ( RRS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU - MDR ) + ( CRS - FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( MRS * BR ) + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / Min( ( CRS + MRS ) ,( ACS / DDR ) ) ) ,( Max( Min( Const ,ARS ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_CPU_Server,ACS ),Min( PN ,Const ) ) ) ) ) + ( Min( Min( ( ( FirstVNF_CPU_Server * PN ) / ( FirstVNF_RAM - Const ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( PN - FirstVNF_CPU_Server ) ) ) ,Min( ( ( ACS + FirstVNF_RAM ) - ( AMS + FirstVNF_CPU_Server ) ) ,( ( DDR - Const ) / ( RRS * ARS ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( BR - FirstVNF_Mem_Server ) ) / Min( ( DDR - ACS ) ,Max( AMS,ARS ) ) ) - ( ( Max( CRS,CRS ) - ( DDR - FirstVNF_RAM_Server ) ) + ( ( RRS + PN ) / ( PN / BR ) ) ) ) ) ),Min( Min( ( ( Min( Max( PN,PN ) ,( MDR * FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_CPU ) * Min( CRS ,AMS ) ) ) - ( Max( ( Const / RRS ),( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + Max( ( BR - MRS ),Min( PN ,DDR ) ) ) ) ,( ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( Const / Const ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( ACS + FirstVNF_Mem_Server ) ) ) * ( Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,ACS ) ) + Max( Min( FirstVNF_CPU ,PN ),Max( AMS,DDR ) ) ) ) ) ,Min( ( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - ACS ) ),( ( FirstVNF_CPU_Server - ARS ) + ( MDR * FirstVNF_RAM_Server ) ) ) - ( ( Min( FirstVNF_Mem ,MDR ) - Min( MRS ,DDR ) ) / Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) ) ,Min( Min( Max( ( FirstVNF_RAM / BR ),( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server - BR ) + ( FirstVNF_RAM_Server * ACS ) ) ) ,Max( ( ( PN + Const ) * ( MRS + MDR ) ),( Max( FirstVNF_CPU_Server,CRS ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( MUC - ( Max( ( MUM / ( MUC * RRSe ) ),DS ) / RMSe ) ),( RRSe - CS ) ) / MUM ),( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( ( Max( MRS,AMS ) / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) - BR ) ) ) + ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( ( MUC * CS ) - Min( ( Min( MUR ,MUR ) - ( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / ( MUM + DS ) ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM * ACS ) ,( MDR - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / Const ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe + ( RMSe * MLU ) ) ) - MUR ) * DS )", "obj1": 0.05060728744939271, "obj2": 0.757906126142902}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MDR / Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RCSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07869111843807136}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MDR / Const ) / Max( MRS,DDR ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( FirstVNF_Mem / PN ) ) ,ACS ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) - MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.8259109311740891, "obj2": 0.06488254223574781}, {"determining": "( Min( ( AMS + ( ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + Max( MUC,CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( RMSe / DS ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.29829903459186086}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Min( ( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25205747678321}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( ( Min( RCSe ,DS ) - MUC ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.09923389413743043}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / Const ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( DS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.05095328793157805}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / Min( PN ,( Max( MRS,DDR ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( Max( MRS,Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( ( RMSe - ( MUR + ( RMSe * CS ) ) ) - MUR ) * DS )", "obj1": 0.6275303643724697, "obj2": 0.1879915417741668}, {"determining": "( ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( ( RCSe + ( RRSe * CS ) ) / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.058704453441295545, "obj2": 0.7329201016624414}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43147616981892645}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN + FirstVNF_Mem ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / MUR ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM * DS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4158300117212337}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,Const ) / ( RRS + CRS ) ) ) ) ) * ( PN / BR ) ) ) + ( FirstVNF_CPU - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( CRS / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / DS ) * MUR ),Min( MUC ,DS ) ) * ( Min( MUC ,RRSe ) - RCSe ) ) - ( CS - DS ) )", "obj1": 0.5668016194331984, "obj2": 0.2317559864222556}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Min( ( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,Min( Min( MUM ,MUR ) ,Max( Max( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.24594516529759752}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_Mem ) ) ) / BR ) ) ) + ( ( BR / ( MDR / FirstVNF_CPU_Server ) ) - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( ( RRSe / MUR ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.1199851707679086}, {"determining": "( ( ( MRS + Const ) / ( RRS + CRS ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / ( MRS * ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( ( MUC / CS ) / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7205054508006135}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.24898785425101214, "obj2": 0.5363900943238818}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_Mem ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.13557356233031062}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,RMSe ) + Max( RCSe,RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.4311740890688259, "obj2": 0.3221077164648938}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.5987591121664804}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MRS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * DS ) ) ) ,( ( RRSe / MUM ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.3785425101214575, "obj2": 0.39574643535392057}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MRS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC + CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.40215826018496714}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.16396761133603238, "obj2": 0.6211150182730347}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,PN ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_Mem ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) * ( MUC / CS ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,RCSe ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.9574898785425101, "obj2": 0.015056463639693981}, {"determining": "( Min( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - ( MUM + DS ) )", "obj1": 0.2834008097165992, "obj2": 0.4861231840139913}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) * DS )", "obj1": 0.15789473684210525, "obj2": 0.6225096804440737}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4291497975708502, "obj2": 0.3358786551868058}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ARS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS / ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MDR + ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUR ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2235530729482955}, {"determining": "( Min( ( AMS + ( ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) - ( MDR / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),DS ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( RMSe + DS ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3049408631417738}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( Min( ( AMS - ( MDR / PN ) ) ,MDR ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),DS ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( RMSe + DS ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.04230699486329155}, {"determining": "( Min( ( AMS - ( MDR / ARS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( CRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( FirstVNF_CPU_Server / ( ( ( Min( ( MRS * ACS ) ,Max( MRS,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server / ARS ) ,PN ) ) / ( BR * FirstVNF_Mem ) ) / Max( ( FirstVNF_Mem_Server * CRS ),( ARS / ACS ) ) ) ) + ( MRS - ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( CS,RMSe ) ) ,Max( ( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( ( MLU / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( RCSe ,( MUC / RRSe ) ),( CS - DS ) ) ,( Max( ( DS * MUM ),( MUC / DS ) ) - MUR ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / MLU ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.6424456743583783}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + MRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / ( MRS * ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( ( DS * DS ) / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3624237977883481}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / Const ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * CS ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( DS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( ( RCSe / ( RCSe + ( MUC - RRSe ) ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.20242914979757085, "obj2": 0.5753412100370435}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( ( MRS / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( CRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( ( DS * DS ) / ( RCSe + ( MUC - RRSe ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.17172875437184368}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / BR ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( PN - ( Max( MDR,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * CS ) ) ),MUR ) * DS )", "obj1": 0.9149797570850202, "obj2": 0.03792989837599174}, {"determining": "( Min( ( Min( ( MRS * ACS ) ,( ACS - FirstVNF_RAM ) ) * Min( Max( FirstVNF_RAM_Server,ARS ) ,( CRS / MRS ) ) ) ,( ( ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ( Max( MRS,FirstVNF_CPU ) / ( MDR / AMS ) ) ) ) ) * ( PN + ( ARS / ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19817908953167396}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( ( Max( MRS,( MDR / ( MDR / FirstVNF_CPU_Server ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) / BR ) ) ) + Max( ARS,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MLU ) ),( Max( ( DS * MUM ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( ( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) - RMSe ) / MUR ) * ( MUM + DS ) ) ) - Min( Max( Min( ( DS + ( MUC / CS ) ) ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.34298885424431863}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / ( MDR / FirstVNF_RAM ) ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( Max( MRS,FirstVNF_CPU ) / ( PN + ( BR / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,( RCSe + ( RRSe * ( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) ) ) ,Max( ( ( DS * Min( Max( Min( MUM ,RCSe ),( CS - DS ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( ( ( DS * MUM ) / ( RCSe + ( MUM / RRSe ) ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5465122356016822}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN - ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) + Min( ( AMS - ( MDR / FirstVNF_CPU_Server ) ) ,( ( ( ( MRS + Const ) / ( RRS + CRS ) ) - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / ( MDR / ( PN + ( BR / ( MDR / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - CS ) ) ),MUR ),RMSe ) ) ,( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6446799816326854}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / Const ) ) ) ) ) * ( CRS / CRS ) ) ) + Max( MRS,FirstVNF_CPU ) )", "choosing": "( Max( ( RCSe - ( RMSe + ( MUC * DS ) ) ),MUR ) * MLU )", "obj1": 0.9392712550607287, "obj2": 0.023086843593280105}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( MRS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( MRS,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),( MUC + CS ) ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5170853072861508}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / BR ) ) ) + Min( ( AMS - ( MDR / ( MDR / Const ) ) ) ,( ( PN - ( Max( MRS,( MDR / FirstVNF_RAM ) ) / ( PN * ( FirstVNF_CPU / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) * MDR ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.15452416538264788}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( BR,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) )", "obj1": 0.3157894736842105, "obj2": 0.47140818371173426}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Const / BR ) ) ) + ( AMS - ( MDR / Max( ( ( ( MRS + Const ) / ( FirstVNF_CPU + Const ) ) * FirstVNF_RAM ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,Max( RCSe,( Max( ( DS * MUM ),DS ) - MUR ) ) ) ) ,( MUC / RRSe ) ) - Min( Max( Min( MUR ,RCSe ),( ( RCSe + ( MUM / RRSe ) ) + MUM ) ) ,( ( RRSe / MUC ) * ( RMSe + DS ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11524818201936292}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( ( MRS / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( CRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( ( RCSe + ( MUC * ( MUC * CS ) ) ) ,( ( RRSe / MUM ) + ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( RCSe,( Max( ( CS * MUM ),( MUC / DS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.16705984058819445}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + DDR ) ) ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( Const / BR ) ) ) + ( MDR - ( Max( BR,AMS ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / MUR ) - ( RCSe + Min( MUR ,CS ) ) ) * MUR ),Min( MUC ,DS ) ) - ( ( RMSe * RRSe ) - RMSe ) ) - ( CS - DS ) )", "obj1": 0.3340080971659919, "obj2": 0.45794599309354284}, {"determining": "( Min( ( AMS + ( MRS / FirstVNF_CPU_Server ) ) ,( ( PN - ( Max( ( ARS / ( MDR / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( PN + ( ARS / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem,BR ) ) ) + ( PN - ( Max( MRS,FirstVNF_CPU ) / ( ACS + ( FirstVNF_CPU_Server / PN ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( Max( ( RCSe / ( RCSe + ( MUC - CS ) ) ),MUR ),RMSe ) ) ,( MUC / RRSe ) ) - Max( ( ( DS + ( MUC / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - ( MUC * CS ) ) ) )", "obj1": 0.9757085020242915, "obj2": 0.01416618619773787}, {"determining": "( Min( ( AMS - ( MDR / PN ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) * ( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( FirstVNF_Mem / BR ) / FirstVNF_CPU_Server ) ) / BR ) ) ) + ( AMS - ( PN - ( Min( MRS ,FirstVNF_CPU ) / ( PN + ( ( MRS + Const ) / ( RRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( ( DS * Min( MUC ,RRSe ) ) * Min( Max( Min( MUR ,( MUC / RRSe ) ),( CS - DS ) ) ,( ( DS + ( MUC / CS ) ) * ( RCSe - MUC ) ) ) ),( MUC / CS ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUC / CS ) ) + ( Min( RCSe ,DS ) - MUC ) ),( Max( ( DS * DS ),( MUC / CS ) ) - MUR ) ) + RCSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.3093429227156061}, {"determining": "( Min( ( ( Max( CRS,FirstVNF_Mem_Server ) / ( Const * ( CRS / Const ) ) ) - Max( DDR,RRS ) ) ,( ( PN - ( Max( MRS,FirstVNF_CPU ) / ( PN + ( Max( MRS,FirstVNF_CPU ) / ( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN + ( Max( MRS,FirstVNF_CPU ) / ( PN + FirstVNF_Mem ) ) ) / BR ) ) ) + ( AMS - ( PN + Min( ( MRS + Const ) ,( RRS + CRS ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,MUR ) + Max( RCSe,RMSe ) ) ,Max( ( DS * Min( Max( Min( MUR ,RCSe ),( CS - DS ) ) ,( RCSe * ( RCSe - MUC ) ) ) ),( MUC / Min( MUC ,RRSe ) ) ) ) - Min( Max( Min( MUR ,RCSe ),( Max( ( ( DS + ( MUR / CS ) ) + ( RRSe - MUC ) ),( Max( ( DS * MUM ),( MUM / CS ) ) - MUR ) ) + RRSe ) ) ,( ( RRSe / MUR ) * ( MUM + DS ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.1470932862911029}]}