{"1": [{"determining": "Min( Min( ACS ,ARS ) ,( DDR - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe / CS ) ,( DS - MLU ) )", "obj1": 0.7692307692307693, "obj2": 0.22302841756741817}, {"determining": "( ( ACS * MDR ) + Max( MRS,DDR ) )", "choosing": "( Min( MUR ,MUC ) / ( DS * RCSe ) )", "obj1": 0.08704453441295547, "obj2": 0.7796038821002599}, {"determining": "( ( BR + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / ( RRSe * MLU ) )", "obj1": 0.17813765182186234, "obj2": 0.6755162973682257}, {"determining": "Min( ( CRS + DDR ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + MUM ) / ( CS + RRSe ) )", "obj1": 0.18218623481781376, "obj2": 0.671215730856455}, {"determining": "( ( BR - PN ) / ( FirstVNF_Mem / MDR ) )", "choosing": "Min( Max( MUM,RRSe ) ,( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUC * MLU ) / ( MUC - RRSe ) )", "obj1": 0.1417004048582996, "obj2": 0.6960982993778019}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) + ( ACS + FirstVNF_RAM_Server ) ) + Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + Max( MUC,RCSe ) ) * ( MUM * ( CS * MUR ) ) )", "obj1": 0.3441295546558704, "obj2": 0.5947447689399198}, {"determining": "( ( PN / ARS ) - Min( CRS ,ARS ) )", "choosing": "( ( ( DS + DS ) - ( MUR * MLU ) ) + ( ( RMSe * RRSe ) * ( DS / MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.610158194822123}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS - CRS ) ) )", "choosing": "( Max( RCSe,DS ) + ( Max( MUR,RRSe ) / ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,RRS ) - ( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server * ARS ) ,( FirstVNF_CPU_Server * RRS ) ) )", "choosing": "( ( ( DS / CS ) / ( MUR / RRSe ) ) / Min( ( MLU * MLU ) ,( MUR / RMSe ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6212741770376016}, {"determining": "( ( Min( AMS ,FirstVNF_RAM ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "Min( Min( Min( RMSe ,CS ) ,( MLU + MUC ) ) ,Min( ( RCSe * RCSe ) ,( DS * RCSe ) ) )", "obj1": 0.39271255060728744, "obj2": 0.5281725429652202}, {"determining": "( Max( CRS,CRS ) - Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( ( RMSe + MUM ) ,( DS * RRSe ) )", "obj1": 0.29554655870445345, "obj2": 0.6074362617902291}, {"determining": "( Max( ACS,RRS ) * ( ( DDR - DDR ) / Const ) )", "choosing": "( ( ( RRSe - CS ) - ( MUM + MUC ) ) + Max( ( MUC / MLU ),RCSe ) )", "obj1": 0.1659919028340081, "obj2": 0.6882472969380833}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.6347393430853989}, {"determining": "( ( Max( Min( ARS ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR / MUM ) ) + ( ( MLU / MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,MRS ) * ( FirstVNF_Mem_Server + ( AMS / PN ) ) )", "choosing": "( Max( ( MUC - RRSe ),( Max( RMSe,CS ) + ( DS * MUC ) ) ) / ( RCSe + ( CS + Max( RCSe,DS ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5747846322207415}, {"determining": "Min( Max( ( ( Const / BR ) / ( BR + BR ) ),( ( ACS - FirstVNF_Mem_Server ) / ( AMS + Const ) ) ) ,( Max( ( CRS - AMS ),( FirstVNF_Mem * ACS ) ) * Min( ( PN / FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( RRSe * RCSe ) ,MUC ) * ( RRSe / MUM ) ) ,Min( DS ,CS ) )", "obj1": 0.4190283400809717, "obj2": 0.5131148285437682}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) )", "choosing": "( Max( RCSe,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.1680161943319838, "obj2": 0.6875788226186}, {"determining": "( Min( Const ,RRS ) - ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Max( ( RMSe / DS ),Min( DS ,RRSe ) ) - ( ( DS - RCSe ) / ( MUM - MUR ) ) ) - ( ( Min( MLU ,CS ) / Min( MUC ,CS ) ) + Min( ( CS - DS ) ,Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + ( MDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29786182475030093}], "2": [{"determining": "( ( Max( Min( ARS ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( MUC - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) / ( FirstVNF_Mem / MDR ) )", "choosing": "Min( Max( MUM,RRSe ) ,( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * DDR ) + Max( MRS,DDR ) )", "choosing": "( ( ( MUC + MUM ) / ( CS + DS ) ) / ( DS * RCSe ) )", "obj1": 0.08299595141700405, "obj2": 0.7449966000478679}, {"determining": "Min( ( FirstVNF_Mem - Max( Min( FirstVNF_CPU_Server ,( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / ( MDR - FirstVNF_CPU_Server ) ) ) ) ,( ( Min( ( FirstVNF_RAM_Server + ( MRS * CRS ) ) ,FirstVNF_Mem ) / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR - Min( RCSe ,DS ) ),( MUM * CS ) )", "obj1": 0.5060728744939271, "obj2": 0.44177421931521166}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.8441295546558705, "obj2": 0.10116442791789343}, {"determining": "( Min( ( PN - ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * ( DS - MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3117148466194717}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - FirstVNF_CPU ) ) ,( DDR - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe / CS ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.7732793522267206, "obj2": 0.20646999256830384}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) * Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( MUR + Max( ( MUM + MUR ),( MUM + MUM ) ) ) / Max( MLU,( ( MLU * MUM ) * ( RCSe + MLU ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.29255219769733104}, {"determining": "Min( Min( ACS ,ARS ) ,( DDR - FirstVNF_Mem ) )", "choosing": "( ( RCSe * MLU ) / ( MUC - RRSe ) )", "obj1": 0.7469635627530364, "obj2": 0.21285690077311034}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe * RCSe ) ,MUC ) * ( RRSe / MUM ) ) ,Min( DS ,CS ) )", "obj1": 0.4473684210526316, "obj2": 0.4792142760973462}, {"determining": "( ( Max( ( RRS / Const ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + RRSe ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5590461996885386}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06576034190093033}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Max( ( DDR - Const ),( CRS - CRS ) ) )", "choosing": "( Max( MUC,DS ) + ( ( MUR * RRSe ) / ( MUM + Min( MUR ,MUR ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002761956681064099}, {"determining": "( Max( DDR,( ARS / FirstVNF_RAM_Server ) ) * Min( MDR ,ACS ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6059900736260343}, {"determining": "( ( FirstVNF_RAM / Const ) / Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RMSe + RRSe ) * Min( ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ,DS ) )", "obj1": 0.4068825910931174, "obj2": 0.501803188723984}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),PN )", "choosing": "( ( DS * MLU ) / Min( RMSe ,CS ) )", "obj1": 0.36639676113360325, "obj2": 0.5479720808452274}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.9068825910931174, "obj2": 0.08356068831776141}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),Min( ARS ,AMS ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + MLU ) / ( MUC - MUM ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6398388510214758}, {"determining": "( ( BR / ARS ) - Min( CRS ,ARS ) )", "choosing": "( ( ( DS + DS ) - ( MUR * MLU ) ) + ( ( RRSe - MUR ) * ( MUC / MUM ) ) )", "obj1": 0.645748987854251, "obj2": 0.2930026151984782}, {"determining": "Min( ( FirstVNF_RAM + ( ACS * MDR ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( DS / ( CS + DS ) )", "obj1": 0.3684210526315789, "obj2": 0.5181080807799014}, {"determining": "( Min( ( PN + ( MDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29786182475030093}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.0951417004048583, "obj2": 0.7058870245178303}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.24493927125506074, "obj2": 0.6185043160879323}, {"determining": "( ( BR + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6997584261815009}, {"determining": "( ( ACS * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( CS + DS ) )", "obj1": 0.18218623481781376, "obj2": 0.671215730856455}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUC * MLU ) / ( MUC - RRSe ) )", "obj1": 0.1417004048582996, "obj2": 0.6960982993778019}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS - CRS ) ) ) )", "choosing": "( Max( RCSe,RCSe ) / MUC )", "obj1": 0.9271255060728745, "obj2": 0.07561153583325504}, {"determining": "Min( ( CRS + DDR ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + MUM ) / ( CS + RRSe ) )", "obj1": 0.18218623481781376, "obj2": 0.671215730856455}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.6347393430853989}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) / ( MUC - RRSe ) )", "obj1": 0.1417004048582996, "obj2": 0.6960982993778019}, {"determining": "( Max( ACS,RRS ) * ( ( DDR - DDR ) / Const ) )", "choosing": "( ( ( RRSe - CS ) - ( MUM + MUC ) ) + Max( ( MUC / MLU ),RCSe ) )", "obj1": 0.1659919028340081, "obj2": 0.6882472969380833}, {"determining": "Min( ( FirstVNF_RAM * ACS ) ,FirstVNF_CPU_Server )", "choosing": "Max( ( ( MUR / CS ) / Min( RRSe ,MLU ) ),( MUR - CS ) )", "obj1": 0.1720647773279352, "obj2": 0.6858248159180631}, {"determining": "( ( BR + FirstVNF_CPU_Server ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,MLU ) )", "obj1": 0.17813765182186234, "obj2": 0.6755162973682257}, {"determining": "Max( ( ( ( PN + MDR ) * ( AMS + BR ) ) * Min( Min( FirstVNF_Mem ,RRS ) ,Min( PN ,ARS ) ) ),( ( Max( FirstVNF_CPU,CRS ) - ( Const + MDR ) ) + Min( ( FirstVNF_CPU + ARS ) ,Min( CRS ,ACS ) ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MUM + MUC ) ) + Max( ( CS / MLU ),RCSe ) )", "obj1": 0.1659919028340081, "obj2": 0.6882472969380833}, {"determining": "( ( BR + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / ( RRSe * MLU ) )", "obj1": 0.17813765182186234, "obj2": 0.6755162973682257}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) )", "choosing": "( Max( RCSe,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.1680161943319838, "obj2": 0.6875788226186}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.6347393430853989}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS - CRS ) ) )", "choosing": "( Max( RCSe,DS ) + ( Max( MUR,RRSe ) / ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ARS ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR / MUM ) ) + ( ( MLU / MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Max( ( RMSe / DS ),Min( DS ,RRSe ) ) - ( ( DS - RCSe ) / ( MUM - MUR ) ) ) - ( ( Min( MLU ,CS ) / Min( MUC ,CS ) ) + Min( ( CS - DS ) ,Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - Const ) ,Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUR ) / MUC ) * Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( MDR ,Min( Const ,MRS ) ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUM / MUM ) ) + ( ( MLU / MUR ) / ( MUM - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( MDR ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + RRS ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUM / RCSe ) ) + ( ( MLU / MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) / ( Max( ARS,PN ) - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / Min( MLU ,( DS * ( MUM + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Max( ( FirstVNF_Mem + FirstVNF_RAM_Server ),( CRS - CRS ) ) )", "choosing": "( Max( MUC,DS ) + ( ( MUR * RRSe ) / ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,AMS ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUM / MUM ) ) + ( ( ( MUC + MLU ) / ( MLU / CS ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( MDR ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) / ( CS + MUR ) ) + ( ( MUC + MLU ) / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) - Min( ( ( DDR / FirstVNF_RAM_Server ) + CRS ) ,ARS ) )", "choosing": "( ( ( DS + DS ) - ( MUR * MLU ) ) + ( ( RMSe * MUR ) * ( DS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Max( Min( ARS ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + MLU ) / ( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ARS ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( MUC - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + DS ) )", "obj1": 0.07692307692307693, "obj2": 0.7380738641568758}, {"determining": "Min( ( FirstVNF_Mem - Max( Min( FirstVNF_CPU_Server ,( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / ( MDR - FirstVNF_CPU_Server ) ) ) ) ,( ( Min( ( FirstVNF_RAM_Server + ( MRS * CRS ) ) ,FirstVNF_Mem ) / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Max( ( MUM + MUR ),( MUM + MUM ) ) ) / Max( MLU,( ( MLU * MUM ) * ( RCSe + MLU ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.44100133193908153}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.3622110408098138}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.742914979757085, "obj2": 0.1614513140854063}, {"determining": "Min( Min( ( CRS - CRS ) ,ARS ) ,( DDR - FirstVNF_Mem ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.7348178137651822, "obj2": 0.23208288996239998}, {"determining": "( Min( ( PN + ( DDR / Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS - CRS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( ( MUR * RRSe ) / ( MUM + MUC ) ) )", "obj1": 0.631578947368421, "obj2": 0.28413335443181653}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_Mem_Server - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),Min( Max( RRSe,RRSe ) ,( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.11871158142535067}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( DS + DS ) - ( MUR * MLU ) ) + ( ( RMSe * MUR ) * ( DS / MUM ) ) )", "obj1": 0.9534412955465587, "obj2": 0.0482882248125887}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),Min( ARS ,AMS ) ) * ( ( BR / ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) + ( Max( MUM,RRSe ) + ( ( MLU + MLU ) / ( CS - MUM ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4687474811916031}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( CS,( MLU / MUR ) ) / ( MUC - RMSe ) )", "obj1": 0.1862348178137652, "obj2": 0.64845008443061}, {"determining": "( ( BR + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3643724696356275, "obj2": 0.5153705831149937}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3076923076923077, "obj2": 0.5332196405579729}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.9068825910931174, "obj2": 0.08356068831776141}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Max( ( DDR - Const ),( CRS - CRS ) ) )", "choosing": "( Max( MUC,DS ) + ( ( MUR * RRSe ) / ( MUM + Min( MUR ,MUR ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002761956681064099}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU / MUR ) / MUC ) * Max( MLU,MLU ) )", "obj1": 0.14777327935222673, "obj2": 0.669130743064318}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( MUM * CS ) - RMSe ) )", "obj1": 0.22267206477732793, "obj2": 0.6291716013034526}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( ( ACS * DDR ) + Max( MRS,DDR ) ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( CS + DS ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.7408906882591093, "obj2": 0.21583208178413146}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.8441295546558705, "obj2": 0.10116442791789343}, {"determining": "( Max( DDR,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( ( ( Min( ( RMSe / CS ) ,Min( RCSe ,MUM ) ) / ( Min( CS ,RMSe ) + Min( MUR ,RCSe ) ) ) * MLU ) ,( MUC / CS ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5789948056856141}, {"determining": "( Min( ( PN + ( MDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3117148466194717}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUC * MLU ) / ( MUC - RRSe ) )", "obj1": 0.1417004048582996, "obj2": 0.6960982993778019}, {"determining": "( AMS / ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.242914979757085, "obj2": 0.5998913667658953}, {"determining": "( ( Max( ( RRS / Const ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + RRSe ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5590461996885386}, {"determining": "( ( FirstVNF_RAM / Const ) / Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RMSe + RRSe ) * Min( ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ,DS ) )", "obj1": 0.4190283400809717, "obj2": 0.48260723397802635}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - Const ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2960941190311983}, {"determining": "( ( RRS / Const ) / Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RMSe + RRSe ) * Min( ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ,MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5105790367339812}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5620604912407229}, {"determining": "Min( ( CRS + DDR ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + MUM ) / ( CS + RRSe ) )", "obj1": 0.2388663967611336, "obj2": 0.6110769100349032}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06576034190093033}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - FirstVNF_CPU ) ) ,Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( Min( ( PN - ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * ( DS - MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3117148466194717}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6255060728744939, "obj2": 0.29335429870931995}, {"determining": "( ( BR + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6997584261815009}, {"determining": "( ( FirstVNF_RAM / Const ) / Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RMSe + RRSe ) * Min( ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ,DS ) )", "obj1": 0.4068825910931174, "obj2": 0.501803188723984}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.9210526315789473, "obj2": 0.0761733200729701}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.8441295546558705, "obj2": 0.10116442791789343}, {"determining": "( ( RRS / Const ) / Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RMSe + RRSe ) * Min( ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ,MUM ) )", "obj1": 0.4068825910931174, "obj2": 0.501803188723984}, {"determining": "( Max( DDR,( ARS / FirstVNF_RAM_Server ) ) * Min( MDR ,( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( MUC - CS ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07066551970546263}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7027417884911475}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.09109311740890688, "obj2": 0.7061999152236519}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) / ( MUC - RRSe ) )", "obj1": 0.1417004048582996, "obj2": 0.6960982993778019}, {"determining": "( ( BR + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6997584261815009}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6255060728744939, "obj2": 0.29335429870931995}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.0951417004048583, "obj2": 0.7058870245178303}, {"determining": "Min( Max( RRS,Const ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + RRSe ) )", "obj1": 0.0951417004048583, "obj2": 0.7058870245178303}, {"determining": "( ( BR - PN ) / ( FirstVNF_Mem / MDR ) )", "choosing": "Min( Max( MUM,RRSe ) ,( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS - CRS ) ) )", "choosing": "( Max( RCSe,DS ) + ( Max( MUR,RRSe ) / ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ARS ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR / MUM ) ) + ( ( MLU / MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS - CRS ) ) ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * DS ) / ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ARS ,AMS ),( FirstVNF_CPU_Server / CRS ) ) + ( Max( MDR,BR ) * Min( MRS ,Const ) ) ) * Min( ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ,( ( CRS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) * ( MLU * MUC ) ) * ( ( RRSe * MLU ) * Min( RMSe ,DS ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + MLU ) / ( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06882591093117409, "obj2": 0.738075337328662}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),Min( ARS ,AMS ) ) * ( ( BR / ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( ( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) * MLU ) ,( MUC - CS ) ) )", "obj1": 0.47368421052631576, "obj2": 0.41038041187731156}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - ( MRS * Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.34421727452881723}, {"determining": "( Min( FirstVNF_Mem ,( Min( ( PN + ( FirstVNF_CPU_Server / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) ) ) - ( CRS / DDR ) )", "choosing": "( ( MUR / CS ) / Min( DS ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.22328030677072075}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.742914979757085, "obj2": 0.1614513140854063}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4518879936261557}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( ( FirstVNF_CPU_Server - Const ) - Min( FirstVNF_CPU ,BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,DS ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6396761133603239, "obj2": 0.25726921583228024}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.8178137651821862, "obj2": 0.12094948759382518}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.7165991902834008, "obj2": 0.1747117927048577}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( DDR / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( MUM,RCSe ) / ( RMSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.646743811218031}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.618191873588007}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3603238866396761, "obj2": 0.49604850390810273}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3319838056680162, "obj2": 0.5319430178576906}, {"determining": "( Min( ( PN + ( ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),Min( MUR ,RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.328992364005406}, {"determining": "( ( ( PN - ACS ) + Min( Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.8825910931174089, "obj2": 0.09143319551583727}, {"determining": "( ( Max( ( RRS / Const ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + RRSe ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5590461996885386}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4008097165991903, "obj2": 0.4727931926693745}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - Const ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2960941190311983}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Max( ( DDR - Const ),( CRS - CRS ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.97165991902834, "obj2": 0.01268728914558446}, {"determining": "( ( CRS + FirstVNF_RAM ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( RCSe / ( Min( RRSe ,RMSe ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6958157676203546}, {"determining": "( AMS / ( ( FirstVNF_CPU_Server - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUC + MUM ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6135740586928295}, {"determining": "( Min( ( PN + ( DDR / Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS - CRS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( ( MUR * RRSe ) / ( MUM + MUC ) ) )", "obj1": 0.631578947368421, "obj2": 0.28413335443181653}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5620604912407229}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.9655870445344129, "obj2": 0.034991781244996835}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( FirstVNF_Mem,PN ) ) )", "choosing": "( Min( ( CS + MUC ) ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.8441295546558705, "obj2": 0.1011134823728961}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3076923076923077, "obj2": 0.5332196405579729}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4951073184569791}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6255060728744939, "obj2": 0.29335429870931995}, {"determining": "( Max( DDR,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( ( ( Min( ( RMSe / CS ) ,Min( RCSe ,MUM ) ) / ( Min( CS ,RMSe ) + Min( MUR ,RCSe ) ) ) * MLU ) ,( MUC / CS ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5789948056856141}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.9311740890688259, "obj2": 0.0643751739505655}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( DS + DS ) - ( MUR * MLU ) ) + ( ( RMSe * MUR ) * ( DS / MUM ) ) )", "obj1": 0.9534412955465587, "obj2": 0.0482882248125887}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Max( ( DDR - Const ),( CRS - CRS ) ) )", "choosing": "( Max( MUC,DS ) + ( ( MUR * RRSe ) / ( MUM + Min( MUR ,MUR ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002761956681064099}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + DS ) )", "obj1": 0.07692307692307693, "obj2": 0.7380738641568758}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3967611336032389, "obj2": 0.48344014713268396}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_Mem_Server - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),Min( Max( RRSe,RRSe ) ,( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.11871158142535067}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.9048582995951417, "obj2": 0.08536225464728116}, {"determining": "( AMS / ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.242914979757085, "obj2": 0.5998913667658953}, {"determining": "( AMS / ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU / BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.242914979757085, "obj2": 0.5998913667658953}, {"determining": "( Max( DDR,( ( Max( ( FirstVNF_Mem_Server + AMS ),Min( ARS ,AMS ) ) * ( ( BR / ( ( RRS - ARS ) + Min( CRS ,FirstVNF_Mem ) ) ) * ( DDR / FirstVNF_RAM ) ) ) / FirstVNF_Mem ) ) * Min( MDR ,ACS ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( ( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / MLU ) * MLU ) ,( MUC - CS ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5789948056856141}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.840080971659919, "obj2": 0.10371694963960046}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ) ) ) - ( CS + CS ) )", "obj1": 0.5769230769230769, "obj2": 0.31441576518790365}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,CRS ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.04704849289747132}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.9129554655870445, "obj2": 0.07566491765433363}, {"determining": "( Min( ( PN + ( MDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3117148466194717}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( FirstVNF_Mem,PN ) ) )", "choosing": "( RRSe * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.11966476606897002}, {"determining": "( Max( DDR,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( ( ( Min( ( RMSe / CS ) ,Min( RCSe ,MUM ) ) / ( Min( CS ,RMSe ) + Min( MUR ,RCSe ) ) ) * MLU ) ,( MUC / CS ) ) )", "obj1": 0.23481781376518218, "obj2": 0.6038592523724594}, {"determining": "( ( ( PN - ACS ) + Min( ( CRS / DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,MUR ) * Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.08314814203976723}], "5": [{"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Max( ( DDR - Const ),( BR - MRS ) ) )", "choosing": "( Min( MUC ,DS ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS - CRS ) ) ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * DS ) / ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7400044254455469}, {"determining": "( ( ( PN - ACS ) + Min( Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ,FirstVNF_Mem ) ) / ( MDR - ( ARS * BR ) ) )", "choosing": "( ( ( CS / ( ( MUR + RMSe ) + ( Max( ( RMSe / CS ),Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - ( CS + MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.46963562753036436, "obj2": 0.40491445748678495}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.742914979757085, "obj2": 0.1614513140854063}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.13144057257348066}, {"determining": "( Min( FirstVNF_Mem ,( Min( ( PN + ( FirstVNF_CPU_Server / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) ) ) - ( CRS / DDR ) )", "choosing": "( ( MUR / CS ) / Min( DS ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.22328030677072075}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server + Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + MUR ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.5951417004048583, "obj2": 0.267099325333705}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4518879936261557}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM * ARS ) ) ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( Min( CS ,( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.7024291497975709, "obj2": 0.18989612995237878}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.34421727452881723}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / BR ) ) + ( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( RMSe / MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6943268686705582}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.618191873588007}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( DDR / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( MUM,RCSe ) / ( RMSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.646743811218031}, {"determining": "( AMS / ( ( FirstVNF_CPU_Server - Const ) / ( Max( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ),Max( MDR,DDR ) ) - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Max( DS,MUM ) ) / ( ( RRSe * RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.5135660258856107}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4008097165991903, "obj2": 0.4727931926693745}, {"determining": "( ( MRS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( Min( DS ,MUM ) / CS ) * Min( RCSe ,MUM ) ) / ( ( RRSe * RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4518879936261557}, {"determining": "( Min( ( PN + ( DDR / MDR ) ) ,BR ) - ( MRS * Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.34421727452881723}, {"determining": "( AMS / ( ( Const - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),PN ) * MDR ) + Max( MRS,DDR ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( ( Min( DS ,MUM ) / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,Max( MUC,CS ) ) )", "obj1": 0.242914979757085, "obj2": 0.5931544078694625}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3076923076923077, "obj2": 0.5332196405579729}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6396761133603239, "obj2": 0.25726921583228024}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + ACS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + ( ( RMSe * MUR ) * ( DS / MUM ) ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.631578947368421, "obj2": 0.2609868705904915}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + DS ) )", "obj1": 0.07692307692307693, "obj2": 0.7380738641568758}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3603238866396761, "obj2": 0.49604850390810273}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( Min( FirstVNF_Mem ,( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) ) ) - ( CRS / DDR ) )", "choosing": "( ( MUR / CS ) / Min( DS ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.22328030677072075}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( ( FirstVNF_CPU_Server - Const ) - Min( FirstVNF_CPU ,BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,DS ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6396761133603239, "obj2": 0.25726921583228024}, {"determining": "( AMS / ( ( FirstVNF_CPU_Server - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUC + MUM ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6135740586928295}, {"determining": "Min( ( ( ( PN - ACS ) + Min( Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ,FirstVNF_Mem ) ) + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( ACS - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( ( CS / ( ( MUR + RMSe ) + Min( RMSe ,RMSe ) ) ) - ( CS + MUC ) ) ) ) ) - ( CS + CS ) )", "obj1": 0.8805668016194332, "obj2": 0.09574290961088394}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( FirstVNF_Mem,PN ) ) )", "choosing": "( Min( ( CS + MUC ) ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.8441295546558705, "obj2": 0.1011134823728961}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.2975708502024291, "obj2": 0.5507498851158493}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.15384615384615385, "obj2": 0.6498269993815311}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3319838056680162, "obj2": 0.5319430178576906}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.7165991902834008, "obj2": 0.1747117927048577}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( RRS / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.9615384615384616, "obj2": 0.030427296773273216}, {"determining": "( ( ( PN - ACS ) + Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( RMSe + Min( MUR ,RCSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.080443024199285}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.2651821862348178, "obj2": 0.5790129543409203}, {"determining": "( ( ( PN + ( DDR / Max( DDR,( ARS / FirstVNF_Mem ) ) ) ) - BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( DS * ( MUM + CS ) ) * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5425101214574899, "obj2": 0.340383810434212}, {"determining": "( Min( ( PN + ( DDR / Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS - CRS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( RMSe / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.3286986685706922}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4951073184569791}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - Const ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) ) ) ) )", "choosing": "( Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5668016194331984, "obj2": 0.3140563650889604}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - Const ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2960941190311983}, {"determining": "( Min( ( PN + Min( ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ,( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),Min( MUR ,RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( CS / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.05557372799676582}, {"determining": "( Min( ( Min( ( PN + ( DDR / Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS - CRS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( ( MUR * RRSe ) / ( MUM + MUC ) ) ) * MLU ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3044026791923259}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.2874493927125506, "obj2": 0.557128780402174}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_Mem_Server - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),Min( Max( RRSe,RRSe ) ,( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.11871158142535067}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.7145748987854251, "obj2": 0.1754529046392948}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.618191873588007}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,MLU ) ,( MUC - CS ) ) )", "obj1": 0.840080971659919, "obj2": 0.10371694963960044}], "6": [{"determining": "( ( Max( ( ( ( ( ( Const - AMS ) / Max( FirstVNF_RAM_Server,PN ) ) + ( Max( PN,PN ) + ( PN - FirstVNF_RAM_Server ) ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( DDR / ARS ) ) + ( ( DDR - DDR ) + ( FirstVNF_RAM_Server / BR ) ) ) ) + Min( Min( ( ( DDR / Const ) - ( Const / FirstVNF_Mem_Server ) ) ,( Min( ARS ,PN ) + ( CRS * DDR ) ) ) ,Max( ( ( CRS * ACS ) + Max( ACS,BR ) ),( Max( DDR,RRS ) * Min( RRS ,ACS ) ) ) ) ),( ( Max( ( ( DDR / MDR ) * Max( MDR,RRS ) ),Min( ( RRS * PN ) ,( RRS + DDR ) ) ) - ( Max( Min( BR ,Const ),( FirstVNF_RAM / Const ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) / ( Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / ( Max( Max( PN,MDR ),( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM_Server * CRS ) ) ) ) ) ) * ( ( ( ( Max( Max( ACS,RRS ),Min( CRS ,AMS ) ) * Max( ( Const / FirstVNF_Mem_Server ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) + Max( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ACS,PN ) ),Min( ( Const + DDR ) ,Min( MRS ,RRS ) ) ) ) / Max( Max( ( Min( RRS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server - MRS ) * ( DDR * FirstVNF_RAM_Server ) ) ),Min( ( Min( ARS ,BR ) - ( ACS * RRS ) ) ,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( BR * PN ) ) ) ) ) * ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / ACS ) ) - Min( ( PN * Const ) ,Max( Const,RRS ) ) ) + Min( ( Min( DDR ,FirstVNF_CPU ) - ( ARS * RRS ) ) ,( Max( BR,ARS ) / ( MDR - AMS ) ) ) ) + ( ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_Mem * CRS ) ) / Min( ( ARS * FirstVNF_RAM_Server ) ,( AMS + CRS ) ) ) * ( ( Min( MRS ,ACS ) * Max( RRS,FirstVNF_CPU ) ) - Max( ( CRS / CRS ),( FirstVNF_RAM + ARS ) ) ) ) ) ) ) - ( ( ( ( Min( ( ( MDR - BR ) - ( MDR - PN ) ) ,( Min( PN ,AMS ) / ( CRS + BR ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,( ARS * AMS ) ) ) ) - Min( Max( ( ( FirstVNF_CPU_Server / ARS ) * Max( FirstVNF_CPU_Server,ACS ) ),( ( ACS / PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( RRS + FirstVNF_CPU ) ) - Max( Min( CRS ,DDR ),Min( MDR ,PN ) ) ) ) ) / Max( ( ( Max( ( ARS / Const ),( Const + RRS ) ) - Min( ( FirstVNF_CPU_Server + BR ) ,Max( MRS,ARS ) ) ) + ( ( ( MDR - DDR ) / ( FirstVNF_CPU_Server - DDR ) ) + Max( Max( FirstVNF_CPU,CRS ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ),( Max( ( Max( ACS,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + Const ) ),( ( AMS * MDR ) + ( ARS * FirstVNF_RAM_Server ) ) ) / Min( ( Min( MRS ,FirstVNF_Mem ) / ( ARS * FirstVNF_Mem_Server ) ) ,( ( ARS * FirstVNF_RAM ) + ( PN * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( ( Max( Max( Min( FirstVNF_RAM_Server ,PN ),( RRS * ARS ) ),( ( FirstVNF_CPU * FirstVNF_RAM ) / Max( Const,MDR ) ) ) / ( ( ( FirstVNF_CPU_Server * ARS ) + ( DDR - FirstVNF_CPU ) ) / Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server * MRS ) ) ) ) / ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,Max( CRS,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( MDR - RRS ) ) / ( ( FirstVNF_RAM * Const ) + ( RRS * MRS ) ) ) ) ) + ( Max( Min( Min( ( ARS / Const ) ,( BR - PN ) ) ,Max( ( FirstVNF_CPU_Server + MRS ),( AMS - FirstVNF_Mem_Server ) ) ),( ( ( MDR + FirstVNF_RAM_Server ) / ( DDR * ARS ) ) * ( ( BR - DDR ) / ( RRS / MRS ) ) ) ) - Max( Max( ( ( MDR * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - PN ) ),( Max( ACS,FirstVNF_CPU ) - Max( FirstVNF_Mem,AMS ) ) ),Max( ( ( Const + RRS ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( MDR * ACS ) * Min( FirstVNF_RAM ,Const ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( ( ( ( Max( DS,RRSe ) * ( CS * MUR ) ) - Max( Max( RMSe,CS ),( MLU * MLU ) ) ) - Min( ( ( MUR / MUC ) - ( MUR / MLU ) ) ,( ( RRSe / MUR ) * ( RCSe - MUM ) ) ) ),( ( ( ( MLU + CS ) + Max( MUR,MUC ) ) / ( ( CS * RMSe ) * ( MLU + CS ) ) ) * ( Max( ( CS - CS ),( MUM + MLU ) ) * ( ( MLU * CS ) * Max( RCSe,RMSe ) ) ) ) ) ,( ( ( ( ( CS + MUR ) * ( MUM - MUC ) ) * ( ( MUM - MUM ) / ( MLU + MUM ) ) ) - ( ( ( MLU + RRSe ) / ( MLU - RRSe ) ) + Max( Min( RRSe ,RRSe ),Min( MUM ,DS ) ) ) ) - Min( ( ( ( MUC - CS ) * ( DS * MUM ) ) + ( Max( RRSe,MUC ) / Min( RCSe ,RRSe ) ) ) ,Max( ( Min( MUC ,RRSe ) / ( DS + DS ) ),( Min( MUM ,RMSe ) - ( MUC * MUM ) ) ) ) ) ) * Max( Min( Max( ( ( Max( MLU,MLU ) * Max( RRSe,MUM ) ) - ( ( MUR - DS ) / ( RCSe * MUR ) ) ),( ( ( MUM - MUM ) + Max( CS,MUC ) ) + ( ( DS + MUR ) - ( MUR * MUC ) ) ) ) ,Max( Min( Max( ( RCSe * MUC ),Max( CS,RRSe ) ) ,Min( ( MUM + MUC ) ,( MUR - RMSe ) ) ),( ( ( RCSe / MUR ) * ( MUC * MLU ) ) - Max( ( RCSe * MUC ),Max( RMSe,MUM ) ) ) ) ),Min( ( ( ( Min( MUC ,MLU ) * Min( MLU ,MLU ) ) + ( ( MUM * CS ) - ( RMSe - DS ) ) ) / ( Max( ( MUR - RMSe ),Max( RCSe,MLU ) ) + ( ( MUC * CS ) / Max( CS,CS ) ) ) ) ,Max( ( ( Min( RMSe ,RCSe ) - ( MUC + MUC ) ) / Max( Min( RRSe ,RRSe ),( RMSe * RCSe ) ) ),( ( ( RCSe - MUR ) - ( MUC / RMSe ) ) - ( ( RMSe * RMSe ) / ( CS / MUC ) ) ) ) ) ) ) * Max( Min( ( Max( ( Min( Max( RMSe,MLU ) ,( MUC * MUC ) ) + Min( ( DS + DS ) ,( RRSe + CS ) ) ),( ( Max( DS,RMSe ) + Max( CS,MUR ) ) + Min( Min( RCSe ,MUM ) ,Min( MLU ,DS ) ) ) ) + ( ( ( ( RMSe / MUR ) + Min( MUM ,MUM ) ) / Max( ( MUR - MUR ),Min( RRSe ,MUR ) ) ) * Min( ( ( RRSe / DS ) / ( MUM + MLU ) ) ,Max( Max( RMSe,RRSe ),( MLU * DS ) ) ) ) ) ,Max( ( ( Min( ( MUM - RRSe ) ,( CS * RRSe ) ) / Max( ( DS - MUR ),( RMSe + RRSe ) ) ) * Min( ( ( MUM / MLU ) * ( MLU / DS ) ) ,( ( CS * MUR ) - ( CS - DS ) ) ) ),( Max( ( ( RMSe - RRSe ) - ( RMSe / MUR ) ),Min( ( DS + DS ) ,Max( RRSe,MLU ) ) ) * ( ( ( MUC * MUC ) - ( MUR + RMSe ) ) * ( ( DS + MLU ) + Min( MUM ,CS ) ) ) ) ) ),( Min( ( ( ( ( CS * RMSe ) - Min( MUM ,RCSe ) ) - ( Max( DS,RMSe ) + Min( MUR ,RMSe ) ) ) + ( ( Max( MUM,MUM ) * ( CS - RMSe ) ) * Min( ( RMSe + RRSe ) ,( MLU * MUC ) ) ) ) ,( Min( ( Max( MUR,MUC ) + Max( MLU,MUR ) ) ,Min( ( MUM * RRSe ) ,( RRSe + MUC ) ) ) - ( ( ( MLU * RCSe ) - Min( MLU ,MUC ) ) + Min( Min( MUC ,DS ) ,Max( CS,DS ) ) ) ) ) + Min( Min( Min( ( ( RCSe * MUR ) / ( CS - MUM ) ) ,( ( MLU * MUC ) / Max( MUM,RMSe ) ) ) ,( ( ( MLU * RCSe ) / ( RRSe - MUM ) ) / Min( ( RMSe - CS ) ,Max( RCSe,RMSe ) ) ) ) ,( ( ( ( DS * DS ) / ( MLU / MUR ) ) - Max( Min( CS ,MUC ),( MLU + MUR ) ) ) + ( Max( ( MLU - MUM ),( RMSe / DS ) ) - ( ( RRSe / MUC ) + Max( MLU,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + MRS ) - Min( MDR ,FirstVNF_CPU ) ) * Max( ( DDR - Const ),( BR - MRS ) ) )", "choosing": "( Min( MUC ,DS ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7400044254455469}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU / BR ) ) ) ) ) ,BR ) - ( MRS - Max( BR,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Max( Min( ( ( ( MUR - CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ),( MUC - CS ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4085387606447807}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4716599190283401, "obj2": 0.3350962557377194}, {"determining": "( ( ( PN - ACS ) + Min( Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ,FirstVNF_Mem ) ) / ( MDR - ( ARS * BR ) ) )", "choosing": "( ( ( CS / ( ( MUR + RMSe ) + ( Max( ( RMSe / CS ),Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - ( CS + MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.46963562753036436, "obj2": 0.40491445748678495}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * ( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( DS ,( ( RMSe / CS ) * Min( DS ,MUM ) ) ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4901568057288318}, {"determining": "( Min( ( PN + ( DDR / Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS - CRS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( RMSe / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.3286986685706922}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.805668016194332, "obj2": 0.13940403230346685}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) ) ) ) ,BR ) - ( MRS / Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( RMSe / CS ) * Min( DS ,MUM ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( DS ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.7530364372469636, "obj2": 0.1593046736047253}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.2651821862348178, "obj2": 0.5790129543409203}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server + Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + MUR ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.5951417004048583, "obj2": 0.267099325333705}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.631578947368421, "obj2": 0.2609868705904915}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU * BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( ( RMSe / CS ) * Min( RRSe ,MUM ) ) / CS )", "obj1": 0.6356275303643725, "obj2": 0.23721654652055815}, {"determining": "( Min( FirstVNF_Mem ,( Min( ( PN + ( FirstVNF_CPU_Server / MDR ) ) ,BR ) - ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( RRS / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) - ( CRS / DDR ) )", "choosing": "( ( MUR / CS ) / Min( DS ,( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / ( MUC - RRSe ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.23534627241517586}, {"determining": "( Min( ( PN + ( Max( ARS,PN ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( MDR - ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS / MUC ) )", "obj1": 0.9838056680161943, "obj2": 0.005144077467940741}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5179982314121455}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( RRS / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.9615384615384616, "obj2": 0.030427296773273216}, {"determining": "( Min( FirstVNF_Mem ,( Min( ( PN + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) ) ) - ( CRS / DDR ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( DS * DS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.21591801492999324}, {"determining": "( AMS / ( ( Const - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),PN ) * MDR ) + Max( MRS,DDR ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( ( Min( DS ,MUM ) / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,Max( MUC,CS ) ) )", "obj1": 0.242914979757085, "obj2": 0.5931544078694625}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6894817595818497}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3603238866396761, "obj2": 0.49604850390810273}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3076923076923077, "obj2": 0.5332196405579729}, {"determining": "( Min( ( PN + Min( ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ,( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),Min( MUR ,RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( CS / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.05557372799676582}, {"determining": "( ( ( PN - ACS ) + Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( RMSe + Min( MUR ,RCSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.080443024199285}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_Mem_Server - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),Min( Max( RRSe,RRSe ) ,( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.11871158142535067}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + DS ) )", "obj1": 0.07692307692307693, "obj2": 0.7380738641568758}, {"determining": "( Min( ( PN + ( MDR / ( ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + ( MUC / ( MUC - RRSe ) ) ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6862348178137652, "obj2": 0.22281309966551563}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_Mem_Server - BR ) ) ) ) ) ,BR ) - Min( ( ( MRS + ( FirstVNF_RAM + FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Max( RCSe,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.9190283400809717, "obj2": 0.07783866551963478}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS - CRS ) ) ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( MUC + MUM ) / ( MUC - RRSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6382194009041494}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.15384615384615385, "obj2": 0.6498269993815311}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.7024291497975709, "obj2": 0.18989612995237878}, {"determining": "( ( MRS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * MLU ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.2145748987854251, "obj2": 0.6176058052956488}, {"determining": "( ( ( PN - ACS ) + Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.8744939271255061, "obj2": 0.09799583935295075}, {"determining": "( Min( Min( PN ,( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( RMSe + Min( MUC ,RCSe ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16172957391960974}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.8137651821862348, "obj2": 0.12311712523839823}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR / CS ) / MUM ) * Min( RCSe ,MUM ) ) / DS )", "obj1": 0.23481781376518218, "obj2": 0.6006627131000527}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - Const ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2960941190311983}, {"determining": "( AMS / ( ( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) - Const ) / Max( Max( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ),Max( MRS,DDR ) ),BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Max( DS,MUM ) ) / ( ( ( Max( Min( DS ,MUM ),CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.34615384615384615, "obj2": 0.5052376123348432}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.2874493927125506, "obj2": 0.557128780402174}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.3441295546558704, "obj2": 0.514452666411304}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.2874493927125506, "obj2": 0.557128780402174}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - PN ) ) * Min( MRS ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( ( MUR * RRSe ) / ( MUM + MUC ) ) ) * MLU ) / ( MUC - MUM ) ) / Min( MUR ,RCSe ) )", "obj1": 0.9534412955465587, "obj2": 0.04529091798852145}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.618191873588007}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) ) )", "choosing": "( Min( ( CS + MUC ) ,( DS * ( MUM + RMSe ) ) ) * Min( Min( RRSe ,( ( RMSe / MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.8441295546558705, "obj2": 0.1011134823728961}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.7145748987854251, "obj2": 0.1754529046392948}, {"determining": "( ( ( PN - ACS ) + Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.09178657592849286}, {"determining": "( ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.9271255060728745, "obj2": 0.06681430479120523}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( RRS / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5668016194331984, "obj2": 0.3140563650889604}], "7": [{"determining": "( ( BR + AMS ) / ( ( FirstVNF_Mem - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( ( ( Const - AMS ) / Max( FirstVNF_RAM_Server,PN ) ) + ( Max( PN,PN ) + ( PN - FirstVNF_RAM_Server ) ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( DDR / ARS ) ) + ( ( DDR - DDR ) + ( FirstVNF_RAM_Server / BR ) ) ) ) + Min( Min( ( ( DDR / Const ) - ( Const / FirstVNF_Mem_Server ) ) ,( Min( ARS ,PN ) + ( CRS * DDR ) ) ) ,Max( ( ( CRS * ACS ) + Max( ACS,BR ) ),( Max( DDR,RRS ) * Min( RRS ,ACS ) ) ) ) ),( ( Max( ( ( DDR / MDR ) * Max( MDR,RRS ) ),Min( ( RRS * PN ) ,( RRS + DDR ) ) ) - ( Max( Min( BR ,Const ),( FirstVNF_RAM / Const ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) / ( Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / ( Max( Max( PN,MDR ),( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM_Server * CRS ) ) ) ) ) ) * ( ( ( ( Max( Max( ACS,RRS ),Min( CRS ,AMS ) ) * Max( ( Const / FirstVNF_Mem_Server ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) + Max( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ACS,PN ) ),Min( ( Const + DDR ) ,Min( MRS ,RRS ) ) ) ) / Max( Max( ( Min( RRS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server - MRS ) * ( DDR * FirstVNF_RAM_Server ) ) ),Min( ( Min( ARS ,BR ) - ( ACS * RRS ) ) ,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( BR * PN ) ) ) ) ) * ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / ACS ) ) - Min( ( PN * Const ) ,Max( Const,RRS ) ) ) + Min( ( Min( DDR ,FirstVNF_CPU ) - ( ARS * RRS ) ) ,( Max( BR,ARS ) / ( MDR - AMS ) ) ) ) + ( ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_Mem * CRS ) ) / Min( ( ARS * FirstVNF_RAM_Server ) ,( AMS + CRS ) ) ) * ( ( Min( MRS ,ACS ) * Max( RRS,FirstVNF_CPU ) ) - Max( ( CRS / CRS ),( FirstVNF_RAM + ARS ) ) ) ) ) ) ) - ( ( ( ( Min( ( ( MDR - BR ) - ( MDR - PN ) ) ,( Min( PN ,AMS ) / ( CRS + BR ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,( ARS * AMS ) ) ) ) - Min( Max( ( ( FirstVNF_CPU_Server / ARS ) * Max( FirstVNF_CPU_Server,ACS ) ),( ( ACS / PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( RRS + FirstVNF_CPU ) ) - Max( Min( CRS ,DDR ),Min( MDR ,PN ) ) ) ) ) / Max( ( ( Max( ( ARS / Const ),( Const + RRS ) ) - Min( ( FirstVNF_CPU_Server + BR ) ,Max( MRS,ARS ) ) ) + ( ( ( MDR - DDR ) / ( FirstVNF_CPU_Server - DDR ) ) + Max( Max( FirstVNF_CPU,CRS ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ),( Max( ( Max( ACS,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + Const ) ),( ( AMS * MDR ) + ( ARS * FirstVNF_RAM_Server ) ) ) / Min( ( Min( MRS ,FirstVNF_Mem ) / ( ARS * FirstVNF_Mem_Server ) ) ,( ( ARS * FirstVNF_RAM ) + ( PN * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( ( Max( Max( Min( FirstVNF_RAM_Server ,PN ),( RRS * ARS ) ),( ( FirstVNF_CPU * FirstVNF_RAM ) / Max( Const,MDR ) ) ) / ( ( ( FirstVNF_CPU_Server * ARS ) + ( DDR - FirstVNF_CPU ) ) / Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server * MRS ) ) ) ) / ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,Max( CRS,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( MDR - RRS ) ) / ( ( FirstVNF_RAM * Const ) + ( RRS * MRS ) ) ) ) ) + ( Max( Min( Min( ( ARS / Const ) ,( BR - PN ) ) ,Max( ( FirstVNF_CPU_Server + MRS ),( AMS - FirstVNF_Mem_Server ) ) ),( ( ( MDR + FirstVNF_RAM_Server ) / ( DDR * ARS ) ) * ( ( BR - DDR ) / ( RRS / MRS ) ) ) ) - Max( Max( ( ( MDR * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - PN ) ),( Max( ACS,FirstVNF_CPU ) - Max( FirstVNF_Mem,AMS ) ) ),Max( ( ( Const + RRS ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( MDR * ACS ) * Min( FirstVNF_RAM ,Const ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( ( ( ( Max( DS,RRSe ) * ( CS * MUR ) ) - Max( Max( RMSe,CS ),( MLU * MLU ) ) ) - Min( ( ( MUR / MUC ) - ( MUR / MLU ) ) ,( ( RRSe / MUR ) * ( RCSe - MUM ) ) ) ),( ( ( ( MLU + CS ) + Max( MUR,MUC ) ) / ( ( CS * RMSe ) * ( MLU + CS ) ) ) * ( Max( ( CS - CS ),( MUM + MLU ) ) * ( ( MLU * CS ) * Max( RCSe,RMSe ) ) ) ) ) ,( ( ( ( ( CS + MUR ) * ( MUM - MUC ) ) * ( ( MUM - MUM ) / ( MLU + MUM ) ) ) - ( ( ( MLU + RRSe ) / ( MLU - RRSe ) ) + Max( Min( RRSe ,RRSe ),Min( MUM ,DS ) ) ) ) - Min( ( ( ( MUC - CS ) * ( DS * MUM ) ) + ( Max( RRSe,MUC ) / Min( RCSe ,RRSe ) ) ) ,Max( ( Min( MUC ,RRSe ) / ( DS + DS ) ),( Min( MUM ,RMSe ) - ( MUC * MUM ) ) ) ) ) ) * Max( Min( Max( ( ( Max( MLU,MLU ) * Max( RRSe,MUM ) ) - ( ( MUR - DS ) / ( RCSe * MUR ) ) ),( ( ( MUM - MUM ) + Max( CS,MUC ) ) + ( ( DS + MUR ) - ( MUR * MUC ) ) ) ) ,Max( Min( Max( ( RCSe * MUC ),Max( CS,RRSe ) ) ,Min( ( MUM + MUC ) ,( MUR - RMSe ) ) ),( ( ( RCSe / MUR ) * ( MUC * MLU ) ) - Max( ( RCSe * MUC ),Max( RMSe,MUM ) ) ) ) ),Min( ( ( ( Min( MUC ,MLU ) * Min( MLU ,MLU ) ) + ( ( MUM * CS ) - ( RMSe - DS ) ) ) / ( Max( ( MUR - RMSe ),Max( RCSe,MLU ) ) + ( ( MUC * CS ) / Max( CS,CS ) ) ) ) ,Max( ( ( Min( RMSe ,RCSe ) - ( MUC + MUC ) ) / Max( Min( RRSe ,RRSe ),( RMSe * RCSe ) ) ),( ( ( RCSe - MUR ) - ( MUC / RMSe ) ) - ( ( RMSe * RMSe ) / ( CS / MUC ) ) ) ) ) ) ) * Max( Min( ( Max( ( Min( Max( RMSe,MLU ) ,( MUC * MUC ) ) + Min( ( DS + DS ) ,( RRSe + CS ) ) ),( ( Max( DS,RMSe ) + Max( CS,MUR ) ) + Min( Min( RCSe ,MUM ) ,Min( MLU ,DS ) ) ) ) + ( ( ( ( RMSe / MUR ) + Min( MUM ,MUM ) ) / Max( ( MUR - MUR ),Min( RRSe ,MUR ) ) ) * Min( ( ( RRSe / DS ) / ( MUM + MLU ) ) ,Max( Max( RMSe,RRSe ),( MLU * DS ) ) ) ) ) ,Max( ( ( Min( ( MUM - RRSe ) ,( CS * RRSe ) ) / Max( ( DS - MUR ),( RMSe + RRSe ) ) ) * Min( ( ( MUM / MLU ) * ( MLU / DS ) ) ,( ( CS * MUR ) - ( CS - DS ) ) ) ),( Max( ( ( RMSe - RRSe ) - ( RMSe / MUR ) ),Min( ( DS + DS ) ,Max( RRSe,MLU ) ) ) * ( ( ( MUC * MUC ) - ( MUR + RMSe ) ) * ( ( DS + MLU ) + Min( MUM ,CS ) ) ) ) ) ),( Min( ( ( ( ( CS * RMSe ) - Min( MUM ,RCSe ) ) - ( Max( DS,RMSe ) + Min( MUR ,RMSe ) ) ) + ( ( Max( MUM,MUM ) * ( CS - RMSe ) ) * Min( ( RMSe + RRSe ) ,( MLU * MUC ) ) ) ) ,( Min( ( Max( MUR,MUC ) + Max( MLU,MUR ) ) ,Min( ( MUM * RRSe ) ,( RRSe + MUC ) ) ) - ( ( ( MLU * RCSe ) - Min( MLU ,MUC ) ) + Min( Min( MUC ,DS ) ,Max( CS,DS ) ) ) ) ) + Min( Min( Min( ( ( RCSe * MUR ) / ( CS - MUM ) ) ,( ( MLU * MUC ) / Max( MUM,RMSe ) ) ) ,( ( ( MLU * RCSe ) / ( RRSe - MUM ) ) / Min( ( RMSe - CS ) ,Max( RCSe,RMSe ) ) ) ) ,( ( ( ( DS * DS ) / ( MLU / MUR ) ) - Max( Min( CS ,MUC ),( MLU + MUR ) ) ) + ( Max( ( MLU - MUM ),( RMSe / DS ) ) - ( ( RRSe / MUC ) + Max( MLU,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.4291497975708502, "obj2": 0.382058544187355}, {"determining": "( Min( ( PN + ( MDR / ( ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + ( MUC / ( MUC - RRSe ) ) ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6862348178137652, "obj2": 0.22281309966551563}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.42801631535617796}, {"determining": "( Min( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( MUR ,RCSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.694331983805668, "obj2": 0.16183064150581042}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.46963562753036436, "obj2": 0.3361066781110329}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3603238866396761, "obj2": 0.49604850390810273}, {"determining": "( Min( ( PN + ( Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.08598646444148159}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - Const ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM * CS ) ,MLU ) ,( MUC - CS ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2960941190311983}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.24696356275303644, "obj2": 0.5653067925836399}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.5323886639676113, "obj2": 0.2988758771615769}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5060728744939271, "obj2": 0.3322995895326902}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( PN ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) ) )", "choosing": "( Min( ( CS + MUC ) ,( DS * ( MUM + RMSe ) ) ) * Min( Min( RRSe ,( ( RMSe / MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) ,( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.1527233192829412}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) ) ) ) ,BR ) - ( MRS / Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( RMSe / CS ) * Min( DS ,MUM ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( DS ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.7530364372469636, "obj2": 0.1593046736047253}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( RMSe - Min( CS ,CS ) )", "obj1": 0.6437246963562753, "obj2": 0.23384494849030824}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RCSe / ( ( MUC + RMSe ) + Max( MLU,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.20040485829959515, "obj2": 0.6167432805476494}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6370521179924062}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.520242914979757, "obj2": 0.30804402687362725}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6894817595818497}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + DS ) )", "obj1": 0.07692307692307693, "obj2": 0.7380738641568758}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.631578947368421, "obj2": 0.2609868705904915}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.2874493927125506, "obj2": 0.557128780402174}, {"determining": "( ( ( PN - ACS ) + Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - Max( FirstVNF_CPU,BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( RRSe + Min( MUR ,RCSe ) ) )", "obj1": 0.888663967611336, "obj2": 0.0858636035071616}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.402834008097166, "obj2": 0.4008306140936189}, {"determining": "( AMS / ( ( Const - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),PN ) * MDR ) + Max( MRS,DDR ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( ( Min( DS ,MUM ) / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,Max( MUC,CS ) ) )", "obj1": 0.242914979757085, "obj2": 0.5931544078694625}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - PN ) ) * Min( MRS ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( ( MUR * RRSe ) / ( MUM + MUC ) ) ) * MLU ) / ( MUC - MUM ) ) / Min( MUR ,RCSe ) )", "obj1": 0.9534412955465587, "obj2": 0.04529091798852145}, {"determining": "( Min( ( PN + ( ( ( ( ( PN - ACS ) - AMS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( Max( ( RCSe + MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - RRSe ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),Min( MUR ,RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.0300857827842778}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_Mem_Server - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - ( ( ( RCSe / CS ) + Min( MUC ,DS ) ) - Min( ( MLU / MLU ) ,Min( DS ,MLU ) ) ) ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),Min( Max( RRSe,RRSe ) ,( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.11871158142535067}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( ( Min( DS ,MUM ) / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.305668016194332, "obj2": 0.5391931057503414}, {"determining": "( ( ( PN - ACS ) + Min( Max( ( ( ( PN - ACS ) + Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ),DDR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( RMSe + Min( MUR ,RCSe ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.07590475375011622}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server + Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + MUR ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.5951417004048583, "obj2": 0.267099325333705}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "( Min( Min( PN ,( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( RMSe + Min( MUC ,RCSe ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16172957391960974}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( AMS - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - ( CS + CS ) )", "obj1": 0.597165991902834, "obj2": 0.26487740406575655}, {"determining": "Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,CS ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR / CS ) / MUM ) * Min( RCSe ,MUM ) ) / DS )", "obj1": 0.23481781376518218, "obj2": 0.6006627131000527}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3076923076923077, "obj2": 0.5332196405579729}, {"determining": "( Min( ( PN - ACS ) ,Min( Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ) / ( MDR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - ( MLU + MUC ) ) / ( Min( RRSe ,RMSe ) + RMSe ) )", "obj1": 0.9251012145748988, "obj2": 0.05861062104836574}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( RRS / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.9615384615384616, "obj2": 0.030427296773273216}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.805668016194332, "obj2": 0.13940403230346685}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.6356275303643725, "obj2": 0.23721654652055815}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + Min( ( MRS + MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( Min( MUC ,DS ) ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6958362393853694}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( ( Min( DS ,MUM ) - CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.32388663967611336, "obj2": 0.5198506505110384}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.15384615384615385, "obj2": 0.6498269993815311}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.618191873588007}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4716599190283401, "obj2": 0.3350962557377194}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( Max( ( ( FirstVNF_CPU_Server - Const ) / ( FirstVNF_CPU - BR ) ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.1396761133603239, "obj2": 0.6631025630134578}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.8137651821862348, "obj2": 0.12311712523839823}, {"determining": "( Min( ( PN + ( Max( ARS,PN ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.9838056680161943, "obj2": 0.005144077467940741}], "8": [{"determining": "( Min( ( PN - ACS ) ,Min( Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ) / ( MDR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_Mem - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.631578947368421, "obj2": 0.18859954048977265}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.3603238866396761, "obj2": 0.49604850390810273}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + MRS ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( CS + RCSe ) ) / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.2550607287449393, "obj2": 0.5319720333660213}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( RMSe - Min( CS ,CS ) )", "obj1": 0.6295546558704453, "obj2": 0.23835275572817616}, {"determining": "( Min( ( PN + ( Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.08576172115040855}, {"determining": "( Min( ( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( MDR / ( PN / Max( BR,( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / MLU ) * ( CS / RMSe ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( MUR ,RCSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.28109117477823026}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.402834008097166, "obj2": 0.4008306140936189}, {"determining": "( Min( ( PN + ( Min( ( DDR / DDR ) ,FirstVNF_Mem ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( Min( RRSe ,( ( Min( MUC ,DS ) + RMSe ) * MLU ) ) / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.05838201157846565}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Const ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( MUM * CS ) ) ) ) - ( CS + CS ) )", "obj1": 0.37044534412955465, "obj2": 0.44322227412010307}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.37489126786844124}, {"determining": "( Min( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.6781376518218624, "obj2": 0.1686730249983711}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - Min( MRS ,Max( ARS,PN ) ) ) ) * ARS ) )", "choosing": "( Min( RCSe ,MUM ) - ( CS + MUC ) )", "obj1": 0.31983805668016196, "obj2": 0.5153567014918107}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26530557830908674}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - Const ) ) ) / ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) ) ) ) ,BR ) - ( MRS / Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( MUM * MUR ) / ( MLU - CS ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( RMSe / CS ) * Min( DS ,MUM ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( DS ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.7955465587044535, "obj2": 0.13992462146015083}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server + Const ) * ( FirstVNF_CPU - BR ) ) ) ) ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) - Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 0.742914979757085, "obj2": 0.15838276921245256}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.42801631535617796}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.46963562753036436, "obj2": 0.3361066781110329}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5060728744939271, "obj2": 0.3322995895326902}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR / CS ) / MUM ) * Min( RCSe ,MUM ) ) / DS )", "obj1": 0.23481781376518218, "obj2": 0.6006627131000527}, {"determining": "( Min( ( PN + ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.10343277174342984}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RCSe / ( ( MUC + RMSe ) + Max( MLU,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.20040485829959515, "obj2": 0.6167432805476494}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( AMS - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - ( CS + CS ) )", "obj1": 0.597165991902834, "obj2": 0.2639013792835282}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.4291497975708502, "obj2": 0.382058544187355}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / MUR ) * Min( DS ,MUM ) ) / ( ( CS + MUC ) + Min( MUR ,RCSe ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.32388663967611336, "obj2": 0.512144100669339}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + DS ) )", "obj1": 0.07692307692307693, "obj2": 0.7380738641568758}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( PN - ACS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.9048582995951417, "obj2": 0.05659317121742414}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6840095345449726}, {"determining": "( Min( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( MUR ,RCSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.694331983805668, "obj2": 0.16183064150581042}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.520242914979757, "obj2": 0.30804402687362725}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.24898785425101214, "obj2": 0.564475238962496}, {"determining": "( ( ( PN - PN ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.618191873588007}, {"determining": "( Min( Min( PN ,( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( RMSe + Min( MUC ,RCSe ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16172957391960974}, {"determining": "Min( ( Min( ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Min( DS ,MUM ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.9352226720647774, "obj2": 0.052542229434167524}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( MDR ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * ( ( ( RMSe / CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.17611336032388664, "obj2": 0.6361751179927584}, {"determining": "( ( Max( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.08097165991902834, "obj2": 0.7168632304912382}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4716599190283401, "obj2": 0.3350962557377194}, {"determining": "( ( ( PN + ( ( ( ( ( PN - ACS ) - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) ) / BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( ( ( RRSe / MLU ) + ( MLU * RRSe ) ) - ( ( RCSe * MLU ) + ( MUC / DS ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + DS ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( RMSe / CS ) * Min( DS ,MUM ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),( RRSe - RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( DS ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.02421372600567154}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.5222672064777328, "obj2": 0.3049151136386603}, {"determining": "( ( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) / BR ) - Min( MRS ,Max( ARS,( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + MUM ) / ( ( ( MUR + RMSe ) + ( Max( CS,RCSe ) / ( MUC / RMSe ) ) ) + DS ) )", "obj1": 0.805668016194332, "obj2": 0.13577627261425199}, {"determining": "( AMS / ( ( BR - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( Min( DS ,MUM ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( RMSe * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5922699325749115}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.24696356275303644, "obj2": 0.5653067925836399}, {"determining": "( Min( ( PN + ( Max( ARS,PN ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.9838056680161943, "obj2": 0.005144077467940741}, {"determining": "Min( ( PN + ( MDR / ( ( ( BR + AMS ) / ( ( FirstVNF_Mem - Const ) - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server + Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + MUR ) + ( ( ( RMSe / ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.0931174089068826, "obj2": 0.705430923153773}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( RRS / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.9615384615384616, "obj2": 0.030427296773273216}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( ACS - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - Min( MRS ,Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( MLU ,MUM ) ) / CS )", "obj1": 0.8157894736842105, "obj2": 0.12158029287250824}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU + BR ) ) )", "choosing": "( Min( MUM ,( DS / ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6370521179924062}, {"determining": "( Min( ( PN + ( ( ( ( ( PN - ACS ) - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "Min( ( ( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + MUC ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( Max( Max( Max( MUC,MUR ),( DS - MLU ) ),Max( ( RCSe - MLU ),( CS - MUR ) ) ) / Min( ( ( MUR - RRSe ) + Max( MUR,MUM ) ) ,Min( Min( MLU ,MUR ) ,Max( CS,MUC ) ) ) ) ) * ( ( Max( ( Min( RCSe ,RCSe ) * ( MUC / RMSe ) ),( ( DS / MUR ) / ( MUC + MUC ) ) ) * ( ( Max( DS,DS ) / ( CS - CS ) ) + ( Min( RCSe ,MLU ) / ( MLU + DS ) ) ) ) / Max( ( Max( Max( MUR,RRSe ),Max( RRSe,CS ) ) * ( ( MLU * RRSe ) / ( MLU + RCSe ) ) ),( Min( Min( MUC ,DS ) ,( CS * CS ) ) / ( ( CS - MUC ) + ( MUC * DS ) ) ) ) ) ) - ( ( ( ( Min( Max( RRSe,RMSe ) ,( MLU * RMSe ) ) + Min( ( RRSe + MUM ) ,( CS * MLU ) ) ) + ( Max( ( RCSe * MUR ),( MLU / MLU ) ) + ( ( MLU + DS ) / ( MUC - MUM ) ) ) ) - ( Min( ( Min( MLU ,CS ) * ( MUM + RRSe ) ) ,Min( ( MLU - MLU ) ,( MUR / RRSe ) ) ) - ( ( Max( MLU,DS ) + Min( RRSe ,RCSe ) ) * ( Max( CS,RCSe ) / Min( RCSe ,RCSe ) ) ) ) ) + ( ( Max( Min( ( MLU * MUR ) ,Min( RRSe ,MUM ) ),( ( CS / RRSe ) / Min( DS ,MUC ) ) ) * Max( Min( Max( DS,RMSe ) ,( MLU * CS ) ),( ( MUM / RRSe ) + ( DS + RRSe ) ) ) ) + Min( ( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ,( ( Max( MUC,CS ) + ( RRSe + RCSe ) ) * Min( Min( MLU ,CS ) ,Max( RCSe,RRSe ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( MUR / CS ) - ( CS / MUM ) ) - Max( ( RRSe - DS ),( MUC - MUR ) ) ) ,Max( ( ( MLU / RRSe ) * Min( MUM ,RMSe ) ),Max( ( RMSe - MUC ),Min( MUR ,MUR ) ) ) ) / Min( ( ( ( MUR / RRSe ) * Max( MLU,MUR ) ) + ( ( RMSe + DS ) + ( CS / MUR ) ) ) ,( ( Min( CS ,MUC ) * ( CS - RMSe ) ) - ( Min( RRSe ,MLU ) * ( DS / DS ) ) ) ) ) + ( ( Max( Min( ( RCSe - DS ) ,( RRSe - CS ) ),( Max( MUR,MUR ) - Min( RCSe ,CS ) ) ) - RRSe ) - ( ( ( Min( MUC ,MUM ) + ( RMSe - MLU ) ) / ( Max( MUM,MUM ) + ( RRSe - MLU ) ) ) * Max( ( ( MUM * MUR ) / ( MLU - CS ) ),( ( MLU * CS ) * ( RCSe / MUC ) ) ) ) ) ) - ( Min( ( Min( Min( ( DS - RCSe ) ,Min( DS ,MUR ) ) ,( ( MLU * MUR ) / Max( MUC,RMSe ) ) ) + ( Max( ( RRSe / MUM ),( DS + MUC ) ) * Max( ( DS - MUM ),( CS / CS ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( MUC / MUM ) ),( Max( RRSe,RRSe ) - ( DS - MUM ) ) ) / ( Min( Max( MLU,RRSe ) ,( RRSe / RCSe ) ) + ( Max( MUC,MUR ) - ( CS * DS ) ) ) ) ) - ( ( ( Min( Max( MUR,MLU ) ,Min( MUR ,MUM ) ) / ( Max( RMSe,MLU ) - ( MLU / RCSe ) ) ) - ( Max( ( DS + MUC ),Min( MUR ,RCSe ) ) + ( ( MUC - MLU ) * Min( RCSe ,DS ) ) ) ) / ( ( Min( Max( MUR,CS ) ,( RCSe * RMSe ) ) + ( ( MUM / RMSe ) + Min( RRSe ,RMSe ) ) ) + ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) - ( ( RMSe / MLU ) - ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.029746402062853908}], "9": [{"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_Mem - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ACS ) ,Min( Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ) / ( MDR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Min( FirstVNF_RAM ,( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) )", "choosing": "( MUM / CS )", "obj1": 0.728744939271255, "obj2": 0.11086535355648118}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - ( CS + CS ) )", "obj1": 0.29959514170040485, "obj2": 0.47738273576182555}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + MRS ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( CS + RCSe ) ) / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.2550607287449393, "obj2": 0.5319720333660213}, {"determining": "( Min( ( ( PN * ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / DS ) ) ) ) - ( ( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) ) + MUC ) )", "obj1": 0.8825910931174089, "obj2": 0.05113917020629341}, {"determining": "( Min( ( PN + ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.8238866396761133, "obj2": 0.10343277174342984}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUC ) ) / Min( RCSe ,MUM ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6174089068825911, "obj2": 0.1983821834135877}, {"determining": "( Min( ( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( MDR / ( PN / Max( BR,( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / MLU ) * ( CS / RMSe ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( MUR ,RCSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.28109117477823026}, {"determining": "( Min( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( MUR ,RCSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.694331983805668, "obj2": 0.16183064150581042}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * ( ( ( RMSe / CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.32793522267206476, "obj2": 0.4495329849467931}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "Min( ( Min( ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - DDR ) - ( PN - BR ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( ( RMSe * MLU ) * Min( MLU ,MUM ) ) / CS )", "obj1": 0.9453441295546559, "obj2": 0.042675604294978235}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26530557830908674}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( PN - ACS ) * ( DDR / FirstVNF_RAM ) ) ) + FirstVNF_Mem ) ) - ( CRS / ACS ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( RRSe / ( ( MUR + RMSe ) + ( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - RCSe ) ) / Min( MUR ,RCSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.8502024291497976, "obj2": 0.08459009647490635}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( AMS - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - ( CS + CS ) )", "obj1": 0.597165991902834, "obj2": 0.2639013792835282}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.45546558704453444, "obj2": 0.34429461327059613}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Const ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( MUM * CS ) ) ) ) - ( CS + CS ) )", "obj1": 0.37044534412955465, "obj2": 0.44322227412010307}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6840095345449726}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,BR ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.5060728744939271, "obj2": 0.3322995895326902}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.4291497975708502, "obj2": 0.382058544187355}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( RRS / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ( DDR / MDR ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.9615384615384616, "obj2": 0.030427296773273216}, {"determining": "( ( Max( ( Max( ( FirstVNF_RAM_Server + DDR ),PN ) * MDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.07489878542510121, "obj2": 0.7207266754318914}, {"determining": "( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * ( RCSe * MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.18024728176984584}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.402834008097166, "obj2": 0.4008306140936189}, {"determining": "( ( BR + AMS ) / Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 0.9655870445344129, "obj2": 0.012467190714527232}, {"determining": "( Min( ( ( PN - ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( ( RCSe / RCSe ) / ( RRSe * ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.6781376518218624, "obj2": 0.16866231296821468}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.24898785425101214, "obj2": 0.564475238962496}, {"determining": "( Min( ( PN + ( Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.08576172115040852}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,PN ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUR ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3117260290471593}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU - BR ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( CS / RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.21052631578947367, "obj2": 0.6071627218745932}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.42801631535617796}, {"determining": "( AMS / ( ( BR - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( Min( DS ,MUM ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( RMSe * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5922699325749115}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6370521179924062}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4716599190283401, "obj2": 0.3350962557377194}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.37489126786844124}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.39271255060728744, "obj2": 0.41977834936090475}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RCSe / ( ( MUC + RMSe ) + Max( MLU,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.20040485829959515, "obj2": 0.6167432805476494}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.24696356275303644, "obj2": 0.5653067925836399}, {"determining": "( Min( ( ( PN + ( FirstVNF_RAM / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + ( ( ( RMSe * CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.11133603238866396, "obj2": 0.6993256525846223}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.4008097165991903, "obj2": 0.40159127573347636}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU + BR ) ) )", "choosing": "( Min( MUM ,( DS / ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6370521179924062}, {"determining": "( Min( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( DS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.22874493927125505, "obj2": 0.6049771516868978}, {"determining": "Min( ( PN + ( MDR / ( ( ( BR + AMS ) / ( ( FirstVNF_Mem - Const ) - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server + Const ) - ( FirstVNF_CPU - BR ) ) ) ) ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + MUR ) + ( ( ( RMSe / ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.0931174089068826, "obj2": 0.705430923153773}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.5222672064777328, "obj2": 0.3049151136386603}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) / Min( MUR ,RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.4207764026110891}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.46963562753036436, "obj2": 0.3361066781110329}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.9817813765182186, "obj2": 0.005160199574164938}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,Const ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( RMSe - CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6275303643724697, "obj2": 0.19019356591321493}], "10": [{"determining": "( Min( Max( ACS,ACS ) ,( ( Min( ( CRS * PN ) ,ACS ) - FirstVNF_CPU_Server ) / BR ) ) + ( ( ACS + FirstVNF_RAM ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUR ) - ( MUC - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( ( BR + AMS ) / ( ( FirstVNF_Mem - Const ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU + BR ) ) ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) )", "obj1": 0.6821862348178138, "obj2": 0.1573010092949835}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + MRS ) + FirstVNF_CPU ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RMSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.5546558704453441, "obj2": 0.24832683294680344}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Min( FirstVNF_RAM ,( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) )", "choosing": "( MUM / CS )", "obj1": 0.728744939271255, "obj2": 0.11086535355648118}, {"determining": "( Min( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.04469722559786506}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS / ( ( MUR + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) ) ,( ( DS * MLU ) - MLU ) )", "obj1": 0.13562753036437247, "obj2": 0.6635392617277043}, {"determining": "( Min( ( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( MDR / ( PN / Max( BR,( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / MLU ) * ( CS / RMSe ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( MUR ,RCSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.28109117477823026}, {"determining": "( Min( ( ( PN * ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / DS ) ) ) ) - ( ( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) ) + MUC ) )", "obj1": 0.8097165991902834, "obj2": 0.09011205635804706}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,( MDR * FirstVNF_RAM ) ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,( MUR + MUR ) ) / ( CS * RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.2813765182186235, "obj2": 0.5168670084871714}, {"determining": "( Min( ( ( PN * ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.757085020242915, "obj2": 0.09792437482269285}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.37489126786844124}, {"determining": "Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Const ) / ( FirstVNF_CPU - BR ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / RRSe ) * Min( DS ,MUM ) ) / ( MUM * CS ) ) ) ) - ( CS + CS ) )", "obj1": 0.582995951417004, "obj2": 0.22839287178540313}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.5890688259109311, "obj2": 0.21256537703618034}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe * MLU ) * Min( MLU ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4364568386190781}, {"determining": "Min( ( PN + ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) ,Max( MDR,FirstVNF_RAM ) )", "choosing": "( ( CS / ( ( MUR + MUR ) + ( ( ( CS / ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.902834008097166, "obj2": 0.03921982306078684}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - Const ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.2874493927125506, "obj2": 0.48441157264796864}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5, "obj2": 0.3197196692210216}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUC ) ) / Min( RCSe ,MUM ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6174089068825911, "obj2": 0.1983821834135877}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + MRS ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( CS + RCSe ) ) / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.2550607287449393, "obj2": 0.5319720333660213}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.39271255060728744, "obj2": 0.41977834936090475}, {"determining": "( Min( ( PN + ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03068758525202323}, {"determining": "( Min( ( ( PN + ( MDR / ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) / ( MUC + MUM ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.39878542510121456, "obj2": 0.37978977732642916}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( PN - ACS ) * ( DDR / FirstVNF_RAM ) ) ) + FirstVNF_Mem ) ) - ( CRS / ACS ) ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( RRSe / ( ( MUR + RMSe ) + ( Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - RCSe ) ) / Min( MUR ,RCSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.8502024291497976, "obj2": 0.08459009647490635}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6840095345449726}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / RMSe ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.4534412955465587, "obj2": 0.34393149724811856}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU * BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR / Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.3299595141700405, "obj2": 0.44890072839045114}, {"determining": "( Min( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( DS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.22874493927125505, "obj2": 0.6049771516868978}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4716599190283401, "obj2": 0.3350962557377194}, {"determining": "( Min( ( PN + ( Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUM - CS ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.9493927125506073, "obj2": 0.026925635603451452}, {"determining": "( AMS / ( ( BR - Const ) / ( ( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + ( ( ( PN - ACS ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) ) ) - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( Min( DS ,MUM ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( RMSe * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5922699325749115}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,Const ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( RMSe - CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6275303643724697, "obj2": 0.19019356591321493}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - Max( FirstVNF_CPU,BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( ( ( DS + MUM ) / ( RMSe + DS ) ) ,MUM ) / ( RMSe + DS ) )", "obj1": 0.3117408906882591, "obj2": 0.45992804226663475}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RCSe / ( ( MUC + RMSe ) + Max( MLU,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.20040485829959515, "obj2": 0.6167432805476494}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( ARS * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( DS + MUM ) ) ) - ( CS + MUC ) )", "obj1": 0.25101214574898784, "obj2": 0.5639647881550237}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,DDR ) ) ) ) ,( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( MUM * CS ) ) ) ) - ( CS + CS ) )", "obj1": 0.9817813765182186, "obj2": 0.005156628897446141}, {"determining": "( Min( ( ( PN - ( MDR / ( PN / ( BR - ( FirstVNF_CPU - ARS ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( ( RCSe / RCSe ) / ( RRSe * ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + RCSe ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.7348178137651822, "obj2": 0.10359706101822598}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM * RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6370521179924062}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU - BR ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( CS / RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.21052631578947367, "obj2": 0.6071627218745932}, {"determining": "( Min( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7434176571819804}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.5222672064777328, "obj2": 0.3049151136386603}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6370521179924062}, {"determining": "( Min( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7214888187373483}, {"determining": "( ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) + ( ( ( RMSe * CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.4048582995951417, "obj2": 0.3762231782442963}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU - DDR ) ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.24696356275303644, "obj2": 0.5653067925836399}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) + ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( CRS / DDR ) ) ,( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU - BR ) ) * ARS ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( CS + RCSe ) ) ) - ( CS + MUC ) )", "obj1": 0.18421052631578946, "obj2": 0.6239452192563758}, {"determining": "( ( BR + AMS ) / Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 0.9655870445344129, "obj2": 0.012467190714527232}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6659919028340081, "obj2": 0.16330676170917327}, {"determining": "( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * ( RCSe * MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.18024728176984584}], "11": [{"determining": "( ( FirstVNF_RAM + Max( CRS,ACS ) ) * ( RRS - AMS ) )", "choosing": "( Max( RRSe,Max( Min( RCSe ,RCSe ),( RMSe + RCSe ) ) ) / Max( ( Max( DS,MUC ) / Max( ( ( CS - ( RCSe * RRSe ) ) / ( MUC / MUC ) ),CS ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( Min( Max( ACS,ACS ) ,( ( Min( ( CRS * PN ) ,ACS ) - FirstVNF_CPU_Server ) / BR ) ) + ( ( ACS + FirstVNF_RAM ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUR ) - ( MUC - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,DDR ),PN ) * MDR ) + Max( MRS,DDR ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06072874493927125, "obj2": 0.745990468231297}, {"determining": "( Min( ( ( PN * ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.7874493927125507, "obj2": 0.08033265996496278}, {"determining": "( Min( ( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( MDR / ( PN / Max( BR,( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / MLU ) * ( CS / RMSe ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( Min( MUR ,RCSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.28109117477823026}, {"determining": "( Min( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.04469722559786506}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU + BR ) ) ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) )", "obj1": 0.6862348178137652, "obj2": 0.15357875228724846}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Min( FirstVNF_RAM ,( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( CS / RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.7186234817813765, "obj2": 0.11403486708101696}, {"determining": "( Min( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( DS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.22874493927125505, "obj2": 0.6049771516868978}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - Const ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.23279352226720648, "obj2": 0.5461890073625831}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe * MLU ) * Min( MLU ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4364568386190781}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem ,( MDR * FirstVNF_RAM ) ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( RMSe + RMSe ) + ( Max( RCSe,( MUR + MUR ) ) / ( CS * RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.2813765182186235, "obj2": 0.5168670084871714}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - Const ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.2874493927125506, "obj2": 0.48441157264796864}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.13562753036437247, "obj2": 0.6553536811520402}, {"determining": "( Min( ( ( PN + ( MDR / ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( ( MUR / CS ) / Min( RRSe ,( ( DS * RRSe ) / ( MUC - RRSe ) ) ) ) * Min( RCSe ,( ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) + ( ( MLU + MUR ) + Min( MUM ,CS ) ) ) ) ) / CS )", "obj1": 0.4251012145748988, "obj2": 0.3650357209997765}, {"determining": "( Min( ( ( PN * ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + ( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.06885530346123041}, {"determining": "( ( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * ( RCSe * MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6417004048582996, "obj2": 0.17825344539473464}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( CS / ( ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) + ( ( ( RMSe * CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.5890688259109311, "obj2": 0.21255109432930513}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( RMSe / CS ) * Min( RCSe ,MUC ) ) / Min( RCSe ,MUM ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.6174089068825911, "obj2": 0.1983821834135877}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5, "obj2": 0.3197196692210216}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( CRS / DDR ) ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( MUR / CS ) / Min( RRSe ,( ( ( Min( MUC ,DS ) + RMSe ) * MLU ) / ( ( MUC / RMSe ) - RRSe ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6840095345449726}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( Max( FirstVNF_RAM_Server,DDR ) - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( RMSe / DS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.8421052631578947, "obj2": 0.06670127136313893}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.3299595141700405, "obj2": 0.4474885734176039}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.5222672064777328, "obj2": 0.3049151136386603}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,( DS * ( ( ( Min( DS ,MUM ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) + MUM ) ) ) * Min( Min( ( MUM * CS ) ,RRSe ) ,( MUC - CS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.41138607839356234}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + PN ) / Min( FirstVNF_Mem ,( MDR * FirstVNF_RAM ) ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + MUR ) + ( ( ( RMSe / ( ( RRSe + MLU ) + Min( MLU ,MUR ) ) ) * Min( DS ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( Min( ( MUM - CS ) ,MLU ) ,( MUC - CS ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.14777327935222673, "obj2": 0.6457392714290393}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.30364372469635625, "obj2": 0.47439468114509853}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3541226808924798}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5668016194331984, "obj2": 0.23126229864282669}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + MRS ) / FirstVNF_CPU ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.5546558704453441, "obj2": 0.24832683294680344}, {"determining": "( Min( ( ( PN + ( MDR / ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( Max( RCSe,RCSe ) / ( RRSe * ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) / ( MUC + MUM ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.39878542510121456, "obj2": 0.37978977732642916}, {"determining": "( Min( ( ( PN * ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.7672064777327935, "obj2": 0.0956794336385421}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - Max( FirstVNF_CPU,BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( ( ( DS + MUM ) / ( RMSe + DS ) ) ,MUM ) / ( RMSe + DS ) )", "obj1": 0.3117408906882591, "obj2": 0.45992804226663475}, {"determining": "( Min( ( PN + ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) ,BR ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) / CS )", "obj1": 0.9251012145748988, "obj2": 0.03018011074589305}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUC + RMSe ) + Max( RMSe,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4716599190283401, "obj2": 0.3350962557377194}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + MRS ) + FirstVNF_CPU ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RMSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.5546558704453441, "obj2": 0.24832683294680344}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * Min( DS ,MUM ) ) / ( MUM * CS ) ) ) ) - ( CS + CS ) )", "obj1": 0.6234817813765182, "obj2": 0.18640117823766203}, {"determining": "( ( BR + FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RCSe / ( ( MUC + RMSe ) + Max( MLU,RMSe ) ) ) - ( CS + MUC ) )", "obj1": 0.20040485829959515, "obj2": 0.6167432805476494}, {"determining": "( Min( ( ( PN - ( MDR / ( PN / ( BR - ( FirstVNF_CPU - ARS ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUM / ( ( MUR + RMSe ) + ( ( RCSe / RCSe ) / ( RRSe * ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + RCSe ) ) ) ) ) ) - ( CS + MUC ) )", "obj1": 0.7348178137651822, "obj2": 0.10359706101822598}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,( Max( ( FirstVNF_Mem_Server + AMS ),( FirstVNF_Mem - FirstVNF_CPU ) ) * ( ( BR / MRS ) * ( DDR / FirstVNF_RAM ) ) ) ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Max( ( ARS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RMSe * MLU ) * Min( MLU ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( MUM / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.3866396761133603, "obj2": 0.42588239189374844}, {"determining": "( ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( ( ( RMSe / MUR ) * Min( RCSe ,MUC ) ) + ( ( ( RMSe * CS ) * Min( RCSe ,MUC ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + MUC ) )", "obj1": 0.4048582995951417, "obj2": 0.3762231782442963}, {"determining": "( Min( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( MUC + MUM ) / ( RMSe + DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7434176571819804}, {"determining": "( Min( ( ( PN - ( FirstVNF_Mem - FirstVNF_CPU ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( Min( MLU ,( DS * ( MUM + RMSe ) ) ) * Min( Min( ( ( CS / ( ( MUR + RMSe ) + ( Max( MLU,RCSe ) / ( MUC / RMSe ) ) ) ) - ( CS + MUC ) ) ,( Min( ( ( MUM - MLU ) + ( MUC + CS ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) + ( ( ( MUM + RRSe ) * ( MUR / RRSe ) ) + ( ( RMSe * RCSe ) - ( MUM * RRSe ) ) ) ) ) ,( MUC - CS ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7202244782709949}, {"determining": "( Min( ( PN + ( Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUM - CS ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.9493927125506073, "obj2": 0.026925635603451452}, {"determining": "( Min( ( ( PN * ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) + ( MDR / ( PN / ( BR - ( FirstVNF_RAM_Server - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( RMSe + DS ) ) + MUM ) / ( RMSe + DS ) )", "obj1": 0.757085020242915, "obj2": 0.09709473224664189}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( MDR ,ACS ) ) ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( RMSe / CS ) * Min( RCSe ,MUM ) ) * Min( Min( ( ( ( MUR / CS ) * Min( RCSe ,MUM ) ) / ( Min( RRSe ,RMSe ) + Min( MUR ,RCSe ) ) ) ,( ( MUC * RMSe ) / ( CS + RCSe ) ) ) ,( MUC - CS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.30985412420502434}, {"determining": "( Min( ( PN + ( MDR / ( ( ( PN - ACS ) + MRS ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Min( MRS ,Max( ARS,PN ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( CS + RCSe ) ) / ( ( RMSe + RMSe ) + ( Max( RCSe,RCSe ) / ( CS / RMSe ) ) ) ) - ( CS + CS ) )", "obj1": 0.2611336032388664, "obj2": 0.5276828311054229}, {"determining": "( ( FirstVNF_CPU / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ) )", "choosing": "( ( CS / ( ( MUR + RMSe ) + ( ( ( RMSe / CS ) * ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) ) / ( MUM * CS ) ) ) ) - ( CS + CS ) )", "obj1": 0.9655870445344129, "obj2": 0.012187591246746975}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( Min( Max( MDR,FirstVNF_CPU ) ,Max( MRS,ACS ) ),Min( Max( FirstVNF_Mem,Const ) ,( ( BR / MRS ) * ( BR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) - CS ) * Min( RCSe ,MUM ) ) / ( Max( RRSe,RMSe ) + Min( MUR ,RCSe ) ) )", "obj1": 0.6659919028340081, "obj2": 0.16330676170917327}, {"determining": "( Min( ( PN + ( MDR / ( PN / ( BR - ( FirstVNF_CPU - BR ) ) ) ) ) ,BR ) - ( MRS - Max( ARS,PN ) ) )", "choosing": "( ( CS / ( ( MUR + Min( RCSe ,MUM ) ) + ( Max( RCSe,RCSe ) / ( RRSe * MLU ) ) ) ) - ( CS + MUC ) )", "obj1": 0.3259109311740891, "obj2": 0.45188878300717816}]}