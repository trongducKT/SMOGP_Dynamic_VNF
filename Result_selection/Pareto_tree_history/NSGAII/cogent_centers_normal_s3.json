{"1": [{"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) - Max( DS,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Min( ( BR + FirstVNF_Mem_Server ) ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),Max( RCSe,( MUR - MUC ) ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "( Max( ( RRS - AMS ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + DS ) + ( MUM * RMSe ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC / MUR ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( AMS - MRS ) - Min( BR ,Const ) )", "choosing": "( ( DS + MUR ) / Max( RCSe,MUR ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( FirstVNF_Mem / CRS ) - Min( ( Min( FirstVNF_CPU ,ACS ) + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ,( CRS * ( FirstVNF_Mem * MRS ) ) ) )", "choosing": "( Max( CS,RMSe ) * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5662549410373751}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( FirstVNF_CPU + Const ) )", "choosing": "( ( RMSe / RMSe ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.2774451097804391, "obj2": 0.7001837146417388}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU + PN ),( Const - FirstVNF_Mem_Server ) ) + ( Min( DDR ,CRS ) / ( Const - BR ) ) )", "choosing": "Max( ( Max( RRSe,DS ) / MLU ),( DS + MUM ) )", "obj1": 0.4590818363273453, "obj2": 0.5292370985316887}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / MDR ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( Max( CS,RRSe ) + RRSe ) )", "obj1": 0.5069860279441117, "obj2": 0.47851297525740544}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS - MRS ),( AMS * ACS ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,( ( DS + RRSe ) / Min( CS ,MUM ) ) ) * Min( ( ( RRSe * DS ) - ( CS / RCSe ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.48303393213572854, "obj2": 0.48009511161627927}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( FirstVNF_RAM * ( ( ( ( ( FirstVNF_Mem * Const ) + FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) ) - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( ( ( ( Min( RRSe ,MUM ) * MUR ) + MUR ) / DS ) ,RRSe ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + ( MUC / ( ( ( MLU / RRSe ) + CS ) / RMSe ) ) ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( MUR - ( ( RMSe - MLU ) / Max( MUC,RRSe ) ) ) - Min( ( MUM + Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 0.46107784431137727, "obj2": 0.5233754239046194}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "Min( Min( ARS ,FirstVNF_CPU ) ,( Min( Max( Max( ( AMS * Max( RRS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ),( FirstVNF_Mem_Server - Min( MRS ,BR ) ) ) ,Min( MRS ,ARS ) ) + Max( ( ( ( MRS * FirstVNF_CPU ) - RRS ) * Min( CRS ,AMS ) ),( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC - ( ( Max( MUC,RMSe ) - RMSe ) / MUC ) ) * MUM ) / ( MUM * ( Max( MUC,RMSe ) * RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.06505479113536707}, {"determining": "Max( ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) )", "obj1": 0.4750499001996008, "obj2": 0.49572794638357154}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "( ( Min( ( AMS - RRS ) ,( FirstVNF_CPU - MRS ) ) * ( Min( DDR ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem ) ) ) + Max( ( ( AMS + MRS ) * ( FirstVNF_CPU / FirstVNF_CPU ) ),( ( Const * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) + ( ( ( MUR - MLU ) + ( RMSe + RCSe ) ) - ( Max( RCSe,RMSe ) - ( MLU - RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.5166436003804105}], "2": [{"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) - Max( DS,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Min( ( BR + FirstVNF_Mem_Server ) ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),Max( RCSe,( MUR - MUC ) ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "( Max( ( RRS - AMS ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + DS ) + ( MUM * RMSe ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC / MUR ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( FirstVNF_RAM * ( ( ( ( ( FirstVNF_Mem * Const ) + FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) ) - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( ( ( ( Min( RRSe ,MUM ) * MUR ) + MUR ) / DS ) ,RRSe ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + ( MUC / ( ( ( MLU / RRSe ) + CS ) / RMSe ) ) ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "Min( Min( ARS ,FirstVNF_CPU ) ,( Min( Max( Max( ( AMS * Max( RRS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ),( FirstVNF_Mem_Server - Min( MRS ,BR ) ) ) ,Min( MRS ,ARS ) ) + Max( ( ( ( MRS * FirstVNF_CPU ) - RRS ) * Min( CRS ,AMS ) ),( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC - ( ( Max( MUC,RMSe ) - RMSe ) / MUC ) ) * MUM ) / ( MUM * ( Max( MUC,RMSe ) * RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - ( Max( Max( CRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( Min( CS ,( RRSe + Max( MUC,MLU ) ) ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / Min( MLU ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + Min( Min( Const ,MRS ) ,BR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * ( ( PN + ACS ) / Min( ( CRS * Min( FirstVNF_RAM ,Max( BR,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( ( Min( ( RMSe * DS ) ,MUR ) / Max( CS,MUC ) ) - DS ) ) + Min( ( Max( Max( Max( MUR,DS ),( MUM / RRSe ) ),DS ) * ( MUC - DS ) ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( ( CS + MUM ) - ( ( Min( MUM ,MUM ) * ( RRSe / DS ) ) + RMSe ) ) ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( MUM + MUR ) ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( ( BR + FirstVNF_Mem ),FirstVNF_CPU_Server ) ) - Max( AMS,RRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( MUR - RCSe ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / CRS ) - Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( ( ( Max( ( MUM / RRSe ),( ( RCSe * Min( MUM ,RCSe ) ) * Min( ( MUC / RMSe ) ,( DS - MUR ) ) ) ) + ( MUR * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.8982035928143712, "obj2": 0.0634355540906471}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / CS ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / CRS ) - Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( MLU / ( RRSe - MUR ) ) )", "obj1": 0.4291417165668663, "obj2": 0.509418577101821}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7365269461077845, "obj2": 0.24678283637409584}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) + ( CRS - ( DDR + Const ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( CS / DS ) + MUM ) ,MUR ) ) * ( ( MUM + MUM ) / ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - FirstVNF_Mem ) ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( ( MUR + CS ) + Max( RCSe,DS ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) * ( ARS * ( ( AMS * ARS ) + ( DDR + MRS ) ) ) )", "choosing": "( ( MUR + CS ) + ( ( RMSe + MUC ) * ( MUM - CS ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4961845248873212}, {"determining": "Min( Min( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - Max( AMS,( BR * ( AMS * FirstVNF_RAM ) ) ) ) ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( Min( RRS ,MRS ) / BR ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( RMSe + ( ( DS - RMSe ) * Min( DS ,MLU ) ) ) * Max( RRSe,CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 0.8183632734530938, "obj2": 0.15728534183574586}, {"determining": "Min( ( Min( PN ,Max( ARS,CRS ) ) + FirstVNF_RAM_Server ) ,( AMS - AMS ) )", "choosing": "( ( MUR + DS ) - ( Min( ( ( ( RRSe / RCSe ) * MUM ) + DS ) ,MUM ) + MUC ) )", "obj1": 0.49101796407185627, "obj2": 0.4334170976630144}, {"determining": "Min( ( AMS - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( ( CS - MUC ) + DS ) + MUR ) )", "obj1": 0.405189620758483, "obj2": 0.5191539795202497}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + ( ( ACS * FirstVNF_CPU ) - Min( PN ,CRS ) ) ) ,( AMS - AMS ) )", "choosing": "( Min( RMSe ,MUR ) - ( CS - MUC ) )", "obj1": 0.936127744510978, "obj2": 0.060519660953835125}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - ( Min( Max( ( Const / Max( MRS,MDR ) ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ) + CRS ) ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Min( Min( MUR ,RCSe ) ,Min( ( MLU + MUC ) ,RRSe ) ) ,MUR ) - ( Min( RMSe ,Max( MUC,MLU ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( MUC * MUR ),RRSe ) ,( Max( ( RCSe * DS ),RRSe ) - ( MUM + RMSe ) ) ) - ( Max( ( DS / RMSe ),RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( Min( PN ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ARS,Min( ( MRS * Const ) ,( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( Min( MUR ,Min( CS ,MUC ) ) * ( Min( Max( DS,( DS * RRSe ) ) ,RMSe ) * CS ) )", "obj1": 0.3712574850299401, "obj2": 0.5430899619999504}, {"determining": "( ( Max( MRS,FirstVNF_Mem_Server ) * Min( BR ,MDR ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( ( DS / CS ) ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / ( ( MUR + CS ) + Max( RCSe,DS ) ) ) )", "obj1": 0.27345309381237526, "obj2": 0.6721590735192164}, {"determining": "( Max( Max( ( ACS * Max( ACS,CRS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + RCSe ) + ( ( ( RRSe - Max( MLU,CS ) ) + RCSe ) * RMSe ) )", "obj1": 0.6946107784431138, "obj2": 0.28852742204541204}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * Max( ( FirstVNF_CPU / Const ),Min( RRS ,MDR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( ( RCSe + MUM ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( ( ( ( FirstVNF_Mem * Const ) + FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) ) - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( ( ( ( Min( RRSe ,MUM ) * MUR ) + MUR ) / DS ) ,RRSe ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + ( MUC / ( ( ( MLU / RRSe ) + CS ) / RMSe ) ) ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.40708984578781493}, {"determining": "( ( FirstVNF_CPU - AMS ) * FirstVNF_Mem_Server )", "choosing": "( ( DS * MUM ) + ( ( MLU + RCSe ) + ( RRSe + MUC ) ) )", "obj1": 0.9461077844311377, "obj2": 0.056764456989330886}, {"determining": "( ( RRS / MDR ) / FirstVNF_RAM )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RMSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "( ( ( MDR * FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / ( ( Max( RCSe,RRSe ) - DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) + Max( Min( ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),Max( Const,( ( Min( Min( FirstVNF_CPU_Server ,BR ) ,FirstVNF_CPU ) / DDR ) - AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( ( ( MUM / MUC ) + Min( RCSe ,( ( DS / ( DS - MUC ) ) + RCSe ) ) ) / MUR ) ) + ( Min( MLU ,RCSe ) - Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RMSe * MUM ) ,( MUR * MUM ) ) ) + ( ( RRSe + MUM ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.5026246530481945}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( Max( PN,DDR ) - Min( CRS ,RRS ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( AMS ,( FirstVNF_CPU_Server + ( ( BR / ACS ) / MDR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( ( ( MUM - Max( MUC,CS ) ) + ( CS / RCSe ) ),MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * Max( ( RRS + MRS ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( ( ( RRSe * DS ) * ( MUR - MUM ) ) + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS + Min( ( DDR - ( ( Max( ( FirstVNF_CPU_Server + BR ),MDR ) - FirstVNF_Mem ) * ( PN * MRS ) ) ) ,Min( PN ,FirstVNF_RAM ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( Max( RCSe,RRSe ) - MUC ) ) ) + ( RMSe - MUM ) ) ,( ( RRSe * DS ) * ( MUR - MUM ) ) ) )", "obj1": 0.46107784431137727, "obj2": 0.48523713295262855}, {"determining": "( Max( MRS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + RCSe ) + ( MUM * RRSe ) )", "obj1": 0.7784431137724551, "obj2": 0.20798464177887085}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / ( MRS * FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * MUC ) ,( ( RMSe * ( MUC / MUM ) ) + ( RCSe * MUR ) ) )", "obj1": 0.5289421157684631, "obj2": 0.42741560516402}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + Max( MRS,Max( ARS,CRS ) ) ) ) )", "choosing": "Min( Min( Min( MUM ,CS ) ,RCSe ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( CRS ,ARS ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MUC + RCSe ) + ( MUC + CS ) ) - ( Min( Min( MUC ,DS ) ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( AMS - AMS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + ( CS - MUC ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( MUC,( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 0.33532934131736525, "obj2": 0.6315150939791593}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,Min( ( ( FirstVNF_CPU_Server / CRS ) * DDR ) ,FirstVNF_RAM ) ) ,Min( ( ARS * Const ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU + ( CS / Min( ( MUR * RMSe ) ,MUR ) ) ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,Max( MUC,CS ) ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( RRSe * CS ) ,Min( MUR ,( MLU * RRSe ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.42782699705053295}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - ( FirstVNF_Mem - ARS ) )", "choosing": "( ( ( RCSe * RMSe ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 0.48303393213572854, "obj2": 0.4779879925761708}, {"determining": "Min( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( FirstVNF_CPU + ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( ( MUC * Max( MUM,RCSe ) ) * MUC ) / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}], "3": [{"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( Const / Min( Const ,DDR ) ),RRS ) ) ) ,Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,( MLU * RRSe ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( ( MUR * CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.25948103792415167, "obj2": 0.6869422856669986}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6407185628742516, "obj2": 0.265358443263559}, {"determining": "( ( FirstVNF_RAM * ( ( ( ( ( FirstVNF_Mem * Const ) + FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) ) - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( ( ( ( Min( RRSe ,MUM ) * MUR ) + MUR ) / DS ) ,RRSe ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + ( MUC / ( ( ( MLU / RRSe ) + CS ) / RMSe ) ) ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( Max( Max( FirstVNF_RAM_Server,DDR ),( FirstVNF_RAM_Server + RRS ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,Max( Min( MUM ,MUR ),Max( MUR,RRSe ) ) ) ) + DS )", "obj1": 0.8842315369261478, "obj2": 0.09943361485187263}, {"determining": "( ( PN + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7245508982035929, "obj2": 0.24764033711084973}, {"determining": "Min( Min( ( ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + ( Max( MUM,MUR ) * MUM ) ) * ( MUM - CS ) ) ,Min( ( DS * RCSe ) ,Min( MUR ,( MLU * RRSe ) ) ) )", "obj1": 0.8303393213572854, "obj2": 0.12282860431050376}, {"determining": "( ( PN + ACS ) / ( ( ( PN / FirstVNF_RAM_Server ) / ( DDR - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( CS * ( MUC - DS ) )", "obj1": 0.624750499001996, "obj2": 0.351220255687741}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( ( RRS / MDR ) - ARS ) )", "choosing": "Min( Min( DS ,Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RMSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6287425149700598, "obj2": 0.342150425747361}, {"determining": "Max( ARS,Min( ( MRS * Const ) ,( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( Min( MUR ,Min( CS ,MUC ) ) * ( Min( Max( DS,( DS * RRSe ) ) ,RMSe ) * CS ) )", "obj1": 0.3712574850299401, "obj2": 0.5430899619999504}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "( ( FirstVNF_CPU - AMS ) * FirstVNF_Mem_Server )", "choosing": "( ( DS * MUM ) + ( ( MLU + RCSe ) + ( RRSe + MUC ) ) )", "obj1": 0.9461077844311377, "obj2": 0.056764456989330886}, {"determining": "( ( FirstVNF_Mem / CRS ) - Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( ( ( Max( ( MUM / RRSe ),( ( RCSe * Min( MUM ,RCSe ) ) * Min( ( MUC / RMSe ) ,( DS - MUR ) ) ) ) + ( MUR * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.8982035928143712, "obj2": 0.0634355540906471}, {"determining": "Min( ( Min( PN ,Max( ARS,CRS ) ) + FirstVNF_RAM_Server ) ,( AMS - AMS ) )", "choosing": "( ( MUR + DS ) - ( Min( ( ( ( RRSe / RCSe ) * MUM ) + DS ) ,MUM ) + MUC ) )", "obj1": 0.49101796407185627, "obj2": 0.4334170976630144}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) - Max( DS,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "Min( ( AMS - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( ( CS - MUC ) + DS ) + MUR ) )", "obj1": 0.405189620758483, "obj2": 0.5191539795202497}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( ( CS + RRSe ) / ( ( RCSe / DS ) + MUM ) ) ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.5209580838323353, "obj2": 0.4213061098399367}, {"determining": "( ( FirstVNF_RAM * ( ( ( ( ( FirstVNF_Mem * Const ) + FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) ) - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( ( ( ( Min( RRSe ,MUM ) * MUR ) + MUR ) / DS ) ,RRSe ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + ( MUC / ( ( ( MLU / RRSe ) + CS ) / RMSe ) ) ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.40708984578781493}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) )", "obj1": 0.34930139720558884, "obj2": 0.6155812012999965}, {"determining": "( Max( ( RRS - AMS ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + DS ) + ( MUM * RMSe ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / ( ARS - AMS ) )", "choosing": "Min( ( ( ( RMSe + ( ( DS - RMSe ) * Min( DS ,MLU ) ) ) * ( MUM - CS ) ) * MUC ) ,( ( RMSe * ( MUC / MUM ) ) + ( RCSe * MUR ) ) )", "obj1": 0.8063872255489022, "obj2": 0.15264759961342542}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / Max( ( ( FirstVNF_Mem_Server / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) ) ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,MUM ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) ) )", "obj1": 0.32934131736526945, "obj2": 0.6305845416318971}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / ( ( MUR + CS ) + Max( RCSe,DS ) ) ) )", "obj1": 0.27345309381237526, "obj2": 0.6721590735192164}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM + CS ) * ( MUC - ( ( ( Min( ( MLU - RMSe ) ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.7584830339321357, "obj2": 0.19937329255569036}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + ACS ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( CS * RMSe ) / ( MUC + MUM ) ) )", "obj1": 0.45708582834331335, "obj2": 0.46626061320924206}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RMSe * MUM ) ,( MUR * MUM ) ) ) + ( ( RRSe + MUM ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.5026246530481945}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( MDR - ARS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.469061876247505, "obj2": 0.45438112881744963}, {"determining": "( Max( MRS,Max( ARS,CRS ) ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / MUC ) + ( DS / CS ) ) - Max( DS,DS ) )", "obj1": 0.8143712574850299, "obj2": 0.1420033202893073}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC / MUR ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "Min( ( FirstVNF_CPU + ( ( ACS * FirstVNF_CPU ) - Min( PN ,CRS ) ) ) ,( AMS - AMS ) )", "choosing": "( Min( RMSe ,MUR ) - ( CS - MUC ) )", "obj1": 0.936127744510978, "obj2": 0.060519660953835125}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUM + RMSe ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.30538922155688625, "obj2": 0.6418462509579993}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( ( RRS + Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,AMS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( RMSe - MUM ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.4231536926147705, "obj2": 0.5121371692055757}, {"determining": "Min( Min( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - Max( AMS,( BR * ( AMS * FirstVNF_RAM ) ) ) ) ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( Min( RRS ,MRS ) / BR ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( RMSe + ( ( DS - RMSe ) * Min( DS ,MLU ) ) ) * Max( RRSe,CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 0.7644710578842315, "obj2": 0.19435510224645888}, {"determining": "( ( PN + ACS ) / ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7365269461077845, "obj2": 0.24678283637409584}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "Min( Min( ( ( ( FirstVNF_Mem / ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) / FirstVNF_Mem ) ) - Max( PN,FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU + CS ) ,( MUM / DS ) )", "obj1": 0.46506986027944114, "obj2": 0.46431406886380305}, {"determining": "( FirstVNF_CPU * Min( BR ,Max( FirstVNF_Mem,( MDR * ( Max( ( Max( ACS,ACS ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ),Min( FirstVNF_RAM ,MDR ) ) / DDR ) ) ) ) )", "choosing": "( ( MLU + ( ( RCSe + Max( ( RRSe - ( MLU - Min( CS ,DS ) ) ),( ( Min( CS ,RCSe ) + RCSe ) + RCSe ) ) ) - Max( ( Max( ( MLU + ( MUR * CS ) ),( CS - Min( MUC ,MLU ) ) ) + MUC ),RCSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4291417165668663, "obj2": 0.5066632749261675}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( CRS ,ARS ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MUC + RCSe ) + ( MUC + CS ) ) - ( Min( Min( MUC ,DS ) ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 0.9880239520958084, "obj2": 0.005973052296628001}, {"determining": "( ( FirstVNF_Mem / ( ARS + FirstVNF_Mem_Server ) ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem_Server + ARS ) * RRS ) ) )", "choosing": "( Max( ( MUR / CS ),Min( RMSe ,( CS / DS ) ) ) * ( ( ( MUC + ( ( MUM / CS ) * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.43912175648702595, "obj2": 0.5048575352706139}, {"determining": "Min( Min( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - Max( AMS,( BR * ( AMS * FirstVNF_RAM ) ) ) ) ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( Min( RRS ,MRS ) / BR ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( RMSe + ( ( DS - RMSe ) * Min( DS ,MLU ) ) ) * Max( RRSe,CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 0.7644710578842315, "obj2": 0.19435510224645888}, {"determining": "Min( Min( ARS ,FirstVNF_CPU ) ,( Min( Max( Max( ( AMS * Max( RRS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ),( FirstVNF_Mem_Server - Min( MRS ,BR ) ) ) ,Min( MRS ,ARS ) ) + Max( ( ( ( MRS * FirstVNF_CPU ) - RRS ) * Min( CRS ,AMS ) ),( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC - ( ( Max( MUC,RMSe ) - RMSe ) / MUC ) ) * MUM ) / ( MUM * ( Max( MUC,RMSe ) * RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ACS,Max( FirstVNF_CPU,( DDR + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( MUC ,Max( RRSe,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - ( Max( Max( CRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( Min( CS ,( RRSe + Max( MUC,MLU ) ) ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / Min( MLU ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + Min( Min( Const ,MRS ) ,BR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * ( ( PN + ACS ) / Min( ( CRS * Min( FirstVNF_RAM ,Max( BR,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( ( Min( ( RMSe * DS ) ,MUR ) / Max( CS,MUC ) ) - DS ) ) + Min( ( Max( Max( Max( MUR,DS ),( MUM / RRSe ) ),DS ) * ( MUC - DS ) ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( ( CS + MUM ) - ( ( Min( MUM ,MUM ) * ( RRSe / DS ) ) + RMSe ) ) ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( MUM + MUR ) ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( ( BR + FirstVNF_Mem ),FirstVNF_CPU_Server ) ) - Max( AMS,RRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( MUR - RCSe ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / CS ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) + ( CRS - ( DDR + Const ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( CS / DS ) + MUM ) ,MUR ) ) * ( ( MUM + MUM ) / ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( ( MUR + CS ) + Max( RCSe,DS ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - ( Min( Max( ( Const / Max( MRS,MDR ) ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ) + CRS ) ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Min( Min( MUR ,RCSe ) ,Min( ( MLU + MUC ) ,RRSe ) ) ,MUR ) - ( Min( RMSe ,Max( MUC,MLU ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( MUC * MUR ),RRSe ) ,( Max( ( RCSe * DS ),RRSe ) - ( MUM + RMSe ) ) ) - ( Max( ( DS / RMSe ),RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( Min( PN ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,FirstVNF_Mem_Server ) * Min( BR ,MDR ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( ( DS / CS ) ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * Max( ( FirstVNF_CPU / Const ),Min( RRS ,MDR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( ( RCSe + MUM ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / ( ( Max( RCSe,RRSe ) - DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) + Max( Min( ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),Max( Const,( ( Min( Min( FirstVNF_CPU_Server ,BR ) ,FirstVNF_CPU ) / DDR ) - AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( ( ( MUM / MUC ) + Min( RCSe ,( ( DS / ( DS - MUC ) ) + RCSe ) ) ) / MUR ) ) + ( Min( MLU ,RCSe ) - Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( Max( PN,DDR ) - Min( CRS ,RRS ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( AMS ,( FirstVNF_CPU_Server + ( ( BR / ACS ) / MDR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( ( ( MUM - Max( MUC,CS ) ) + ( CS / RCSe ) ),MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * Max( ( RRS + MRS ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( ( ( RRSe * DS ) * ( MUR - MUM ) ) + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + Max( MRS,Max( ARS,CRS ) ) ) ) )", "choosing": "Min( Min( Min( MUM ,CS ) ,RCSe ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( CRS ,ARS ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MUC + RCSe ) + ( MUC + CS ) ) - ( Min( Min( MUC ,DS ) ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( AMS - AMS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + ( CS - MUC ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,Min( ( ( FirstVNF_CPU_Server / CRS ) * DDR ) ,FirstVNF_RAM ) ) ,Min( ( ARS * Const ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU + ( CS / Min( ( MUR * RMSe ) ,MUR ) ) ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,Max( MUC,CS ) ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( FirstVNF_CPU + ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( ( MUC * Max( MUM,RCSe ) ) * MUC ) / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( ( MRS + RRS ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( RMSe ,RCSe ) * ( Max( CS,( MLU - RCSe ) ) + ( ( RCSe * ( Min( MLU ,MLU ) / MUR ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ARS + FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) * ARS ) ) )", "choosing": "Min( ( ( Min( DS ,CS ) * ( MLU - ( CS - Min( Min( RMSe ,( RRSe - CS ) ) ,MUC ) ) ) ) * MUC ) ,( ( MUM * CS ) - ( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( Max( MDR,PN ),AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Max( PN,ARS ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( ( Min( DS ,Max( ( Max( MUM,RMSe ) - ( MLU - RCSe ) ),MUC ) ) - RRSe ) ,Max( RCSe,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) * ARS ) - RRS ) * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) * Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) ) ) - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,MUC ) ,( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,Max( Min( ACS ,RRS ),( ACS / BR ) ) ) ) + PN ) )", "choosing": "( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - PN )", "choosing": "( Max( MUC,( MUM + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Max( MUM,MUR ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,( Const - DDR ) ) ) + ( CRS - ( DDR + ( ( Max( PN,FirstVNF_CPU_Server ) + Max( ( BR * Min( FirstVNF_Mem ,ARS ) ),AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( CS + RRSe ) / Min( ( MUR * RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Min( Max( ( PN * FirstVNF_RAM ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( PN + ACS ),RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem / ( FirstVNF_CPU - AMS ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( CS * ( MUC - DS ) ) * ( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( Const / Min( Const ,DDR ) ),RRS ) ) ) ,Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,( MLU * RRSe ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( ( MUR * CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.25948103792415167, "obj2": 0.6869422856669986}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.36388685493131573}, {"determining": "Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_RAM_Server ) / ( ARS - ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,AMS ) ) + ARS ) ) ) )", "choosing": "( ( MUR + DS ) - Min( DS ,MUR ) )", "obj1": 0.5888223552894212, "obj2": 0.3552722134668845}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6407185628742516, "obj2": 0.265358443263559}, {"determining": "( ( FirstVNF_Mem / CRS ) - Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( ( ( Max( ( MUM / RRSe ),( ( RCSe * Min( MUM ,RCSe ) ) * Min( ( MUC / RMSe ) ,( DS - MUR ) ) ) ) + ( MUR * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.8982035928143712, "obj2": 0.0634355540906471}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - MUC ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.7604790419161677, "obj2": 0.16543824094392598}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.30082511988857563}, {"determining": "Min( ( Min( PN ,Max( ARS,CRS ) ) + FirstVNF_RAM_Server ) ,( AMS - AMS ) )", "choosing": "( ( MUR + DS ) - ( Min( ( ( ( RRSe / RCSe ) * MUM ) + DS ) ,MUM ) + MUC ) )", "obj1": 0.49101796407185627, "obj2": 0.4334170976630144}, {"determining": "( ( PN + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7245508982035929, "obj2": 0.24764033711084973}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "Min( Min( ( FirstVNF_RAM - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( ( RMSe + ( ( DS - RMSe ) * Min( DS ,MLU ) ) ) * ( MUM - CS ) ) ) )", "obj1": 0.93812375249501, "obj2": 0.05084515936631645}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM + CS ) * ( MUC - ( ( ( Min( ( MLU - RMSe ) ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.7584830339321357, "obj2": 0.19937329255569036}, {"determining": "Max( ARS,Min( ( MRS * Const ) ,( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( Min( MUR ,Min( CS ,MUC ) ) * ( Min( Max( DS,( DS * RRSe ) ) ,RMSe ) * CS ) )", "obj1": 0.3712574850299401, "obj2": 0.5430899619999504}, {"determining": "Min( ( AMS - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( ( CS - MUC ) + DS ) + MUR ) )", "obj1": 0.405189620758483, "obj2": 0.5191539795202497}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) )", "obj1": 0.34930139720558884, "obj2": 0.6155812012999965}, {"determining": "( Max( ( RRS - AMS ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + DS ) + ( MUM * RMSe ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / ( ( MUR + CS ) + Max( RCSe,DS ) ) ) )", "obj1": 0.27345309381237526, "obj2": 0.6721590735192164}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / Max( ( ( FirstVNF_Mem_Server / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) ) ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,MUM ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) ) )", "obj1": 0.32934131736526945, "obj2": 0.6305845416318971}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( MDR - ARS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.469061876247505, "obj2": 0.45438112881744963}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUM + RMSe ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.30538922155688625, "obj2": 0.6418462509579993}, {"determining": "Min( ( FirstVNF_CPU + ( ( ACS * FirstVNF_CPU ) - Min( PN ,CRS ) ) ) ,( AMS - AMS ) )", "choosing": "( Min( RMSe ,MUR ) - ( CS - MUC ) )", "obj1": 0.936127744510978, "obj2": 0.060519660953835125}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( Const,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "( ( MUR / ( MLU + RCSe ) ) - ( CS * RMSe ) )", "obj1": 0.4491017964071856, "obj2": 0.49657015351414646}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + ACS ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( CS * RMSe ) / ( MUC + MUM ) ) )", "obj1": 0.45708582834331335, "obj2": 0.46626061320924206}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( PN + ACS ) / ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_RAM * ( ( ( ( ( FirstVNF_Mem * Const ) + FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) ) - RRS ) / Const ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) + CS ) / RMSe ) * ( MUC - DS ) )", "obj1": 0.34530938123752497, "obj2": 0.6174669181075143}, {"determining": "( ( PN + ACS ) / ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7365269461077845, "obj2": 0.24678283637409584}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( FirstVNF_Mem / CRS ) - ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,( RRSe / RCSe ) ) ) * ( ( ( MUC + ( ( MUM / ( RMSe / MLU ) ) * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.42115768463073855, "obj2": 0.515121587652461}, {"determining": "Min( Min( ( ( ( FirstVNF_Mem / ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) / FirstVNF_Mem ) ) - Max( PN,FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU + CS ) ,( MUM / DS ) )", "obj1": 0.46506986027944114, "obj2": 0.46431406886380305}, {"determining": "( FirstVNF_CPU * Min( BR ,Max( FirstVNF_Mem,( MDR * ( Max( ( Max( ACS,ACS ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ),Min( FirstVNF_RAM ,MDR ) ) / DDR ) ) ) ) )", "choosing": "( ( MLU + ( ( RCSe + Max( ( RRSe - ( MLU - Min( CS ,DS ) ) ),( ( Min( CS ,RCSe ) + RCSe ) + RCSe ) ) ) - Max( ( Max( ( MLU + ( MUR * CS ) ),( CS - Min( MUC ,MLU ) ) ) + MUC ),RCSe ) ) ) - ( CS + MUC ) )", "obj1": 0.4291417165668663, "obj2": 0.5066632749261675}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( ( AMS * AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 0.9880239520958084, "obj2": 0.005706635942282743}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RMSe * MUM ) ,( MUR * MUM ) ) ) + ( ( RRSe + MUM ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.5026246530481945}, {"determining": "( ( FirstVNF_Mem / ( ARS + FirstVNF_Mem_Server ) ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem_Server + ARS ) * RRS ) ) )", "choosing": "( Max( ( MUR / CS ),Min( RMSe ,( CS / DS ) ) ) * ( ( ( MUC + ( ( MUM / CS ) * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.43912175648702595, "obj2": 0.5048575352706139}, {"determining": "Max( ( RRS + Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,AMS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( RMSe - MUM ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.4231536926147705, "obj2": 0.5121371692055757}, {"determining": "Min( Min( ARS ,FirstVNF_CPU ) ,( Min( Max( Max( ( AMS * Max( RRS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ),( FirstVNF_Mem_Server - Min( MRS ,BR ) ) ) ,Min( MRS ,ARS ) ) + Max( ( ( ( MRS * FirstVNF_CPU ) - RRS ) * Min( CRS ,AMS ) ),( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC - ( ( Max( MUC,RMSe ) - RMSe ) / MUC ) ) * MUM ) / ( MUM * ( Max( MUC,RMSe ) * RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ACS,Max( FirstVNF_CPU,( DDR + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( MUC ,Max( RRSe,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - MUR ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - ( Max( Max( CRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( Min( CS ,( RRSe + Max( MUC,MLU ) ) ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / Min( MLU ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + Min( Min( Const ,MRS ) ,BR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * ( ( PN + ACS ) / Min( ( CRS * Min( FirstVNF_RAM ,Max( BR,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( ( Min( ( RMSe * DS ) ,MUR ) / Max( CS,MUC ) ) - DS ) ) + Min( ( Max( Max( Max( MUR,DS ),( MUM / RRSe ) ),DS ) * ( MUC - DS ) ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( ( CS + MUM ) - ( ( Min( MUM ,MUM ) * ( RRSe / DS ) ) + RMSe ) ) ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( MUM + MUR ) ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( ( BR + FirstVNF_Mem ),FirstVNF_CPU_Server ) ) - Max( AMS,RRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( MUR - RCSe ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / CS ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) + ( CRS - ( DDR + Const ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( CS / DS ) + MUM ) ,MUR ) ) * ( ( MUM + MUM ) / ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( ( MUR + CS ) + Max( RCSe,DS ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - ( Min( Max( ( Const / Max( MRS,MDR ) ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ) + CRS ) ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Min( Min( MUR ,RCSe ) ,Min( ( MLU + MUC ) ,RRSe ) ) ,MUR ) - ( Min( RMSe ,Max( MUC,MLU ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( MUC * MUR ),RRSe ) ,( Max( ( RCSe * DS ),RRSe ) - ( MUM + RMSe ) ) ) - ( Max( ( DS / RMSe ),RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( Min( PN ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,FirstVNF_Mem_Server ) * Min( BR ,MDR ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( ( DS / CS ) ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * Max( ( FirstVNF_CPU / Const ),Min( RRS ,MDR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( ( RCSe + MUM ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / ( ( Max( RCSe,RRSe ) - DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) + Max( Min( ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),Max( Const,( ( Min( Min( FirstVNF_CPU_Server ,BR ) ,FirstVNF_CPU ) / DDR ) - AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( ( ( MUM / MUC ) + Min( RCSe ,( ( DS / ( DS - MUC ) ) + RCSe ) ) ) / MUR ) ) + ( Min( MLU ,RCSe ) - Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( Max( PN,DDR ) - Min( CRS ,RRS ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( AMS ,( FirstVNF_CPU_Server + ( ( BR / ACS ) / MDR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( ( ( MUM - Max( MUC,CS ) ) + ( CS / RCSe ) ),MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * Max( ( RRS + MRS ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( ( ( RRSe * DS ) * ( MUR - MUM ) ) + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + Max( MRS,Max( ARS,CRS ) ) ) ) )", "choosing": "Min( Min( Min( MUM ,CS ) ,RCSe ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( CRS ,ARS ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MUC + RCSe ) + ( MUC + CS ) ) - ( Min( Min( MUC ,DS ) ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( AMS - AMS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + ( CS - MUC ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,Min( ( ( FirstVNF_CPU_Server / CRS ) * DDR ) ,FirstVNF_RAM ) ) ,Min( ( ARS * Const ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU + ( CS / Min( ( MUR * RMSe ) ,MUR ) ) ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,Max( MUC,CS ) ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( FirstVNF_CPU + ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( ( MUC * Max( MUM,RCSe ) ) * MUC ) / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( ( MRS + RRS ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( RMSe ,RCSe ) * ( Max( CS,( MLU - RCSe ) ) + ( ( RCSe * ( Min( MLU ,MLU ) / MUR ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ARS + FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) * ARS ) ) )", "choosing": "Min( ( ( Min( DS ,CS ) * ( MLU - ( CS - Min( Min( RMSe ,( RRSe - CS ) ) ,MUC ) ) ) ) * MUC ) ,( ( MUM * CS ) - ( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( Max( MDR,PN ),AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Max( PN,ARS ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( ( Min( DS ,Max( ( Max( MUM,RMSe ) - ( MLU - RCSe ) ),MUC ) ) - RRSe ) ,Max( RCSe,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) * ARS ) - RRS ) * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) * Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) ) ) - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,MUC ) ,( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,Max( Min( ACS ,RRS ),( ACS / BR ) ) ) ) + PN ) )", "choosing": "( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - PN )", "choosing": "( Max( MUC,( MUM + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Max( MUM,MUR ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,( Const - DDR ) ) ) + ( CRS - ( DDR + ( ( Max( PN,FirstVNF_CPU_Server ) + Max( ( BR * Min( FirstVNF_Mem ,ARS ) ),AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( CS + RRSe ) / Min( ( MUR * RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( Min( ( MRS - PN ) ,FirstVNF_Mem_Server ) + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,Min( ( DS * RCSe ) ,Min( ( Min( CS ,RMSe ) * RMSe ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ARS ,Min( Min( Max( ARS,MRS ) ,RRS ) ,( ( MDR / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server ) - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / FirstVNF_Mem )", "choosing": "( Max( ( DS + MUC ),Max( ( MUC + RCSe ),MUR ) ) * ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) ,( ARS * ACS ) )", "choosing": "Min( ( MUC + ( ( Max( Min( Min( MUM ,RMSe ) ,( ( RMSe - RRSe ) + MUR ) ),MUM ) + MUM ) * DS ) ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN * FirstVNF_RAM ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( PN + ACS ),RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem / ( FirstVNF_CPU - AMS ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( CS * ( MUC - DS ) ) * ( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( MUM * MUC ) / MUR ) ) ) )", "obj1": 0.249500998003992, "obj2": 0.6980099464157905}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.36388685493131573}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5548902195608783, "obj2": 0.30618417902429296}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6407185628742516, "obj2": 0.265358443263559}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - MUC ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.7604790419161677, "obj2": 0.16543824094392598}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.30082511988857563}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.8502994011976048, "obj2": 0.0659794359707811}, {"determining": "( ( PN + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7245508982035929, "obj2": 0.24764033711084973}, {"determining": "Min( ( Min( PN ,Max( ARS,CRS ) ) + FirstVNF_RAM_Server ) ,( AMS - AMS ) )", "choosing": "( ( MUR + DS ) - ( Min( ( ( ( RRSe / RCSe ) * MUM ) + DS ) ,MUM ) + MUC ) )", "obj1": 0.49101796407185627, "obj2": 0.4334170976630144}, {"determining": "Min( Min( ( FirstVNF_RAM - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( ( RMSe + ( ( DS - RMSe ) * Min( DS ,MLU ) ) ) * ( MUM - CS ) ) ) )", "obj1": 0.93812375249501, "obj2": 0.05084515936631645}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4471057884231537, "obj2": 0.4529459378787619}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM + CS ) * ( MUC - ( ( ( Min( ( MLU - RMSe ) ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.7584830339321357, "obj2": 0.19937329255569036}, {"determining": "( ( FirstVNF_Mem / CRS ) - Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( ( ( Max( ( MUM / RRSe ),( ( RCSe * Min( MUM ,RCSe ) ) * Min( ( MUC / RMSe ) ,( DS - MUR ) ) ) ) + ( MUR * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.8982035928143712, "obj2": 0.0634355540906471}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / Max( ( ( FirstVNF_Mem_Server / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) ) ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,MUM ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) ) )", "obj1": 0.32934131736526945, "obj2": 0.6305845416318971}, {"determining": "( ( Max( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ),AMS ) + ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( ( ( RCSe + MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "( Max( ( RRS - AMS ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + DS ) + ( MUM * RMSe ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( MDR - ARS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( RRSe ,CS ),Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MLU ) ) ) ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44673383611366124}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUM + RMSe ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.30538922155688625, "obj2": 0.6418462509579993}, {"determining": "( ( FirstVNF_Mem / CRS ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) ) / MRS ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR + DS ) - MUM ),Min( MLU ,MUR ) ) * ( ( ( MUC + ( MUR * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9301397205588823, "obj2": 0.05597029313021828}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.25948103792415167, "obj2": 0.6869422856669986}, {"determining": "Min( ( AMS - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( ( CS - MUC ) + DS ) + MUR ) )", "obj1": 0.405189620758483, "obj2": 0.5191539795202497}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( MDR - ( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( MLU ,RRSe ),MLU ) ) )", "obj1": 0.4411177644710579, "obj2": 0.49125538709383293}, {"determining": "( ( ( MDR - ARS ) * ( ACS - MDR ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * MLU ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / ( ( MUR + CS ) + Max( RCSe,DS ) ) ) )", "obj1": 0.27345309381237526, "obj2": 0.6721590735192164}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "Max( ARS,Min( ( MRS * Const ) ,( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( Min( MUR ,Min( CS ,MUC ) ) * ( Min( Max( DS,( DS * RRSe ) ) ,RMSe ) * CS ) )", "obj1": 0.3712574850299401, "obj2": 0.5430899619999504}, {"determining": "( ( PN + ACS ) / ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7365269461077845, "obj2": 0.24678283637409584}, {"determining": "Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) - ( CS * RMSe ) )", "obj1": 0.2834331337325349, "obj2": 0.6682349741542295}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / ( ( ( FirstVNF_Mem_Server + BR ) / Const ) * MDR ) ) ) ) ),Max( ( Min( ACS ,RRS ) - PN ),FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUC + MUR ) ) - Max( CS,( CS * ( Max( RMSe,( RMSe - RCSe ) ) + RMSe ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5540293080426846}, {"determining": "Max( Max( ( DDR + Const ),( ( ( MRS / DDR ) * AMS ) - PN ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUM / MUR ) ) - ( ( CS / DS ) + MUM ) )", "obj1": 0.4291417165668663, "obj2": 0.5022778720686758}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.28542914171656686, "obj2": 0.657225908007857}, {"determining": "Max( ( RRS + Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,AMS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( RMSe - MUM ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.4231536926147705, "obj2": 0.5121371692055757}, {"determining": "Max( RRS,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( ( MUR + DS ) - ( CS - DS ) ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.43313373253493015, "obj2": 0.4992736635904662}, {"determining": "( ( FirstVNF_Mem / CRS ) - Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( ( ( Max( ( MUM / RRSe ),( ( RCSe * Min( MUM ,RCSe ) ) * Min( ( MUC / RMSe ) ,( DS - MUR ) ) ) ) + ( MUR * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.41317365269461076, "obj2": 0.51693671420048}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( ( AMS * AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 0.9880239520958084, "obj2": 0.005706635942282743}, {"determining": "( ( FirstVNF_Mem / CRS ) - ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,( RRSe / RCSe ) ) ) * ( ( ( MUC + ( ( MUM / ( RMSe / MLU ) ) * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.43912175648702595, "obj2": 0.49181303806051735}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "( ( FirstVNF_Mem / CRS ) - ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,( RRSe / RCSe ) ) ) * ( ( ( MUC + ( ( MUM / ( RMSe / MLU ) ) * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.42115768463073855, "obj2": 0.515121587652461}, {"determining": "Min( Min( ARS ,FirstVNF_CPU ) ,( Min( Max( Max( ( AMS * Max( RRS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ),( FirstVNF_Mem_Server - Min( MRS ,BR ) ) ) ,Min( MRS ,ARS ) ) + Max( ( ( ( MRS * FirstVNF_CPU ) - RRS ) * Min( CRS ,AMS ) ),( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC - ( ( Max( MUC,RMSe ) - RMSe ) / MUC ) ) * MUM ) / ( MUM * ( Max( MUC,RMSe ) * RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ACS,Max( FirstVNF_CPU,( DDR + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( MUC ,Max( RRSe,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - MUR ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( Const / Min( Const ,DDR ) ),RRS ) ) ) ,Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,( MLU * RRSe ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( ( MUR * CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - ( Max( Max( CRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( Min( CS ,( RRSe + Max( MUC,MLU ) ) ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / Min( MLU ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + Min( Min( Const ,MRS ) ,BR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * ( ( PN + ACS ) / Min( ( CRS * Min( FirstVNF_RAM ,Max( BR,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( ( Min( ( RMSe * DS ) ,MUR ) / Max( CS,MUC ) ) - DS ) ) + Min( ( Max( Max( Max( MUR,DS ),( MUM / RRSe ) ),DS ) * ( MUC - DS ) ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( ( CS + MUM ) - ( ( Min( MUM ,MUM ) * ( RRSe / DS ) ) + RMSe ) ) ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( MUM + MUR ) ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( ( BR + FirstVNF_Mem ),FirstVNF_CPU_Server ) ) - Max( AMS,RRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( MUR - RCSe ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / CS ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) + ( CRS - ( DDR + Const ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( CS / DS ) + MUM ) ,MUR ) ) * ( ( MUM + MUM ) / ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( ( MUR + CS ) + Max( RCSe,DS ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - ( Min( Max( ( Const / Max( MRS,MDR ) ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ) + CRS ) ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Min( Min( MUR ,RCSe ) ,Min( ( MLU + MUC ) ,RRSe ) ) ,MUR ) - ( Min( RMSe ,Max( MUC,MLU ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( MUC * MUR ),RRSe ) ,( Max( ( RCSe * DS ),RRSe ) - ( MUM + RMSe ) ) ) - ( Max( ( DS / RMSe ),RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( Min( PN ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,FirstVNF_Mem_Server ) * Min( BR ,MDR ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( ( DS / CS ) ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * Max( ( FirstVNF_CPU / Const ),Min( RRS ,MDR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( ( RCSe + MUM ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / ( ( Max( RCSe,RRSe ) - DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) + Max( Min( ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),Max( Const,( ( Min( Min( FirstVNF_CPU_Server ,BR ) ,FirstVNF_CPU ) / DDR ) - AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( ( ( MUM / MUC ) + Min( RCSe ,( ( DS / ( DS - MUC ) ) + RCSe ) ) ) / MUR ) ) + ( Min( MLU ,RCSe ) - Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( Max( PN,DDR ) - Min( CRS ,RRS ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( AMS ,( FirstVNF_CPU_Server + ( ( BR / ACS ) / MDR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( ( ( MUM - Max( MUC,CS ) ) + ( CS / RCSe ) ),MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * Max( ( RRS + MRS ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( ( ( RRSe * DS ) * ( MUR - MUM ) ) + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + Max( MRS,Max( ARS,CRS ) ) ) ) )", "choosing": "Min( Min( Min( MUM ,CS ) ,RCSe ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( CRS ,ARS ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MUC + RCSe ) + ( MUC + CS ) ) - ( Min( Min( MUC ,DS ) ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( AMS - AMS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + ( CS - MUC ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,Min( ( ( FirstVNF_CPU_Server / CRS ) * DDR ) ,FirstVNF_RAM ) ) ,Min( ( ARS * Const ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU + ( CS / Min( ( MUR * RMSe ) ,MUR ) ) ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,Max( MUC,CS ) ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( FirstVNF_CPU + ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( ( MUC * Max( MUM,RCSe ) ) * MUC ) / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( ( MRS + RRS ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( RMSe ,RCSe ) * ( Max( CS,( MLU - RCSe ) ) + ( ( RCSe * ( Min( MLU ,MLU ) / MUR ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ARS + FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) * ARS ) ) )", "choosing": "Min( ( ( Min( DS ,CS ) * ( MLU - ( CS - Min( Min( RMSe ,( RRSe - CS ) ) ,MUC ) ) ) ) * MUC ) ,( ( MUM * CS ) - ( ( ( MUC + Max( RMSe,CS ) ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( Max( MDR,PN ),AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Max( ( Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) * ( ( FirstVNF_CPU + RRS ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) ,( ARS * ACS ) )", "choosing": "Min( ( MUC + ( ( Max( Min( Min( MUM ,RMSe ) ,( ( RMSe - RRSe ) + MUR ) ),MUM ) + MUM ) * DS ) ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( MUM * MUC ) / MUR ) ) ) )", "obj1": 0.249500998003992, "obj2": 0.6980099464157905}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6407185628742516, "obj2": 0.265358443263559}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.36388685493131573}, {"determining": "( ( PN + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7245508982035929, "obj2": 0.24764033711084973}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * MUR ) / ( ( ( MUC / MUR ) - ( RMSe / MLU ) ) / RCSe ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.47305389221556887, "obj2": 0.42462725089287023}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.9520958083832335, "obj2": 0.033851276109718144}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( PN - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10423126550284001}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / MUM ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.3183688119156184}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - MUC ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.7604790419161677, "obj2": 0.16543824094392598}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4471057884231537, "obj2": 0.4529459378787619}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( Min( ( MRS * Const ) ,( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.20107188358468575}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.8502994011976048, "obj2": 0.0659794359707811}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5528942115768463, "obj2": 0.30050452833756575}, {"determining": "( ( Max( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ),AMS ) + ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( ( ( RCSe + MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM + CS ) * ( MUC - ( ( ( Min( ( MLU - RMSe ) ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.7584830339321357, "obj2": 0.19937329255569036}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.3992015968063872, "obj2": 0.5066946167529954}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS - DS ) / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3273453093812375, "obj2": 0.6260167005317971}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( ( ( Const / FirstVNF_CPU_Server ) / ACS ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - RCSe ) * Min( DS ,DS ) ) + ( RRSe - MUC ) ) + MUC )", "obj1": 0.9740518962075848, "obj2": 0.01055761485521063}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( MDR - ( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( MLU ,RRSe ),MLU ) ) )", "obj1": 0.4411177644710579, "obj2": 0.49125538709383293}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( FirstVNF_CPU_Server,( MDR + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR / ( Max( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MLU ) ) ) + Max( Max( RMSe,MLU ),RCSe ) ),DS ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3932135728542914, "obj2": 0.5216730872258796}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) + ACS ) - ( Max( ( ( ARS * BR ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( ( ( MUM + RMSe ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) - CS ) ,Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06396836577781344}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "Max( Max( ( DDR + Const ),( ( ( MRS / DDR ) * AMS ) - PN ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUM / MUR ) ) - ( ( CS / DS ) + MUM ) )", "obj1": 0.4291417165668663, "obj2": 0.5022778720686758}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.25948103792415167, "obj2": 0.6869422856669986}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( Max( MUM,MUC ),MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.32335329341317365, "obj2": 0.6337151952437989}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( Min( MUC ,MUM ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2714570858283433, "obj2": 0.6699974464644942}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( FirstVNF_RAM_Server,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( MUM,MUR ) * MUM ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6406352735842061}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - FirstVNF_RAM ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( MUR - ( MUC / RMSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5389824881158319}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.28542914171656686, "obj2": 0.657225908007857}, {"determining": "Max( RRS,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( ( MUR + DS ) - ( CS - DS ) ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.43313373253493015, "obj2": 0.4992736635904662}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server * PN ) - PN ) ),( Min( DDR ,Const ) - ( ( PN - ACS ) - BR ) ) )", "choosing": "( ( MUR / ( Max( ( RMSe - ( ( MLU - ( MUM * CS ) ) * RRSe ) ),Max( Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ),MLU ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUM + RMSe ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.30538922155688625, "obj2": 0.6418462509579993}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3652694610778443, "obj2": 0.5495713464346318}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + CRS ) )", "choosing": "( ( MUR / ( Max( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MLU ) ) ) + MLU ),( ( MUC * MLU ) / RCSe ) ) + Min( ( ( ( ( RRSe * DS ) * ( MUR - MUM ) ) + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.37325349301397204, "obj2": 0.5351333995572104}, {"determining": "Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) - ( CS * RMSe ) )", "obj1": 0.2834331337325349, "obj2": 0.6682349741542295}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * ( MDR - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * BR ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( ( AMS * AMS ) - Min( Const ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) )", "obj1": 0.9880239520958084, "obj2": 0.005706635942282743}, {"determining": "( ( FirstVNF_Mem / CRS ) - ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,( RRSe / RCSe ) ) ) * ( ( ( MUC + ( ( MUM / ( RMSe / MLU ) ) * DS ) ) + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.43912175648702595, "obj2": 0.49181303806051735}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / ( ( ( FirstVNF_Mem_Server + BR ) / Const ) * MDR ) ) ) ) ),Max( ( Min( ACS ,RRS ) - PN ),FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUC + MUR ) ) - Max( CS,( CS * ( Max( RMSe,( RMSe - RCSe ) ) + RMSe ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5540293080426846}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ),AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) / DS ) - ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) )", "obj1": 0.281437125748503, "obj2": 0.6691052218108635}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "Min( Min( ARS ,FirstVNF_CPU ) ,( Min( Max( Max( ( AMS * Max( RRS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ),( FirstVNF_Mem_Server - Min( MRS ,BR ) ) ) ,Min( MRS ,ARS ) ) + Max( ( ( ( MRS * FirstVNF_CPU ) - RRS ) * Min( CRS ,AMS ) ),( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC - ( ( Max( MUC,RMSe ) - RMSe ) / MUC ) ) * MUM ) / ( MUM * ( Max( MUC,RMSe ) * RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( AMS * ARS ) + ( DDR + Max( MRS,Max( ARS,CRS ) ) ) ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - MUR ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / Min( Min( Min( MUM ,CS ) ,RCSe ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0029701977950816975}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "( ( ( MDR - ARS ) * ( ACS - MDR ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * MLU ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( Min( Max( Max( FirstVNF_CPU,PN ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( ( MUC - RCSe ) * Min( DS ,DS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,MUM ) ) / MUR )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ACS,Max( FirstVNF_CPU,( DDR + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( MUC ,Max( RRSe,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( Min( Max( ( PN * FirstVNF_RAM ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( PN + ACS ),RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem / ( FirstVNF_CPU - AMS ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( CS * ( MUC - DS ) ) * ( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( Const / Min( Const ,DDR ) ),RRS ) ) ) ,Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,( MLU * RRSe ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( ( MUR * CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - ( Max( Max( CRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( Min( CS ,( RRSe + Max( MUC,MLU ) ) ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / Min( MLU ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + Min( Min( Const ,MRS ) ,BR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * ( ( PN + ACS ) / Min( ( CRS * Min( FirstVNF_RAM ,Max( BR,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( ( Min( ( RMSe * DS ) ,MUR ) / Max( CS,MUC ) ) - DS ) ) + Min( ( Max( Max( Max( MUR,DS ),( MUM / RRSe ) ),DS ) * ( MUC - DS ) ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( ( CS + MUM ) - ( ( Min( MUM ,MUM ) * ( RRSe / DS ) ) + RMSe ) ) ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( MUM + MUR ) ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( ( BR + FirstVNF_Mem ),FirstVNF_CPU_Server ) ) - Max( AMS,RRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( MUR - RCSe ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / CS ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) + ( CRS - ( DDR + Const ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( CS / DS ) + MUM ) ,MUR ) ) * ( ( MUM + MUM ) / ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( ( MUR + CS ) + Max( RCSe,DS ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - ( Min( Max( ( Const / Max( MRS,MDR ) ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ) + CRS ) ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Min( Min( MUR ,RCSe ) ,Min( ( MLU + MUC ) ,RRSe ) ) ,MUR ) - ( Min( RMSe ,Max( MUC,MLU ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( MUC * MUR ),RRSe ) ,( Max( ( RCSe * DS ),RRSe ) - ( MUM + RMSe ) ) ) - ( Max( ( DS / RMSe ),RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( Min( PN ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,FirstVNF_Mem_Server ) * Min( BR ,MDR ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( ( DS / CS ) ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * Max( ( FirstVNF_CPU / Const ),Min( RRS ,MDR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( ( RCSe + MUM ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / ( ( Max( RCSe,RRSe ) - DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) + Max( Min( ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),Max( Const,( ( Min( Min( FirstVNF_CPU_Server ,BR ) ,FirstVNF_CPU ) / DDR ) - AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( ( ( MUM / MUC ) + Min( RCSe ,( ( DS / ( DS - MUC ) ) + RCSe ) ) ) / MUR ) ) + ( Min( MLU ,RCSe ) - Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( Max( PN,DDR ) - Min( CRS ,RRS ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Min( AMS ,( FirstVNF_CPU_Server + ( ( BR / ACS ) / MDR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( ( ( MUM - Max( MUC,CS ) ) + ( CS / RCSe ) ),MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * Max( ( RRS + MRS ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( ( ( RRSe * DS ) * ( MUR - MUM ) ) + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( Max( ( Max( RRS,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ),CRS ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( ( MUC + MLU ) ,( ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) * ( ( FirstVNF_CPU + RRS ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( MUM * MUC ) / MUR ) ) ) )", "obj1": 0.249500998003992, "obj2": 0.6980099464157905}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6407185628742516, "obj2": 0.265358443263559}, {"determining": "( ( PN + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7245508982035929, "obj2": 0.24764033711084973}, {"determining": "( ( ( Min( Max( MRS,( FirstVNF_RAM * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ,CRS ) - ( ( MDR + Max( FirstVNF_CPU_Server,AMS ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Max( DDR,MDR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC + Max( Max( RRSe,MLU ),RCSe ) ) - ( CS * ( MUC - DS ) ) )", "obj1": 0.7584830339321357, "obj2": 0.16447994460337917}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( Min( ( MRS * Const ) ,( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.20107188358468575}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / MUM ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.3183688119156184}, {"determining": "( PN - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10423126550284001}, {"determining": "( ( PN + Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - ( Max( AMS,RRS ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ),Max( ( CS * ( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.846307385229541, "obj2": 0.060759814806215034}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4750499001996008, "obj2": 0.39918882601344213}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MUC ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.36388685493131573}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5528942115768463, "obj2": 0.30050452833756575}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4471057884231537, "obj2": 0.4529459378787619}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * ( FirstVNF_Mem_Server - DDR ) ) ,ACS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ( CRS + BR ) / Max( ( ( DDR * ( MDR - Const ) ) * ( FirstVNF_RAM + BR ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( DS - DS ) ) ) / ( RCSe / CS ) ) * MUR ) ,( ( RRSe * RCSe ) * CS ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.500998003992016, "obj2": 0.3642560555202607}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) - Max( ( MDR + ( FirstVNF_RAM - ( BR / ACS ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,Max( MUR,Min( MLU ,MUC ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * ( DS / CS ) ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4361689425608521}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * MUR ) / ( ( ( MUC / MUR ) - ( RMSe / MLU ) ) / RCSe ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.47305389221556887, "obj2": 0.42462725089287023}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.026076927156679384}, {"determining": "( ( PN + ACS ) - ( Max( AMS,( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( Max( ( MUC * MUR ),RRSe ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( MDR - ( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) - ( CS * RMSe ) )", "obj1": 0.42714570858283435, "obj2": 0.4892731012394469}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9660678642714571, "obj2": 0.013441351263582072}, {"determining": "Max( RRS,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( ( MUC / DS ) - ( CS * RMSe ) ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5213866774633097}, {"determining": "Max( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ),Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,Max( MUR,MUM ) ) / MUR ) - ( CS * RMSe ) )", "obj1": 0.4091816367265469, "obj2": 0.503540327457086}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "Max( RRS,Min( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( RRSe ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( ( MUR + DS ) - ( CS - DS ) ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.4848557571562671}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( FirstVNF_RAM_Server,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( MUM,MUR ) * MUM ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6406352735842061}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.3992015968063872, "obj2": 0.5066946167529954}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( ( ( PN / MDR ) / ( ARS - AMS ) ),AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) / DS ) - ( Min( Min( RCSe ,MUR ) ,Max( Max( ( MUM / MLU ),MLU ),RCSe ) ) + RRSe ) )", "obj1": 0.2754491017964072, "obj2": 0.6641600902790183}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( Min( MUC ,MUM ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2714570858283433, "obj2": 0.6699974464644942}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.28542914171656686, "obj2": 0.657225908007857}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "( ( Max( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ),AMS ) + ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( ( ( RCSe + MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - FirstVNF_RAM ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( MUR - ( MUC / RMSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5389824881158319}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "Max( FirstVNF_CPU,Max( Max( Min( MRS ,( PN / ( AMS / AMS ) ) ),Const ),( Max( ACS,FirstVNF_Mem ) * ( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( MUR - ( CS * Min( ( MUC + MLU ) ,( ( CS / MUC ) / ( Min( Min( MUC ,MUR ) ,MUR ) - RCSe ) ) ) ) )", "obj1": 0.4411177644710579, "obj2": 0.4863953687385971}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUM + RMSe ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.30538922155688625, "obj2": 0.6418462509579993}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3652694610778443, "obj2": 0.5495713464346318}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( DDR + ( MDR / CRS ) ) )", "choosing": "( ( MUR / ( ( MUC * MUR ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + CRS ) )", "choosing": "( ( MUR / ( Max( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MLU ) ) ) + MLU ),( ( MUC * MLU ) / RCSe ) ) + Min( ( ( ( ( RRSe * DS ) * ( MUR - MUM ) ) + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.37325349301397204, "obj2": 0.5351333995572104}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( ( ( Const / FirstVNF_CPU_Server ) / ACS ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - RCSe ) * Min( DS ,DS ) ) + ( RRSe - MUC ) ) + MUC )", "obj1": 0.9740518962075848, "obj2": 0.01055761485521063}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / ( ( ( FirstVNF_Mem_Server + BR ) / Const ) * MDR ) ) ) ) ),Max( ( Min( ACS ,RRS ) - PN ),FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUC + MUR ) ) - Max( CS,( CS * ( Max( RMSe,( RMSe - RCSe ) ) + RMSe ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5540293080426846}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server * PN ) - PN ) ),( Min( DDR ,Const ) - ( ( PN - ACS ) - BR ) ) )", "choosing": "( ( MUR / ( Max( ( RMSe - ( ( MLU - ( MUM * CS ) ) * RRSe ) ),Max( Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ),MLU ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUR )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ),FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,ARS ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( MUM / MUR )", "obj1": 0.9880239520958084, "obj2": 0.0046957755543328445}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,MUM ) ) / ( CS - DS ) )", "obj1": 0.9920159680638723, "obj2": 0.0029392960102742997}, {"determining": "Min( Min( Max( AMS,RRS ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) ) ) / MUR )", "obj1": 0.9900199600798403, "obj2": 0.003762095383795966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,MUM ) ) / MUR )", "obj1": 0.9880239520958084, "obj2": 0.0046957755543328445}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "( ( ( MDR - ARS ) * ( ACS - MDR ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * MLU ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "( ( ( MDR - ARS ) * ( ( FirstVNF_RAM / MDR ) - PN ) ) * ( CRS - MRS ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,MUC ) ) / RRSe )", "obj1": 0.9760479041916168, "obj2": 0.00940999012689388}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,ARS ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUM * MUC ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( Min( Max( Max( FirstVNF_CPU,PN ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( ( MUC - RCSe ) * Min( DS ,DS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,MUM ) ) / MUR )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) ,( ARS * ACS ) )", "choosing": "Min( ( MUC + ( ( Max( Min( Min( MUM ,RMSe ) ,( ( RMSe - RRSe ) + MUR ) ),MUM ) + MUM ) * DS ) ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN * FirstVNF_RAM ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( PN + ACS ),RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem / ( FirstVNF_CPU - AMS ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( CS * ( MUC - DS ) ) * ( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( Const / Min( Const ,DDR ) ),RRS ) ) ) ,Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,( MLU * RRSe ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( ( MUR * CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - ( Max( Max( CRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( Min( CS ,( RRSe + Max( MUC,MLU ) ) ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / Min( MLU ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + Min( Min( Const ,MRS ) ,BR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * ( ( PN + ACS ) / Min( ( CRS * Min( FirstVNF_RAM ,Max( BR,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( ( Min( ( RMSe * DS ) ,MUR ) / Max( CS,MUC ) ) - DS ) ) + Min( ( Max( Max( Max( MUR,DS ),( MUM / RRSe ) ),DS ) * ( MUC - DS ) ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,AMS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( RCSe - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,( ( CS + MUM ) - ( ( Min( MUM ,MUM ) * ( RRSe / DS ) ) + RMSe ) ) ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( MUM + MUR ) ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( ( BR + FirstVNF_Mem ),FirstVNF_CPU_Server ) ) - Max( AMS,RRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( MUR - RCSe ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / CS ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) + ( CRS - ( DDR + Const ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( CS / DS ) + MUM ) ,MUR ) ) * ( ( MUM + MUM ) / ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( ( MUR + CS ) + Max( RCSe,DS ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) + ( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,MUR ) ,Max( Max( RMSe,MLU ),RCSe ) ) + RRSe ) / ( ( RCSe / DS ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - ( Min( Max( ( Const / Max( MRS,MDR ) ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ) + CRS ) ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Min( Min( MUR ,RCSe ) ,Min( ( MLU + MUC ) ,RRSe ) ) ,MUR ) - ( Min( RMSe ,Max( MUC,MLU ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( MUC * MUR ),RRSe ) ,( Max( ( RCSe * DS ),RRSe ) - ( MUM + RMSe ) ) ) - ( Max( ( DS / RMSe ),RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - DDR ) * ( Min( PN ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( MRS / Const ) * ( CRS + ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,( PN * BR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + MLU ) ,Max( Max( Max( MUM,DS ),( MLU * ( CS + RCSe ) ) ),RCSe ) ) * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ),CRS ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( ( MUC + MLU ) ,( ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( MUM * MUC ) / MUR ) ) ) )", "obj1": 0.249500998003992, "obj2": 0.6980099464157905}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6407185628742516, "obj2": 0.265358443263559}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( PN - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10423126550284001}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) ) ) * ( MUC - DS ) )", "obj1": 0.7045908183632734, "obj2": 0.25265248128154555}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "( ( ( Min( Max( MRS,( FirstVNF_RAM * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ,CRS ) - ( ( MDR + Max( FirstVNF_CPU_Server,AMS ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Max( DDR,MDR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC + Max( Max( RRSe,MLU ),RCSe ) ) - ( CS * ( MUC - DS ) ) )", "obj1": 0.7584830339321357, "obj2": 0.16447994460337917}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( Min( ( MRS * Const ) ,( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.20107188358468575}, {"determining": "( ( PN + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7245508982035929, "obj2": 0.24764033711084973}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5528942115768463, "obj2": 0.30050452833756575}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) - Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / MUM ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.3183688119156184}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,( Max( ACS,FirstVNF_Mem ) * ( ( Max( PN,Min( DDR ,CRS ) ) - FirstVNF_Mem_Server ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( MUR - ( CS * Min( ( MUC + MLU ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.47914937981524686}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9241516966067864, "obj2": 0.04446581371696836}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4471057884231537, "obj2": 0.4529459378787619}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( Min( ( MRS * Const ) ,( Max( PN,FirstVNF_Mem_Server ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Max( MUR,Max( DS,( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7544910179640718, "obj2": 0.1876319780111631}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( Min( ACS ,PN ) - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * ( ARS + AMS ) ) ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( RCSe * ( ( DS / Min( ( ( CS * RCSe ) / DS ) ,Max( ( RRSe * MUR ),MUR ) ) ) / Max( RRSe,Max( RCSe,MLU ) ) ) ),MUR ),( ( MUR / DS ) - ( ( RMSe / Min( MUR ,MLU ) ) + RRSe ) ) )", "obj1": 0.3033932135728543, "obj2": 0.6381797585426368}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ) ) )", "choosing": "( ( ( ( ( ( RCSe * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe / CS ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5209580838323353, "obj2": 0.3369724168625816}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) - Max( ( MDR + ( FirstVNF_RAM - ( BR / ACS ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( DS,Max( MUR,Min( MLU ,MUC ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * ( DS / CS ) ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4361689425608521}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.026076927156679384}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * ( FirstVNF_Mem_Server - DDR ) ) ,ACS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ( CRS + BR ) / Max( ( ( DDR * ( MDR - Const ) ) * ( FirstVNF_RAM + BR ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( DS - DS ) ) ) / ( RCSe / CS ) ) * MUR ) ,( ( RRSe * RCSe ) * CS ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.48303393213572854, "obj2": 0.39418643121880087}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4151696606786427, "obj2": 0.4860706280197982}, {"determining": "( ( Max( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ),AMS ) + ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( ( ( RCSe + MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.49500998003992014, "obj2": 0.3668570936425797}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.34605215559004016}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9660678642714571, "obj2": 0.013441351263582072}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4750499001996008, "obj2": 0.39918882601344213}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * MUR ) / ( ( ( MUC / MUR ) - ( RMSe / MLU ) ) / RCSe ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.47305389221556887, "obj2": 0.42462725089287023}, {"determining": "Max( Max( RRS,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) + MUR ) ) - CS )", "obj1": 0.40718562874251496, "obj2": 0.49617746819858166}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MUC ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.3992015968063872, "obj2": 0.5066946167529954}, {"determining": "( ( PN + ACS ) - ( AMS - FirstVNF_CPU_Server ) )", "choosing": "Min( ( RRSe - CS ) ,( ( MUR / DS ) * ( MLU / Max( ( Max( Min( ( RMSe + RMSe ) ,( MUM * RMSe ) ),( RRSe * ( RCSe / CS ) ) ) * RCSe ),( RCSe * RMSe ) ) ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( Min( MUC ,MUM ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2714570858283433, "obj2": 0.6699974464644942}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * ( FirstVNF_Mem_Server - DDR ) ) ,ACS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ( CRS + BR ) / Max( ( ( DDR * ( MDR - Const ) ) * ( FirstVNF_RAM + BR ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( DS - DS ) ) ) / ( RCSe / CS ) ) * MUR ) ,( ( RRSe * RCSe ) * CS ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.500998003992016, "obj2": 0.3642560555202607}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6603798061669799}, {"determining": "Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - FirstVNF_RAM ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( MUR - ( MUC / RMSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5389824881158319}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( ( MDR * FirstVNF_Mem ) - Max( CRS,( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR / DS ) - ( MLU / RCSe ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.39520958083832336, "obj2": 0.5178364169448367}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.28542914171656686, "obj2": 0.657225908007857}, {"determining": "( ( PN + ACS ) - ( Max( AMS,( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( Max( ( MUC * MUR ),RRSe ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3652694610778443, "obj2": 0.5495713464346318}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "Max( RRS,Min( ( ARS - PN ) ,Max( FirstVNF_RAM,Min( PN ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( Min( DS ,Min( RMSe ,MUC ) ) - ( MUM - MUC ) ) ) + ( ( MUC / DS ) - ( CS * RMSe ) ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5213866774633097}, {"determining": "Max( RRS,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) + ( ( MUC / DS ) - ( CS * RMSe ) ) ) ,( ( ( MUM / MUC ) + ( DS / CS ) ) * ( MUR - MUM ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5213866774633097}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( ( ( Const / FirstVNF_CPU_Server ) / ACS ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - RCSe ) * Min( DS ,DS ) ) + ( RRSe - MUC ) ) + MUC )", "obj1": 0.9740518962075848, "obj2": 0.01055761485521063}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ARS ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * MUR ) / ( ( ( MUC / MUR ) - RMSe ) / RCSe ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MLU + MUM ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.47305389221556887, "obj2": 0.42462725089287023}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / ( ( ( FirstVNF_Mem_Server + BR ) / Const ) * MDR ) ) ) ) ),Max( ( Min( ACS ,RRS ) - PN ),FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUC + MUR ) ) - Max( CS,( CS * ( Max( RMSe,( RMSe - RCSe ) ) + RMSe ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5540293080426846}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server * PN ) - PN ) ),( Min( DDR ,Const ) - ( ( PN - ACS ) - BR ) ) )", "choosing": "( ( MUR / ( Max( ( RMSe - ( ( MLU - ( MUM * CS ) ) * RRSe ) ),Max( Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ),MLU ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ),FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,ARS ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( MUM / MUR )", "obj1": 0.9880239520958084, "obj2": 0.0046957755543328445}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( BR / ( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) ) + MUR )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9241516966067864, "obj2": 0.04446581371696836}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "( ( PN / PN ) * ( ( ACS + Max( Max( DDR,ARS ),FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( RCSe + ( ( Min( CS ,MUR ) - ( MUM - MLU ) ) + Max( MUR,RRSe ) ) ) ,( DS + MUC ) ) * ( RRSe + Min( ( RCSe + Max( CS,RRSe ) ) ,RCSe ) ) ) / ( MUC * DS ) ) + MUC )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,MUM ) ) / ( CS - DS ) )", "obj1": 0.9920159680638723, "obj2": 0.0029392960102742997}, {"determining": "Min( Min( Max( AMS,RRS ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) ) ) / MUR )", "obj1": 0.9900199600798403, "obj2": 0.003762095383795966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( Min( Min( CRS ,PN ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,( Max( MUR,CS ) + MUR ) ) / MUR )", "obj1": 0.9880239520958084, "obj2": 0.0046957755543328445}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUR )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( FirstVNF_Mem_Server / ARS ) ) + MDR ) )", "choosing": "Min( ( ( Min( RRSe ,Min( CS ,( ( RRSe / RMSe ) + MLU ) ) ) + MUC ) - ( MUM - Min( DS ,Max( MUC,MUC ) ) ) ) ,Max( MUC,Max( ( Max( DS,MLU ) * ( ( RCSe * RRSe ) - DS ) ),MLU ) ) )", "obj1": 0.7904191616766467, "obj2": 0.07935130633694969}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ),FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( ( CS - Max( MUC,RCSe ) ) / MUR )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem_Server ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / ( MUM / DS ) ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,ARS ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUM * MUC ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( Max( ( Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) * ( ( FirstVNF_CPU + RRS ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) ,( ARS * ACS ) )", "choosing": "Min( ( MUC + ( ( Max( Min( Min( MUM ,RMSe ) ,( ( RMSe - RRSe ) + MUR ) ),MUM ) + MUM ) * DS ) ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN * FirstVNF_RAM ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( PN + ACS ),RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem / ( FirstVNF_CPU - AMS ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( CS * ( MUC - DS ) ) * ( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( Const / Min( Const ,DDR ) ),RRS ) ) ) ,Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,( MLU * RRSe ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( ( MUR * CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * ( PN * ( PN * ( CRS + ARS ) ) ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Max( Min( Max( CS,( ( ( ( MLU * MLU ) - Max( MUM,MUR ) ) * ( ( RRSe - MLU ) / RCSe ) ) / MLU ) ) ,Max( ( ( RCSe * CS ) * RMSe ),Min( ( Max( Min( CS ,MLU ),CS ) / ( MUR - RMSe ) ) ,Min( ( ( MUC / MUM ) / ( MUR / MUC ) ) ,CS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( RRS,ACS ) - FirstVNF_Mem_Server ),CRS ) ,( ( ARS * ( ( ( MRS / Const ) * ( CRS + ( Max( RRS,DDR ) / MDR ) ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( MRS * AMS ) ) ) ) / Min( MRS ,ARS ) ) )", "choosing": "Min( ( ( MUR + MUC ) + MLU ) ,( ( ( ( Max( ( MUR / Min( RMSe ,RMSe ) ),Max( CS,( MLU * MUM ) ) ) + RRSe ) / MLU ) * ( ( MUM / RCSe ) / ( DS + MLU ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,( PN - ( DDR - Const ) ) ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,Max( PN,Min( ( CRS + AMS ) ,CRS ) ) )", "choosing": "( Max( ( Max( DS,Min( ( ( ( MUM * DS ) - ( DS / RMSe ) ) - Max( DS,RRSe ) ) ,MUM ) ) / ( ( MLU + RCSe ) * ( RRSe + Min( MUC ,( ( MLU * RMSe ) / RRSe ) ) ) ) ),MUR ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - CS ) ,( Min( MUC ,( ( CS - MLU ) - MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( BR / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR / RRS ) - RRS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( Max( ( ( RMSe - MUM ) * MUM ),( MLU + RRSe ) ) + DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( FirstVNF_Mem + MDR ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( ( RMSe / RMSe ) / ( Max( RMSe,MUR ) / Min( MLU ,MUR ) ) ) ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - ( Max( Max( CRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( Min( CS ,( RRSe + Max( MUC,MLU ) ) ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / Min( MLU ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + Min( Min( Const ,MRS ) ,BR ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * ( ( PN + ACS ) / Min( ( CRS * Min( FirstVNF_RAM ,Max( BR,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,( ( Min( ( RMSe * DS ) ,MUR ) / Max( CS,MUC ) ) - DS ) ) + Min( ( Max( Max( Max( MUR,DS ),( MUM / RRSe ) ),DS ) * ( MUC - DS ) ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),( FirstVNF_CPU_Server / MDR ) ) + MDR ) )", "choosing": "Min( ( MUC - ( CS + Max( MUR,RCSe ) ) ) ,Max( ( MUC - RRSe ),Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( MRS / Const ) * ( CRS + ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,( PN * BR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + MLU ) ,Max( Max( Max( MUM,DS ),( MLU * ( CS + RCSe ) ) ),RCSe ) ) * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ) ) )", "obj1": 0.24750499001996007, "obj2": 0.7057175956616603}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( Max( AMS,ARS ) ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( ( AMS - DDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * ( MUC + Max( RCSe,CS ) ) ) - ( ( MUM + ( DS - RCSe ) ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6127744510978044, "obj2": 0.25259362082465575}, {"determining": "( ( PN + ACS ) / ( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) - ( ( Max( DS,MUR ) * MUM ) / RMSe ) ) * ( MUC - DS ) )", "obj1": 0.7245508982035929, "obj2": 0.24764033711084973}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( Min( ( MRS * Const ) ,( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Max( MUR,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.20107188358468575}, {"determining": "( PN - ( ( Min( ( FirstVNF_RAM * ( ARS * Const ) ) ,FirstVNF_CPU ) + ACS ) - ARS ) )", "choosing": "( ( MUC - MUC ) / ( Max( MUR,Max( MLU,( Min( ( ( RRSe * DS ) * ( RCSe * CS ) ) ,( ( MUR / RCSe ) - Max( CS,MUR ) ) ) * ( ( Max( MUM,DS ) - DS ) * MLU ) ) ) ) - ( MUC + CS ) ) )", "obj1": 0.7524950099800399, "obj2": 0.11672578844819922}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( CS / RRSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.47105788423153694, "obj2": 0.3933903726587933}, {"determining": "( ( ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_RAM,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / ( Min( ( ( ( Max( MUC,MUR ) + Min( ( MUR * MUR ) ,MUC ) ) / RMSe ) + RMSe ) ,CS ) / RMSe ) )", "obj1": 0.4590818363273453, "obj2": 0.4194559276818597}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * Max( PN,FirstVNF_Mem_Server ) ) ,ACS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.49500998003992014, "obj2": 0.35893402044741674}, {"determining": "( Min( CRS ,ARS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_CPU_Server,DDR ) * MDR ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( RMSe / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( Min( MUR ,Min( MUM ,MLU ) ) ,MUR ) ) ) + ( Max( Max( RMSe,( MUR * ( MUR / ( RRSe / CS ) ) ) ),MUR ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - Max( Min( MLU ,RMSe ),MLU ) ) * ( MLU * CS ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.2954344813534862}, {"determining": "( Max( Min( ( AMS * AMS ) ,RRS ),RRS ) - Max( FirstVNF_Mem_Server,( RRS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * Min( DS ,( Max( ( MLU * ( DS - MLU ) ),DS ) - RRSe ) ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.31491744017284373}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4471057884231537, "obj2": 0.4529459378787619}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9241516966067864, "obj2": 0.04446581371696836}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5089820359281437, "obj2": 0.3276165578882514}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "( PN - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10423126550284001}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.026076927156679384}, {"determining": "( ( PN + ACS ) - ( Max( AMS,( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( Max( ( MUC * MUR ),RRSe ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "( ( ( Const - ARS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( DDR - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( MUM - MUC ) ) ) / Min( MUM ,RMSe ) ) * MUR ) ,MUR ),( ( ( MUC / RRSe ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41916167664670656, "obj2": 0.46343074969982345}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.34605215559004016}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.437125748502994, "obj2": 0.4619314232149467}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4151696606786427, "obj2": 0.4860706280197982}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,Min( Max( FirstVNF_RAM,ACS ) ,Min( FirstVNF_RAM ,MRS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_CPU ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / ( CS - MUC ) ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( ( Min( ( RCSe + MLU ) ,MLU ) / CS ) / CS ) )", "obj1": 0.9640718562874252, "obj2": 0.01418887203723127}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.3992015968063872, "obj2": 0.5066946167529954}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_RAM_Server * ( Min( MRS ,MDR ) + ( Const / ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,( Const + PN ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),Max( ( MUC * MUR ),RRSe ) ) / CS ) / DS ),Min( Max( MUR,MLU ) ,MLU ) )", "obj1": 0.3073852295409182, "obj2": 0.6356382998950993}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "Max( Max( RRS,( ARS - ( RRS * BR ) ) ),( Min( DDR ,Const ) - ( ( PN - Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) ) - BR ) ) )", "choosing": "( ( RRSe * RMSe ) - ( CS * RMSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5193846841741522}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( Min( MUC ,MUM ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2714570858283433, "obj2": 0.6699974464644942}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - FirstVNF_RAM ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( MUR - ( MUC / RMSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5389824881158319}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( CRS + PN ) ) ) ) * ( CRS - MRS ) ) * ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) )", "choosing": "( Min( MUR ,RMSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( ( MDR * FirstVNF_Mem ) - Max( CRS,( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR / DS ) - ( MLU / RCSe ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.39520958083832336, "obj2": 0.5178364169448367}, {"determining": "Max( Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( DDR - FirstVNF_CPU_Server ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - DDR ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - Max( RCSe,( ( ( ( DS * MUM ) + CS ) / ( MUM * ( ( ( MUC + RMSe ) * MUC ) + DS ) ) ) + CS ) ) )", "obj1": 0.2554890219560878, "obj2": 0.6971496374088767}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "Max( Max( RRS,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) + MUR ) ) - CS )", "obj1": 0.40718562874251496, "obj2": 0.49617746819858166}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.28542914171656686, "obj2": 0.657225908007857}, {"determining": "( ( Max( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ),AMS ) + ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( ( ( RCSe + MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) )", "obj1": 0.2754491017964072, "obj2": 0.6603798061669799}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3652694610778443, "obj2": 0.5495713464346318}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( Min( MUM ,RCSe ) ,MUR ) ) ) ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6405326178391002}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( ( RRSe + DS ) - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08834603372947115}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08834603372947115}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( MUM * MUC ) / MUR ) ) ) )", "obj1": 0.249500998003992, "obj2": 0.6980099464157905}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( ( ( Const / FirstVNF_CPU_Server ) / ACS ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - RCSe ) * Min( DS ,DS ) ) + ( RRSe - MUC ) ) + MUC )", "obj1": 0.9740518962075848, "obj2": 0.01055761485521063}, {"determining": "( ( ( Max( AMS,BR ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41317365269461076, "obj2": 0.49321364415388447}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / ( ( ( FirstVNF_Mem_Server + BR ) / Const ) * MDR ) ) ) ) ),Max( ( Min( ACS ,RRS ) - PN ),FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUC + MUR ) ) - Max( CS,( CS * ( Max( RMSe,( RMSe - RCSe ) ) + RMSe ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5540293080426846}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9660678642714571, "obj2": 0.013441351263582072}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( Min( ACS ,PN ) - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * ( ARS + AMS ) ) ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( RCSe * ( ( DS / Min( ( ( CS * RCSe ) / DS ) ,Max( ( RRSe * MUR ),MUR ) ) ) / Max( RRSe,Max( RCSe,MLU ) ) ) ),MUR ),( ( MUR / DS ) - ( ( RMSe / Min( MUR ,MLU ) ) + RRSe ) ) )", "obj1": 0.3033932135728543, "obj2": 0.6381797585426368}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MUC ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server * PN ) - PN ) ),( Min( DDR ,Const ) - ( ( PN - ACS ) - BR ) ) )", "choosing": "( ( MUR / ( Max( ( RMSe - ( ( MLU - ( MUM * CS ) ) * RRSe ) ),Max( Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ),MLU ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe * Min( DS ,DS ) ) + RCSe ) + MUR )", "obj1": 0.9880239520958084, "obj2": 0.004001525971027276}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) / ( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) ) + MUR )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9241516966067864, "obj2": 0.04446581371696836}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( ( ( CS * MUR ) / Min( ( MUC - Min( CS ,( RCSe + CS ) ) ) ,MUM ) ) - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4111776447105788, "obj2": 0.4958760585140636}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( ( MUR / DS ) - ( MLU / RCSe ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6603798061669799}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( CS / MUR ) / MUR ) - ( ( ( ( ( CS / DS ) - RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.30538922155688625, "obj2": 0.6360370905379599}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( ( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MUM,DS ) * Min( DS ,DS ) ) + RCSe ) + MUR )", "obj1": 0.9880239520958084, "obj2": 0.004001525971027276}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( BR / ( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) ) + MUR )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "( ( PN + ACS ) - ( AMS - FirstVNF_CPU_Server ) )", "choosing": "Min( ( RRSe - CS ) ,( ( MUR / DS ) * ( MLU / Max( ( Max( Min( ( RMSe + RMSe ) ,( MUM * RMSe ) ),( RRSe * ( RCSe / CS ) ) ) * RCSe ),( RCSe * RMSe ) ) ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( FirstVNF_Mem_Server / ARS ) ) + MDR ) )", "choosing": "Min( ( ( Min( RRSe ,Min( CS ,( ( RRSe / RMSe ) + MLU ) ) ) + MUC ) - ( MUM - Min( DS ,Max( MUC,MUC ) ) ) ) ,Max( MUC,Max( ( Max( DS,MLU ) * ( ( RCSe * RRSe ) - DS ) ),MLU ) ) )", "obj1": 0.7904191616766467, "obj2": 0.07935130633694969}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "( Max( ARS,Const ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - MUM ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( CS + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.0036019694904197153}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( RRS * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / Min( ( Min( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) ) ,( Min( Max( Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ),FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( ( CS - Max( MUC,RCSe ) ) / MUC )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,MUM ) ) / ( CS - DS ) )", "obj1": 0.9920159680638723, "obj2": 0.0029392960102742997}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( ( ( MRS + DDR ) + MDR ) - MRS ) )", "choosing": "( ( CS + ( Min( Max( ( MLU * MLU ),RCSe ) ,( MUM / Max( RMSe,( CS / MUC ) ) ) ) + ( RRSe - RCSe ) ) ) / ( MUM * ( ( MLU * RMSe ) / RRSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ),FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( ( CS - Max( MUC,RCSe ) ) / MUR )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( ( CS - Max( MUC,RCSe ) ),MUM ) ) / ( CS - DS ) )", "obj1": 0.9920159680638723, "obj2": 0.0029392960102742997}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem_Server ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / ( MUM / DS ) ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / Min( MUR ,MUC ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( PN / PN ) * ( ( ACS + Max( Max( DDR,ARS ),FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( RCSe + ( ( Min( CS ,MUR ) - ( MUM - MLU ) ) + Max( MUR,RRSe ) ) ) ,( DS + MUC ) ) * ( RRSe + Min( ( RCSe + Max( CS,RRSe ) ) ,RCSe ) ) ) / ( MUC * DS ) ) + MUC )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "Min( Max( ( Max( RRS,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ),CRS ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( ( MUC + MLU ) ,( ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) * ( ( FirstVNF_CPU + RRS ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ( Max( PN,FirstVNF_CPU_Server ) - MDR ) ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( MUR ,CS ) + ( MUM + CS ) ) / ( ( RCSe * Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) ,( ARS * ACS ) )", "choosing": "Min( ( MUC + ( ( Max( Min( Min( MUM ,RMSe ) ,( ( RMSe - RRSe ) + MUR ) ),MUM ) + MUM ) * DS ) ) ,( ( MUM * CS ) - ( ( ( MUM / MUC ) + ( DS / CS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN * FirstVNF_RAM ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( PN + ACS ),RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem / ( FirstVNF_CPU - AMS ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( CS * ( MUC - DS ) ) * ( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ( DDR - FirstVNF_Mem ) ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( ( Const / Min( Const ,DDR ) ),RRS ) ) ) ,Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,( MLU * RRSe ) ) + ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( ( MUR * CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( FirstVNF_Mem,Max( DDR,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - MDR ) ) ) ) ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( ( ( Min( ( ( ( MUC + MUC ) - MUC ) / CS ) ,RRSe ) * Min( Max( RRSe,RRSe ) ,MUR ) ) * CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,PN ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,ACS ) / ACS ) - Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( Min( Max( MUC,RCSe ) ,MUM ) / ( MUM / ( RCSe + MUC ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Max( ( ( MUC * ( RMSe / CS ) ) / ( Min( RCSe ,RMSe ) * ( MLU - CS ) ) ),RCSe ) + RCSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,CS ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,MDR ) / ( BR * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "( Max( RMSe,Max( MUM,( ( ( MUR + ( MLU * ( MUR * RCSe ) ) ) + MUM ) / RCSe ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( Const / ACS ) ) * ( DDR - ( AMS - RRS ) ) )", "choosing": "( ( MUC + ( ( DS * DS ) + CS ) ) - ( RMSe + ( RRSe - ( Min( RCSe ,RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( ( BR / FirstVNF_CPU ) / ( PN - Max( ( FirstVNF_CPU_Server * ACS ),( ( MDR - ( FirstVNF_CPU - Const ) ) / FirstVNF_CPU ) ) ) ) - ( ACS - BR ) ) )", "choosing": "( ( ( ( ( ( MUM - MUC ) - ( MUC + CS ) ) * Max( DS,Max( MUR,MUM ) ) ) - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + PN ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( Min( Min( Max( RMSe,RRSe ) ,( MLU - CS ) ) ,MLU ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( Min( CRS ,Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + BR ),( FirstVNF_Mem_Server - RRS ) ) - ( Max( ( DDR / AMS ),( FirstVNF_CPU_Server / MDR ) ) + MDR ) )", "choosing": "Min( ( MUC - ( CS + Max( MUR,RCSe ) ) ) ,Max( ( MUC - RRSe ),Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ) ) )", "obj1": 0.24750499001996007, "obj2": 0.7057175956616603}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( RRS,( ARS - PN ) ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( RCSe * RRSe ) + ( MUC / MLU ) ) )", "obj1": 0.6966067864271457, "obj2": 0.179561163020498}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6327345309381237, "obj2": 0.22977067778895635}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem * CRS ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( MLU + MLU ) / RMSe ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.49101796407185627, "obj2": 0.33995195882841145}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( CS / RRSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.47105788423153694, "obj2": 0.3933903726587933}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( Max( AMS,ARS ) ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( ( AMS - DDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * ( MUC + Max( RCSe,CS ) ) ) - ( ( MUM + ( DS - RCSe ) ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6127744510978044, "obj2": 0.25259362082465575}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( RMSe + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( MLU - Min( Max( ( MLU - CS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.7524950099800399, "obj2": 0.11672578844819922}, {"determining": "( Min( CRS ,ARS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_CPU_Server,DDR ) * MDR ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( RMSe / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( Min( MUR ,Min( MUM ,MLU ) ) ,MUR ) ) ) + ( Max( Max( RMSe,( MUR * ( MUR / ( RRSe / CS ) ) ) ),MUR ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - Max( Min( MLU ,RMSe ),MLU ) ) * ( MLU * CS ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.2954344813534862}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8802395209580839, "obj2": 0.04227760221745249}, {"determining": "( Max( Min( ( AMS * AMS ) ,RRS ),RRS ) - Max( FirstVNF_Mem_Server,( RRS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * Min( DS ,( Max( ( MLU * ( DS - MLU ) ),DS ) - RRSe ) ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.31491744017284373}, {"determining": "( ( ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_RAM,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / ( Min( ( ( ( Max( MUC,MUR ) + Min( ( MUR * MUR ) ,MUC ) ) / RMSe ) + RMSe ) ,CS ) / RMSe ) )", "obj1": 0.4590818363273453, "obj2": 0.4194559276818597}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( ACS * RRS ) ) / MDR ) ) ) * ( CRS - ( ( PN + ACS ) - ( Max( ARS,( MRS - PN ) ) + MDR ) ) ) ) * ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) )", "choosing": "( ( ( Min( ( MUC - RMSe ) ,Min( ( DS - DS ) ,( ( MUC + RCSe ) + RCSe ) ) ) - CS ) + RCSe ) + MUC )", "obj1": 0.8323353293413174, "obj2": 0.07362243697507098}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4471057884231537, "obj2": 0.4529459378787619}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5089820359281437, "obj2": 0.3276165578882514}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( PN - ( ( Min( ( FirstVNF_RAM * ( ARS * Const ) ) ,FirstVNF_CPU ) + ACS ) - ARS ) )", "choosing": "( ( MUC - MUC ) / ( Max( MUR,Max( MLU,( Min( ( ( RRSe * DS ) * ( RCSe * CS ) ) ,( ( MUR / RCSe ) - Max( CS,MUR ) ) ) * ( ( Max( MUM,DS ) - DS ) * MLU ) ) ) ) - ( MUC + CS ) ) )", "obj1": 0.7524950099800399, "obj2": 0.11672578844819922}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( CRS + PN ) ) ) ) * ( CRS - MRS ) ) * ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) )", "choosing": "( Min( MUR ,RMSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}, {"determining": "( ( ( Const - ARS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( DDR - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( MUM - MUC ) ) ) / Min( MUM ,RMSe ) ) * MUR ) ,MUR ),( ( ( MUC / RRSe ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41916167664670656, "obj2": 0.46343074969982345}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * ( FirstVNF_Mem_Server - DDR ) ) ,Max( Max( FirstVNF_Mem,PN ),PN ) ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * RRS ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MLU * ( CS / ( DS - MUC ) ) ) / ( RCSe / CS ) ) * MUR ) ,MUR ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.3932135728542914, "obj2": 0.5045371910987234}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.36127744510978044, "obj2": 0.537845632419857}, {"determining": "( ( Max( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ),AMS ) + ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( ( ( RCSe + MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * Max( PN,FirstVNF_Mem_Server ) ) ,ACS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.469061876247505, "obj2": 0.40805626837541764}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.437125748502994, "obj2": 0.4619314232149467}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.6127744510978044, "obj2": 0.25259362082465575}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4151696606786427, "obj2": 0.4860706280197982}, {"determining": "Max( Max( RRS,( ARS - ( RRS * BR ) ) ),( Min( DDR ,Const ) - ( ( PN - Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) ) - BR ) ) )", "choosing": "( ( RRSe * RMSe ) - ( CS * RMSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5193846841741522}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + ( ( MLU + Min( RRSe ,( ( MLU - MUR ) + RCSe ) ) ) - RRSe ) ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - RRSe ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( RMSe + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.026076927156679384}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_CPU_Server ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( RMSe / DS ) ) / ( ( ( MUC * ( ( MUM / MLU ) * MUR ) ) + MUR ) / MUR ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6307399874233318}, {"determining": "( PN - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10423126550284001}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RCSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7704590818363274, "obj2": 0.09078036217559655}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "( ( Min( PN ,MRS ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( Max( Max( CS,Max( MUC,RRSe ) ),RCSe ) - DS ) ) - Max( MUM,MUC ) ) ),DS )", "obj1": 0.9540918163672655, "obj2": 0.01978145815708005}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "( PN - Max( ( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( ( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) / FirstVNF_Mem_Server ) ),MDR ) )", "choosing": "( RCSe / Min( MUR ,MLU ) )", "obj1": 0.7624750499001997, "obj2": 0.11141566884981703}, {"determining": "Max( Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( DDR - FirstVNF_CPU_Server ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - DDR ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - Max( RCSe,( ( ( ( DS * MUM ) + CS ) / ( MUM * ( ( ( MUC + RMSe ) * MUC ) + DS ) ) ) + CS ) ) )", "obj1": 0.2554890219560878, "obj2": 0.6971496374088767}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( Min( MUC ,MUM ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2714570858283433, "obj2": 0.6699974464644942}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.28542914171656686, "obj2": 0.657225908007857}, {"determining": "Max( Max( ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU,MDR ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) ) - ( ( MUM / ( RCSe / CS ) ) * MUR ) )", "obj1": 0.3812375249500998, "obj2": 0.5273970959669984}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( Min( RMSe ,MUR ) ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( MUM * MUC ) / MUR ) ) ) + MUR ) )", "obj1": 0.2754491017964072, "obj2": 0.6603798061669799}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( Min( MUM ,RCSe ) ,MUR ) ) ) ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6405326178391002}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_Mem ,ACS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,MUC ) ) - Max( MLU,MUC ) ) ,Min( ( ( Min( ( MUC + CS ) ,MLU ) + DS ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9321357285429142, "obj2": 0.031011108527477158}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( MUM * MUC ) / MUR ) ) ) )", "obj1": 0.249500998003992, "obj2": 0.6980099464157905}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( RMSe,( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6772295551387422}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( ( ( Const / FirstVNF_Mem ) + PN ),( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( ( ( MUC - RRSe ) * ( MLU * CS ) ) / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9580838323353293, "obj2": 0.015500651347747259}, {"determining": "( ( PN + ACS ) - ( AMS - FirstVNF_CPU_Server ) )", "choosing": "Min( ( RRSe - CS ) ,( ( MUR / DS ) * ( MLU / Max( ( Max( Min( ( RMSe + RMSe ) ,( MUM * RMSe ) ),( RRSe * ( RCSe / CS ) ) ) * RCSe ),( RCSe * RMSe ) ) ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( ( ( Max( AMS,BR ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41317365269461076, "obj2": 0.49321364415388447}, {"determining": "Max( Max( RRS,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) + MUR ) ) - CS )", "obj1": 0.40718562874251496, "obj2": 0.49617746819858166}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * ( Min( MUC ,MUM ) - RCSe ) ) + RCSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}, {"determining": "Max( Max( ( Min( ( MRS * Const ) ,( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( Min( ( RCSe / MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) + MUR ) ) - CS )", "obj1": 0.40718562874251496, "obj2": 0.49617746819858166}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( Min( ACS ,PN ) - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * ( ARS + AMS ) ) ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( RCSe * ( ( DS / Min( ( ( CS * RCSe ) / DS ) ,Max( ( RRSe * MUR ),MUR ) ) ) / Max( RRSe,Max( RCSe,MLU ) ) ) ),MUR ),( ( MUR / DS ) - ( ( RMSe / Min( MUR ,MLU ) ) + RRSe ) ) )", "obj1": 0.3033932135728543, "obj2": 0.6381797585426368}, {"determining": "( ( Max( RRS,Min( ( ( ARS * ( Min( MRS ,FirstVNF_Mem_Server ) / ( Const + CRS ) ) ) * Min( FirstVNF_Mem_Server ,( ARS + Const ) ) ) ,CRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) + MUR )", "obj1": 0.9840319361277445, "obj2": 0.0046275791850207285}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( ( RRSe + DS ) - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08834603372947115}, {"determining": "( PN - Max( ( ( ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) * FirstVNF_Mem ) - Max( CRS,MDR ) ),MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.9720558882235529, "obj2": 0.011851073540134984}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9660678642714571, "obj2": 0.013441351263582072}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,Min( Max( FirstVNF_RAM,ACS ) ,Min( FirstVNF_RAM ,MRS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_CPU ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / ( CS - MUC ) ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( ( Min( ( RCSe + MLU ) ,MLU ) / CS ) / CS ) )", "obj1": 0.9640718562874252, "obj2": 0.01418887203723127}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_CPU_Server,Const ) ,AMS ) ,( RRS * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * Min( DS ,DS ) ) + ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) ) + MUC )", "obj1": 0.9800399201596807, "obj2": 0.008033106059302441}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( ( ( CS * MUR ) / Min( ( MUC - Min( CS ,( RCSe + CS ) ) ) ,MUM ) ) - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4111776447105788, "obj2": 0.4958760585140636}, {"determining": "( ( PN + ACS ) - ( Max( AMS,( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( Max( ( MUC * MUR ),RRSe ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( ( ( Const / FirstVNF_CPU_Server ) / ACS ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - RCSe ) * Min( DS ,DS ) ) + ( RRSe - MUC ) ) + MUC )", "obj1": 0.9740518962075848, "obj2": 0.01055761485521063}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) )", "obj1": 0.2754491017964072, "obj2": 0.6603798061669799}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( FirstVNF_RAM_Server * ( Min( MRS ,MDR ) + ( Const / ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,( Const + PN ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),Max( ( MUC * MUR ),RRSe ) ) / CS ) / DS ),Min( Max( MUR,MLU ) ,MLU ) )", "obj1": 0.3073852295409182, "obj2": 0.6356382998950993}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( CS / MUR ) / MUR ) - ( ( ( ( ( CS / DS ) - RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.30538922155688625, "obj2": 0.6360370905379599}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( FirstVNF_Mem_Server / ARS ) ) + MDR ) )", "choosing": "Min( ( ( Min( RRSe ,Min( CS ,( ( RRSe / RMSe ) + MLU ) ) ) + MUC ) - ( MUM - Min( DS ,Max( MUC,MUC ) ) ) ) ,Max( MUC,Max( ( Max( DS,MLU ) * ( ( RCSe * RRSe ) - DS ) ),MLU ) ) )", "obj1": 0.7904191616766467, "obj2": 0.07935130633694969}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server * PN ) - PN ) ),( Min( DDR ,Const ) - ( ( PN - ACS ) - BR ) ) )", "choosing": "( ( MUR / ( Max( ( RMSe - ( ( MLU - ( MUM * CS ) ) * RRSe ) ),Max( Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ),MLU ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - PN ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - Max( ( MUC * MUR ),RRSe ) ) ),MLU ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08834603372947115}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe * Min( DS ,DS ) ) + RCSe ) + MUR )", "obj1": 0.9880239520958084, "obj2": 0.004001525971027276}, {"determining": "( ( PN / PN ) * ( ( ACS + Max( Max( DDR,ARS ),FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( RCSe + ( ( Min( CS ,MUR ) - ( MUM - MLU ) ) + Max( MUR,RRSe ) ) ) ,( DS + MUC ) ) * ( RRSe + Min( ( RCSe + Max( CS,RRSe ) ) ,RCSe ) ) ) / ( MUC * DS ) ) + MUC )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( FirstVNF_Mem_Server / BR ) ),( RRS + RRS ) ) ) )", "choosing": "( CS / ( MUM * ( ( MLU * RMSe ) / RRSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( MUR,MUM ) ) / ( CS - DS ) )", "obj1": 0.9920159680638723, "obj2": 0.0029392960102742997}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( RRS + RRS ) ) ,( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem_Server ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / ( MUM / DS ) ) ) - Max( MUM,MUC ) ) ),( ( MUC / RCSe ) / ( ( CS * ( MUC - DS ) ) * ( MUR * CS ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / Min( ( Min( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) ) ,( Min( Max( Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ),FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( ( FirstVNF_Mem_Server / BR ) * Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( ( CS - Max( MUC,RCSe ) ) / MUC )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),FirstVNF_Mem ) ,Min( ( Min( Max( Max( RRS,FirstVNF_Mem ),FirstVNF_Mem ) ,Min( MRS ,ARS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) ,( Const / FirstVNF_RAM_Server ) ) ) + Max( ( Max( BR,MRS ) + BR ),( RRS + RRS ) ) ) )", "choosing": "( Min( MUC ,Max( ( CS - Max( MUC,Min( MLU ,MUR ) ) ),MUM ) ) / ( CS - DS ) )", "obj1": 0.9920159680638723, "obj2": 0.0029392960102742997}, {"determining": "( Max( ARS,Const ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - MUM ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( CS + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.0036019694904197153}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe * Min( DS ,DS ) ) + MUC ) + MUR )", "obj1": 0.9880239520958084, "obj2": 0.004001525971027276}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( ( ( MRS + DDR ) + MDR ) - MRS ) )", "choosing": "( ( CS + ( Min( Max( ( MLU * MLU ),RCSe ) ,( MUM / Max( RMSe,( CS / MUC ) ) ) ) + ( RRSe - RCSe ) ) ) / ( MUM * ( ( MLU * RMSe ) / RRSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Max( ARS,Const ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - MUM ),MUR ) ) ) - Max( MUM,MUC ) ) ) / Min( MUR ,Min( ( MUC + Min( MUR ,RCSe ) ) ,Min( ( ( MLU - RMSe ) * ( ( CS + MUC ) - MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.0036019694904197153}, {"determining": "( ( Max( ACS,FirstVNF_RAM ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,( Const + PN ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,CS ) ) ) ),Max( ( MUC * MUR ),RRSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6356382998950993}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( ( RRSe + DS ) - CS ) + RRSe ) ) ),MLU ) ) + MUR )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( RRS * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "( ( ( ( MDR - ARS ) * ( CRS - RRS ) ) * ( CRS - MRS ) ) * ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) / ( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - RCSe ) * Min( DS ,DS ) ) + Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) ) + MUR )", "obj1": 0.9780439121756487, "obj2": 0.008145470091571055}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( MRS / Const ) * ( CRS + ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,( PN * BR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + MLU ) ,Max( Max( Max( MUM,DS ),( MLU * ( CS + RCSe ) ) ),RCSe ) ) * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( PN + ACS ) - Max( Max( RRS,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( Max( MUR,MLU ) + RRSe ) ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe / RMSe ) / DS ) / MLU ),RRSe ) + ( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * CS ) / ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / MUR ) ) ) )", "obj1": 0.24750499001996007, "obj2": 0.705212732531862}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( RRS,( ARS - PN ) ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( RCSe * RRSe ) + ( MUC / MLU ) ) )", "obj1": 0.6966067864271457, "obj2": 0.179561163020498}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_CPU ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + ( MUC + MLU ) ) )", "obj1": 0.7405189620758483, "obj2": 0.177458701876892}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( AMS ,ARS ) - ( Max( MDR,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6387225548902196, "obj2": 0.22222232136832262}, {"determining": "( ( MDR / RRS ) - Min( ( RRS * ( ( ARS + Const ) / FirstVNF_RAM ) ) ,( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( RMSe + RCSe ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5808383233532934, "obj2": 0.254649971918414}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( AMS,FirstVNF_Mem ) - ( DDR - Const ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( Max( RRSe,MUM ) / RCSe ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_RAM,CRS ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + MUR ) ) - CS ) / ( Min( ( ( ( Max( MUC,MUR ) + Min( ( MUR * MUR ) ,MUC ) ) / RMSe ) + RMSe ) ,CS ) / RMSe ) )", "obj1": 0.4870259481037924, "obj2": 0.3747341139375707}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem * CRS ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( MLU + MLU ) / RMSe ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.49101796407185627, "obj2": 0.33995195882841145}, {"determining": "( Min( CRS ,ARS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_CPU_Server,DDR ) * MDR ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( RMSe / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( Min( MUR ,Min( MUM ,MLU ) ) ,MUR ) ) ) + ( Max( Max( RMSe,( MUR * ( MUR / ( RRSe / CS ) ) ) ),MUR ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - Max( Min( MLU ,RMSe ),MLU ) ) * ( MLU * CS ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.2954344813534862}, {"determining": "( PN - ( ( Min( ( FirstVNF_RAM * ( ARS * Const ) ) ,FirstVNF_CPU ) + ACS ) - ARS ) )", "choosing": "( ( MUC - MUC ) / ( Max( MUR,Max( MLU,( Min( ( ( RRSe * DS ) * ( RCSe * CS ) ) ,( ( MUR / RCSe ) - Max( CS,MUR ) ) ) * ( ( Max( MUM,DS ) - DS ) * MLU ) ) ) ) - ( MUC + CS ) ) )", "obj1": 0.7524950099800399, "obj2": 0.11672578844819922}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ( ( RRS - FirstVNF_Mem_Server ) + MRS ) + FirstVNF_RAM ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MUR + CS ) * RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe + ( RMSe + DS ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8223552894211577, "obj2": 0.0629565131275424}, {"determining": "( Max( Min( ( AMS * AMS ) ,RRS ),RRS ) - Max( FirstVNF_Mem_Server,( RRS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * Min( DS ,( Max( ( MLU * ( DS - MLU ) ),DS ) - RRSe ) ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.31491744017284373}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + MUM )", "obj1": 0.5089820359281437, "obj2": 0.325685994857494}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( CS / RRSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.47105788423153694, "obj2": 0.3933903726587933}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6327345309381237, "obj2": 0.22977067778895635}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / MUR ) ,( Min( ( CS / MUC ) ,DS ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "( ( ( Const - ARS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( DDR - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( MUM - MUC ) ) ) / Min( MUM ,RMSe ) ) * MUR ) ,MUR ),( ( ( MUC / RRSe ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41916167664670656, "obj2": 0.46343074969982345}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( RRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.45109780439121755, "obj2": 0.4335626184882726}, {"determining": "( ( ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_RAM,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / ( Min( ( ( ( Max( MUC,MUR ) + Min( ( MUR * MUR ) ,MUC ) ) / RMSe ) + RMSe ) ,CS ) / RMSe ) )", "obj1": 0.4590818363273453, "obj2": 0.4194559276818597}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( ( AMS - MRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUR / MUM ) - ( MUC - ( RMSe / MUC ) ) ) ) )", "obj1": 0.3932135728542914, "obj2": 0.4973911014689603}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( PN / MRS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ARS / Max( ( Max( ( FirstVNF_Mem_Server - Max( AMS,ACS ) ),AMS ) + PN ),Min( MRS ,PN ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) * MUR ) ,Max( MUR,( RRSe + DS ) ) ),( Max( MUC,DS ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.4471057884231537, "obj2": 0.4529459378787619}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * Max( PN,FirstVNF_Mem_Server ) ) ,ACS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.469061876247505, "obj2": 0.40805626837541764}, {"determining": "Max( Max( RRS,( ARS - ( RRS * BR ) ) ),( Min( DDR ,Const ) - ( ( PN - Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) ) - BR ) ) )", "choosing": "( ( RRSe * RMSe ) - ( CS * RMSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5193846841741522}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server + AMS ) ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( ( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ) * ACS ) ) ) - ( CRS - ACS ) ) )", "choosing": "( ( ( ( Min( MUC ,Min( Min( CS ,RMSe ) ,MUM ) ) - RCSe ) * Min( RCSe ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9281437125748503, "obj2": 0.033985853051249425}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.437125748502994, "obj2": 0.4619314232149467}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( ( ( ( FirstVNF_Mem - ARS ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - DS ) ) + MUR ) ) - Min( ( Max( ( MUR / Max( ( Max( MUC,DS ) * ( RRSe - CS ) ),MUC ) ),MUR ) - MUM ) ,( ( Max( ( ( RMSe - ( MLU + MUR ) ) + MUC ),MLU ) / ( RMSe - ( CS + ( RRSe + MUC ) ) ) ) * MUC ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5552521634566876}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( Min( RRSe ,CS ) - ( DS / CS ) ) ) + MUR ) ) - ( CS * ( MUR / Min( ( Max( DS,DS ) * RRSe ) ,MLU ) ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6076802147055615}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4151696606786427, "obj2": 0.4860706280197982}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( AMS / Max( FirstVNF_CPU,ARS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ACS ,BR ) - Min( Const ,FirstVNF_CPU ) ) ) / MDR ) )", "choosing": "( RRSe - ( ( CS * ( Max( MUC,( Min( RCSe ,RMSe ) / RCSe ) ) * DS ) ) + ( MUC + MLU ) ) )", "obj1": 0.9341317365269461, "obj2": 0.025269985378840253}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.36127744510978044, "obj2": 0.537845632419857}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( ( Min( PN ,MRS ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( Max( Max( CS,Max( MUC,RRSe ) ),RCSe ) - DS ) ) - Max( MUM,MUC ) ) ),DS )", "obj1": 0.9540918163672655, "obj2": 0.01978145815708005}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( Min( ARS ,MRS ) + PN ) ,Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( RMSe + Max( ( RRSe - MUC ),MLU ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8502994011976048, "obj2": 0.05724350939129526}, {"determining": "( ( PN + ACS ) - ( Max( AMS,( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( ( Const + PN ) ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( Max( ( MUC * MUR ),RRSe ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_CPU_Server ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( RMSe / DS ) ) / ( ( ( MUC * ( ( MUM / MLU ) * MUR ) ) + MUR ) / MUR ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6307399874233318}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "( PN - Max( ( ( ( ( MDR - ARS ) * ( ( Min( RRS ,BR ) * ( RRS + MDR ) ) - RRS ) ) * ( CRS - MRS ) ) * ( ( Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) / FirstVNF_Mem_Server ) ),MDR ) )", "choosing": "( Min( MUR ,( CS / Min( RRSe ,Max( ( Min( ( MUC / RRSe ) ,( MUC + MUM ) ) / RMSe ),MUC ) ) ) ) / Min( MUR ,MLU ) )", "obj1": 0.7584830339321357, "obj2": 0.10843356934203349}, {"determining": "Max( Min( Min( Max( PN,Min( DDR ,CRS ) ) ,( DDR - FirstVNF_CPU_Server ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - DDR ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - Max( RCSe,( ( ( ( DS * MUM ) + CS ) / ( MUM * ( ( ( MUC + RMSe ) * MUC ) + DS ) ) ) + CS ) ) )", "obj1": 0.2554890219560878, "obj2": 0.6971496374088767}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( ( DDR + ACS ) + Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( Min( MUC ,MUM ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2714570858283433, "obj2": 0.6699974464644942}, {"determining": "( PN - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10423126550284001}, {"determining": "( ( PN + ACS ) - ( Max( ( ( ( FirstVNF_Mem - PN ) + PN ) / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( MUM,( RMSe / ( MUR / DS ) ) ) ,Max( MUC,( ( MUR + MUM ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8862275449101796, "obj2": 0.041781608973894074}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( RMSe + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( MLU - Min( Max( ( MLU - CS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.7524950099800399, "obj2": 0.11672578844819922}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( MUR / ( MUM / MUM ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09684867833709336}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( Min( MUM ,RCSe ) ,MUR ) ) ) ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6405326178391002}, {"determining": "( ( Max( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ),AMS ) + ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( ( ( RCSe + MUR ) / Min( CS ,MUM ) ) + CS ) - DS ) ),MLU ) ) )", "obj1": 0.7924151696606786, "obj2": 0.079017821434104}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( CRS - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( Min( AMS ,FirstVNF_Mem_Server ) - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,MLU ) - ( ( DS - MUM ) / RMSe ) ) * ( ( ( ( MLU * ( Max( CS,CS ) / MUR ) ) * RRSe ) * ( ( MLU - RCSe ) / ( ( ( RRSe - MUR ) / MUM ) - Min( MUC ,( MUR / MLU ) ) ) ) ) * ( ( MLU / MUR ) - Min( ( MUR + MLU ) ,( MUM - MUC ) ) ) ) ) / ( ( ( ( MUC * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.36726546906187624, "obj2": 0.533047113626161}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8802395209580839, "obj2": 0.04227760221745249}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( RCSe ,MUM ) + ( ( RCSe * CS ) / ( ( MUM * MUC ) / MUR ) ) ) )", "obj1": 0.249500998003992, "obj2": 0.6980099464157905}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( CRS - ( DDR + ( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( RMSe,( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6772295551387422}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) )", "obj1": 0.27944111776447106, "obj2": 0.6545740901436083}, {"determining": "Max( Max( RRS,( MDR - ( FirstVNF_CPU / Const ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUM + MLU ) - ( CS - MLU ) ) + MUR ) ) - CS )", "obj1": 0.38323353293413176, "obj2": 0.5252855265519334}, {"determining": "( ( ( Max( AMS,BR ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41317365269461076, "obj2": 0.49321364415388447}, {"determining": "Max( Max( RRS,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) + MUR ) ) - CS )", "obj1": 0.40718562874251496, "obj2": 0.49617746819858166}, {"determining": "( ( PN + ACS ) - ( Max( ARS,Max( ( DDR / AMS ),Max( FirstVNF_RAM,Const ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,Max( ( ( ( DS * Max( Min( MUR ,MUM ),( MUC * MUC ) ) ) * ( ( MUC * MUC ) / RMSe ) ) + ( ( ( ( MUR + MLU ) - RCSe ) + RRSe ) + RMSe ) ),MLU ) ) )", "obj1": 0.7844311377245509, "obj2": 0.0824254781652189}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( Min( ACS ,PN ) - ( DDR + ( ( ( DDR + ACS ) + Max( BR,AMS ) ) * ( ARS + AMS ) ) ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( RCSe * ( ( DS / Min( ( ( CS * RCSe ) / DS ) ,Max( ( RRSe * MUR ),MUR ) ) ) / Max( RRSe,Max( RCSe,MLU ) ) ) ),MUR ),( ( MUR / DS ) - ( ( RMSe / Min( MUR ,MLU ) ) + RRSe ) ) )", "obj1": 0.3033932135728543, "obj2": 0.6381797585426368}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + RCSe ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.2754491017964072, "obj2": 0.6603798061669799}, {"determining": "Max( Max( ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU,MDR ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) ) - ( ( MUM / ( RCSe / CS ) ) * MUR ) )", "obj1": 0.3812375249500998, "obj2": 0.5273970959669984}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( PN - Max( ( ( ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) * FirstVNF_Mem ) - Max( CRS,MDR ) ),MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.9720558882235529, "obj2": 0.011851073540134984}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_Mem ,ACS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,MUC ) ) - Max( MLU,MUC ) ) ,Min( ( ( Min( ( MUC + CS ) ,MLU ) + DS ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9321357285429142, "obj2": 0.031011108527477158}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9660678642714571, "obj2": 0.013441351263582072}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( Min( FirstVNF_CPU ,MDR ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) )", "obj1": 0.7704590818363274, "obj2": 0.09078036217559655}, {"determining": "( ( Max( RRS,Min( ( ( ARS * ( Min( MRS ,FirstVNF_Mem_Server ) / ( Const + CRS ) ) ) * Min( FirstVNF_Mem_Server ,( ARS + Const ) ) ) ,CRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) + MUR )", "obj1": 0.9840319361277445, "obj2": 0.0046275791850207285}, {"determining": "( ( Max( ACS,Max( AMS,RRS ) ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( ( CS / MUR ) ,MUR ) ) ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6596303313227815}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,Min( Max( FirstVNF_RAM,ACS ) ,Min( FirstVNF_RAM ,MRS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_CPU ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / ( CS - MUC ) ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( ( Min( ( RCSe + MLU ) ,MLU ) / CS ) / CS ) )", "obj1": 0.9640718562874252, "obj2": 0.01418887203723127}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_CPU_Server,Const ) ,AMS ) ,( RRS * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * Min( DS ,DS ) ) + ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) ) + MUC )", "obj1": 0.9800399201596807, "obj2": 0.008033106059302441}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( ( ( Const / FirstVNF_Mem ) + PN ),( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + ( CS - ( RCSe / CS ) ) ) ) / ( ( RCSe * RRSe ) / ( ( ( MUC - RRSe ) * ( MLU * CS ) ) / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9580838323353293, "obj2": 0.015500651347747259}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( MDR,Min( BR ,FirstVNF_Mem ) ) ) ) ) / ( RRS - Min( BR ,PN ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( ( ( ( DS / CS ) + MUM ) / MUR ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * ( DS + RMSe ) ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6337678096099938}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( ( ( CS * MUR ) / Min( ( MUC - Min( CS ,( RCSe + CS ) ) ) ,MUM ) ) - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4111776447105788, "obj2": 0.4958760585140636}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( CS / MUR ) / MUR ) - ( ( ( ( ( CS / DS ) - RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.30538922155688625, "obj2": 0.6360370905379599}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM + AMS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) - RCSe ) * ( ( ( RRSe + DS ) - CS ) + RRSe ) ) - ( MUR + RCSe ) )", "obj1": 0.9560878243512974, "obj2": 0.015813007270924707}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( ( ( Const / FirstVNF_CPU_Server ) / ACS ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - RCSe ) * Min( DS ,DS ) ) + ( RRSe - MUC ) ) + MUC )", "obj1": 0.9740518962075848, "obj2": 0.01055761485521063}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( ( RRSe + DS ) - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08834603372947115}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ,( Min( FirstVNF_Mem ,( PN - FirstVNF_CPU_Server ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - MUM ),MUR ) ) ) - Max( MUM,MUC ) ) ) / ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0028894290891328116}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( FirstVNF_Mem_Server / ARS ) ) + MDR ) )", "choosing": "Min( ( ( Min( RRSe ,Min( CS ,( ( RRSe / RMSe ) + MLU ) ) ) + MUC ) - ( MUM - Min( DS ,Max( MUC,MUC ) ) ) ) ,Max( MUC,Max( ( Max( DS,MLU ) * ( ( RCSe * RRSe ) - DS ) ),MLU ) ) )", "obj1": 0.7904191616766467, "obj2": 0.07935130633694969}, {"determining": "Max( Max( ( ( Max( AMS,FirstVNF_Mem ) - ARS ) / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( Min( ( RCSe / ( MUC - MUC ) ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) + MUR ) ) - CS )", "obj1": 0.40718562874251496, "obj2": 0.49617746819858166}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,AMS ) ,( PN - ( Max( AMS,FirstVNF_Mem ) - ARS ) ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( RCSe - CS ) + RRSe ) ) ),DS ) ) )", "obj1": 0.7744510978043913, "obj2": 0.08948757458626287}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server * PN ) - PN ) ),( Min( DDR ,Const ) - ( ( PN - ACS ) - BR ) ) )", "choosing": "( ( MUR / ( Max( ( RMSe - ( ( MLU - ( MUM * CS ) ) * RRSe ) ),Max( Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ),MLU ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( Min( RMSe ,MUR ) ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( MUM * MUC ) / MUR ) ) ) + MUR ) )", "obj1": 0.2754491017964072, "obj2": 0.6603798061669799}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Max( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / Min( ( PN + FirstVNF_RAM_Server ) ,BR ) ) ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RCSe ) + Max( RRSe,MLU ) ) / ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + MUR ) ) - CS ) + MUC ) + MUR )", "obj1": 0.9860279441117764, "obj2": 0.00401718592051119}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * ( Min( MUC ,MUM ) - RCSe ) ) + RCSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( PN - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( ( ( AMS + DDR ) - ( CRS - RRS ) ) + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) )", "obj1": 0.27944111776447106, "obj2": 0.6545740901436083}], "12": [{"determining": "( Max( ( ( FirstVNF_Mem - PN ) + RRS ),RRS ) - Max( FirstVNF_Mem_Server,( PN - ( RRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) - Max( Max( RRS,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( Max( MUR,MLU ) + RRSe ) ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),Max( FirstVNF_RAM,ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + Max( RRSe,( Max( RMSe,RCSe ) * ( RRSe * MUM ) ) ) ) )", "obj1": 0.2435129740518962, "obj2": 0.703618245833584}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( RRS,( ARS - PN ) ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( RCSe * RRSe ) + ( MUC / MLU ) ) )", "obj1": 0.6966067864271457, "obj2": 0.179561163020498}, {"determining": "( PN - Max( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ),MDR ) )", "choosing": "( MUR / DS )", "obj1": 0.7225548902195609, "obj2": 0.12360250240625248}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( PN,Const ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS - Max( ( RCSe * Max( RMSe,( DS - RMSe ) ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.656686626746507, "obj2": 0.209296283833035}, {"determining": "( ( ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_RAM,CRS ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + MUR ) ) - CS ) / ( Min( ( ( ( Max( MUC,MUR ) + Min( ( MUR * MUR ) ,MUC ) ) / RMSe ) + RMSe ) ,CS ) / RMSe ) )", "obj1": 0.4870259481037924, "obj2": 0.3747341139375707}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( MRS ,RRS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.3358085503271932}, {"determining": "( Min( CRS ,ARS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_CPU_Server,DDR ) * MDR ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( RMSe / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( Min( MUR ,Min( MUM ,MLU ) ) ,MUR ) ) ) + ( Max( Max( RMSe,( MUR * ( MUR / ( RRSe / CS ) ) ) ),MUR ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - Max( Min( MLU ,RMSe ),MLU ) ) * ( MLU * CS ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.2954344813534862}, {"determining": "( Max( Min( ( AMS * AMS ) ,RRS ),RRS ) - Max( FirstVNF_Mem_Server,( RRS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * Min( DS ,( Max( ( MLU * ( DS - MLU ) ),DS ) - RRSe ) ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.31491744017284373}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + MUM )", "obj1": 0.5089820359281437, "obj2": 0.325685994857494}, {"determining": "( ( MDR / RRS ) - Min( ( RRS * ( ( ARS + Const ) / FirstVNF_RAM ) ) ,( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( RMSe + RCSe ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5808383233532934, "obj2": 0.254649971918414}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( RMSe + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( MLU - Min( Max( ( MLU - CS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.7504990019960079, "obj2": 0.11661789758501152}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_Mem ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RCSe * RRSe ) + ( MUC / MLU ) ) ) ),MLU ) ) )", "obj1": 0.6227544910179641, "obj2": 0.2242764914495504}, {"determining": "( ( PN + ACS ) - ( Max( ( FirstVNF_CPU_Server + Min( Min( DDR ,( ACS - BR ) ) ,( MRS - ( DDR + ARS ) ) ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_RAM,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),( DS + Max( Min( Min( ( ( RRSe - CS ) - RCSe ) ,DS ) ,MUM ),CS ) ) ) )", "obj1": 0.6327345309381237, "obj2": 0.2162154679788408}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + MRS ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( MUC * RRSe ) - MUC ) + DS ) + MUR ) )", "obj1": 0.3373253493013972, "obj2": 0.5984611140236495}, {"determining": "( ( ( Const - ARS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( DDR - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( MUM - MUC ) ) ) / Min( MUM ,RMSe ) ) * MUR ) ,MUR ),( ( ( MUC / RRSe ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41916167664670656, "obj2": 0.46343074969982345}, {"determining": "( ( ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Max( FirstVNF_RAM,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / ( Min( ( ( ( Max( MUC,MUR ) + Min( ( MUR * MUR ) ,MUC ) ) / RMSe ) + RMSe ) ,CS ) / RMSe ) )", "obj1": 0.4590818363273453, "obj2": 0.4194559276818597}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( ( AMS - MRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUR / MUM ) - ( MUC - ( RMSe / MUC ) ) ) ) )", "obj1": 0.3932135728542914, "obj2": 0.4973911014689603}, {"determining": "( Max( AMS,RRS ) - ( Max( ( BR - FirstVNF_RAM ),Max( ( ( MDR - RRS ) * FirstVNF_Mem ),FirstVNF_RAM ) ) * BR ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - Min( RRSe ,MLU ) ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.4448420615678369}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.437125748502994, "obj2": 0.4619314232149467}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( RRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.45109780439121755, "obj2": 0.4335626184882726}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( PN ,AMS ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / CS ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3393213572854291, "obj2": 0.5826739216584913}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) + RRS ) - Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MLU * MUM ) / ( MUR - CS ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5728542914171657, "obj2": 0.25960451507627064}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( ( DDR * Max( PN,FirstVNF_Mem_Server ) ) ,ACS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.469061876247505, "obj2": 0.40805626837541764}, {"determining": "Max( Max( RRS,( ARS - ( RRS * BR ) ) ),( Min( DDR ,Const ) - ( ( PN - Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) ) - BR ) ) )", "choosing": "( ( RRSe * RMSe ) - ( CS * RMSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5193846841741522}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( AMS,FirstVNF_Mem ) - ( DDR - Const ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( Max( RRSe,MUM ) / RCSe ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4151696606786427, "obj2": 0.4860706280197982}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( Min( RRSe ,CS ) - ( DS / CS ) ) ) + MUR ) ) - ( CS * ( MUR / Min( ( Max( DS,DS ) * RRSe ) ,MLU ) ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6076802147055615}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( AMS + Max( FirstVNF_RAM_Server,ARS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * CS ) / ( ( ( DS / ( DS / MUC ) ) / ( RCSe / ( RMSe + RMSe ) ) ) / MUR ) ) ) )", "obj1": 0.24550898203592814, "obj2": 0.6949377358205527}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( AMS,FirstVNF_Mem ) - AMS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( MUM + ( DS - MUC ) ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( PN - Max( ( CRS - RRS ),MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,( DS / Max( MUC,RRSe ) ) ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.8043912175648703, "obj2": 0.07477138727178162}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "( Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem_Server,( PN - Max( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / FirstVNF_RAM ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( CS / RRSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( CS - RRSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.47105788423153694, "obj2": 0.3933903726587933}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( Min( ARS ,MRS ) + PN ) ,Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( RMSe + Max( ( RRSe - MUC ),MLU ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8502994011976048, "obj2": 0.05724350939129526}, {"determining": "( ( PN + Max( RRS,Min( FirstVNF_CPU_Server ,BR ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( Max( PN,MDR ) ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MLU - MLU ) + RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( MUR * ( ( RCSe + ( ( RMSe / CS ) + RRSe ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8143712574850299, "obj2": 0.06721799775181415}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server + AMS ) ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( ( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ) * ACS ) ) ) - ( CRS - ACS ) ) )", "choosing": "( ( ( ( Min( MUC ,Min( Min( CS ,RMSe ) ,MUM ) ) - RCSe ) * Min( RCSe ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9281437125748503, "obj2": 0.033985853051249425}, {"determining": "Max( FirstVNF_CPU_Server,( CRS - ( DDR + ( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( ( CS * RMSe ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6612835295347558}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_CPU_Server ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( RMSe / DS ) ) / ( ( ( MUC * ( ( MUM / MLU ) * MUR ) ) + MUR ) / MUR ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6307399874233318}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "( PN - Max( ( ( ( ( MDR - ARS ) * ( ( Min( RRS ,BR ) * ( RRS + MDR ) ) - RRS ) ) * ( CRS - MRS ) ) * ( ( Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) / FirstVNF_Mem_Server ) ),MDR ) )", "choosing": "( Min( MUR ,( CS / Min( RRSe ,Max( ( Min( ( MUC / RRSe ) ,( MUC + MUM ) ) / RMSe ),MUC ) ) ) ) / Min( MUR ,MLU ) )", "obj1": 0.7584830339321357, "obj2": 0.10843356934203349}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.36127744510978044, "obj2": 0.537845632419857}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) - Min( CRS ,Const ) ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / ( ( ( MUR + DS ) - Max( RRSe,MUC ) ) + MUR ) ) - CS ) + RCSe ) + MUC )", "obj1": 0.9481037924151696, "obj2": 0.02339038927215752}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,ARS ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / Max( MUC,( MUR / DS ) ) ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3592814371257485, "obj2": 0.5502267500169312}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( AMS / Max( FirstVNF_CPU,ARS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ACS ,BR ) - Min( Const ,FirstVNF_CPU ) ) ) / MDR ) )", "choosing": "( RRSe - ( ( CS * ( Max( MUC,( Min( RCSe ,RMSe ) / RCSe ) ) * DS ) ) + ( MUC + MLU ) ) )", "obj1": 0.9341317365269461, "obj2": 0.025269985378840253}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( FirstVNF_CPU_Server,( Min( MDR ,ARS ) * FirstVNF_RAM ) ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( MUR - ( CS - Max( MUC,( ( MUR * MUM ) + CS ) ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.35129740518962077, "obj2": 0.5525507385718978}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8383233532934131, "obj2": 0.06158938981976931}, {"determining": "( PN - Max( CRS,MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10423126550284001}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( CS / RRSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.47105788423153694, "obj2": 0.3933903726587933}, {"determining": "( ( PN + ACS ) - ( Max( ( ( ( FirstVNF_Mem - PN ) + PN ) / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( MUM,( RMSe / ( MUR / DS ) ) ) ,Max( MUC,( ( MUR + MUM ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8862275449101796, "obj2": 0.041781608973894074}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / MUR ) ,( Min( ( CS / MUC ) ,DS ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ( ( RRS - FirstVNF_Mem_Server ) + MRS ) + FirstVNF_RAM ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MUR + CS ) * RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe + ( RMSe + DS ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8223552894211577, "obj2": 0.0629565131275424}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( PN + ACS ) - ( Max( ( RRS / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( ( MUR + MUM ) / Max( ( ( CS * ( RMSe * DS ) ) + ( MUC + MLU ) ),MUR ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07818573963091079}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( CRS - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( Min( AMS ,FirstVNF_Mem_Server ) - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,MLU ) - ( ( DS - MUM ) / RMSe ) ) * ( ( ( ( MLU * ( Max( CS,CS ) / MUR ) ) * RRSe ) * ( ( MLU - RCSe ) / ( ( ( RRSe - MUR ) / MUM ) - Min( MUC ,( MUR / MLU ) ) ) ) ) * ( ( MLU / MUR ) - Min( ( MUR + MLU ) ,( MUM - MUC ) ) ) ) ) / ( ( ( ( MUC * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.36726546906187624, "obj2": 0.533047113626161}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8802395209580839, "obj2": 0.04227760221745249}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2894211576846307, "obj2": 0.6522431151255008}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( FirstVNF_Mem_Server + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + DS ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( ( CS * RMSe ) * RRSe ) ) )", "obj1": 0.2954091816367265, "obj2": 0.6400131686591645}, {"determining": "( ( Min( PN ,MRS ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( Max( Max( CS,Max( MUC,RRSe ) ),RCSe ) - DS ) ) - Max( MUM,MUC ) ) ),DS )", "obj1": 0.9540918163672655, "obj2": 0.01978145815708005}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,Min( Const ,BR ) ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.27944111776447106, "obj2": 0.6545740901436083}, {"determining": "Max( Max( RRS,( MDR - ( FirstVNF_CPU / Const ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUM + MLU ) - ( CS - MLU ) ) + MUR ) ) - CS )", "obj1": 0.38323353293413176, "obj2": 0.5252855265519334}, {"determining": "( ( ( Max( AMS,BR ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41317365269461076, "obj2": 0.49321364415388447}, {"determining": "Max( Max( RRS,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( Min( ( ( MUM / ( RCSe / CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) + MUR ) ) - CS )", "obj1": 0.40718562874251496, "obj2": 0.49617746819858166}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),Max( ARS,( MRS - PN ) ) ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( ( ( RCSe * RRSe ) - ( ( ( RRSe + DS ) - CS ) + RRSe ) ),MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7704590818363274, "obj2": 0.09075388069909368}, {"determining": "( ( PN + ACS ) - ( Max( ARS,Max( ( DDR / AMS ),Max( FirstVNF_RAM,Const ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,Max( ( ( ( DS * Max( Min( MUR ,MUM ),( MUC * MUC ) ) ) * ( ( MUC * MUC ) / RMSe ) ) + ( ( ( ( MUR + MLU ) - RCSe ) + RRSe ) + RMSe ) ),MLU ) ) )", "obj1": 0.7844311377245509, "obj2": 0.0824254781652189}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_CPU_Server,Const ) ,AMS ) ,( RRS * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * Min( DS ,DS ) ) + ( ( MUR * ( CS / MLU ) ) / ( RCSe / CS ) ) ) + MUC )", "obj1": 0.9800399201596807, "obj2": 0.008033106059302441}, {"determining": "Max( Max( ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU,MDR ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) ) - ( ( MUM / ( RCSe / CS ) ) * MUR ) )", "obj1": 0.3812375249500998, "obj2": 0.5273970959669984}, {"determining": "( ( PN + ACS ) - ( Max( RRS,FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / ( ( MUM + RRSe ) * MUM ) ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_Mem ,ACS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,MUC ) ) - Max( MLU,MUC ) ) ,Min( ( ( Min( ( MUC + CS ) ,MLU ) + DS ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9321357285429142, "obj2": 0.031011108527477158}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( MUR / ( MUM / MUM ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09684867833709336}, {"determining": "( ( Max( RRS,Min( ( ( ARS * ( Min( MRS ,FirstVNF_Mem_Server ) / ( Const + CRS ) ) ) * Min( FirstVNF_Mem_Server ,( ARS + Const ) ) ) ,CRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) + MUR )", "obj1": 0.9840319361277445, "obj2": 0.0046275791850207285}, {"determining": "( ( Max( ACS,Max( AMS,RRS ) ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( ( CS / MUR ) ,MUR ) ) ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6596303313227815}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Max( RRS,( FirstVNF_RAM - ( CRS / FirstVNF_RAM_Server ) ) ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( Min( RRSe ,CS ) * Max( RMSe,RCSe ) ) ) ),Min( MUC ,MUM ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6389146254891692}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( ACS * MRS ) + PN ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( ( RMSe - RRSe ) / ( MUM / MUM ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09684867833709336}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( MDR,Min( BR ,FirstVNF_Mem ) ) ) ) ) / ( RRS - Min( BR ,PN ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( ( ( ( DS / CS ) + MUM ) / MUR ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * ( DS + RMSe ) ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6337678096099938}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ( ( RRS - FirstVNF_Mem_Server ) + MRS ) + FirstVNF_RAM ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MUR + CS ) * RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe + ( RMSe + DS ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8223552894211577, "obj2": 0.0629565131275424}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + ( AMS - ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( RMSe + RRSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.0802638094584079}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( ( ( CS * MUR ) / Min( ( MUC - Min( CS ,( RCSe + CS ) ) ) ,MUM ) ) - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4111776447105788, "obj2": 0.4958760585140636}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server + AMS ) ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( ( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ) * ACS ) ) ) - ( CRS - ACS ) ) )", "choosing": "( ( ( ( Min( MUC ,Min( Min( CS ,RMSe ) ,MUM ) ) - RCSe ) * Min( RCSe ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9281437125748503, "obj2": 0.033985853051249425}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( CS / MUR ) / MUR ) - ( ( ( ( ( CS / DS ) - RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.30538922155688625, "obj2": 0.6360370905379599}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Min( ACS ,( RRS + FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / Min( ( PN + FirstVNF_RAM_Server ) ,BR ) ) ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RCSe ) + Max( RRSe,MLU ) ) / ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + MUR ) ) - CS ) + MUC ) + ( RCSe * CS ) )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM + AMS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) - RCSe ) * ( ( ( RRSe + DS ) - CS ) + RRSe ) ) - ( MUR + RCSe ) )", "obj1": 0.9560878243512974, "obj2": 0.015813007270924707}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) ,( Min( FirstVNF_Mem ,( PN - FirstVNF_CPU_Server ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC - ( Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) - Max( MUM,MUC ) ) ),( ( ( MUR + Min( ( RRSe / CS ) ,MUR ) ) - ( Min( MLU ,( ( RCSe / MLU ) * Max( ( MLU - MUM ),MUR ) ) ) - Max( MUM,MUC ) ) ) / ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0028894290891328116}, {"determining": "( PN - Max( ( ( ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) * FirstVNF_Mem ) - Max( CRS,MDR ) ),MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.9720558882235529, "obj2": 0.011851073540134984}, {"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - ( Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,MRS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( RMSe * MUR ) + ( MUM + ( CS - ( RCSe / RRSe ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9680638722554891, "obj2": 0.012639673094254665}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( ( ( Const / FirstVNF_CPU_Server ) / ACS ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - RCSe ) * Min( DS ,DS ) ) + ( RRSe - MUC ) ) + MUC )", "obj1": 0.9740518962075848, "obj2": 0.01055761485521063}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( PN + ( ARS / FirstVNF_Mem_Server ) ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Max( ( MUR / Max( DS,( Max( RRSe,CS ) - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.9620758483033932, "obj2": 0.015078522248183677}, {"determining": "( ( PN + ACS ) - ( Max( ARS,( MRS - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( ( RCSe * RRSe ) - ( ( ( RRSe + DS ) - CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08834603372947115}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( DS ,MUM ) - RCSe ) * ( Min( MUC ,MUM ) - RCSe ) ) + RCSe ) + MUC )", "obj1": 0.9301397205588823, "obj2": 0.0315186205136615}], "13": [{"determining": "( Max( RRS,( ARS - PN ) ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( RRSe / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem - PN ) + RRS ),RRS ) - Max( FirstVNF_Mem_Server,( PN - ( RRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),Max( FirstVNF_RAM,ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + Max( RRSe,( Max( RMSe,RCSe ) * ( RRSe * MUM ) ) ) ) )", "obj1": 0.2435129740518962, "obj2": 0.703618245833584}, {"determining": "( ( ACS / AMS ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * AMS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - ( ( MLU / MUC ) - MUM ) ) ,Max( MUC,Max( DS,CS ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.45109780439121755, "obj2": 0.3863743467619226}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( RRS,( ARS - PN ) ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( RCSe * RRSe ) + ( MUC / MLU ) ) )", "obj1": 0.6966067864271457, "obj2": 0.179561163020498}, {"determining": "( ( ( ( AMS / FirstVNF_CPU_Server ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( MUR / ( ( ( MUR + DS ) - ( CS - MLU ) ) + MUR ) ) - CS ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.4870259481037924, "obj2": 0.3356888522997946}, {"determining": "( PN - Max( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ),MDR ) )", "choosing": "( MUR / DS )", "obj1": 0.7225548902195609, "obj2": 0.12360250240625248}, {"determining": "( Max( AMS,RRS ) - ( Max( ( BR - FirstVNF_RAM ),Max( ( ( MDR - RRS ) * FirstVNF_Mem ),FirstVNF_RAM ) ) * BR ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - Min( RRSe ,MLU ) ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.4448420615678369}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( DDR ,Const ) - Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MLU ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5389221556886228, "obj2": 0.28731636423740525}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( PN,Const ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS - Max( ( RCSe * Max( RMSe,( DS - RMSe ) ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.6586826347305389, "obj2": 0.19834147826912904}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( DS * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.3213572854291417, "obj2": 0.576374306271493}, {"determining": "( Max( Min( ( AMS * AMS ) ,RRS ),RRS ) - Max( FirstVNF_Mem_Server,( RRS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * Min( DS ,( Max( ( MLU * ( DS - MLU ) ),DS ) - RRSe ) ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.31491744017284373}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + MUM )", "obj1": 0.5089820359281437, "obj2": 0.325685994857494}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_Mem ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RCSe * RRSe ) + ( MUC / MLU ) ) ) ),MLU ) ) )", "obj1": 0.6227544910179641, "obj2": 0.2242764914495504}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( ( AMS - MRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUR / MUM ) - ( MUC - ( RMSe / MUC ) ) ) ) )", "obj1": 0.3932135728542914, "obj2": 0.4973911014689603}, {"determining": "( ( PN + ACS ) - ( Max( ( FirstVNF_CPU_Server + Min( Min( DDR ,( ACS - BR ) ) ,( MRS - ( DDR + ARS ) ) ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_RAM,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),( DS + Max( Min( Min( ( ( RRSe - CS ) - RCSe ) ,DS ) ,MUM ),CS ) ) ) )", "obj1": 0.6327345309381237, "obj2": 0.2162154679788408}, {"determining": "( ( ( Const - ARS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( DDR - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( MUM - MUC ) ) ) / Min( MUM ,RMSe ) ) * MUR ) ,MUR ),( ( ( MUC / RRSe ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41916167664670656, "obj2": 0.46343074969982345}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( Min( RRSe ,CS ) - ( DS / CS ) ) ) + MUR ) ) - ( CS * ( MUR / Min( ( Max( DS,DS ) * RRSe ) ,MLU ) ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6076802147055615}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( PN,Const ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS - Max( ( RCSe * Max( RMSe,( DS - RMSe ) ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.656686626746507, "obj2": 0.209296283833035}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( RMSe + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( MLU - Min( Max( ( MLU - CS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.7504990019960079, "obj2": 0.11661789758501152}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.437125748502994, "obj2": 0.4619314232149467}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS / Min( RRSe ,Max( ( Min( ( MUC / RRSe ) ,( MUC + MUM ) ) / RMSe ),MUC ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.6027944111776448, "obj2": 0.24985391719021283}, {"determining": "Max( Max( RRS,( ARS - FirstVNF_RAM ) ),( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( MDR - ARS ) * ACS ) ) ) )", "choosing": "( Max( Min( MLU ,RMSe ),( MLU - MUR ) ) - ( CS * RMSe ) )", "obj1": 0.4151696606786427, "obj2": 0.4860706280197982}, {"determining": "Max( Max( RRS,( ARS - ( RRS * BR ) ) ),( Min( DDR ,Const ) - ( ( PN - Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) ) - BR ) ) )", "choosing": "( ( RRSe * RMSe ) - ( CS * RMSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5193846841741522}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( AMS + Max( FirstVNF_RAM_Server,ARS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * CS ) / ( ( ( DS / ( DS / MUC ) ) / ( RCSe / ( RMSe + RMSe ) ) ) / MUR ) ) ) )", "obj1": 0.24550898203592814, "obj2": 0.6949377358205527}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,( RMSe * DS ) ) ) - Max( MLU,MUC ) ) ,Min( ( ( Min( ( MUC + CS ) ,MLU ) + DS ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9201596806387226, "obj2": 0.03614212807413028}, {"determining": "( ( ( Max( AMS,( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.405189620758483, "obj2": 0.4880557104046681}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( ( MDR / RRS ) - Min( ( RRS * ( ( ARS + Const ) / FirstVNF_RAM ) ) ,( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( RMSe + RCSe ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5808383233532934, "obj2": 0.254649971918414}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( ARS * ACS ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( ( CS + MLU ) / MUM ) - ( MUM / DS ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_CPU_Server ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( RMSe / DS ) ) / ( ( ( MUC * ( ( MUM / MLU ) * MUR ) ) + MUR ) / MUR ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6307399874233318}, {"determining": "( PN - Max( ( CRS - RRS ),MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,( DS / Max( MUC,RRSe ) ) ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.8043912175648703, "obj2": 0.07477138727178162}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.36127744510978044, "obj2": 0.537845632419857}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,ARS ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( DS / Max( MUC,( MUR / DS ) ) ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.3592814371257485, "obj2": 0.5502267500169312}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( AMS / Max( FirstVNF_CPU,ARS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( ACS ,BR ) - Min( Const ,FirstVNF_CPU ) ) ) / MDR ) )", "choosing": "( RRSe - ( ( CS * ( Max( MUC,( Min( RCSe ,RMSe ) / RCSe ) ) * DS ) ) + ( MUC + MLU ) ) )", "obj1": 0.9341317365269461, "obj2": 0.025269985378840253}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,ACS ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( CS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.26746506986027946, "obj2": 0.6714823218213135}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( FirstVNF_CPU_Server,( Min( MDR ,ARS ) * FirstVNF_RAM ) ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( MUR - ( CS - Max( MUC,( ( MUR * MUM ) + CS ) ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.35129740518962077, "obj2": 0.5525507385718978}, {"determining": "Max( FirstVNF_CPU_Server,( CRS - ( DDR + ( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( ( CS * RMSe ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6612835295347558}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) - Min( CRS ,Const ) ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / ( ( ( MUR + DS ) - Max( RRSe,MUC ) ) + MUR ) ) - CS ) + RCSe ) + MUC )", "obj1": 0.9481037924151696, "obj2": 0.02339038927215752}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8383233532934131, "obj2": 0.06158938981976931}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - Max( Max( RRS,( ARS - PN ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( MLU - Min( Max( ( MLU - CS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.7624750499001997, "obj2": 0.10319726510859065}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + Min( FirstVNF_RAM ,( MDR + Const ) ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ACS * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / Min( ( Max( Max( BR,BR ),FirstVNF_RAM ) * Const ) ,MDR ) ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( Max( Min( ( ( MUM * MUR ) * ( DS + RRSe ) ) ,( ( MUR + MUM ) - CS ) ),MUC ) / ( CS * MUR ) ),( MUC / MUC ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.28542914171656686, "obj2": 0.6466759690518734}, {"determining": "( Max( Min( CRS ,DDR ),RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( DS / RRSe ),CS ) * MUC ) + ( Min( MUC ,MUM ) + Max( Min( DS ,CS ),Min( ( MLU * DS ) ,Min( RMSe ,MLU ) ) ) ) ) ,RRSe ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5588822355289421, "obj2": 0.2665148243724255}, {"determining": "( ( PN + ACS ) - ( Max( ( ( ( FirstVNF_Mem - PN ) + PN ) / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( MUM,( RMSe / ( MUR / DS ) ) ) ,Max( MUC,( ( MUR + MUM ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8862275449101796, "obj2": 0.041781608973894074}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,Min( Const ,BR ) ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.27944111776447106, "obj2": 0.6545740901436083}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + CS ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.26063398562929585}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * ( PN + ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( RRSe - CS ),MLU ) ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ( ( RRS - FirstVNF_Mem_Server ) + MRS ) + FirstVNF_RAM ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MUR + CS ) * RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe + ( RMSe + DS ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8223552894211577, "obj2": 0.0629565131275424}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( CRS - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( Min( AMS ,FirstVNF_Mem_Server ) - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,MLU ) - ( ( DS - MUM ) / RMSe ) ) * ( ( ( ( MLU * ( Max( CS,CS ) / MUR ) ) * RRSe ) * ( ( MLU - RCSe ) / ( ( ( RRSe - MUR ) / MUM ) - Min( MUC ,( MUR / MLU ) ) ) ) ) * ( ( MLU / MUR ) - Min( ( MUR + MLU ) ,( MUM - MUC ) ) ) ) ) / ( ( ( ( MUC * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.36726546906187624, "obj2": 0.533047113626161}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8802395209580839, "obj2": 0.04227760221745249}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) / Min( Min( FirstVNF_Mem ,ACS ) ,( FirstVNF_Mem * MDR ) ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( RCSe - RCSe ),MLU ) ) )", "obj1": 0.7704590818363274, "obj2": 0.08925676307982461}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( PN - Max( ( ( ( ( MDR - ARS ) * ( ( Min( RRS ,BR ) * ( RRS + MDR ) ) - RRS ) ) * ( CRS - MRS ) ) * ( ( Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) / FirstVNF_Mem_Server ) ),MDR ) )", "choosing": "( Min( MUR ,( CS / Min( RRSe ,Max( ( Min( ( MUC / RRSe ) ,( MUC + MUM ) ) / RMSe ),MUC ) ) ) ) / Min( MUR ,MLU ) )", "obj1": 0.7584830339321357, "obj2": 0.10843356934203349}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( AMS,FirstVNF_Mem ) - ( DDR - Const ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( Max( RRSe,MUM ) / RCSe ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( Max( ACS,Max( AMS,RRS ) ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( ( CS / MUR ) ,MUR ) ) ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6596303313227815}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( ( FirstVNF_Mem + ( PN + FirstVNF_RAM_Server ) ) * CRS ) - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * CRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( ( RRSe + ( CS / DS ) ) / DS )", "obj1": 0.7524950099800399, "obj2": 0.1101938128025686}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( FirstVNF_Mem_Server + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + DS ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( ( CS * RMSe ) * RRSe ) ) )", "obj1": 0.2954091816367265, "obj2": 0.6400131686591645}, {"determining": "( ( PN + ACS ) - ( Min( RRS ,FirstVNF_RAM_Server ) + AMS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( ( MUR + MUM ) / Max( Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),( Max( MLU,( CS - ( RMSe + MUR ) ) ) + DS ) ) ) ) )", "obj1": 0.8542914171656687, "obj2": 0.05549179731088907}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Const,FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( ( ( MUM - MUR ) + ( MUM * CS ) ) * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8143712574850299, "obj2": 0.06721799775181415}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / MUR ) ,( Min( ( CS / MUC ) ,DS ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.7964071856287425, "obj2": 0.07792219211915054}, {"determining": "( ( PN + ( ARS / FirstVNF_Mem_Server ) ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Max( ( MUR / Max( DS,( Max( RRSe,CS ) - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.9620758483033932, "obj2": 0.015078522248183677}, {"determining": "Max( Max( RRS,( MDR - ( FirstVNF_CPU / Const ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUM + MLU ) - ( CS - MLU ) ) + MUR ) ) - CS )", "obj1": 0.38323353293413176, "obj2": 0.5252855265519334}, {"determining": "( ( PN + Max( RRS,Min( FirstVNF_CPU_Server ,BR ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( Max( PN,MDR ) ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MLU - MLU ) + RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( MUR * ( ( RCSe + ( ( RMSe / CS ) + RRSe ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8143712574850299, "obj2": 0.06721799775181415}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Max( RRS,( FirstVNF_RAM - ( CRS / FirstVNF_RAM_Server ) ) ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( Min( RRSe ,CS ) * Max( RMSe,RCSe ) ) ) ),Min( MUC ,MUM ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6389146254891692}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) + RRS ) - Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MLU * MUM ) / ( MUR - CS ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5728542914171657, "obj2": 0.25960451507627064}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( MUR / ( MUM / MUM ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09684867833709336}, {"determining": "( ( PN + ACS ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * ARS ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( ( MUC * RRSe ) - MUC ) + CS ),Max( Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.8622754491017964, "obj2": 0.0532043388017164}, {"determining": "( ( PN + ACS ) - ( Max( RRS,FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / ( ( MUM + RRSe ) * MUM ) ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * CRS ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( ( RRSe * MUM ) / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5788423153692615, "obj2": 0.25672418232387956}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( Min( ARS ,MRS ) + PN ) ,Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( RMSe + Max( ( RRSe - MUC ),MLU ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8502994011976048, "obj2": 0.05724350939129526}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM + AMS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) - RCSe ) * ( ( ( RRSe + DS ) - CS ) + RRSe ) ) - ( MUR + RCSe ) )", "obj1": 0.9560878243512974, "obj2": 0.015813007270924707}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( PN + ACS ) - ( Max( ( ( ( FirstVNF_Mem - PN ) + PN ) / Min( ( RRS * FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( Min( ( RRSe - CS ) ,Max( MUC,( ( MUR + MUM ) / Max( ( ( MUM - MUR ) + ( MUM * CS ) ),MUR ) ) ) ) - CS ) ,Max( MUC,( ( MUR + MUM ) / Max( MUM,MUR ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.0799699981898184}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "Max( Max( ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU,MDR ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) ) - ( ( MUM / ( RCSe / CS ) ) * MUR ) )", "obj1": 0.3812375249500998, "obj2": 0.5273970959669984}, {"determining": "( ( PN + ACS ) - ( Max( ARS,Max( ( DDR / AMS ),Max( FirstVNF_RAM,Const ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,Max( ( ( ( DS * Max( Min( MUR ,MUM ),( MUC * MUC ) ) ) * ( ( MUC * MUC ) / RMSe ) ) + ( ( ( ( MUR + MLU ) - RCSe ) + RRSe ) + RMSe ) ),MLU ) ) )", "obj1": 0.7844311377245509, "obj2": 0.0824254781652189}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( CS / MUR ) / MUR ) - ( ( ( ( ( CS / DS ) - RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.30538922155688625, "obj2": 0.6360370905379599}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) ),Max( Min( FirstVNF_CPU ,MDR ),Max( ARS,( MRS - PN ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( ( RRSe - CS ) + RRSe ) - ( ( RRSe - CS ) + RRSe ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.06033482271411369}, {"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - ( Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,MRS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( RMSe * MUR ) + ( MUM + ( CS - ( RCSe / RRSe ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9680638722554891, "obj2": 0.012639673094254665}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_Mem ,ACS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,MUC ) ) - Max( MLU,MUC ) ) ,Min( ( ( Min( ( MUC + CS ) ,MLU ) + DS ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9321357285429142, "obj2": 0.031011108527477158}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( Max( ( ( MUM + RCSe ) / ( MUR - CS ) ),( CS / ( RCSe / MUR ) ) ) / ( MUM / MUM ) ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08777389918375479}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server + AMS ) ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( ( DDR + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ( ( CRS + AMS ) + ( ARS / FirstVNF_RAM ) ) * ACS ) ) ) - ( CRS - ACS ) ) )", "choosing": "( ( ( ( Min( MUC ,Min( Min( CS ,RMSe ) ,MUM ) ) - RCSe ) * Min( RCSe ,DS ) ) + RCSe ) + MUC )", "obj1": 0.9281437125748503, "obj2": 0.033985853051249425}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * MDR ) - ARS ) * ( ACS - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + ( MUC + MLU ) ) ) - CS ) + RCSe ) + MUC )", "obj1": 0.9520958083832335, "obj2": 0.02094509876130054}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( MDR,Min( BR ,FirstVNF_Mem ) ) ) ) ) / ( RRS - Min( BR ,PN ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( ( ( ( DS / CS ) + MUM ) / MUR ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * ( DS + RMSe ) ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6337678096099938}, {"determining": "( ( Min( PN ,MRS ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - ( Min( MLU ,( Max( Max( CS,Max( MUC,RRSe ) ),RCSe ) - DS ) ) - Max( MUM,MUC ) ) ),DS )", "obj1": 0.9540918163672655, "obj2": 0.01978145815708005}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ( ( RRS - FirstVNF_Mem_Server ) + MRS ) + FirstVNF_RAM ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MUR + CS ) * RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe + ( RMSe + DS ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8223552894211577, "obj2": 0.0629565131275424}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Min( ACS ,( RRS + FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / Min( ( PN + FirstVNF_RAM_Server ) ,BR ) ) ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RCSe ) + Max( RRSe,MLU ) ) / ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + MUR ) ) - CS ) + MUC ) + ( RCSe * CS ) )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( ARS / ACS ) + PN ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( ( CS - ( CS * ( Max( ( MLU / RMSe ),MUC ) / RMSe ) ) ) / ( MUM / MUM ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09684867833709336}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( Min( FirstVNF_Mem ,BR ) * Max( FirstVNF_CPU_Server,ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM + MUC ) + ( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) + RMSe ) ),RCSe ) )", "obj1": 0.9940119760479041, "obj2": 0.0023263828347496}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( Min( MLU ,( Min( RCSe ,RMSe ) * RCSe ) ) + MLU ) + ( MUC / MLU ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005430475667691826}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Min( ACS ,( RRS + FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / Min( ( PN + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,ARS ) ) ) ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RCSe ) + Max( RRSe,MLU ) ) / Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),( MUC / MUC ) ) ) ) - CS ) + MUC ) + ( RCSe * CS ) )", "obj1": 0.9800399201596807, "obj2": 0.00781907087920379}], "14": [{"determining": "( ( ( FirstVNF_Mem + ( PN + FirstVNF_RAM_Server ) ) * CRS ) - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * CRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( ( RRSe + ( CS / DS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ARS - PN ) ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( RRSe / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( AMS + Max( FirstVNF_RAM_Server,ARS ) ) ) ,Min( ( ( ( FirstVNF_CPU_Server / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * CS ) / ( ( ( DS / Max( MUC,RRSe ) ) / ( ( MUR + DS ) / ( RMSe + RMSe ) ) ) / MUR ) ) ) )", "obj1": 0.2435129740518962, "obj2": 0.6952138617744407}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( RRS,( ARS - PN ) ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( RCSe * RRSe ) + ( MUC / MLU ) ) )", "obj1": 0.6966067864271457, "obj2": 0.179561163020498}, {"determining": "( ( ACS / AMS ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * AMS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - ( ( MLU / MUC ) - MUM ) ) ,Max( MUC,Max( DS,CS ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.45109780439121755, "obj2": 0.3863743467619226}, {"determining": "( Max( AMS,RRS ) - ( Max( ( BR - FirstVNF_RAM ),Max( ( ( MDR - RRS ) * FirstVNF_Mem ),FirstVNF_RAM ) ) * BR ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - Min( RRSe ,MLU ) ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.4448420615678369}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( MRS ,RRS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * AMS ) * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,CS ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + MUR ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.469061876247505, "obj2": 0.3519512320886644}, {"determining": "( PN - Max( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ),MDR ) )", "choosing": "( MUR / DS )", "obj1": 0.7225548902195609, "obj2": 0.12360250240625248}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( DS * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.3213572854291417, "obj2": 0.576374306271493}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( PN,Const ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS - Max( ( RCSe * Max( RMSe,( DS - RMSe ) ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.6586826347305389, "obj2": 0.19834147826912904}, {"determining": "( Max( Min( ( AMS * AMS ) ,RRS ),RRS ) - Max( FirstVNF_Mem_Server,( RRS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * Min( DS ,( Max( ( MLU * ( DS - MLU ) ),DS ) - RRSe ) ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.31491744017284373}, {"determining": "( ( ( ( AMS / FirstVNF_CPU_Server ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( MUR / ( ( ( MUR + DS ) - ( CS - MLU ) ) + MUR ) ) - CS ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.4870259481037924, "obj2": 0.3356888522997946}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + MUM )", "obj1": 0.5089820359281437, "obj2": 0.325685994857494}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_Mem ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RCSe * RRSe ) + ( MUC / MLU ) ) ) ),MLU ) ) )", "obj1": 0.6227544910179641, "obj2": 0.2242764914495504}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( ( AMS - MRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUR / MUM ) - ( MUC - ( RMSe / MUC ) ) ) ) )", "obj1": 0.3932135728542914, "obj2": 0.4973911014689603}, {"determining": "( ( PN + ACS ) - ( Max( ( FirstVNF_CPU_Server + Min( Min( DDR ,( ACS - BR ) ) ,( MRS - ( DDR + ARS ) ) ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_RAM,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),( DS + Max( Min( Min( ( ( RRSe - CS ) - RCSe ) ,DS ) ,MUM ),CS ) ) ) )", "obj1": 0.6327345309381237, "obj2": 0.2162154679788408}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( Min( RRSe ,CS ) - ( DS / CS ) ) ) + MUR ) ) - ( CS * ( MUR / Min( ( Max( DS,DS ) * RRSe ) ,MLU ) ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6076802147055615}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( PN,Const ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS - Max( ( RCSe * Max( RMSe,( DS - RMSe ) ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.656686626746507, "obj2": 0.209296283833035}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "( ( PN + ACS ) - ( Max( ( Min( Max( AMS,RRS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.9261477045908184, "obj2": 0.024140406422727464}, {"determining": "( ( ( Max( AMS,( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.405189620758483, "obj2": 0.4880557104046681}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS / Min( RRSe ,Max( ( Min( ( MUC / RRSe ) ,( MUC + MUM ) ) / RMSe ),MUC ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.6027944111776448, "obj2": 0.24985391719021283}, {"determining": "( ( ( Max( AMS,( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / ( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( MUC + CS ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.40718562874251496, "obj2": 0.4712867968409069}, {"determining": "( PN - Max( ( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) - PN ),MDR ) )", "choosing": "( Max( ( CS * MUR ),MLU ) / DS )", "obj1": 0.7305389221556886, "obj2": 0.1195980513664011}, {"determining": "Max( Max( RRS,( ARS - ( RRS * BR ) ) ),( Min( DDR ,Const ) - ( ( PN - Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) ) - BR ) ) )", "choosing": "( ( RRSe * RMSe ) - ( CS * RMSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5193846841741522}, {"determining": "( ( PN + ACS ) - ( ( ACS - ( ( FirstVNF_RAM - Max( ( ACS / MRS ),ARS ) ) * Max( ( ( ACS + Min( CRS ,CRS ) ) - MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( Max( ( RCSe - CS ),DS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7504990019960079, "obj2": 0.10942931719306957}, {"determining": "( ( MDR / RRS ) - Min( ( RRS * ( ( ARS + Const ) / FirstVNF_RAM ) ) ,( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( RMSe + RCSe ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5808383233532934, "obj2": 0.254649971918414}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( DDR ,Const ) - Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MLU ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5389221556886228, "obj2": 0.28731636423740525}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.437125748502994, "obj2": 0.4619314232149467}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,( RMSe * DS ) ) ) - Max( MLU,MUC ) ) ,Min( ( ( Min( ( MUC + CS ) ,MLU ) + DS ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9201596806387226, "obj2": 0.03614212807413028}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( AMS,FirstVNF_Mem ) - ( DDR - Const ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( Max( RRSe,MUM ) / RCSe ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_CPU_Server ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( RMSe / DS ) ) / ( ( ( MUC * ( ( MUM / MLU ) * MUR ) ) + MUR ) / MUR ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6307399874233318}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( FirstVNF_CPU_Server,( Min( MDR ,ARS ) * FirstVNF_RAM ) ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( MUR - ( CS - Max( MUC,( ( MUR * MUM ) + CS ) ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.35129740518962077, "obj2": 0.5525507385718978}, {"determining": "( ( ( Const - ARS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( DDR - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( MUM - MUC ) ) ) / Min( MUM ,RMSe ) ) * MUR ) ,MUR ),( ( ( MUC / RRSe ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41916167664670656, "obj2": 0.46343074969982345}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( RRSe - CS ) / ( MUR - MUR ) ),Max( MUC,CS ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.2746369415512065}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( AMS + Max( FirstVNF_RAM_Server,ARS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * CS ) / ( ( ( DS / ( DS / MUC ) ) / ( RCSe / ( RMSe + RMSe ) ) ) / MUR ) ) ) )", "obj1": 0.24550898203592814, "obj2": 0.6949377358205527}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * Max( Const,CRS ) ) ) / MDR ) ) ) * Max( RRS,( ARS - PN ) ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( CS ,MUR ) + RCSe ) + Min( ( RRSe - ( CS - Max( ( RCSe * ( RMSe - RRSe ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) ) )", "obj1": 0.9481037924151696, "obj2": 0.02277027269413728}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Min( DDR ,Const ) - ( ( FirstVNF_Mem - PN ) + PN ) ) )", "choosing": "( ( MUR / ( ( MUR + MUM ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) - ( CS * RMSe ) )", "obj1": 0.3592814371257485, "obj2": 0.5441113312464697}, {"determining": "( PN - Max( ( CRS - RRS ),MDR ) )", "choosing": "( Min( ( RCSe * DS ) ,( Min( ( MLU - Min( Max( ( MLU - DS ),CS ) ,RMSe ) ) ,( Min( MLU ,( DS / Max( MUC,RRSe ) ) ) - Max( MUM,MUC ) ) ) * MUC ) ) / Min( MUR ,MLU ) )", "obj1": 0.8043912175648703, "obj2": 0.07477138727178162}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + CS ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.26063398562929585}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,ACS ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( CS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.26746506986027946, "obj2": 0.6714823218213135}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - Max( Max( RRS,( ARS - PN ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( MLU - Min( Max( ( MLU - CS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.7624750499001997, "obj2": 0.10319726510859065}, {"determining": "Max( FirstVNF_CPU_Server,( CRS - ( DDR + ( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( ( CS * RMSe ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6612835295347558}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( MDR,Min( BR ,FirstVNF_Mem ) ) ),FirstVNF_CPU ) ),( ( Const + RRS ) - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( RCSe + ( RRSe - RCSe ) ) / ( Max( ( MUM + MUC ),DS ) / ( ( ( ( RCSe / ( RRSe - MLU ) ) + DS ) / MUR ) - CS ) ) ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( ( ( MUM - MUR ) + ( MUM * CS ) ) * Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.8303393213572854, "obj2": 0.061549976537421794}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + Min( FirstVNF_RAM ,( MDR + Const ) ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ACS * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / Min( ( Max( Max( BR,BR ),FirstVNF_RAM ) * Const ) ,MDR ) ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( Max( Min( ( ( MUM * MUR ) * ( DS + RRSe ) ) ,( ( MUR + MUM ) - CS ) ),MUC ) / ( CS * MUR ) ),( MUC / MUC ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.28542914171656686, "obj2": 0.6466759690518734}, {"determining": "( Max( Min( CRS ,DDR ),RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( DS / RRSe ),CS ) * MUC ) + ( Min( MUC ,MUM ) + Max( Min( DS ,CS ),Min( ( MLU * DS ) ,Min( RMSe ,MLU ) ) ) ) ) ,RRSe ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5588822355289421, "obj2": 0.2665148243724255}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,Min( Const ,BR ) ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.27944111776447106, "obj2": 0.6545740901436083}, {"determining": "( ( PN + ACS ) - ( Max( ( ( ( FirstVNF_Mem - PN ) + PN ) / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( MUM,( RMSe / ( MUR / DS ) ) ) ,Max( MUC,( ( MUR + MUM ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8862275449101796, "obj2": 0.041781608973894074}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( DDR ,Const ) - Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MLU ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5389221556886228, "obj2": 0.28731636423740525}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.874251497005988, "obj2": 0.047862861005493515}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.36127744510978044, "obj2": 0.537845632419857}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / MDR ) + PN ) - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / RMSe ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + MUM )", "obj1": 0.42714570858283435, "obj2": 0.46239805835015685}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( ARS - PN ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( ( ( RMSe + DS ) - MUC ) / DS )", "obj1": 0.7564870259481038, "obj2": 0.1069098223649827}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( CRS - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( Min( AMS ,FirstVNF_Mem_Server ) - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,MLU ) - ( ( DS - MUM ) / RMSe ) ) * ( ( ( ( MLU * ( Max( CS,CS ) / MUR ) ) * RRSe ) * ( ( MLU - RCSe ) / ( ( ( RRSe - MUR ) / MUM ) - Min( MUC ,( MUR / MLU ) ) ) ) ) * ( ( MLU / MUR ) - Min( ( MUR + MLU ) ,( MUM - MUC ) ) ) ) ) / ( ( ( ( MUC * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.36726546906187624, "obj2": 0.533047113626161}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * ( PN + ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( RRSe - CS ),MLU ) ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - Max( ( DDR / ( ARS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( RRSe - CS ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5708582834331337, "obj2": 0.25553636174071925}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) / Min( Min( FirstVNF_Mem ,ACS ) ,( FirstVNF_Mem * MDR ) ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( RCSe - RCSe ),MLU ) ) )", "obj1": 0.7704590818363274, "obj2": 0.08925676307982461}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( ARS * ACS ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( ( CS + MLU ) / MUM ) - ( MUM / DS ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( FirstVNF_Mem_Server + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + DS ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( ( CS * RMSe ) * RRSe ) ) )", "obj1": 0.2954091816367265, "obj2": 0.6400131686591645}, {"determining": "( ( PN + ACS ) - ( Min( RRS ,FirstVNF_RAM_Server ) + AMS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( ( MUR + MUM ) / Max( Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),( Max( MLU,( CS - ( RMSe + MUR ) ) ) + DS ) ) ) ) )", "obj1": 0.8542914171656687, "obj2": 0.05549179731088907}, {"determining": "( ( PN + Max( RRS,Min( FirstVNF_CPU_Server ,BR ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( Max( PN,MDR ) ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MLU - MLU ) + RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( MUR * ( ( RCSe + ( ( RMSe / CS ) + RRSe ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8143712574850299, "obj2": 0.06721799775181415}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( DDR ,Const ) - Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MLU ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5528942115768463, "obj2": 0.27367282310202773}, {"determining": "Max( Max( RRS,( MDR - ( FirstVNF_CPU / Const ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUM + MLU ) - ( CS - MLU ) ) + MUR ) ) - CS )", "obj1": 0.38323353293413176, "obj2": 0.5252855265519334}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Min( ACS ,( RRS + FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / Min( ( PN + FirstVNF_RAM_Server ) ,BR ) ) ) - RRS ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RCSe ) + Max( RRSe,MLU ) ) / ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + MUR ) ) - CS ) + MUC ) + ( RCSe * CS ) )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Const,FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( ( ( MUM - MUR ) + ( MUM * CS ) ) * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8143712574850299, "obj2": 0.06721799775181415}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( Max( ( ( MUM + RCSe ) / ( MUR - CS ) ),( CS / ( RCSe / MUR ) ) ) / ( MUM / MUM ) ) ) )", "obj1": 0.7764471057884231, "obj2": 0.08777389918375479}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Max( RRS,( FirstVNF_RAM - ( CRS / FirstVNF_RAM_Server ) ) ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( Min( RRSe ,CS ) * Max( RMSe,RCSe ) ) ) ),Min( MUC ,MUM ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6389146254891692}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Min( ACS ,( RRS + FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / Min( ( PN + FirstVNF_RAM_Server ) ,BR ) ) ) - RRS ) ) * ( CRS - MRS ) ) * ( Min( ( ( AMS + Max( FirstVNF_RAM_Server,ARS ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RCSe ) + Max( RRSe,MLU ) ) / ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + MUR ) ) - CS ) + ( ( MUR + DS ) - ( CS - ( DS / Max( MUC,( MUR / DS ) ) ) ) ) ) + ( RCSe * CS ) )", "obj1": 0.9860279441117764, "obj2": 0.00401718592051119}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( MUR / ( MUM / MUM ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09684867833709336}, {"determining": "( ( PN + ACS ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * ARS ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( ( MUC * RRSe ) - MUC ) + CS ),Max( Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.8622754491017964, "obj2": 0.0532043388017164}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( ( Max( ACS,Max( AMS,RRS ) ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( ( CS / MUR ) ,MUR ) ) ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6596303313227815}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( Min( ARS ,MRS ) + PN ) ,Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( RMSe + Max( ( RRSe - MUC ),MLU ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8502994011976048, "obj2": 0.05724350939129526}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8802395209580839, "obj2": 0.04227760221745249}, {"determining": "Max( Max( RRS,( FirstVNF_RAM - ( CRS / Max( Const,FirstVNF_CPU_Server ) ) ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( ( DS / ( RRSe - ( MUR - RRSe ) ) ) ,RRSe ),Max( Min( RRSe ,CS ),( ( DS * MUM ) - ( RRSe + RMSe ) ) ) ) + MUR ) ) - ( ( Max( MLU,MUR ) * ( MLU - DS ) ) + RCSe ) )", "obj1": 0.3772455089820359, "obj2": 0.5306782361106694}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ( ( RRS - FirstVNF_Mem_Server ) + MRS ) + FirstVNF_RAM ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MUR + CS ) * RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe + ( RMSe + DS ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8223552894211577, "obj2": 0.0629565131275424}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "( ( PN + ( ARS / FirstVNF_Mem_Server ) ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( Max( Const,FirstVNF_Mem_Server ) - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( MUM + RCSe ) / ( MUR - CS ) ),( CS / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012099062625760337}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( RMSe + ( MUM - Min( DS ,DS ) ) ) ,MUR ) / DS )", "obj1": 0.7245508982035929, "obj2": 0.1226912506400353}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Min( MLU ,MUM ) - RCSe ),Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8762475049900199, "obj2": 0.04427700718155136}, {"determining": "Max( Max( ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU,MDR ) ),Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( RRSe ,CS ),MLU ) ) + MUR ) ) - ( ( MUM / ( RCSe / CS ) ) * MUR ) )", "obj1": 0.3812375249500998, "obj2": 0.5273970959669984}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( CS / MUR ) / MUR ) - ( ( ( ( ( CS / DS ) - RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.30538922155688625, "obj2": 0.6360370905379599}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / Min( Min( FirstVNF_Mem ,ACS ) ,ACS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( MUR,MLU ) ) - RCSe ) * Min( DS ,( Max( MUC,CS ) / MUR ) ) ) + RCSe ),MLU ) ) )", "obj1": 0.7984031936127745, "obj2": 0.07602041507828748}, {"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - ( Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,MRS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( ( RMSe * MUR ) + ( MUM + ( CS - ( RCSe / RRSe ) ) ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) - ( MUR + RCSe ) )", "obj1": 0.9680638722554891, "obj2": 0.012639673094254665}, {"determining": "( ( PN + ACS ) - ( Max( RRS,FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / ( ( MUM + RRSe ) * MUM ) ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.7784431137724551, "obj2": 0.08339219567572793}, {"determining": "( ( PN + ( ARS / FirstVNF_Mem_Server ) ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Max( ( MUR / Max( DS,( Max( RRSe,CS ) - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.9620758483033932, "obj2": 0.015078522248183677}, {"determining": "( ( ( AMS / ARS ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( ( MUM + MLU ) - Max( MLU,MUC ) ) ,Min( ( ( MLU + ( CS + MUM ) ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9201596806387226, "obj2": 0.03614212807413028}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM + AMS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) - RCSe ) * ( ( ( RRSe + DS ) - CS ) + RRSe ) ) - ( MUR + RCSe ) )", "obj1": 0.9560878243512974, "obj2": 0.015813007270924707}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / MUR ) ,( Min( ( CS / MUC ) ,DS ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.7964071856287425, "obj2": 0.07792219211915054}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ACS ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( MRS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ) ),DS )", "obj1": 0.9920159680638723, "obj2": 0.0029701977950816975}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( MDR,Min( BR ,FirstVNF_Mem ) ) ) ) ) / ( RRS - Min( BR ,PN ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( ( ( ( DS / CS ) + MUM ) / MUR ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * ( DS + RMSe ) ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6337678096099938}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ( ( RRS - FirstVNF_Mem_Server ) + MRS ) + FirstVNF_RAM ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( MUR + CS ) * RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe + ( RMSe + DS ) ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8223552894211577, "obj2": 0.0629565131275424}], "15": [{"determining": "( ( PN + ACS ) - ( ( ACS - ( ( FirstVNF_RAM - Max( ( ACS / MRS ),ARS ) ) * Max( ( ( ACS + Min( CRS ,CRS ) ) - MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( Max( ( RCSe - CS ),DS ) + RRSe ) ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( PN + FirstVNF_RAM_Server ) ) * CRS ) - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * CRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( ( RRSe + ( CS / DS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_CPU_Server ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( RMSe / DS ) ) / ( ( ( MUC * ( ( MUM / MLU ) * MUR ) ) + MUR ) / MUR ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.23952095808383234, "obj2": 0.7097468415824183}, {"determining": "( Max( ( ( FirstVNF_CPU / RRS ) + BR ),( FirstVNF_Mem_Server - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) - ( Max( ( DDR / AMS ),Max( Max( RRS,( ARS - PN ) ),( CRS / ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( ( RCSe * RRSe ) + ( MUC / MLU ) ) )", "obj1": 0.6966067864271457, "obj2": 0.179561163020498}, {"determining": "( PN - Max( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ),MDR ) )", "choosing": "( MUR / DS )", "obj1": 0.7225548902195609, "obj2": 0.12360250240625248}, {"determining": "( ( ACS / AMS ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * AMS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - ( ( MLU / MUC ) - MUM ) ) ,Max( MUC,Max( DS,CS ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.45109780439121755, "obj2": 0.38324721472766127}, {"determining": "( Max( AMS,Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( Max( PN,MDR ) ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Min( ( ( MLU - MLU ) + RRSe ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( MUR * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ),MLU ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.44177182398964016}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( CRS - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - DS ) / ( ( ( ( DS * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.3213572854291417, "obj2": 0.576374306271493}, {"determining": "( Max( Min( ( AMS * AMS ) ,RRS ),RRS ) - Max( FirstVNF_Mem_Server,( RRS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),PN ) * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( ( ( MUR * MUR ) / ( RCSe / ( RMSe + RMSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * Min( DS ,( Max( ( MLU * ( DS - MLU ) ),DS ) - RRSe ) ) ) ) )", "obj1": 0.530938123752495, "obj2": 0.31491744017284373}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / FirstVNF_Mem ) + PN ) - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + MUM )", "obj1": 0.5089820359281437, "obj2": 0.325685994857494}, {"determining": "( ( ( ( AMS / FirstVNF_CPU_Server ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( MUR / ( ( ( MUR + DS ) - ( CS - MLU ) ) + MUR ) ) - CS ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.4870259481037924, "obj2": 0.3356888522997946}, {"determining": "( ( PN + ACS ) - ( ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * Max( Const,CRS ) ) ) / MDR ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( ( CS * MUR ),MLU ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( MUM + ( MUM - MUC ) ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6706586826347305, "obj2": 0.18879971124466313}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( ( AMS - MRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - RMSe ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUR / MUM ) - ( MUC - ( RMSe / MUC ) ) ) ) )", "obj1": 0.3932135728542914, "obj2": 0.4973911014689603}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( MRS ,RRS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Const - ( ( FirstVNF_Mem_Server * AMS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( ( MLU + ( CS + MUM ) ) - CS ) ,Max( MUC,Max( DS,CS ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.45708582834331335, "obj2": 0.37766917527052385}, {"determining": "( ( PN + ACS ) - ( Max( ( FirstVNF_CPU_Server + Min( Min( DDR ,( ACS - BR ) ) ,( MRS - ( DDR + ARS ) ) ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_RAM,MDR ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),( DS + Max( Min( Min( ( ( RRSe - CS ) - RCSe ) ,DS ) ,MUM ),CS ) ) ) )", "obj1": 0.6327345309381237, "obj2": 0.2162154679788408}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( Min( RRSe ,CS ) - ( DS / CS ) ) ) + MUR ) ) - ( CS * ( MUR / Min( ( Max( DS,DS ) * RRSe ) ,MLU ) ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6076802147055615}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( PN,Const ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS - Max( ( RCSe * Max( RMSe,( DS - RMSe ) ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.656686626746507, "obj2": 0.209296283833035}, {"determining": "( ( ( ( FirstVNF_RAM + ( Min( MRS ,RRS ) * BR ) ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( PN - ( ( FirstVNF_Mem_Server * AMS ) * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,CS ) ) ) / ( RCSe / MUR ) ) ,( ( RRSe * RCSe ) * CS ) ),( ( ( RRSe + DS ) + MUR ) / ( MUR - MUR ) ) ) / Min( MLU ,( ( Min( MUC ,DS ) * CS ) / MUC ) ) )", "obj1": 0.469061876247505, "obj2": 0.3519512320886644}, {"determining": "Max( Min( PN ,Max( MDR,AMS ) ),Min( ARS ,ARS ) )", "choosing": "( ( MUR / ( ( ( ( RMSe * RMSe ) + DS ) - ( CS - DS ) ) + ( RRSe * MUC ) ) ) - CS )", "obj1": 0.3473053892215569, "obj2": 0.5686919943794595}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS / Min( RRSe ,Max( ( Min( ( MUC / RRSe ) ,( MUC + MUM ) ) / RMSe ),MUC ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.6027944111776448, "obj2": 0.24985391719021283}, {"determining": "( ( ( Max( AMS,( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / ( Min( FirstVNF_Mem ,( PN - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( MUC + CS ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.40718562874251496, "obj2": 0.4712867968409069}, {"determining": "Max( Max( RRS,( ARS - ( RRS * BR ) ) ),( Min( DDR ,Const ) - ( ( PN - Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) ) - BR ) ) )", "choosing": "( ( RRSe * RMSe ) - ( CS * RMSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5193846841741522}, {"determining": "( ( MDR / RRS ) - Min( ( RRS * ( ( ARS + Const ) / FirstVNF_RAM ) ) ,( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( RMSe + RCSe ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5808383233532934, "obj2": 0.254649971918414}, {"determining": "Max( ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ),( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + ( ( ( PN - CRS ) * FirstVNF_RAM_Server ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Max( ( AMS - FirstVNF_RAM ),FirstVNF_Mem_Server ) - DDR ) ) ) ) ) )", "choosing": "( ( MUR / DS ) - ( DS * DS ) )", "obj1": 0.25748502994011974, "obj2": 0.6819137934953753}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( PN,Const ),FirstVNF_CPU ) ),( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - ( CS - Max( ( RCSe * Max( RMSe,( DS - RMSe ) ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) )", "obj1": 0.6586826347305389, "obj2": 0.19834147826912904}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( DDR ,Const ) - Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MLU ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5389221556886228, "obj2": 0.28731636423740525}, {"determining": "( ( ( Max( AMS,( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( PN - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / DS )", "obj1": 0.47305389221556887, "obj2": 0.35070189428606185}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( Max( Max( FirstVNF_Mem,PN ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / MUR ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( MUR,( ( RRSe + RRSe ) / Min( MUR ,RRSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.437125748502994, "obj2": 0.4619314232149467}, {"determining": "( ( PN + ACS ) - ( Max( ( Min( Max( AMS,RRS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) / Min( Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( CS * ( MUC - DS ) ),MLU ) ) )", "obj1": 0.9261477045908184, "obj2": 0.024140406422727464}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( Max( FirstVNF_RAM_Server,RRS ) / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * ( DS * RCSe ) ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6096100321045472}, {"determining": "( ( PN + ACS ) - ( ( ACS - ( ( FirstVNF_RAM - Max( ( ACS / MRS ),ARS ) ) * Max( ( ( ACS + Min( CRS ,CRS ) ) - MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( Max( ( RCSe - CS ),DS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.7504990019960079, "obj2": 0.10942931719306957}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( ( ARS - PN ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( CS * ( ( RCSe * RRSe ) - ( ( MUM + ( DS - MUC ) ) + RRSe ) ) ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( ( ( MUM - MUR ) + ( MUM * CS ) ) * Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.7325349301397206, "obj2": 0.11456823684190932}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),Min( DDR ,DDR ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),Max( ( CS * ( ( RCSe * RRSe ) - ( MUM / DS ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( ( Max( AMS,( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.405189620758483, "obj2": 0.4880557104046681}, {"determining": "( ( Max( ACS,Max( BR,( FirstVNF_Mem_Server - RRS ) ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_CPU_Server ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( RMSe / DS ) ) / ( ( ( MUC * ( ( MUM / MLU ) * MUR ) ) + MUR ) / MUR ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6307399874233318}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( Min( Max( FirstVNF_Mem,Const ) ,AMS ) ,( Const * Max( Const,CRS ) ) ) / MDR ) ) ) * Max( RRS,( ARS - PN ) ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( CS ,MUR ) + RCSe ) + Min( ( RRSe - ( CS - Max( ( RCSe * ( RMSe - RRSe ) ),Max( Max( CS,RRSe ),Max( MUR,MUC ) ) ) ) ) ,Max( MUC,Max( ( CS * MUR ),MLU ) ) ) )", "obj1": 0.9481037924151696, "obj2": 0.02277027269413728}, {"determining": "( Max( AMS,RRS ) - ( Max( ( BR - FirstVNF_RAM ),Max( ( ( MDR - RRS ) * FirstVNF_Mem ),FirstVNF_RAM ) ) * BR ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / MUM ) - Min( RRSe ,MLU ) ) * CS ) / ( CS / ( MLU - MUR ) ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.4448420615678369}, {"determining": "( ( ( Const - ARS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( ( FirstVNF_Mem_Server * CRS ) * ( DDR - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( MUR * ( CS / ( MUM - MUC ) ) ) / Min( MUM ,RMSe ) ) * MUR ) ,MUR ),( ( ( MUC / RRSe ) + RCSe ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.41916167664670656, "obj2": 0.46343074969982345}, {"determining": "Max( Max( RRS,Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( FirstVNF_CPU_Server,( Min( MDR ,ARS ) * FirstVNF_RAM ) ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( MUR - ( CS - Max( MUC,( ( MUR * MUM ) + CS ) ) ) ) + MUR ) ) - ( CS * RMSe ) )", "obj1": 0.35129740518962077, "obj2": 0.5525507385718978}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( AMS + Max( FirstVNF_RAM_Server,ARS ) ) ) ,Min( ( ( ( ACS / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * CS ) / ( ( ( DS / ( DS / MUC ) ) / ( RCSe / ( RMSe + RMSe ) ) ) / MUR ) ) ) )", "obj1": 0.24550898203592814, "obj2": 0.6949377358205527}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_Mem ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RCSe * RRSe ) + ( MUC / MLU ) ) ) ),MLU ) ) )", "obj1": 0.6227544910179641, "obj2": 0.2242764914495504}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Min( DDR ,Const ) - ( ( FirstVNF_Mem - PN ) + PN ) ) )", "choosing": "( ( MUR / ( ( MUR + MUM ) / ( Max( ( MLU / RMSe ),MUC ) / MUR ) ) ) - ( CS * RMSe ) )", "obj1": 0.3592814371257485, "obj2": 0.5441113312464697}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,MRS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Max( MUM,MUC ) / ( ( MUM * MUR ) * ( DS + RRSe ) ) ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( RCSe * RRSe ) + ( MUC / MLU ) ) ) ),MLU ) ) )", "obj1": 0.6227544910179641, "obj2": 0.2242764914495504}, {"determining": "( ( PN + ACS ) - ( Min( ( ( MDR / AMS ) * Min( ( ( Const * FirstVNF_CPU ) + FirstVNF_RAM ) ,( Max( Const,ARS ) * Min( Min( PN ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,Const ) / RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MLU + ( ( ( ( RCSe - MLU ) / MLU ) / MUM ) + MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06048887910030078}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + CS ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.26063398562929585}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,ACS ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( CS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.26746506986027946, "obj2": 0.6714823218213135}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * FirstVNF_RAM ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( MUR / ( MUM / MUM ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09684867833709336}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - Max( Max( RRS,( ARS - PN ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - ARS ),MDR ) )", "choosing": "( Min( ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( ( RRSe - CS ) - RCSe ) ,DS ) * MUC ) ) / DS )", "obj1": 0.8023952095808383, "obj2": 0.0736712256004729}, {"determining": "Max( FirstVNF_CPU_Server,( CRS - ( DDR + ( ( MDR * FirstVNF_Mem ) - Max( CRS,MDR ) ) ) ) )", "choosing": "( ( MUR / DS ) - Min( Max( ( CS * RMSe ),( ( MUM / RRSe ) * CS ) ) ,Max( MUC,Max( DS,( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6612835295347558}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( MDR,Min( BR ,FirstVNF_Mem ) ) ),FirstVNF_CPU ) ),( ( Const + RRS ) - ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,ARS ) * MRS ) ) / FirstVNF_CPU ) ) ) + MDR ) )", "choosing": "Min( ( ( RCSe + ( RRSe - RCSe ) ) / ( Max( ( MUM + MUC ),DS ) / ( ( ( ( RCSe / ( RRSe - MLU ) ) + DS ) / MUR ) - CS ) ) ) ,Max( ( Max( MUM,MUC ) / MUR ),Max( ( ( ( MUM - MUR ) + ( MUM * CS ) ) * Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.8303393213572854, "obj2": 0.061549976537421794}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + Min( FirstVNF_RAM ,( MDR + Const ) ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ACS * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / Min( ( Max( Max( BR,BR ),FirstVNF_RAM ) * Const ) ,MDR ) ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( Max( Min( ( ( MUM * MUR ) * ( DS + RRSe ) ) ,( ( MUR + MUM ) - CS ) ),MUC ) / ( CS * MUR ) ),( MUC / MUC ) ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.28542914171656686, "obj2": 0.6466759690518734}, {"determining": "( Max( Min( CRS ,DDR ),RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( DS / RRSe ),CS ) * MUC ) + ( Min( MUC ,MUM ) + Max( Min( DS ,CS ),Min( ( MLU * DS ) ,Min( RMSe ,MLU ) ) ) ) ) ,RRSe ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5588822355289421, "obj2": 0.2665148243724255}, {"determining": "( ( PN + ACS ) - ( Max( ( ( ( FirstVNF_Mem - PN ) + PN ) / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( Max( MUM,( RMSe / ( MUR / DS ) ) ) ,Max( MUC,( ( MUR + MUM ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8862275449101796, "obj2": 0.041781608973894074}, {"determining": "( ( ( ( MDR - ARS ) * ( ( Min( ACS ,( RRS + FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / Min( ( PN + FirstVNF_RAM_Server ) ,BR ) ) ) - RRS ) ) * ( CRS - MRS ) ) * ( Min( ( ( AMS + Max( FirstVNF_RAM_Server,ARS ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RCSe ) + Max( RRSe,MLU ) ) / ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + MUR ) ) - CS ) + ( ( MUR + DS ) - ( CS - ( DS / Max( MUC,( MUR / DS ) ) ) ) ) ) + ( RCSe * CS ) )", "obj1": 0.9860279441117764, "obj2": 0.00401718592051119}, {"determining": "( ( Max( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ( MDR - ARS ) * ( ( Max( PN,Min( Const ,BR ) ) * FirstVNF_RAM_Server ) - RRS ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( DS + RMSe ),Min( DS ,Min( RMSe ,MUC ) ) ) + MLU ) / DS ),( Max( Min( Min( DS ,( MUC - CS ) ) ,RRSe ),Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ) ) + MUR ) )", "obj1": 0.27944111776447106, "obj2": 0.6545740901436083}, {"determining": "Max( Min( Min( ( ARS / ACS ) ,( AMS + Max( FirstVNF_RAM_Server,ARS ) ) ) ,Min( ( ( ( FirstVNF_CPU_Server / RRS ) - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( CRS - PN ) * RRS ) ) / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ),Max( Max( Min( ACS ,( RRS + FirstVNF_RAM ) ),AMS ),FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( Min( ( DS + RMSe ) ,MUM ) + ( ( RCSe * CS ) / ( ( ( DS / Max( MUC,RRSe ) ) / ( ( MUR + DS ) / ( RMSe + RMSe ) ) ) / MUR ) ) ) )", "obj1": 0.2435129740518962, "obj2": 0.6952138617744407}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) - RCSe ) * Min( DS ,DS ) ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,( RMSe * DS ) ) ) - Max( MLU,MUC ) ) ,Min( ( ( Min( ( MUC + CS ) ,MLU ) + DS ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9201596806387226, "obj2": 0.03614212807413028}, {"determining": "( ( ( Max( AMS,( ( Min( FirstVNF_CPU ,ARS ) - ( Max( MDR,FirstVNF_RAM_Server ) * MRS ) ) / FirstVNF_CPU ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.5449101796407185, "obj2": 0.2782259769228131}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.34930139720558884, "obj2": 0.562224576442261}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( ( FirstVNF_Mem * MRS ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + ( MUR / RRSe ) ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( MLU * RRSe ) ) )", "obj1": 0.2654690618762475, "obj2": 0.6795550374919429}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * Max( FirstVNF_RAM_Server,ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ) + ( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.9041916167664671, "obj2": 0.038239948667340616}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) / Min( Min( FirstVNF_Mem ,ACS ) ,( FirstVNF_Mem * MDR ) ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( RCSe - RCSe ),MLU ) ) )", "obj1": 0.7704590818363274, "obj2": 0.08925676307982461}, {"determining": "Max( Max( RRS,Min( ( ( AMS + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * Max( CRS,FirstVNF_RAM ) ) ) ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,Min( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) ,( ACS / BR ) ) ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( ( ( RCSe - RCSe ) / ( ( MUM + RRSe ) * MUM ) ) + MUM ) ) + MUR ) ) - ( ( ( ( Min( MUM ,RCSe ) / RCSe ) + ( ( ( MUR + RMSe ) - MLU ) - MUC ) ) + RMSe ) * DS ) )", "obj1": 0.36127744510978044, "obj2": 0.537845632419857}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - Max( ( ( ( Const / MDR ) + PN ) - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe / RMSe ) - RMSe ) * CS ) / ( CS / MUR ) ) - DS ) + Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + MUM )", "obj1": 0.42714570858283435, "obj2": 0.46239805835015685}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( AMS,FirstVNF_Mem ) - ARS ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( MUM + CS ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.812375249500998, "obj2": 0.06779245323681587}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * ( PN + CRS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( RRSe - ( MUM * MUR ) ),MLU ) ) )", "obj1": 0.9221556886227545, "obj2": 0.030732669609168546}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( ARS - PN ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( ( ( RMSe + DS ) - MUC ) / DS )", "obj1": 0.7564870259481038, "obj2": 0.1069098223649827}, {"determining": "Min( ( ( ( ( Min( BR ,FirstVNF_CPU ) / RRS ) + ( ( AMS + DDR ) - ( CRS - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + PN ) - ( Min( AMS ,FirstVNF_Mem_Server ) - RRS ) ) ,( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + MDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,MLU ) - ( ( DS - MUM ) / RMSe ) ) * ( ( ( ( MLU * ( Max( CS,CS ) / MUR ) ) * RRSe ) * ( ( MLU - RCSe ) / ( ( ( RRSe - MUR ) / MUM ) - Min( MUC ,( MUR / MLU ) ) ) ) ) * ( ( MLU / MUR ) - Min( ( MUR + MLU ) ,( MUM - MUC ) ) ) ) ) / ( ( ( ( MUC * RRSe ) - MUC ) + CS ) + MUR ) )", "obj1": 0.36726546906187624, "obj2": 0.533047113626161}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - Max( ( DDR / ( ARS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( RRSe - CS ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5708582834331337, "obj2": 0.25553636174071925}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( DDR ,Const ) - Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MLU ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5389221556886228, "obj2": 0.28731636423740525}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( Min( ARS ,MRS ) + PN ) ,Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( RMSe + Max( ( RRSe - MUC ),MLU ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8502994011976048, "obj2": 0.05724350939129526}, {"determining": "( ( PN + ACS ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ),( MRS - ( Max( AMS,FirstVNF_Mem ) - ( DDR - Const ) ) ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM * MUC ) / MUR ),Max( ( CS * ( ( RCSe * RRSe ) - ( ( Max( RRSe,MUM ) / RCSe ) + RRSe ) ) ),MLU ) ) )", "obj1": 0.6047904191616766, "obj2": 0.2384418058979154}, {"determining": "( ( Max( ACS,Max( AMS,RRS ) ) * ( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( Min( ARS ,( ( CRS + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC / DS ),Min( MLU ,Min( ( MUM / CS ) ,Min( Max( ( DS / Min( RRSe ,CS ) ),MLU ) ,( ( Max( MUR,DS ) + Max( MUM,DS ) ) * Min( ( CS / MUR ) ,MUR ) ) ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6596303313227815}, {"determining": "Max( Max( RRS,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( MUC / MUR ) - ( ( ( ( Max( MUM,MUR ) * RCSe ) + RMSe ) * Max( Max( ( MUR / MUR ),RMSe ),RCSe ) ) / MLU ) ) / RCSe ) )", "obj1": 0.29141716566866266, "obj2": 0.6450398011108835}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( Max( MUC,CS ) / MUR ) ,( Min( ( CS / MUC ) ,DS ) * Max( RMSe,RCSe ) ) ),MLU ) ) )", "obj1": 0.7964071856287425, "obj2": 0.07792219211915054}, {"determining": "( PN - Max( ( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * Max( ( DDR - FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) - PN ),MDR ) )", "choosing": "( Max( ( CS * MUR ),MLU ) / DS )", "obj1": 0.7305389221556886, "obj2": 0.1195980513664011}, {"determining": "( ( Max( ACS,( FirstVNF_Mem + AMS ) ) * ( ( ( FirstVNF_CPU + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( Min( ARS ,( ( FirstVNF_Mem_Server + CRS ) - PN ) ) - ACS ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU_Server + DDR ),Min( BR ,FirstVNF_Mem ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Min( FirstVNF_RAM ,RRS ) + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUC / CS ) - Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ) ),( Min( MUC ,( MUR + DS ) ) / RMSe ) ) / CS ) / DS ),Min( MLU ,( ( CS * RMSe ) * RRSe ) ) )", "obj1": 0.2954091816367265, "obj2": 0.6400131686591645}, {"determining": "( ( PN + ACS ) - ( Min( RRS ,FirstVNF_RAM_Server ) + AMS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,( ( MUR + MUM ) / Max( Min( ( Max( MUC,CS ) / MUR ) ,( ( MUC / MUC ) * Max( RMSe,RCSe ) ) ),( Max( MLU,( CS - ( RMSe + MUR ) ) ) + DS ) ) ) ) )", "obj1": 0.8542914171656687, "obj2": 0.05549179731088907}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) - ( ( MDR + Max( BR,( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) ) ) + PN ) ) * FirstVNF_CPU ) - ( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM + AMS ) ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) - RCSe ) * ( ( ( RRSe + DS ) - CS ) + RRSe ) ) - ( MUR + RCSe ) )", "obj1": 0.9560878243512974, "obj2": 0.015813007270924707}, {"determining": "( ( PN + ACS ) - ( Max( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + ( MRS * CRS ) ) ) ,( Const * FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( ( MUC * RRSe ) - MUC ) + CS ),Max( Max( ( MUR / Max( DS,( CS - Max( RMSe,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.7884231536926147, "obj2": 0.08254351034158651}, {"determining": "Max( Max( RRS,( MDR - ( FirstVNF_CPU / Const ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUM + MLU ) - ( CS - MLU ) ) + MUR ) ) - CS )", "obj1": 0.38323353293413176, "obj2": 0.5252855265519334}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + PN ) ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,AMS ) ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU - FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( MUR * CS ) ,Max( MUC,( Min( ( ( MUM / ( ( CS * MUC ) - RRSe ) ) / RCSe ) ,RMSe ) / Max( MUM,MUR ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.05187263498834227}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / Min( Min( ( ( FirstVNF_Mem - PN ) + RRS ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,ACS ) ) ) ,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( MUM + MUC ) + ( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.9001996007984032, "obj2": 0.040442645865681165}, {"determining": "( ( PN + ( ARS / FirstVNF_Mem_Server ) ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( Max( Const,FirstVNF_Mem_Server ) - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ),( MRS * CRS ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( MLU,( CS / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9520958083832335, "obj2": 0.02061854677340751}, {"determining": "( ( PN + ( ARS / FirstVNF_Mem_Server ) ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Max( ( MUR / Max( DS,( Max( RRSe,CS ) - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.9620758483033932, "obj2": 0.015078522248183677}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( Min( DDR ,Const ) - Max( Min( FirstVNF_CPU ,MDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( CS / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MLU ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5528942115768463, "obj2": 0.27367282310202773}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - FirstVNF_RAM ) ),ARS ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( Min( MLU ,MUM ) - RCSe ),Max( ( ( ( Min( MUC ,Max( MUC,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.872255489021956, "obj2": 0.04796881401652372}, {"determining": "( ( PN + Max( Const,FirstVNF_Mem_Server ) ) - ( Max( ARS,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_Mem - PN ) + PN ) ) ,( Const * Max( FirstVNF_Mem_Server,AMS ) ) ) - PN ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUM,( Max( ( MUR / ( MUR - CS ) ),( CS / ( RCSe / MUR ) ) ) / ( MUM / MUM ) ) ) )", "obj1": 0.7764471057884231, "obj2": 0.084963992258608}, {"determining": "( ( PN + ACS ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * ARS ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( ( ( MUC * RRSe ) - MUC ) + CS ),Max( Max( ( MUR / Max( DS,( CS - Max( MUC,RCSe ) ) ) ),Min( MLU ,MUR ) ),MLU ) ) )", "obj1": 0.8622754491017964, "obj2": 0.0532043388017164}, {"determining": "( ( ( ( MDR - ARS ) * ( ACS - ( Min( FirstVNF_RAM ,( Const * RRS ) ) / MDR ) ) ) * ( CRS - MRS ) ) * ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUC,RRSe ) + RCSe ) + Min( ( Max( ( MUM - Min( MUC ,Min( Max( DS,DS ) ,RCSe ) ) ),Min( MLU ,( RMSe * DS ) ) ) - Max( MLU,MUC ) ) ,Min( ( ( MLU + ( CS + MUM ) ) - Max( DS,( MUM - ( Min( MLU ,MUC ) + ( MLU - RMSe ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.00851855086548578}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - ( RRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5568862275449101, "obj2": 0.2700029796681939}, {"determining": "( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( AMS - Max( ( DDR / ( FirstVNF_RAM / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( ( MUR / Max( ( ( RRSe - CS ) / ( MUR - MUR ) ),Max( MUC,CS ) ) ),Min( MLU ,MUR ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( ( Max( ( ( MUM + RCSe ) / ( MUR - MUR ) ),( ( RRSe + RRSe ) / ( RCSe / MUR ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.2746369415512065}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - Max( Max( RRS,( ARS - PN ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( ( ( MUR + DS ) - ( CS - ( CS * RMSe ) ) ) + ( MUM - Min( DS ,DS ) ) ) ,( Min( ( MLU - Min( Max( ( MLU - CS ),CS ) ,RMSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ) * MUC ) ) / DS )", "obj1": 0.7624750499001997, "obj2": 0.10319726510859065}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ACS ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,( MRS - Const ) ) - Min( Const ,FirstVNF_RAM ) ) ) ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( DDR - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR + DS ) - Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ) ),DS )", "obj1": 0.9920159680638723, "obj2": 0.0029701977950816975}, {"determining": "( ( PN + ACS ) - ( Max( ( DDR / ( ACS - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / ( Const / MRS ) ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( ( Min( MUC ,Max( RMSe,MLU ) ) - RCSe ) * Min( DS ,DS ) ) + RCSe ),MLU ) ) )", "obj1": 0.8802395209580839, "obj2": 0.04227760221745249}, {"determining": "( ( PN + Max( RRS,( ARS - PN ) ) ) - ( Max( Max( Max( RRS,( ARS - PN ) ),Max( Const,FirstVNF_CPU ) ),( MRS - FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( Max( Min( ( ( RRSe * Min( DS ,DS ) ) + Max( MUR,MLU ) ) ,CS ),MLU ),Max( ( ( ( MUM - MUR ) + ( MUM * CS ) ) * ( ( RCSe + CS ) * ( RCSe / MUR ) ) ),MLU ) ) )", "obj1": 0.8163672654690619, "obj2": 0.06541048366238016}, {"determining": "Max( Min( BR ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUR / ( ( ( MUR + DS ) - ( CS - ( CS * ( ( RCSe * RRSe ) - DS ) ) ) ) + MUR ) ) - CS )", "obj1": 0.37325349301397204, "obj2": 0.5316799605094934}, {"determining": "( ( PN + ( ARS / FirstVNF_Mem_Server ) ) - ( Max( ( Max( FirstVNF_Mem_Server,( AMS - Max( RRS,FirstVNF_Mem_Server ) ) ) / ( Max( Const,FirstVNF_Mem_Server ) - ( Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) / MDR ) ) ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( ( ( MUM + RCSe ) / ( MUR - CS ) ),( CS / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012099062625760337}, {"determining": "( PN - Max( ( ( MDR * ( FirstVNF_CPU - ARS ) ) - Max( ( ( Min( FirstVNF_CPU ,ARS ) - ( Max( FirstVNF_CPU_Server,MDR ) * MRS ) ) / FirstVNF_CPU ),MDR ) ),MDR ) )", "choosing": "( Min( ( RMSe + ( MUM - Min( DS ,DS ) ) ) ,MUR ) / DS )", "obj1": 0.7245508982035929, "obj2": 0.1226912506400353}, {"determining": "( ( ( Max( AMS,( Min( MDR ,ARS ) / FirstVNF_CPU ) ) / Min( MRS ,MRS ) ) - Const ) / ( RRS + ( Max( AMS,RRS ) - Max( FirstVNF_Mem_Server,( AMS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - PN ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUM / ( ( MUR + ( RCSe / MUC ) ) - CS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + ( MUR * ( ( MUR * MUM ) * ( RCSe / MUR ) ) ) ) / ( MUR - MUR ) ) ) / Min( MLU ,CS ) )", "obj1": 0.405189620758483, "obj2": 0.4880557104046681}]}