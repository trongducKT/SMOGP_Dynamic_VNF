{"1": [{"determining": "( Min( BR ,FirstVNF_RAM_Server ) + Min( AMS ,MRS ) )", "choosing": "( ( DS - MUR ) + ( RRSe + RRSe ) )", "obj1": 0.5101626016260162, "obj2": 0.39529282923847153}, {"determining": "( ( BR * RRS ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,RRSe ) / ( DS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * RRSe ) )", "obj1": 0.5813008130081301, "obj2": 0.2866068734950799}, {"determining": "Max( Min( CRS ,FirstVNF_RAM ),( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MUR,DS ) * ( MUC + MLU ) )", "obj1": 0.4186991869918699, "obj2": 0.484295213912855}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.43089430894308944, "obj2": 0.4456701916206391}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "Min( ( DS - RRSe ) ,( MUM + CS ) )", "obj1": 0.3617886178861789, "obj2": 0.5369407714922647}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( ( MUC - MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( RCSe * MUR ) + Max( MUR,CS ) )", "obj1": 0.39634146341463417, "obj2": 0.5117062318345171}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe * DS ) )", "obj1": 0.5691056910569106, "obj2": 0.32283548586442906}, {"determining": "Min( Max( RRS,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RMSe - MUM ) )", "obj1": 0.3719512195121951, "obj2": 0.5326845113151849}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "Min( Max( ( BR - BR ),Max( FirstVNF_RAM,DDR ) ) ,( Min( ACS ,DDR ) - Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Max( MUR,RRSe ) / ( MUR - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - ARS ) * Max( FirstVNF_CPU_Server,CRS ) ) + ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_RAM_Server ,DDR ) ) )", "choosing": "( Max( ( MUC / RRSe ),( MUR + MLU ) ) / Max( Min( CS ,RCSe ),( DS - MUM ) ) )", "obj1": 0.5487804878048781, "obj2": 0.357855903442181}, {"determining": "( ( ( MRS * AMS ) - ACS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) - ( Max( AMS,FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUC / MUR ) ) / Min( ( MUM * MUC ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),( RRSe / MLU ) ) )", "obj1": 0.32723577235772355, "obj2": 0.5374174424998421}, {"determining": "Min( ( RRS * RRS ) ,( ( MRS + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) )", "obj1": 0.5264227642276422, "obj2": 0.3799193852969386}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_Mem ),( RRS * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS * ( MUR * RMSe ) ),Max( MUR,( DS * CS ) ) )", "obj1": 0.40447154471544716, "obj2": 0.4923713033864249}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_CPU ) ) + ( MRS / DDR ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / Max( MLU,RMSe ) ) )", "obj1": 0.2621951219512195, "obj2": 0.6143039367522206}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( MUC / RMSe ) / ( MUR + MLU ) ) )", "obj1": 0.24796747967479674, "obj2": 0.624493649153538}, {"determining": "Min( ( Min( ACS ,MRS ) - ( DDR + FirstVNF_CPU ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( Max( DS,RRSe ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * AMS ) ) * Max( AMS,ACS ) )", "choosing": "Min( Min( DS ,Max( RCSe,MLU ) ) ,( DS * RMSe ) )", "obj1": 0.5589430894308943, "obj2": 0.3321613087879878}, {"determining": "( ( ( ( CRS + CRS ) - ( AMS / FirstVNF_RAM_Server ) ) - ( ( PN + FirstVNF_CPU_Server ) + ( MDR / PN ) ) ) + ( ( ( PN - ACS ) - ( FirstVNF_CPU_Server + MDR ) ) / ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR * MUC ) / ( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + RRSe ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( Min( CS ,MUC ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.21138211382113822, "obj2": 0.6473212053744019}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) )", "obj1": 0.18495934959349594, "obj2": 0.7022313767508018}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( BR - DDR ) ) / Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU_Server - Const ) ) ) * Max( ( ( FirstVNF_CPU * AMS ) - ( Const + ARS ) ),Max( ( FirstVNF_CPU / CRS ),( RRS * PN ) ) ) )", "choosing": "Max( Min( DS ,( MUR + ( CS / MUR ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + BR ) * ( RRS - FirstVNF_Mem ) ) / ( ( RRS * FirstVNF_Mem_Server ) + ( PN + FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,ARS ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM / MDR ) / Max( AMS,RRS ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - ( MUR * MUR ) ) * ( Min( RCSe ,MUC ) - Max( RCSe,RMSe ) ) ) - Min( Max( ( MLU * RCSe ),( MUR + MUR ) ) ,( Max( RRSe,RCSe ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "Max( ( ( Max( RRS,AMS ) * ( MDR - DDR ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,( BR - RRS ) ) ),( Max( ( Const / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_CPU / RRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Max( MUR,( DS + MLU ) ) * Max( ( MUC * MLU ),CS ) ),( ( ( RCSe - MLU ) - CS ) / MLU ) )", "obj1": 0.5060975609756098, "obj2": 0.4175611962497498}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,( CRS - FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( MDR ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ( ( MRS + BR ) * ( RRS - FirstVNF_Mem ) ) / ( ( RRS * FirstVNF_Mem_Server ) + ( PN + FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,ARS ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM / MDR ) / Max( AMS,RRS ) ) ) )", "choosing": "Min( ( MUC / MLU ) ,( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,RRSe ) / ( DS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( MUR - DS ) - ( DS * CS ) )", "obj1": 0.7804878048780488, "obj2": 0.1590880679773911}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( ( MUC - MUM ) * Min( DS ,MLU ) )", "obj1": 0.9166666666666666, "obj2": 0.08208297836871319}, {"determining": "( ( BR * Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) ) - Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.24390243902439024, "obj2": 0.6105399758143578}, {"determining": "Min( ( ( ( Min( PN ,FirstVNF_Mem ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) - DDR ) ,( AMS * Const ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) )", "obj1": 0.6280487804878049, "obj2": 0.27090323549211587}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( RRS * FirstVNF_CPU ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Max( MUC,MUM ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6992827039121385}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( MLU - ( MLU - ( RRSe - RMSe ) ) ) - MUM ) * Min( DS ,MLU ) )", "obj1": 0.6808943089430894, "obj2": 0.23115658994134927}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ACS - PN ) ) / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( DS + ( RRSe * DS ) )", "obj1": 0.7032520325203252, "obj2": 0.20552955716379745}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( RRS * RRS ) ,( ( MRS + FirstVNF_Mem_Server ) * PN ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( MDR ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe * MUR ) ) ) ) )", "obj1": 0.9410569105691057, "obj2": 0.0441420429256533}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.7703252032520326, "obj2": 0.18352764610474007}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( Min( CS ,MUC ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.21138211382113822, "obj2": 0.6473212053744019}, {"determining": "( ( PN + ARS ) * ( MDR + RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.39227642276422764, "obj2": 0.44754550130875576}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS - RCSe ) )", "obj1": 0.1951219512195122, "obj2": 0.6730386395222647}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.4024390243902439, "obj2": 0.4334421804257302}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * RRSe ) )", "obj1": 0.5813008130081301, "obj2": 0.2866068734950799}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "Min( ( DS - RRSe ) ,( MUM + CS ) )", "obj1": 0.37601626016260165, "obj2": 0.5032461796727622}, {"determining": "Min( ( RRS * RRS ) ,( ( MRS + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) )", "obj1": 0.4715447154471545, "obj2": 0.4272810608589145}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_CPU ) ) + ( MRS / DDR ) )", "choosing": "( ( DS - MUR ) + ( RRSe + RRSe ) )", "obj1": 0.5426829268292683, "obj2": 0.3555483879445165}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) + Min( AMS ,( MDR + ACS ) ) )", "choosing": "( ( DS - MUR ) + ( ( ( MUC - RCSe ) / RCSe ) * MLU ) )", "obj1": 0.34146341463414637, "obj2": 0.5217646468798203}, {"determining": "Min( ( RRS * RRS ) ,( ( MRS + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) )", "obj1": 0.5264227642276422, "obj2": 0.3799193852969386}, {"determining": "Min( ( RRS * RRS ) ,( ( MRS + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),( RRSe / MUM ) ) )", "obj1": 0.3130081300813008, "obj2": 0.540946314426023}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "Min( ( MUC - ( MUR / MUR ) ) ,( MLU - ( MLU - ( RRSe + RMSe ) ) ) )", "obj1": 0.9247967479674797, "obj2": 0.07312443433447624}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.5467479674796748, "obj2": 0.32656324983940005}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS - CS ) / ( ( RCSe / MLU ) * RRSe ) )", "obj1": 0.3699186991869919, "obj2": 0.5066157791113631}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / RMSe ) / ( MUR + MLU ) ) )", "obj1": 0.483739837398374, "obj2": 0.38701984649494336}, {"determining": "Max( Min( CRS ,FirstVNF_RAM ),( FirstVNF_CPU_Server - ARS ) )", "choosing": "Min( Min( DS ,Max( RCSe,MLU ) ) ,( DS * RMSe ) )", "obj1": 0.5772357723577236, "obj2": 0.31314909261351404}, {"determining": "( ( BR / FirstVNF_CPU ) / Min( PN ,FirstVNF_Mem ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * DS ) )", "obj1": 0.47560975609756095, "obj2": 0.4184267469815227}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),( RRSe / MLU ) ) )", "obj1": 0.32723577235772355, "obj2": 0.5374174424998421}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_Mem_Server,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( Max( MLU,DS ) * ( MUC + MLU ) )", "obj1": 0.9878048780487805, "obj2": 0.00811153552421215}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * RRSe ) )", "obj1": 0.4817073170731707, "obj2": 0.3896675806139437}, {"determining": "( ( PN + ARS ) * ( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "Max( ( DS + Min( CS ,MUC ) ),( MUM + MLU ) )", "obj1": 0.9878048780487805, "obj2": 0.00811153552421215}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe * DS ) )", "obj1": 0.5691056910569106, "obj2": 0.32283548586442906}, {"determining": "Min( ( RRS * Min( ACS ,FirstVNF_Mem ) ) ,( ( MRS + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / ( MUR + MUR ) ) ) )", "obj1": 0.5264227642276422, "obj2": 0.3799193852969386}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.9939024390243902, "obj2": 0.004090347852741202}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe * RRSe ) )", "obj1": 0.5691056910569106, "obj2": 0.32283548586442906}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.004357589474176248}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( ( MUC - MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR - BR ),Max( FirstVNF_RAM,DDR ) ) ,( Min( ACS ,DDR ) - Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Max( MUR,RRSe ) / ( MUR - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * AMS ) - ACS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) - ( Max( AMS,FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUC / MUR ) ) / Min( ( MUM * MUC ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,MRS ) - ( DDR + FirstVNF_CPU ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( Max( DS,RRSe ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + CRS ) - ( AMS / FirstVNF_RAM_Server ) ) - ( ( PN + FirstVNF_CPU_Server ) + ( MDR / PN ) ) ) + ( ( ( PN - ACS ) - ( FirstVNF_CPU_Server + MDR ) ) / ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR * MUC ) / ( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + RRSe ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( BR - DDR ) ) / Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU_Server - Const ) ) ) * Max( ( ( FirstVNF_CPU * AMS ) - ( Const + ARS ) ),Max( ( FirstVNF_CPU / CRS ),( RRS * PN ) ) ) )", "choosing": "Max( Min( DS ,( MUR + ( CS / MUR ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + BR ) * ( RRS - FirstVNF_Mem ) ) / ( ( RRS * FirstVNF_Mem_Server ) + ( PN + FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,ARS ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM / MDR ) / Max( AMS,RRS ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - ( MUR * MUR ) ) * ( Min( RCSe ,MUC ) - Max( RCSe,RMSe ) ) ) - Min( Max( ( MLU * RCSe ),( MUR + MUR ) ) ,( Max( RRSe,RCSe ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,( CRS - FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( MDR ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_CPU ) - ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( BR - DDR ) ) / Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU_Server - Const ) ) ) * Max( ( ( FirstVNF_CPU * AMS ) - ( Const * ARS ) ),Max( ( FirstVNF_CPU / CRS ),( RRS * PN ) ) ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + BR ) * ( RRS - FirstVNF_Mem ) ) / ( ( RRS * FirstVNF_Mem_Server ) + ( PN + FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,ARS ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM / MDR ) / Max( AMS,RRS ) ) ) )", "choosing": "Min( ( MUC / MLU ) ,( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( Min( Min( ( ( AMS * AMS ) - Max( FirstVNF_CPU,Const ) ) ,( Min( Const ,MRS ) + ( MDR - FirstVNF_Mem ) ) ) ,Max( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM ),Max( FirstVNF_RAM_Server,MRS ) ),( ( CRS * CRS ) + ( ARS * BR ) ) ) ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( Max( ( ( DS * MUR ) * ( MLU * MUC ) ),Max( ( MUM - CS ),Max( CS,MLU ) ) ),Min( ( ( MUM - CS ) * Max( MUC,CS ) ) ,( Min( MUM ,RMSe ) - ( CS / RCSe ) ) ) ) - Min( ( ( ( MUC - RRSe ) / Max( RCSe,RCSe ) ) * Min( ( MUC + CS ) ,( RCSe / DS ) ) ) ,Min( Max( ( MUM / RRSe ),( MUC - MUM ) ) ,( ( RCSe * RRSe ) / ( MLU * RCSe ) ) ) ) ) * ( Min( Min( ( ( MLU / MUM ) - Min( RCSe ,RRSe ) ) ,( Max( RMSe,RRSe ) / Min( RRSe ,MUC ) ) ) ,Max( ( ( RRSe - RCSe ) + ( CS - MLU ) ),( Min( MUR ,RRSe ) - ( RCSe - DS ) ) ) ) + ( ( ( Min( MLU ,DS ) * ( CS * RRSe ) ) / ( Min( MUM ,RMSe ) / Min( RRSe ,RCSe ) ) ) - Max( ( ( MUR / MLU ) - ( MUM + MLU ) ),( Max( RMSe,RMSe ) - Max( RRSe,DS ) ) ) ) ) ),( ( ( ( ( Max( MUC,RRSe ) + ( RCSe + MUR ) ) - ( ( MUM * RMSe ) * ( MUM + RMSe ) ) ) - ( ( Min( DS ,RMSe ) - ( MUC * RRSe ) ) + ( ( RCSe * MLU ) - ( MLU + MUM ) ) ) ) / Max( ( Max( ( DS / DS ),Min( RCSe ,RMSe ) ) - ( ( CS * RMSe ) + Max( DS,RMSe ) ) ),Max( Max( ( DS * RRSe ),( RCSe / DS ) ),( Min( MLU ,RCSe ) - Min( MUC ,MUC ) ) ) ) ) - ( ( Min( Max( ( MLU + MUC ),( MLU - MUC ) ) ,Min( ( MUC + RCSe ) ,( MUM - MLU ) ) ) * ( ( ( MLU - MUR ) / Max( RCSe,DS ) ) - Max( Min( DS ,RMSe ),( MLU + MUR ) ) ) ) - ( Min( Max( ( RMSe - RRSe ),( MUR * RMSe ) ) ,( ( MLU / MUC ) - ( MUC / RMSe ) ) ) / ( ( ( MUC * RRSe ) - ( MUM * MUC ) ) + Max( ( MUM * MUR ),Max( MUC,DS ) ) ) ) ) ) ) * Max( ( ( ( Min( ( Min( MUC ,RMSe ) - ( RCSe + MUM ) ) ,( Min( MLU ,CS ) + Min( CS ,RCSe ) ) ) + ( ( Max( RCSe,MUR ) * ( RCSe + MLU ) ) - ( Max( MUC,DS ) * ( CS * MUR ) ) ) ) - Max( ( ( Max( MLU,RMSe ) + Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) / ( MUM + CS ) ) ),Max( ( ( MUM * DS ) * ( MLU + MLU ) ),( ( DS * MUR ) / ( RMSe - DS ) ) ) ) ) / ( ( ( ( ( CS - RRSe ) + ( RRSe - MLU ) ) / ( Max( MUR,MUM ) / ( MUR / MUM ) ) ) - ( ( ( DS * DS ) - Max( MLU,DS ) ) * ( ( MUC + CS ) * Min( CS ,RMSe ) ) ) ) + ( Min( ( ( CS + MLU ) * ( CS - RCSe ) ) ,Min( Max( MUC,DS ) ,( MUM * MUM ) ) ) - Min( ( Min( DS ,DS ) + ( RMSe - RCSe ) ) ,( ( MLU * RCSe ) - ( RMSe - MLU ) ) ) ) ) ),Min( ( ( Max( ( Max( RMSe,MUM ) * ( RMSe - MLU ) ),( Max( MUR,MUR ) + ( CS * DS ) ) ) + Min( ( ( MLU / MUR ) / Min( RRSe ,MUM ) ) ,Max( ( MLU + DS ),( MUR - MUC ) ) ) ) + ( Min( Min( ( CS / DS ) ,( RCSe - MUM ) ) ,Max( Min( DS ,MUC ),( DS / DS ) ) ) + ( ( ( MUC - CS ) + ( MLU / RCSe ) ) - ( ( MLU / RMSe ) + ( MLU * RMSe ) ) ) ) ) ,( ( ( ( ( RRSe - MUR ) + Max( MUM,MUM ) ) * ( ( RMSe - RCSe ) / ( RMSe - RMSe ) ) ) * Max( ( Max( DS,RRSe ) * ( MUR + MUM ) ),( ( RCSe + CS ) / Max( MUM,MUC ) ) ) ) + ( ( Max( Max( MUC,MLU ),( MUM + RCSe ) ) / ( Min( RCSe ,CS ) / Min( MUC ,MUR ) ) ) / ( ( ( RCSe / RMSe ) / ( RRSe * RMSe ) ) + ( Min( RCSe ,CS ) - ( MUC / MLU ) ) ) ) ) ) ) )", "obj1": 0.6178861788617886, "obj2": 0.2652075166082257}, {"determining": "Max( ( Min( AMS ,Const ) / CRS ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.34552845528455284, "obj2": 0.4740743952898237}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.6890243902439024, "obj2": 0.1982365255003237}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( CS * Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.3089430894308943, "obj2": 0.5185026954330402}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( ( Min( RRSe ,MUR ) - ( RRSe / MLU ) ) * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.8333333333333334, "obj2": 0.11988631278155154}, {"determining": "Max( Max( ( BR - BR ),Max( FirstVNF_RAM,DDR ) ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * Min( MUR ,( MUR + DS ) ) ) )", "obj1": 0.4532520325203252, "obj2": 0.4161049906242246}, {"determining": "( ( BR * Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) ) - Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.24390243902439024, "obj2": 0.6105399758143578}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - MDR )", "choosing": "( Max( DS,RRSe ) * Min( DS ,MLU ) )", "obj1": 0.6788617886178862, "obj2": 0.24328400889040822}, {"determining": "Max( ( FirstVNF_CPU * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + MLU )", "obj1": 0.1565040650406504, "obj2": 0.714665881201292}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.806910569105691, "obj2": 0.1520137071046314}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( MUR - DS ) - ( DS * CS ) )", "obj1": 0.7804878048780488, "obj2": 0.1590880679773911}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( FirstVNF_Mem + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / ( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9004065040650406, "obj2": 0.07149054859076492}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / MUM )", "obj1": 0.4817073170731707, "obj2": 0.37619596761195384}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ARS )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( ( ( DS - CS ) / ( RMSe * RRSe ) ) / MUM ) ) )", "obj1": 0.8638211382113821, "obj2": 0.09957599665131772}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * RRSe ) )", "obj1": 0.5813008130081301, "obj2": 0.2866068734950799}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( PN ,FirstVNF_Mem ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + MRS ) )", "choosing": "( ( DS - CS ) / ( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5691056910569106, "obj2": 0.29499566230765556}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) - ( DS * CS ) )", "obj1": 0.741869918699187, "obj2": 0.19019066671603213}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( FirstVNF_CPU_Server + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * ( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9654471544715447, "obj2": 0.02066233903408612}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( Min( ( Min( MUR ,DS ) * ( MUC / MUR ) ) ,MUC ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6429889774021837}, {"determining": "Max( ( ARS / ( FirstVNF_RAM_Server / FirstVNF_CPU ) ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( MUM + RMSe ) )", "obj1": 0.5060975609756098, "obj2": 0.3602874738119102}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.45934959349593496, "obj2": 0.39282769878322926}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),( RRSe / MLU ) ) )", "obj1": 0.7479674796747967, "obj2": 0.17964763556185318}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) * ( MUC / DS ) ) - Min( ( CS * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.4024390243902439, "obj2": 0.4334421804257302}, {"determining": "( ( BR * Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) ) - Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.24390243902439024, "obj2": 0.6105399758143578}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( MLU - ( MLU - ( RRSe - RMSe ) ) ) - MUM ) * Min( DS ,MLU ) )", "obj1": 0.6808943089430894, "obj2": 0.23115658994134927}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + Min( AMS ,( MDR + ACS ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * Max( ( MUC - DS ),( DS / DS ) ) ) )", "obj1": 0.16869918699186992, "obj2": 0.6968601582350699}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ARS + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( DS,MUM ) )", "obj1": 0.29065040650406504, "obj2": 0.5476726603242785}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS - RCSe ) )", "obj1": 0.1951219512195122, "obj2": 0.6730386395222647}, {"determining": "Max( ( ARS + BR ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.5467479674796748, "obj2": 0.32656324983940005}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( RRS * RRS ) ,( ( MRS + ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) * PN ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( MDR ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),( RRSe / MUM ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.06908503943705484}, {"determining": "( Max( FirstVNF_CPU_Server,( FirstVNF_CPU * FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.8516260162601627, "obj2": 0.1014759334756274}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( Min( CS ,MUC ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.21138211382113822, "obj2": 0.6473212053744019}, {"determining": "( Min( BR ,( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) ) ) + Min( AMS ,( MDR + ACS ) ) )", "choosing": "( ( DS - MUR ) + ( ( ( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) - RCSe ) / RCSe ) * MLU ) )", "obj1": 0.9369918699186992, "obj2": 0.05606061400245965}, {"determining": "( ( AMS - CRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUC - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30284552845528456, "obj2": 0.5282722913760891}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( RRS * RRS ) ,( ( MRS + FirstVNF_Mem_Server ) * PN ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS / ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.943089430894309, "obj2": 0.043798491024325155}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( ( RCSe - RRSe ) / ( DS - RCSe ) )", "obj1": 0.1951219512195122, "obj2": 0.6730386395222647}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.5467479674796748, "obj2": 0.32656324983940005}, {"determining": "( ( PN + ARS ) * Min( MDR ,RRS ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe * DS ) )", "obj1": 0.5365853658536586, "obj2": 0.3576715547249829}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_CPU ) ) + ( MRS / DDR ) )", "choosing": "( ( DS - MUR ) + ( RRSe + RRSe ) )", "obj1": 0.5426829268292683, "obj2": 0.3555483879445165}, {"determining": "Max( ( PN + ARS ),Min( MDR ,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.37398373983739835, "obj2": 0.4609736581846948}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) + Min( AMS ,( MDR + ACS ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RMSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.3902439024390244, "obj2": 0.4511599271237595}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( RRS * FirstVNF_CPU ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Max( MUC,MUM ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6992827039121385}, {"determining": "( ( PN + ARS ) * ( MDR + RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.39227642276422764, "obj2": 0.44754550130875576}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,FirstVNF_Mem ) * Max( Const,PN ) ) ) )", "choosing": "( Max( MUR,DS ) * ( ( ( MUM + RMSe ) + ( RRSe * DS ) ) + MLU ) )", "obj1": 0.983739837398374, "obj2": 0.01320289081309295}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( PN + ARS ) * Min( MDR ,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.37398373983739835, "obj2": 0.4609736581846948}], "4": [{"determining": "( MRS - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RRSe ) ) ) * Max( RCSe,( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( BR - DDR ) ) / Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU_Server - Const ) ) ) * Max( ( ( FirstVNF_CPU * AMS ) - ( Const * ARS ) ),Max( ( FirstVNF_CPU / CRS ),( RRS * PN ) ) ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "Max( ( ARS + FirstVNF_RAM ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.5040650406504065, "obj2": 0.3550238866541592}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.6890243902439024, "obj2": 0.1982365255003237}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( ( Min( RRSe ,MUR ) - ( RRSe / MLU ) ) * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.8333333333333334, "obj2": 0.11988631278155154}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.806910569105691, "obj2": 0.1520137071046314}, {"determining": "( Max( RRS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,CS ) / ( RMSe * DS ) )", "obj1": 0.8455284552845529, "obj2": 0.09704192275491208}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.12195121951219512, "obj2": 0.7027457973051124}, {"determining": "Max( ( PN + AMS ),Min( MDR ,RRS ) )", "choosing": "( ( DS - CS ) / ( ( DS + ( CS * Min( RRSe ,RCSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5365853658536586, "obj2": 0.3178526311369344}, {"determining": "Max( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ),Min( MDR ,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MLU - DS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.3434959349593496, "obj2": 0.5009143351594045}, {"determining": "( FirstVNF_RAM * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( ( DS + CS ) ,( MUM / MUM ) ) )", "obj1": 0.47560975609756095, "obj2": 0.3612286420525744}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - Max( FirstVNF_CPU,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS - CS ) / ( RMSe * ( ( MUR + DS ) - ( DS * CS ) ) ) )", "obj1": 0.6300813008130082, "obj2": 0.25850234137027644}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - MDR )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.42886178861788615, "obj2": 0.40803910469695603}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - MDR )", "choosing": "( Max( DS,RRSe ) * Min( DS ,MLU ) )", "obj1": 0.6788617886178862, "obj2": 0.24328400889040822}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( ( RCSe - RRSe ) / ( DS - RCSe ) )", "obj1": 0.16463414634146342, "obj2": 0.6896759615470285}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ARS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( DS,MUM ) ) - ( DS * CS ) )", "obj1": 0.2601626016260163, "obj2": 0.5893774334331173}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( FirstVNF_Mem + ( ( DDR / ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - RCSe ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( Max( ( MUR - CS ),( RCSe - RCSe ) ) * Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.8882113821138211, "obj2": 0.08823325192677184}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) - ( DS * CS ) )", "obj1": 0.741869918699187, "obj2": 0.19019066671603213}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( MLU - ( MLU - ( RRSe - RMSe ) ) ) - MUM ) * Min( DS ,MLU ) )", "obj1": 0.6808943089430894, "obj2": 0.23115658994134927}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.7784552845528455, "obj2": 0.15764552152508288}, {"determining": "Max( ( BR * DDR ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( ( ( ( ( MUM - RMSe ) + Max( CS,RMSe ) ) / ( ( MUM / MUM ) + Max( RRSe,DS ) ) ) + ( ( Min( RMSe ,MUC ) / Max( RCSe,RCSe ) ) + Max( Min( RCSe ,MLU ),( MUC / CS ) ) ) ) + ( ( ( ( MUC - CS ) + Max( MLU,MUM ) ) / Max( Min( RRSe ,MLU ),Max( CS,CS ) ) ) / Min( ( ( MLU + MLU ) - Max( MLU,MUR ) ) ,( Min( RMSe ,RMSe ) - ( DS - RCSe ) ) ) ) ) / ( ( ( ( ( RMSe + MUR ) / Max( MUM,DS ) ) * ( ( RCSe - RCSe ) + ( MUC * MUC ) ) ) * Max( ( ( RCSe * RMSe ) * Min( MUM ,CS ) ),Max( ( MLU - MLU ),( MUC + MLU ) ) ) ) / ( ( Min( Max( MUM,CS ) ,( RMSe * MUR ) ) + Max( Min( MUC ,RCSe ),Max( MUR,RCSe ) ) ) / ( ( ( CS / DS ) / ( DS / RMSe ) ) * ( ( CS * MUM ) / ( RMSe + MUR ) ) ) ) ) ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.23983739837398374, "obj2": 0.6228122620229004}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - Min( CS ,CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5305800978742361}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS + CS ) / ( RMSe * DS ) )", "obj1": 0.6056910569105691, "obj2": 0.271277421368891}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) - ( DS * CS ) )", "obj1": 0.7723577235772358, "obj2": 0.17424491289243413}, {"determining": "Max( ( Min( AMS ,Const ) / CRS ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.34552845528455284, "obj2": 0.4740743952898237}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_Mem_Server + MRS ) ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * DS )", "obj1": 0.9817073170731707, "obj2": 0.012254573445013357}, {"determining": "Max( ( FirstVNF_CPU * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + MLU )", "obj1": 0.11788617886178862, "obj2": 0.7274574006664891}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( Min( AMS ,Const ) * Const ) ) - ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( MLU - ( MLU - ( RRSe - RMSe ) ) ) - ( ( MLU - DS ) + ( DS - DS ) ) ) * Min( DS ,MLU ) )", "obj1": 0.22154471544715448, "obj2": 0.6412082896253355}, {"determining": "( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS + DS ) - ( DS * CS ) )", "obj1": 0.9512195121951219, "obj2": 0.03857070510660614}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe + DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.057366424893598195}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( CS * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.3089430894308943, "obj2": 0.5185026954330402}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / RMSe ) ) - Min( ( ( ( MUR + DS ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.35772357723577236, "obj2": 0.4661631993129527}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( MDR ,MDR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * ( Max( ( MUR - CS ),( RCSe - RCSe ) ) - ( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.44715447154471544, "obj2": 0.3992105938957434}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_CPU ) ) + ( MRS / DDR ) ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + MRS ) )", "choosing": "( ( DS - CS ) / ( Min( DS ,( CS * Min( RRSe ,RRSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5853658536585366, "obj2": 0.28631063614874114}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.45934959349593496, "obj2": 0.39282769878322926}, {"determining": "( ( BR * Max( ( Const + ARS ),( FirstVNF_Mem_Server + MRS ) ) ) - Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( DS - DS ) ) / DS )", "obj1": 0.25609756097560976, "obj2": 0.5979419353551874}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( PN ,FirstVNF_Mem ) + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) + MRS ) )", "choosing": "( ( Min( DS ,( ( ( RRSe * MUR ) - ( RRSe / MLU ) ) * Min( RRSe ,RCSe ) ) ) - CS ) / ( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5467479674796748, "obj2": 0.3140636652295382}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( Min( Min( ( ( AMS * AMS ) - Max( FirstVNF_CPU,Const ) ) ,( Min( Const ,MRS ) + ( MDR - FirstVNF_Mem ) ) ) ,Max( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM ),Max( FirstVNF_RAM_Server,MRS ) ),( ( CRS * CRS ) + ( ARS * BR ) ) ) ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( Max( ( ( DS * MUR ) * ( MLU * MUC ) ),Max( ( MUM - CS ),Max( CS,MLU ) ) ),Min( ( ( MUM - CS ) * Max( MUC,CS ) ) ,( Min( MUM ,RMSe ) - ( CS / RCSe ) ) ) ) - Min( ( ( ( MUC - RRSe ) / Max( RCSe,RCSe ) ) * Min( ( MUC + CS ) ,( RCSe / DS ) ) ) ,Min( Max( ( MUM / RRSe ),( MUC - MUM ) ) ,( ( RCSe * RRSe ) / ( MLU * RCSe ) ) ) ) ) * ( Min( Min( ( ( MLU / MUM ) - Min( RCSe ,RRSe ) ) ,( Max( RMSe,RRSe ) / Min( RRSe ,MUC ) ) ) ,Max( ( ( RRSe - RCSe ) + ( CS - MLU ) ),( Min( MUR ,RRSe ) - ( RCSe - DS ) ) ) ) + ( ( ( Min( MLU ,DS ) * ( CS * RRSe ) ) / ( Min( MUM ,RMSe ) / Min( RRSe ,RCSe ) ) ) - Max( ( ( MUR / MLU ) - ( MUM + MLU ) ),( Max( RMSe,RMSe ) - Max( RRSe,DS ) ) ) ) ) ),( ( ( ( ( Max( MUC,RRSe ) + ( RCSe + MUR ) ) - ( ( MUM * RMSe ) * ( MUM + RMSe ) ) ) - ( ( Min( DS ,RMSe ) - ( MUC * RRSe ) ) + ( ( RCSe * MLU ) - ( MLU + MUM ) ) ) ) / Max( ( Max( ( DS / DS ),Min( RCSe ,RMSe ) ) - ( ( CS * RMSe ) + Max( DS,RMSe ) ) ),Max( Max( ( DS * RRSe ),( RCSe / DS ) ),( Min( MLU ,RCSe ) - Min( MUC ,MUC ) ) ) ) ) - ( ( Min( Max( ( MLU + MUC ),( MLU - MUC ) ) ,Min( ( MUC + RCSe ) ,( MUM - MLU ) ) ) * ( ( ( MLU - MUR ) / Max( RCSe,DS ) ) - Max( Min( DS ,RMSe ),( MLU + MUR ) ) ) ) - ( Min( Max( ( RMSe - RRSe ),( MUR * RMSe ) ) ,( ( MLU / MUC ) - ( MUC / RMSe ) ) ) / ( ( ( MUC * RRSe ) - ( MUM * MUC ) ) + Max( ( MUM * MUR ),Max( MUC,DS ) ) ) ) ) ) ) * Max( ( ( ( Min( ( Min( MUC ,RMSe ) - ( RCSe + MUM ) ) ,( Min( MLU ,CS ) + Min( CS ,RCSe ) ) ) + ( ( Max( RCSe,MUR ) * ( RCSe + MLU ) ) - ( Max( MUC,DS ) * ( CS * MUR ) ) ) ) - Max( ( ( Max( MLU,RMSe ) + Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) / ( MUM + CS ) ) ),Max( ( ( MUM * DS ) * ( MLU + MLU ) ),( ( DS * MUR ) / ( RMSe - DS ) ) ) ) ) / ( ( ( ( ( CS - RRSe ) + ( RRSe - MLU ) ) / ( Max( MUR,MUM ) / ( MUR / MUM ) ) ) - ( ( ( DS * DS ) - Max( MLU,DS ) ) * ( ( MUC + CS ) * Min( CS ,RMSe ) ) ) ) + ( Min( ( ( CS + MLU ) * ( CS - RCSe ) ) ,Min( Max( MUC,DS ) ,( MUM * MUM ) ) ) - Min( ( Min( DS ,DS ) + ( RMSe - RCSe ) ) ,( ( MLU * RCSe ) - ( RMSe - MLU ) ) ) ) ) ),Min( ( ( Max( ( Max( RMSe,MUM ) * ( RMSe - MLU ) ),( Max( MUR,MUR ) + ( CS * DS ) ) ) + Min( ( ( MLU / MUR ) / Min( RRSe ,MUM ) ) ,Max( ( MLU + DS ),( MUR - MUC ) ) ) ) + ( Min( Min( ( CS / DS ) ,( RCSe - MUM ) ) ,Max( Min( DS ,MUC ),( DS / DS ) ) ) + ( ( ( MUC - CS ) + ( MLU / RCSe ) ) - ( ( MLU / RMSe ) + ( MLU * RMSe ) ) ) ) ) ,( ( ( ( ( RRSe - MUR ) + Max( MUM,MUM ) ) * ( ( RMSe - RCSe ) / ( RMSe - RMSe ) ) ) * Max( ( Max( DS,RRSe ) * ( MUR + MUM ) ),( ( RCSe + CS ) / Max( MUM,MUC ) ) ) ) + ( ( Max( Max( MUC,MLU ),( MUM + RCSe ) ) / ( Min( RCSe ,CS ) / Min( MUC ,MUR ) ) ) / ( ( ( RCSe / RMSe ) / ( RRSe * RMSe ) ) + ( Min( RCSe ,CS ) - ( MUC / MLU ) ) ) ) ) ) ) )", "obj1": 0.6178861788617886, "obj2": 0.2652075166082257}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.4024390243902439, "obj2": 0.4334421804257302}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),( RRSe / MLU ) ) )", "obj1": 0.7479674796747967, "obj2": 0.17964763556185318}, {"determining": "( ( AMS - CRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUC - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30284552845528456, "obj2": 0.5282722913760891}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) * ( MUC / DS ) ) - Min( ( CS * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.4024390243902439, "obj2": 0.4334421804257302}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) + Min( AMS ,( MDR + ACS ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RMSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.3902439024390244, "obj2": 0.4511599271237595}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS - RCSe ) )", "obj1": 0.18699186991869918, "obj2": 0.6833145915926029}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( ( Max( FirstVNF_CPU_Server,PN ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + Const ) ) ) - ( FirstVNF_Mem + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / ( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) ) ) / Max( ( MUR - CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( DS + ( CS * Min( RRSe ,RCSe ) ) ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.8943089430894309, "obj2": 0.08052861696900152}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( Min( ( CRS * DDR ) ,( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,Max( MUM,MUR ) ) ) + ( Max( Min( CS ,MUC ),Max( MUM,RCSe ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6560297490653438}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( MLU - ( MLU - ( RRSe - RMSe ) ) ) - MUM ) * Min( DS ,MLU ) )", "obj1": 0.17886178861788618, "obj2": 0.6868864868697646}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS - RCSe ) )", "obj1": 0.1951219512195122, "obj2": 0.6730386395222647}, {"determining": "Max( ( PN + ARS ),Min( MDR ,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.37398373983739835, "obj2": 0.4609736581846948}], "5": [{"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUM + MUC ) ,Max( DS,MUM ) ) - Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RRSe ) ) ) * Max( RCSe,( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5934959349593496, "obj2": 0.20063229521810164}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.6890243902439024, "obj2": 0.1982365255003237}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( Min( AMS ,Const ) * Const ) ) - ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( MLU - ( MLU - ( RRSe - RMSe ) ) ) - ( ( MLU - DS ) + ( DS - DS ) ) ) * Min( DS ,MLU ) )", "obj1": 0.21951219512195122, "obj2": 0.6388962495030327}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) )", "obj1": 0.49390243902439024, "obj2": 0.3487434032164741}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_CPU ) ) + ( MRS / DDR ) ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + Max( ( FirstVNF_CPU * FirstVNF_CPU ),Min( CRS ,Const ) ) ) )", "choosing": "( ( DS - CS ) / ( Min( DS ,( CS * Min( RRSe ,RRSe ) ) ) * ( ( ( MLU - DS ) + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5873983739837398, "obj2": 0.2780582745923916}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.16260162601626016, "obj2": 0.6680349265296058}, {"determining": "Max( ( PN + AMS ),Min( MDR ,RRS ) )", "choosing": "( ( DS - CS ) / ( ( DS + ( CS * Min( RRSe ,RCSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5365853658536586, "obj2": 0.3178526311369344}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.17785674550513944}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - MDR )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.44308943089430897, "obj2": 0.3918504528582774}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ARS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( DS,MUM ) ) - RCSe )", "obj1": 0.25203252032520324, "obj2": 0.5532063189114427}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - Min( CS ,CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.23577235772357724, "obj2": 0.5863008503689191}, {"determining": "Max( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ),FirstVNF_Mem_Server )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MLU - DS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - Max( MLU,RRSe ) ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.34146341463414637, "obj2": 0.5032642320745085}, {"determining": "Max( ( FirstVNF_CPU * FirstVNF_CPU ),Min( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_CPU ) ) + ( MRS / DDR ) ) ,Const ) )", "choosing": "( ( MLU - DS ) + ( Min( DS ,( CS * Min( RRSe ,RRSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5813008130081301, "obj2": 0.3079012450764402}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( CS * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.3089430894308943, "obj2": 0.5185026954330402}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.8455284552845529, "obj2": 0.09704192275491208}, {"determining": "Max( ( ARS + FirstVNF_RAM ),Max( ( Min( RRS ,AMS ) * Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.4715447154471545, "obj2": 0.3733437813495296}, {"determining": "( ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,Const ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( DS * Min( RRSe ,RCSe ) ) ) * ( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS ) )", "obj1": 0.926829268292683, "obj2": 0.05090983450669203}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( FirstVNF_Mem + ( ( DDR / ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - RCSe ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( Max( ( MUR - CS ),( RCSe - RCSe ) ) * Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.8882113821138211, "obj2": 0.08823325192677184}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( Min( ( CRS * DDR ) ,( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,Max( MUM,MUR ) ) ) + ( Max( Min( CS ,MUC ),Max( MUM,RCSe ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6560297490653438}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * RCSe ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.741869918699187, "obj2": 0.16703007312852083}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( ( Min( RRSe ,MUR ) - ( RRSe / MLU ) ) * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.8333333333333334, "obj2": 0.11988631278155154}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( MDR + MRS ) ),FirstVNF_Mem_Server ) ) + Min( MDR ,( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.9512195121951219, "obj2": 0.03178630039871887}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.8028455284552846, "obj2": 0.12821926493482255}, {"determining": "( Max( CRS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) - ( DS / CS ) )", "obj1": 0.7886178861788617, "obj2": 0.1564972646900727}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.7784552845528455, "obj2": 0.15764552152508288}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.4268292682926829, "obj2": 0.41926713558805306}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - Min( CS ,CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.23577235772357724, "obj2": 0.5863008503689191}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( PN ,FirstVNF_Mem ) + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) + MRS ) )", "choosing": "( ( Min( DS ,( ( ( RRSe * MUR ) - ( RRSe / MLU ) ) * Min( RRSe ,RCSe ) ) ) - CS ) / ( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * ( ( MUM + RMSe ) + ( MLU / MUR ) ) ) )", "obj1": 0.5467479674796748, "obj2": 0.3140636652295382}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2682926829268293, "obj2": 0.5448672549172208}, {"determining": "( FirstVNF_RAM * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( ( DS + CS ) ,( MUM / MUM ) ) )", "obj1": 0.47560975609756095, "obj2": 0.3612286420525744}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - Min( CS ,CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5305800978742361}, {"determining": "Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( DS - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6574860251582783}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - MDR )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.42886178861788615, "obj2": 0.40803910469695603}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / RMSe ) ) - Min( ( ( ( MUR + DS ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.35772357723577236, "obj2": 0.4661631993129527}, {"determining": "Max( ( ARS / FirstVNF_RAM ),( ( ( Min( ARS ,PN ) * ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.5853658536585366, "obj2": 0.2862140199073767}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( Max( ( ( DS * MUR ) * ( MLU * MUC ) ),Max( ( MUM - CS ),Max( CS,MLU ) ) ),Min( ( ( MUM - CS ) * Max( MUC,CS ) ) ,( Min( MUM ,RMSe ) - ( CS / RCSe ) ) ) ) - ( DS - DS ) ) * ( Min( Min( ( ( MLU / MUM ) - Min( RCSe ,RRSe ) ) ,( Max( RMSe,RRSe ) / Min( RRSe ,MUC ) ) ) ,Max( ( ( RRSe - RCSe ) + ( CS - MLU ) ),( Min( MUR ,RRSe ) - ( RCSe - DS ) ) ) ) + ( ( ( Min( MLU ,DS ) * ( CS * RRSe ) ) / ( Min( MUM ,RMSe ) / Min( RRSe ,RCSe ) ) ) - Max( ( ( MUR / MLU ) - ( MUM + MLU ) ),( Max( RMSe,RMSe ) - Max( RRSe,DS ) ) ) ) ) ),( ( ( ( ( Max( MUC,RRSe ) + ( RCSe + MUR ) ) - ( ( MUM * RMSe ) * ( MUM + RMSe ) ) ) - ( ( Min( DS ,RMSe ) - ( MUC * RRSe ) ) + ( ( RCSe * MLU ) - ( MLU + MUM ) ) ) ) / Max( ( Max( ( DS / DS ),Min( RCSe ,RMSe ) ) - ( ( CS * RMSe ) + Max( DS,RMSe ) ) ),Max( Max( ( DS * RRSe ),( RCSe / DS ) ),( Min( MLU ,RCSe ) - Min( MUC ,MUC ) ) ) ) ) - ( ( Min( Max( ( MLU + MUC ),( MLU - MUC ) ) ,Min( ( MUC + RCSe ) ,( MUM - MLU ) ) ) * ( ( ( MLU - MUR ) / Max( RCSe,DS ) ) - Max( Min( DS ,RMSe ),( MLU + MUR ) ) ) ) - ( Min( Max( ( RMSe - RRSe ),( MUR * RMSe ) ) ,( ( MLU / MUC ) - ( MUC / RMSe ) ) ) / ( ( ( MUC * RRSe ) - ( MUM * MUC ) ) + Max( ( MUM * MUR ),Max( MUC,DS ) ) ) ) ) ) ) * Max( ( ( ( Min( ( Min( MUC ,RMSe ) - ( RCSe + MUM ) ) ,( Min( MLU ,CS ) + Min( CS ,RCSe ) ) ) + ( ( Max( RCSe,MUR ) * ( RCSe + MLU ) ) - ( Max( MUC,DS ) * ( CS * MUR ) ) ) ) - Max( ( ( Max( MLU,RMSe ) + Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) / ( MUM + CS ) ) ),Max( ( ( MUM * DS ) * ( MLU + MLU ) ),( ( DS * MUR ) / ( RMSe - DS ) ) ) ) ) / ( ( ( ( ( CS - RRSe ) + ( RRSe - MLU ) ) / ( Max( MUR,MUM ) / ( MUR / MUM ) ) ) - ( ( ( DS * DS ) - Max( MLU,DS ) ) * ( ( MUC + CS ) * Min( CS ,RMSe ) ) ) ) + ( Min( ( ( CS + MLU ) * ( CS - RCSe ) ) ,Min( Max( MUC,DS ) ,( MUM * MUM ) ) ) - Min( ( Min( DS ,DS ) + ( RMSe - RCSe ) ) ,( ( MLU * RCSe ) - ( RMSe - MLU ) ) ) ) ) ),Min( ( ( Max( ( Max( RMSe,MUM ) * ( RMSe - MLU ) ),( Max( MUR,MUR ) + ( CS * DS ) ) ) + Min( ( ( MLU / MUR ) / Min( RRSe ,MUM ) ) ,Max( ( MLU + DS ),( MUR - MUC ) ) ) ) + ( Min( Min( ( CS / DS ) ,( RCSe - MUM ) ) ,Max( Min( DS ,MUC ),( DS / DS ) ) ) + ( ( ( MUC - CS ) + ( MLU / RCSe ) ) - ( ( MLU / RMSe ) + ( MLU * RMSe ) ) ) ) ) ,( ( ( ( ( RRSe - MUR ) + Max( MUM,MUM ) ) * ( ( RMSe - RCSe ) / ( RMSe - RMSe ) ) ) * Max( ( Max( DS,RRSe ) * ( MUR + MUM ) ),( ( RCSe + CS ) / Max( MUM,MUC ) ) ) ) + ( ( Max( Max( MUC,MLU ),( MUM + RCSe ) ) / ( Min( RCSe ,CS ) / Min( MUC ,MUR ) ) ) / ( ( ( RCSe / RMSe ) / ( RRSe * RMSe ) ) + ( Min( RCSe ,CS ) - ( MUC / MLU ) ) ) ) ) ) ) )", "obj1": 0.806910569105691, "obj2": 0.12046572847928906}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( ( ARS + FirstVNF_RAM ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.3434959349593496, "obj2": 0.48291388334481816}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( ( MUC / DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.057366424893598195}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9715447154471545, "obj2": 0.02113644134269551}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) * ( MUC / DS ) ) - Min( ( CS * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.4024390243902439, "obj2": 0.4334421804257302}, {"determining": "Max( ( Min( AMS ,Const ) / CRS ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.34552845528455284, "obj2": 0.4740743952898237}, {"determining": "Max( Const,Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) / ( MLU - DS ) )", "obj1": 0.3983739837398374, "obj2": 0.4423717418262258}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / ( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) + Max( ( RRSe + MUR ),( RRSe / MLU ) ) )", "obj1": 0.9634146341463414, "obj2": 0.02808693790079902}, {"determining": "( ( ( ( BR / DDR ) / FirstVNF_RAM ) * ( ARS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUM ) / ( CS + DS ) ) + Max( DS,MUM ) ) - ( DS * CS ) )", "obj1": 0.9959349593495935, "obj2": 0.001115462381806461}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( CS * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.29878048780487804, "obj2": 0.5276623744382947}, {"determining": "Max( ( PN + ARS ),Min( MDR ,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.37398373983739835, "obj2": 0.4609736581846948}], "6": [{"determining": "( ( ( Min( FirstVNF_CPU ,PN ) * ( Const / ( RRS - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + RMSe ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUM + MUC ) ,Max( DS,MUM ) ) - Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.08739837398373984, "obj2": 0.7540246299051744}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.532520325203252, "obj2": 0.30728138747648936}, {"determining": "( ( AMS + PN ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.573170731707317, "obj2": 0.2198337871547776}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( ( CS + MUC ) - ( RMSe + MUM ) ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.1951219512195122, "obj2": 0.6077734107258538}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Max( Max( ( ( DS * MUR ) * ( MLU * MUC ) ),Max( ( MUM - CS ),Max( CS,MLU ) ) ),Min( ( ( MUM - CS ) * Max( MUC,CS ) ) ,( Min( MUM ,RMSe ) - ( CS / RCSe ) ) ) ) - ( DS - DS ) ) * ( Min( Min( ( ( MLU / MUM ) - Min( RCSe ,RRSe ) ) ,( Max( RMSe,RRSe ) / Min( RRSe ,MUC ) ) ) ,Max( ( ( RRSe - RCSe ) + ( CS - MLU ) ),( Min( MUR ,RRSe ) - ( RCSe - DS ) ) ) ) + ( ( ( Min( MLU ,DS ) * ( CS * RRSe ) ) / ( Min( MUM ,RMSe ) / Min( RRSe ,RCSe ) ) ) - Max( ( ( MUR / MLU ) - ( MUM + MLU ) ),( Max( RMSe,RMSe ) - Max( RRSe,DS ) ) ) ) ) ),( ( ( ( ( Max( MUC,RRSe ) + ( RCSe + MUR ) ) - ( ( MUM * RMSe ) * ( MUM + RMSe ) ) ) - ( ( Min( DS ,RMSe ) - ( MUC * RRSe ) ) + ( ( RCSe * MLU ) - ( MLU + MUM ) ) ) ) / Max( ( Max( ( DS / DS ),Min( RCSe ,RMSe ) ) - ( ( CS * RMSe ) + Max( DS,RMSe ) ) ),Max( Max( ( DS * RRSe ),( RCSe / DS ) ),( Min( MLU ,RCSe ) - Min( MUC ,MUC ) ) ) ) ) - ( ( Min( Max( ( MLU + MUC ),( MLU - MUC ) ) ,Min( ( MUC + RCSe ) ,( MUM - MLU ) ) ) * ( ( ( MLU - MUR ) / Max( RCSe,DS ) ) - Max( Min( DS ,RMSe ),( MLU + MUR ) ) ) ) - ( Min( Max( ( RMSe - RRSe ),( MUR * RMSe ) ) ,( ( MLU / MUC ) - ( MUC / RMSe ) ) ) / ( ( ( MUC * RRSe ) - ( MUM * MUC ) ) + Max( ( MUM * MUR ),Max( MUC,DS ) ) ) ) ) ) ) * Max( ( ( ( Min( ( Min( MUC ,RMSe ) - ( RCSe + MUM ) ) ,( Min( MLU ,CS ) + Min( CS ,RCSe ) ) ) + ( ( Max( RCSe,MUR ) * ( RCSe + MLU ) ) - ( Max( MUC,DS ) * ( CS * MUR ) ) ) ) - Max( ( ( Max( MLU,RMSe ) + Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) / ( MUM + CS ) ) ),Max( ( ( MUM * DS ) * ( MLU + MLU ) ),( ( DS * MUR ) / ( RMSe - DS ) ) ) ) ) / ( ( ( ( ( CS - RRSe ) + ( RRSe - MLU ) ) / ( Max( MUR,MUM ) / ( MUR / MUM ) ) ) - ( ( ( DS * DS ) - Max( MLU,DS ) ) * ( ( MUC + CS ) * Min( CS ,RMSe ) ) ) ) + ( Min( ( ( CS + MLU ) * ( CS - RCSe ) ) ,Min( Max( MUC,DS ) ,( MUM * MUM ) ) ) - Min( ( Min( DS ,DS ) + ( RMSe - RCSe ) ) ,( ( MLU * RCSe ) - ( RMSe - MLU ) ) ) ) ) ),Min( ( ( Max( ( Max( RMSe,MUM ) * ( RMSe - MLU ) ),( Max( MUR,MUR ) + ( CS * DS ) ) ) + Min( ( ( MLU / MUR ) / Min( RRSe ,MUM ) ) ,Max( ( MLU + DS ),( MUR - MUC ) ) ) ) + ( Min( Min( ( CS / DS ) ,( RCSe - MUM ) ) ,Max( Min( DS ,MUC ),( DS / DS ) ) ) + ( ( ( MUC - CS ) + ( MLU / RCSe ) ) - ( ( MLU / RMSe ) + ( MLU * RMSe ) ) ) ) ) ,( ( ( ( ( RRSe - MUR ) + Max( MUM,MUM ) ) * ( ( RMSe - RCSe ) / ( RMSe - RMSe ) ) ) * Max( ( Max( DS,RRSe ) * ( MUR + MUM ) ),( ( RCSe + CS ) / Max( MUM,MUC ) ) ) ) + ( ( Max( Max( MUC,MLU ),( MUM + RCSe ) ) / ( Min( RCSe ,CS ) / Min( MUC ,MUR ) ) ) / ( ( ( RCSe / RMSe ) / ( RRSe * RMSe ) ) + ( Min( RCSe ,CS ) - ( MUC / MLU ) ) ) ) ) ) ) )", "obj1": 0.8719512195121951, "obj2": 0.0873503898056561}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( DS - CS ) / ( RMSe * DS ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7296747967479674, "obj2": 0.1832093797751474}, {"determining": "( Const / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( ( MLU - DS ) + ( DS - DS ) ) ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) )", "obj1": 0.5101626016260162, "obj2": 0.33176738248971904}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ARS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( DS,MUM ) ) - RCSe )", "obj1": 0.25203252032520324, "obj2": 0.5532063189114427}, {"determining": "Max( ( Min( AMS ,Const ) / CRS ),FirstVNF_CPU_Server )", "choosing": "( ( ( RMSe * DS ) - DS ) + ( DS - CS ) )", "obj1": 0.4654471544715447, "obj2": 0.3597595140688633}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) )", "obj1": 0.49390243902439024, "obj2": 0.3487434032164741}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MUM - CS ) / RRSe )", "obj1": 0.8353658536585366, "obj2": 0.09609427026648187}, {"determining": "Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( DS - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6574860251582783}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( ( ARS + FirstVNF_RAM ) ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.3617886178861789, "obj2": 0.4535856357427341}, {"determining": "( ( ( Min( ARS ,PN ) - ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS - AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MLU - DS ),( DS - MUR ) ) / RMSe )", "obj1": 0.3170731707317073, "obj2": 0.5030959574912741}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5934959349593496, "obj2": 0.20063229521810164}, {"determining": "Max( Const,Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) / ( MLU - DS ) )", "obj1": 0.3983739837398374, "obj2": 0.4423717418262258}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( MRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( RMSe - CS ) / ( MLU - MLU ) )", "obj1": 0.45121951219512196, "obj2": 0.37894185953671344}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( ( Min( RRSe ,MUR ) - ( RRSe / MLU ) ) * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.8333333333333334, "obj2": 0.11988631278155154}, {"determining": "( ( Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_Mem * Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( RRSe + DS ) - ( DS * CS ) ) / CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.42276422764227645, "obj2": 0.41746856429542745}, {"determining": "( Max( CRS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) - ( DS / CS ) )", "obj1": 0.7886178861788617, "obj2": 0.1564972646900727}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) * ( MUC / DS ) ) - Min( ( CS * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.4024390243902439, "obj2": 0.4334421804257302}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2682926829268293, "obj2": 0.5448672549172208}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( ( ( ( BR / DDR ) / ( PN / CRS ) ) - ( ( MDR * FirstVNF_CPU ) / ( MRS + ARS ) ) ) + ( FirstVNF_Mem + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.9247967479674797, "obj2": 0.049007147007817456}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( DS - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.16056910569105692, "obj2": 0.6704495122266488}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - Min( CS ,CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.23577235772357724, "obj2": 0.5863008503689191}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "Max( ( ARS + FirstVNF_RAM ),Max( ( Min( RRS ,AMS ) * Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) * RRSe )", "obj1": 0.3394308943089431, "obj2": 0.48762252795676536}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( Max( ( ( DS * MUR ) * ( MLU * MUC ) ),Max( ( MUM - CS ),Max( CS,MLU ) ) ),Min( ( ( MUM - CS ) * Max( MUC,CS ) ) ,( Min( MUM ,RMSe ) - ( CS / RCSe ) ) ) ) - ( DS - DS ) ) * ( Min( Min( ( ( MLU / MUM ) - Min( RCSe ,RRSe ) ) ,( Max( RMSe,RRSe ) / Min( RRSe ,MUC ) ) ) ,Max( ( ( RRSe - RCSe ) + ( CS - MLU ) ),( Min( MUR ,RRSe ) - ( RCSe - DS ) ) ) ) + ( ( ( Min( MLU ,DS ) * ( CS * RRSe ) ) / ( Min( MUM ,RMSe ) / Min( RRSe ,RCSe ) ) ) - Max( ( ( MUR / MLU ) - ( MUM + MLU ) ),( Max( RMSe,RMSe ) - Max( RRSe,DS ) ) ) ) ) ),( ( ( ( ( Max( MUC,RRSe ) + ( RCSe + MUR ) ) - ( ( MUM * RMSe ) * ( MUM + RMSe ) ) ) - ( ( Min( DS ,RMSe ) - ( MUC * RRSe ) ) + ( ( RCSe * MLU ) - ( MLU + MUM ) ) ) ) / Max( ( Max( ( DS / DS ),Min( RCSe ,RMSe ) ) - ( ( CS * RMSe ) + Max( DS,RMSe ) ) ),Max( Max( ( DS * RRSe ),( RCSe / DS ) ),( Min( MLU ,RCSe ) - Min( MUC ,MUC ) ) ) ) ) - ( ( Min( Max( ( MLU + MUC ),( MLU - MUC ) ) ,Min( ( MUC + RCSe ) ,( MUM - MLU ) ) ) * ( ( ( MLU - MUR ) / Max( RCSe,DS ) ) - Max( Min( DS ,RMSe ),( MLU + MUR ) ) ) ) - ( Min( Max( ( RMSe - RRSe ),( MUR * RMSe ) ) ,( ( MLU / MUC ) - ( MUC / RMSe ) ) ) / ( ( ( MUC * RRSe ) - ( MUM * MUC ) ) + Max( ( MUM * MUR ),Max( MUC,DS ) ) ) ) ) ) ) * Max( ( ( ( Min( ( Min( MUC ,RMSe ) - ( RCSe + MUM ) ) ,( Min( MLU ,CS ) + Min( CS ,RCSe ) ) ) + ( ( Max( RCSe,MUR ) * ( RCSe + MLU ) ) - ( Max( MUC,DS ) * ( CS * MUR ) ) ) ) - Max( ( ( Max( MLU,RMSe ) + Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) / ( MUM + CS ) ) ),Max( ( ( MUM * DS ) * ( MLU + MLU ) ),( ( DS * MUR ) / ( RMSe - DS ) ) ) ) ) / ( ( ( ( ( CS - RRSe ) + ( RRSe - MLU ) ) / ( Max( MUR,MUM ) / ( MUR / MUM ) ) ) - ( ( ( DS * DS ) - Max( MLU,DS ) ) * ( ( MUC + CS ) * Min( CS ,RMSe ) ) ) ) + ( Min( ( ( CS + MLU ) * ( CS - RCSe ) ) ,Min( Max( MUC,DS ) ,( MUM * MUM ) ) ) - Min( ( Min( DS ,DS ) + ( RMSe - RCSe ) ) ,( ( MLU * RCSe ) - ( RMSe - MLU ) ) ) ) ) ),Min( ( ( Max( ( Max( RMSe,MUM ) * ( RMSe - MLU ) ),( Max( MUR,MUR ) + ( CS * DS ) ) ) + Min( ( ( MLU / MUR ) / Min( RRSe ,MUM ) ) ,Max( ( MLU + DS ),( MUR - MUC ) ) ) ) + ( Min( Min( ( CS / DS ) ,( RCSe - MUM ) ) ,Max( Min( DS ,MUC ),( DS / DS ) ) ) + ( ( ( MUC - CS ) + ( MLU / RCSe ) ) - ( ( MLU / RMSe ) + ( MLU * RMSe ) ) ) ) ) ,( ( ( ( ( RRSe - MUR ) + Max( MUM,MUM ) ) * ( ( RMSe - RCSe ) / ( RMSe - RMSe ) ) ) * Max( ( Max( DS,RRSe ) * ( MUR + MUM ) ),( ( RCSe + CS ) / ( DS - CS ) ) ) ) + ( ( Max( Max( MUC,MLU ),( MUM + RCSe ) ) / ( Min( RCSe ,CS ) / Min( MUC ,MUR ) ) ) / ( ( ( RCSe / RMSe ) / ( RRSe * RMSe ) ) + ( Min( RCSe ,CS ) - ( MUC / MLU ) ) ) ) ) ) ) )", "obj1": 0.8008130081300813, "obj2": 0.1289729496829416}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( CS * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.3089430894308943, "obj2": 0.5185026954330402}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( ( MUC / DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.057366424893598195}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_Mem_Server + MRS ) ),FirstVNF_Mem_Server ) ) + Min( MDR ,( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS - CS ) * DS )", "obj1": 0.9491869918699187, "obj2": 0.03271075853662302}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5914634146341463, "obj2": 0.20811755580955957}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.057366424893598195}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - Min( CS ,CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5305800978742361}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.7784552845528455, "obj2": 0.15764552152508288}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( MDR * MRS ) ),FirstVNF_Mem_Server ) ) + Min( MDR ,( ( CRS / ARS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUR + DS ) - ( DS * CS ) ) * CS )", "obj1": 0.9817073170731707, "obj2": 0.01207821372290723}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( Max( ( ( DS * MUR ) * ( MLU * MUC ) ),Max( ( MUM - CS ),Max( CS,MLU ) ) ),Min( ( ( MUM - CS ) * Max( MUC,CS ) ) ,( Min( MUM ,RMSe ) - ( CS / RCSe ) ) ) ) - ( DS - DS ) ) * ( Min( Min( ( ( MLU / MUM ) - Min( RCSe ,RRSe ) ) ,( Max( RMSe,RRSe ) / Min( RRSe ,MUC ) ) ) ,Max( ( ( RRSe - RCSe ) + ( CS - MLU ) ),( Min( MUR ,RRSe ) - ( RCSe - DS ) ) ) ) + ( ( ( Min( MLU ,DS ) * ( CS * RRSe ) ) / ( Min( MUM ,RMSe ) / Min( RRSe ,RCSe ) ) ) - Max( ( ( MUR / MLU ) - ( MUM + MLU ) ),( Max( RMSe,RMSe ) - Max( RRSe,DS ) ) ) ) ) ),( ( ( ( ( Max( MUC,RRSe ) + ( RCSe + MUR ) ) - ( ( MUM * RMSe ) * ( MUM + RMSe ) ) ) - ( ( Min( DS ,RMSe ) - ( MUC * RRSe ) ) + ( ( RCSe * MLU ) - ( MLU + MUM ) ) ) ) / Max( ( Max( ( DS / DS ),Min( RCSe ,RMSe ) ) - ( ( CS * RMSe ) + Max( DS,RMSe ) ) ),Max( Max( ( DS * RRSe ),( RCSe / DS ) ),( Min( MLU ,RCSe ) - Min( MUC ,MUC ) ) ) ) ) - ( ( Min( Max( ( MLU + MUC ),( MLU - MUC ) ) ,Min( ( MUC + RCSe ) ,( MUM - MLU ) ) ) * ( ( ( MLU - MUR ) / Max( RCSe,DS ) ) - Max( Min( DS ,RMSe ),( MLU + MUR ) ) ) ) - ( Min( Max( ( RMSe - RRSe ),( MUR * RMSe ) ) ,( ( MLU / MUC ) - ( MUC / RMSe ) ) ) / ( ( ( MUC * RRSe ) - ( MUM * MUC ) ) + Max( ( MUM * MUR ),Max( MUC,DS ) ) ) ) ) ) ) * Max( ( ( ( Min( ( Min( MUC ,RMSe ) - ( RCSe + MUM ) ) ,( Min( MLU ,CS ) + Min( CS ,RCSe ) ) ) + ( ( Max( RCSe,MUR ) * ( RCSe + MLU ) ) - ( Max( MUC,DS ) * ( CS * MUR ) ) ) ) - Max( ( ( Max( MLU,RMSe ) + Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) / ( MUM + CS ) ) ),Max( ( ( MUM * DS ) * ( MLU + MLU ) ),( ( DS * MUR ) / ( RMSe - DS ) ) ) ) ) / ( ( ( ( ( CS - RRSe ) + ( RRSe - MLU ) ) / ( Max( MUR,MUM ) / ( MUR / MUM ) ) ) - ( ( ( DS * DS ) - Max( MLU,DS ) ) * ( ( MUC + CS ) * Min( CS ,RMSe ) ) ) ) + ( Min( ( ( CS + MLU ) * ( CS - RCSe ) ) ,Min( Max( MUC,DS ) ,( MUM * MUM ) ) ) - Min( ( Min( DS ,DS ) + ( RMSe - RCSe ) ) ,( ( MLU * RCSe ) - ( RMSe - MLU ) ) ) ) ) ),Min( ( ( Max( ( Max( RMSe,MUM ) * ( RMSe - MLU ) ),( Max( MUR,MUR ) + ( CS * DS ) ) ) + Min( ( ( MLU / MUR ) / Min( RRSe ,MUM ) ) ,Max( ( MLU + DS ),( MUR - MUC ) ) ) ) + ( Min( Min( ( CS / DS ) ,( RCSe - MUM ) ) ,Max( Min( DS ,MUC ),( DS / DS ) ) ) + ( ( ( MUC - CS ) + ( MLU / RCSe ) ) - ( ( MLU / RMSe ) + ( MLU * RMSe ) ) ) ) ) ,( ( ( ( ( RRSe - MUR ) + Max( MUM,MUM ) ) * ( ( RMSe - RCSe ) / ( RMSe - RMSe ) ) ) * Max( ( Max( DS,RRSe ) * ( MUR + MUM ) ),( ( RCSe + CS ) / Max( MUM,MUC ) ) ) ) + ( ( Max( Max( MUC,MLU ),( MUM + RCSe ) ) / ( Min( RCSe ,CS ) / Min( MUC ,MUR ) ) ) / ( ( ( RCSe / RMSe ) / ( RRSe * RMSe ) ) + ( Min( RCSe ,CS ) - ( MUC / MLU ) ) ) ) ) ) ) )", "obj1": 0.806910569105691, "obj2": 0.12046572847928906}, {"determining": "Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( DS - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6574860251582783}, {"determining": "( ( ( ( BR / DDR ) / FirstVNF_RAM ) * ( ARS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUM ) / ( CS + DS ) ) + Max( DS,MUM ) ) - ( DS * CS ) )", "obj1": 0.9959349593495935, "obj2": 0.001115462381806461}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) - MDR )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.44308943089430897, "obj2": 0.3918504528582774}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * RCSe ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.741869918699187, "obj2": 0.16703007312852083}, {"determining": "( Max( BR,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RRSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUR ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7560975609756098, "obj2": 0.16115092986312604}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9634146341463414, "obj2": 0.026125383873084388}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}], "7": [{"determining": "( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUM + MUC ) ,Max( DS,MUM ) ) - Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,PN ) * ( Const / ( RRS - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + RMSe ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.08739837398373984, "obj2": 0.7540246299051744}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.45934959349593496, "obj2": 0.2903022830687344}, {"determining": "( ( AMS + PN ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.573170731707317, "obj2": 0.2198337871547776}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) + ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * MUC ) )", "obj1": 0.6971544715447154, "obj2": 0.15497249025901053}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( ( ARS + FirstVNF_RAM ) ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.3617886178861789, "obj2": 0.4535856357427341}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( MRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( RMSe - CS ) / ( MLU - MLU ) )", "obj1": 0.45121951219512196, "obj2": 0.37894185953671344}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem * CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( Min( ( MUR + DS ) ,( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.3983739837398374, "obj2": 0.43239727131523675}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.14661173697469354}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( ( CS + MUC ) - ( RMSe + MUM ) ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.1951219512195122, "obj2": 0.6077734107258538}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.18902439024390244, "obj2": 0.6246801395736489}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7215447154471545, "obj2": 0.14999355733078906}, {"determining": "Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( DS - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6574860251582783}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_CPU ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ) )", "choosing": "( ( DS * MUR ) * DS )", "obj1": 0.13617886178861788, "obj2": 0.6591202056934534}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.8597560975609756, "obj2": 0.07962975751862957}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe - DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.25203252032520324, "obj2": 0.5441768392240659}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( CS * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.3089430894308943, "obj2": 0.5185026954330402}, {"determining": "Max( ( ARS + FirstVNF_RAM ),Max( ( Min( RRS ,AMS ) * Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) * RRSe )", "obj1": 0.3394308943089431, "obj2": 0.48762252795676536}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( ( ( MUR - MUM ) - ( CS * CS ) ) - CS ) ) / RMSe )", "obj1": 0.2764227642276423, "obj2": 0.5227896304032328}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RRSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUR ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.23577235772357724, "obj2": 0.5637079354732722}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MUC - CS ) / RRSe )", "obj1": 0.7886178861788617, "obj2": 0.13256669910754273}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RMSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( MUC * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6077235772357723, "obj2": 0.19973597125250894}, {"determining": "( ( Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_Mem * Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( RRSe + DS ) - ( DS * CS ) ) / CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.42276422764227645, "obj2": 0.41746856429542745}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.8922764227642277, "obj2": 0.06950599700138113}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + ( CS * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5370321288519575}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9634146341463414, "obj2": 0.026125383873084388}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + DS ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.8800813008130082, "obj2": 0.07367673685251712}, {"determining": "Max( ( Min( AMS ,Const ) / ACS ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS * DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_Mem_Server + MRS ) ),FirstVNF_Mem_Server ) ) + Min( MDR ,( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS - CS ) * DS )", "obj1": 0.9491869918699187, "obj2": 0.03271075853662302}, {"determining": "( ( FirstVNF_CPU - Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) )", "obj1": 0.943089430894309, "obj2": 0.046235811146685304}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( ( ( ( BR / DDR ) / ( PN / CRS ) ) - ( ( MDR * FirstVNF_CPU ) / ( MRS + ARS ) ) ) + ( FirstVNF_Mem + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.9247967479674797, "obj2": 0.049007147007817456}, {"determining": "Max( ( ARS + DDR ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) * MUM )", "obj1": 0.3394308943089431, "obj2": 0.48762252795676536}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe )", "obj1": 0.3170731707317073, "obj2": 0.5030959574912741}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUM - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5715498826987551}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( MUR / ( MUC / DS ) ) - Min( ( ( ( MUR + DS ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.43902439024390244, "obj2": 0.39897129110219987}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),FirstVNF_RAM )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( MUR - ( CS * MUR ) ) * ( ( DS * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4329268292682927, "obj2": 0.41632566119161285}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( MUC + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5914634146341463, "obj2": 0.20807058123906746}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_Mem_Server + MRS ) ),FirstVNF_Mem_Server ) ) + Min( MDR ,( ( CRS / FirstVNF_Mem ) / Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( DS - CS ) * CS )", "obj1": 0.975609756097561, "obj2": 0.015545414601361395}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.5772357723577236, "obj2": 0.21557084651907737}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( ( MUC / DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.057366424893598195}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.8353658536585366, "obj2": 0.09609427026648187}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_Mem_Server + MRS ) ),FirstVNF_Mem_Server ) ) + Min( MDR ,( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.9817073170731707, "obj2": 0.011642202551840362}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - ( MUC + RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8252032520325203, "obj2": 0.10629857174529354}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.057366424893598195}], "8": [{"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.08739837398373984, "obj2": 0.7540246299051744}, {"determining": "( ( ( Min( FirstVNF_CPU ,PN ) * ( Const / ( RRS - FirstVNF_Mem ) ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + RMSe ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUM + MUC ) ,Max( DS,MUM ) ) - Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,RCSe ) + ( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.08739837398373984, "obj2": 0.7540246299051744}, {"determining": "( Max( AMS,( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR - MUM ) - ( CS * CS ) ) - CS ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4735772357723577, "obj2": 0.28089532261604144}, {"determining": "( ( AMS + PN ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.573170731707317, "obj2": 0.2198337871547776}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4532520325203252, "obj2": 0.29538718087367444}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( MRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( RMSe - CS ) / ( MLU - MLU ) )", "obj1": 0.45121951219512196, "obj2": 0.37894185953671344}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) + ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * MUC ) )", "obj1": 0.6971544715447154, "obj2": 0.15497249025901053}, {"determining": "Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( DS - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6574860251582783}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe - DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.25203252032520324, "obj2": 0.5441768392240659}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_CPU ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ) )", "choosing": "( ( DS * MUR ) * DS )", "obj1": 0.13617886178861788, "obj2": 0.6591202056934534}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe )", "obj1": 0.27235772357723576, "obj2": 0.5171615119866968}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( DS - CS ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.7987804878048781, "obj2": 0.11065552569369122}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( ( ( ( BR / DDR ) / ( PN / CRS ) ) - ( ( MDR * FirstVNF_CPU ) / ( MRS + ARS ) ) ) + ( FirstVNF_Mem + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "( Min( DS ,CS ) * RRSe )", "obj1": 0.3353658536585366, "obj2": 0.48281221604388425}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - ( ( DS - CS ) * DS ) ) + ( DS - CS ) ) / RMSe )", "obj1": 0.3943089430894309, "obj2": 0.4531608604129205}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( FirstVNF_Mem * MDR ) ) ) )", "choosing": "( ( DS - DS ) * RRSe )", "obj1": 0.3556910569105691, "obj2": 0.4706250655234511}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( ( ARS + FirstVNF_RAM ) ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.3617886178861789, "obj2": 0.4535856357427341}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RRSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUR ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.23577235772357724, "obj2": 0.5637079354732722}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) / ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ) - ( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.823170731707317, "obj2": 0.10328782537670933}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RMSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( MUC * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6077235772357723, "obj2": 0.19973597125250894}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.14661173697469354}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + DS ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.3983739837398374, "obj2": 0.43239727131523675}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( ( CS + MUC ) - ( RMSe + MUM ) ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.1951219512195122, "obj2": 0.6077734107258538}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe + MUR ) ) ) ) )", "obj1": 0.7215447154471545, "obj2": 0.14999355733078906}, {"determining": "Max( Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe / MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Max( RRSe,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.18902439024390244, "obj2": 0.6246801395736489}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( DS - CS ) / RRSe )", "obj1": 0.8353658536585366, "obj2": 0.09609427026648187}, {"determining": "Max( ( FirstVNF_CPU_Server * Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_Mem_Server + MRS ) ),FirstVNF_Mem_Server ) ) ),( Max( FirstVNF_CPU_Server,MDR ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( DS + CS ) * CS ) )", "obj1": 0.4369918699186992, "obj2": 0.3927409652693434}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MUC - CS ) / RRSe )", "obj1": 0.7886178861788617, "obj2": 0.13256669910754273}, {"determining": "Max( ( Max( AMS,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - MUC ) )", "obj1": 0.09349593495934959, "obj2": 0.7338837431529109}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.8536585365853658, "obj2": 0.09108463826654573}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),FirstVNF_RAM )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( MUR - ( CS * MUR ) ) * ( ( DS * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4329268292682927, "obj2": 0.41632566119161285}, {"determining": "Max( ( ARS * FirstVNF_RAM ),Max( ( Min( RRS ,AMS ) * Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) * RRSe )", "obj1": 0.3252032520325203, "obj2": 0.498688102402307}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + DS ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.8800813008130082, "obj2": 0.07367673685251712}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( DS - CS ) * MUM )", "obj1": 0.7703252032520326, "obj2": 0.14167640799591638}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe )", "obj1": 0.3170731707317073, "obj2": 0.5030959574912741}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,( FirstVNF_Mem * Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30284552845528456, "obj2": 0.5119796543122319}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.45934959349593496, "obj2": 0.2903022830687344}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) + ( ( AMS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) + ( DS - DS ) ) - Min( ( ( ( MUR / DS ) - ( DS * CS ) ) * CS ) ,( RRSe * CS ) ) ) / RMSe )", "obj1": 0.2926829268292683, "obj2": 0.5144479932994453}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9634146341463414, "obj2": 0.026125383873084388}, {"determining": "( Max( Max( DDR,ACS ),PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,( ( DS - CS ) / RRSe ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9105691056910569, "obj2": 0.059372174130789775}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.18902439024390244, "obj2": 0.6246801395736489}, {"determining": "( ( FirstVNF_CPU - Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) )", "obj1": 0.943089430894309, "obj2": 0.046235811146685304}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.5772357723577236, "obj2": 0.21557084651907737}], "9": [{"determining": "( Max( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ),PN ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( ( DS - MLU ) + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.08739837398373984, "obj2": 0.7540246299051744}, {"determining": "( ( ( Min( FirstVNF_CPU ,PN ) * ( Const / ( RRS - FirstVNF_Mem ) ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + RMSe ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.08739837398373984, "obj2": 0.7540246299051744}, {"determining": "( Max( AMS,Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.2471886350351182}, {"determining": "( Max( AMS,( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR - MUM ) - ( CS * CS ) ) - CS ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4735772357723577, "obj2": 0.28089532261604144}, {"determining": "( Max( RRS,PN ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,RCSe ) * DS )", "obj1": 0.4065040650406504, "obj2": 0.3831834120052286}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.4146341463414634, "obj2": 0.3203529614306849}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) + ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * MUC ) )", "obj1": 0.6971544715447154, "obj2": 0.15497249025901053}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.3821138211382114, "obj2": 0.42152377091827153}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / DS ) ) - Min( ( ( ( MUR + DS ) - ( DS * CS ) ) * CS ) ,( RRSe + CS ) ) ) / RMSe )", "obj1": 0.8800813008130082, "obj2": 0.07367673685251712}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9634146341463414, "obj2": 0.026125383873084388}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_CPU ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ) )", "choosing": "( ( DS * MUR ) * DS )", "obj1": 0.13617886178861788, "obj2": 0.6591202056934534}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( ( ARS + FirstVNF_RAM ) ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - CS ) )", "obj1": 0.3617886178861789, "obj2": 0.4535856357427341}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RRSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUR ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.23577235772357724, "obj2": 0.5637079354732722}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.15853658536585366, "obj2": 0.6329370055519754}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RMSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( MUC * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6077235772357723, "obj2": 0.19973597125250894}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.8536585365853658, "obj2": 0.09108463826654573}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4451219512195122, "obj2": 0.29937207384521863}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe + MUR ) ) ) ) )", "obj1": 0.7215447154471545, "obj2": 0.14999355733078906}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( ( ( ( BR / DDR ) / ( PN / CRS ) ) - ( ( MDR * FirstVNF_CPU ) / ( MRS + ARS ) ) ) + ( FirstVNF_Mem + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "( Min( DS ,CS ) * RRSe )", "obj1": 0.3353658536585366, "obj2": 0.48281221604388425}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( FirstVNF_Mem * MDR ) ) ) )", "choosing": "( ( DS - DS ) * RRSe )", "obj1": 0.3556910569105691, "obj2": 0.4706250655234511}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,( FirstVNF_Mem * Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.17479674796747968, "obj2": 0.627635140431565}, {"determining": "Max( ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ),Min( CRS ,Const ) )", "choosing": "( ( MLU - ( CS * CS ) ) + ( DS - DS ) )", "obj1": 0.2540650406504065, "obj2": 0.5429395464575082}, {"determining": "( ( AMS + PN ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.573170731707317, "obj2": 0.2198337871547776}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_Mem,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - RMSe ) ) / RMSe )", "obj1": 0.27235772357723576, "obj2": 0.5171615119866968}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / ( ( Min( ( FirstVNF_RAM / ACS ) ,( FirstVNF_Mem * Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( DS / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11178861788617886, "obj2": 0.7217201132925063}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,MRS ) ) ),AMS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * RCSe ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6073689027701362}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) - ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5873983739837398, "obj2": 0.2133570257373455}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( MUC * RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7560975609756098, "obj2": 0.14766868530231736}, {"determining": "( FirstVNF_CPU - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( DS + MUM ) - Max( CS,RCSe ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9410569105691057, "obj2": 0.04686103820441337}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( ( CS + MUC ) - ( RMSe + MUM ) ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.21341463414634146, "obj2": 0.6000827933019764}, {"determining": "( Max( Max( DDR,ACS ),PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,( ( DS - CS ) / RRSe ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9105691056910569, "obj2": 0.059372174130789775}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) / ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ) - ( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.823170731707317, "obj2": 0.10328782537670933}, {"determining": "( Max( Max( DDR,ACS ),PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,( ( DS - CS ) / RRSe ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9105691056910569, "obj2": 0.059372174130789775}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) + ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ACS * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( DS + CS ) * CS )", "obj1": 0.8313008130081301, "obj2": 0.09327859035043638}, {"determining": "( ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( DS - CS ) * ( DS + MUR ) )", "obj1": 0.9532520325203252, "obj2": 0.039009863456438316}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( DS - CS ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.7987804878048781, "obj2": 0.11065552569369122}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe - DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.25203252032520324, "obj2": 0.5441768392240659}, {"determining": "Max( ( ARS * FirstVNF_RAM ),Max( ( Min( RRS ,AMS ) * Min( MRS ,FirstVNF_RAM ) ),( ( CRS / FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - CS ) * RRSe )", "obj1": 0.3252032520325203, "obj2": 0.498688102402307}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,( FirstVNF_Mem * Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30284552845528456, "obj2": 0.5119796543122319}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.45934959349593496, "obj2": 0.2903022830687344}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) + ( ( AMS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) + ( DS - DS ) ) - Min( ( ( ( MUR / DS ) - ( DS * CS ) ) * CS ) ,( RRSe * CS ) ) ) / RMSe )", "obj1": 0.2926829268292683, "obj2": 0.5144479932994453}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( FirstVNF_Mem ,Const ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS - CS ) * RRSe ) / ( MUR * DS ) )", "obj1": 0.8048780487804879, "obj2": 0.10994071889495868}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * ( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( ( DS - MLU ) + CS ) ) ) / DS )", "obj1": 0.09552845528455285, "obj2": 0.722899816563015}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MUC - CS ) / RRSe )", "obj1": 0.7886178861788617, "obj2": 0.13256669910754273}], "10": [{"determining": "( ( ( ( Min( Max( Max( ( FirstVNF_CPU_Server + PN ),( ACS / CRS ) ),( Max( MDR,ACS ) - ( MRS * BR ) ) ) ,( ( ( MDR + ARS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * Max( ( AMS + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,AMS ) ) ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) * ( BR / DDR ) ),Min( ( MRS + FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM_Server ) ) ) - Max( ( ( FirstVNF_Mem_Server * MDR ) * ( CRS * FirstVNF_Mem ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( Min( ( FirstVNF_RAM_Server + DDR ) ,( MRS / RRS ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + MRS ) ) ) - Max( Min( ( FirstVNF_RAM_Server * RRS ) ,( ARS / ACS ) ),( ( CRS - AMS ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) / ( Max( ( ( Const * ARS ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Min( ( RRS + MRS ) ,( FirstVNF_Mem / BR ) ) ) * ( Max( ( FirstVNF_Mem_Server + ACS ),( ACS / CRS ) ) + ( ( BR / ACS ) / ( RRS - FirstVNF_RAM_Server ) ) ) ) ) ) - Min( ( ( ( ( Max( DDR,FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,AMS ) ) / ( Max( Const,CRS ) - Max( FirstVNF_Mem,PN ) ) ) * ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( DDR + RRS ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( FirstVNF_CPU * BR ) ) ) ) + ( Min( ( ( FirstVNF_Mem - PN ) - ( DDR * FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,ARS ) ) ) + ( ( ( ARS + BR ) + ( ARS / ARS ) ) * Max( Min( AMS ,MDR ),Min( PN ,MDR ) ) ) ) ) ,( ( Min( ( ( Const + FirstVNF_Mem_Server ) * ( MDR / FirstVNF_Mem ) ) ,( ( CRS * MRS ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ARS ),( CRS + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) + ( Min( Min( Min( FirstVNF_CPU ,DDR ) ,( ACS / FirstVNF_CPU ) ) ,( ( BR * FirstVNF_RAM_Server ) + ( AMS * FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( PN * FirstVNF_RAM_Server ) + ( MRS * AMS ) ) ) ) ) ) ) * Min( Min( Min( ( Max( Min( ( DDR + BR ) ,Min( MRS ,CRS ) ),( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_Mem ,Const ) ) ) * Min( ( ( MDR * DDR ) - ( FirstVNF_RAM_Server - BR ) ) ,( ( ACS * FirstVNF_CPU_Server ) + Max( ACS,FirstVNF_CPU ) ) ) ) ,( Min( ( ( FirstVNF_Mem + ARS ) + ( RRS + FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM ) ,( DDR / FirstVNF_RAM_Server ) ) ) + Min( ( ( AMS + MRS ) / ( Const * ARS ) ) ,( Max( PN,RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) ,( ( Min( ( ( MDR * BR ) + ( FirstVNF_Mem - ACS ) ) ,( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem + BR ) ) ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Max( RRS,Const ) ) * Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_RAM_Server / CRS ) ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,RRS ),Max( FirstVNF_CPU_Server,PN ) ) * ( ( ACS + FirstVNF_RAM_Server ) / Min( BR ,Const ) ) ) * Max( ( ( RRS - CRS ) + ( ARS - FirstVNF_Mem_Server ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,( BR / AMS ) ) ) ) ) ) ,Max( Max( Min( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - Max( ( CRS * CRS ),Max( BR,ACS ) ) ) ,Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / PN ) ) ,( Max( FirstVNF_Mem,BR ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ),( Max( ( ( PN + CRS ) + Max( ARS,CRS ) ),Max( Min( FirstVNF_Mem_Server ,Const ),Max( FirstVNF_Mem,RRS ) ) ) * ( Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),Max( RRS,ARS ) ) - ( ( FirstVNF_CPU - PN ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ),Min( ( ( ( ( DDR / PN ) / ( FirstVNF_RAM / ACS ) ) / ( ( PN - FirstVNF_RAM_Server ) - Max( BR,FirstVNF_CPU ) ) ) * Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( ARS * FirstVNF_RAM_Server ) ),( Max( ACS,FirstVNF_Mem_Server ) * ( CRS / MDR ) ) ) ) ,Max( ( ( ( Const * ARS ) * ( CRS * BR ) ) / ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_CPU_Server * MDR ) ) ),( ( Max( DDR,FirstVNF_RAM ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Max( ( PN - PN ),( Const + DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( CS + MLU ) * RCSe ) / ( MUC + ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ),PN ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( ( DS - MLU ) + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe * MLU ) ) ) ) / DS )", "obj1": 0.07723577235772358, "obj2": 0.7565053129011348}, {"determining": "( Max( AMS,Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.2471886350351182}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( RRSe * CS ) ) + ( DS - DS ) )", "obj1": 0.48577235772357724, "obj2": 0.2724221625537444}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.3821138211382114, "obj2": 0.42152377091827153}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) + ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * MUC ) )", "obj1": 0.6971544715447154, "obj2": 0.15497249025901053}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.4146341463414634, "obj2": 0.3203529614306849}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_CPU ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ) )", "choosing": "( ( DS * MUR ) * DS )", "obj1": 0.13617886178861788, "obj2": 0.6591202056934534}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.4105691056910569, "obj2": 0.3820924908834799}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Max( RRS,PN ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,RCSe ) * DS )", "obj1": 0.4065040650406504, "obj2": 0.3831834120052286}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( MUC * RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7560975609756098, "obj2": 0.14766868530231736}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.3516260162601626, "obj2": 0.43938637544209086}, {"determining": "( ( AMS + PN ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.573170731707317, "obj2": 0.2198337871547776}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( BR / FirstVNF_Mem ) ) ) ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU / DS ) + ( DS - CS ) ) / DS )", "obj1": 0.19308943089430894, "obj2": 0.593797527335827}, {"determining": "( Max( AMS,AMS ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + ( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ) * ( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3115779545461767}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.16463414634146342, "obj2": 0.6261699902142223}, {"determining": "( Max( AMS,PN ) - RRS )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.33739837398373984, "obj2": 0.4696148719686786}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RMSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( MUC * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6077235772357723, "obj2": 0.19973597125250894}, {"determining": "( ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) + Min( CRS ,Const ) )", "choosing": "( ( MLU - ( CS * CS ) ) + ( DS - DS ) )", "obj1": 0.34959349593495936, "obj2": 0.4514905112387095}, {"determining": "( Max( AMS,( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR - MUM ) - ( CS * CS ) ) - CS ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.45528455284552843, "obj2": 0.2851954308337767}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( AMS * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ACS * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe ) - CS ) * CS )", "obj1": 0.7804878048780488, "obj2": 0.13684590270515043}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.8536585365853658, "obj2": 0.09108463826654573}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / ( RCSe + MUR ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.10772357723577236, "obj2": 0.707337066171847}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MUC - CS ) / RRSe )", "obj1": 0.7886178861788617, "obj2": 0.13256669910754273}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,MRS ) ) ),AMS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( ( DS - MLU ) + CS ) ) ) / DS )", "obj1": 0.09552845528455285, "obj2": 0.722899816563015}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS + DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "Max( ( ( ( Max( MUC,RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR + DS ) + ( DS + MUR ) ) ) )", "obj1": 0.26422764227642276, "obj2": 0.5315968809068393}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.08739837398373984, "obj2": 0.7540246299051744}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8882113821138211, "obj2": 0.0710320659526369}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) * ( ( ( ( BR / DDR ) / ( PN / CRS ) ) - ( ( MDR * FirstVNF_CPU ) / ( MRS + ARS ) ) ) + ( FirstVNF_Mem + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) ) )", "choosing": "( Min( DS ,CS ) * RRSe )", "obj1": 0.3353658536585366, "obj2": 0.48281221604388425}, {"determining": "( Max( Max( DDR,ACS ),PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) * RRSe )", "obj1": 0.8719512195121951, "obj2": 0.08487591485341767}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) / ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ) - ( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.823170731707317, "obj2": 0.10328782537670933}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.18089430894308944, "obj2": 0.6067768015972655}, {"determining": "( Max( AMS,( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR - MUM ) - ( CS * CS ) ) - CS ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4735772357723577, "obj2": 0.28089532261604144}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4451219512195122, "obj2": 0.29937207384521863}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RRSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUR ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.23577235772357724, "obj2": 0.5637079354732722}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( DS - CS ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.7987804878048781, "obj2": 0.11065552569369122}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe - DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.25203252032520324, "obj2": 0.5441768392240659}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_Mem,AMS ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RMSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( MUC + MUR ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.05209895827232932}, {"determining": "( ( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * ( ( DS - MLU ) * DS ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005736490411636793}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9634146341463414, "obj2": 0.026125383873084388}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.15853658536585366, "obj2": 0.6329370055519754}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe )", "obj1": 0.27235772357723576, "obj2": 0.5171615119866968}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5975609756097561, "obj2": 0.20248512342133898}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) + ( ( AMS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) + ( DS - DS ) ) - Min( ( ( ( MUR / DS ) - ( DS * CS ) ) * CS ) ,( RRSe * CS ) ) ) / RMSe )", "obj1": 0.2926829268292683, "obj2": 0.5144479932994453}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,( ( DS - CS ) / RRSe ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7215447154471545, "obj2": 0.14999355733078906}], "11": [{"determining": "( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe * MLU ) ) ) ) / DS )", "obj1": 0.07723577235772358, "obj2": 0.7565053129011348}, {"determining": "( ( AMS + PN ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( Max( Max( ( FirstVNF_CPU_Server + PN ),( ACS / CRS ) ),( Max( MDR,ACS ) - ( MRS * BR ) ) ) ,( ( ( MDR + ARS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * Max( ( AMS + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,AMS ) ) ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) * ( BR / DDR ) ),Min( ( MRS + FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM_Server ) ) ) - Max( ( ( FirstVNF_Mem_Server * MDR ) * ( CRS * FirstVNF_Mem ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( Min( ( FirstVNF_RAM_Server + DDR ) ,( MRS / RRS ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + MRS ) ) ) - Max( Min( ( FirstVNF_RAM_Server * RRS ) ,( ARS / ACS ) ),( ( CRS - AMS ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) / ( Max( ( ( Const * ARS ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Min( ( RRS + MRS ) ,( FirstVNF_Mem / BR ) ) ) * ( Max( ( FirstVNF_Mem_Server + ACS ),( ACS / CRS ) ) + ( ( BR / ACS ) / ( RRS - FirstVNF_RAM_Server ) ) ) ) ) ) - Min( ( ( ( ( Max( DDR,FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,AMS ) ) / ( Max( Const,CRS ) - Max( FirstVNF_Mem,PN ) ) ) * ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( DDR + RRS ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( FirstVNF_CPU * BR ) ) ) ) + ( Min( ( ( FirstVNF_Mem - PN ) - ( DDR * FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,ARS ) ) ) + ( ( ( ARS + BR ) + ( ARS / ARS ) ) * Max( Min( AMS ,MDR ),Min( PN ,MDR ) ) ) ) ) ,( ( Min( ( ( Const + FirstVNF_Mem_Server ) * ( MDR / FirstVNF_Mem ) ) ,( ( CRS * MRS ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ARS ),( CRS + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) + ( Min( Min( Min( FirstVNF_CPU ,DDR ) ,( ACS / FirstVNF_CPU ) ) ,( ( BR * FirstVNF_RAM_Server ) + ( AMS * FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( PN * FirstVNF_RAM_Server ) + ( MRS * AMS ) ) ) ) ) ) ) * Min( Min( Min( ( Max( Min( ( DDR + BR ) ,Min( MRS ,CRS ) ),( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_Mem ,Const ) ) ) * Min( ( ( MDR * DDR ) - ( FirstVNF_RAM_Server - BR ) ) ,( ( ACS * FirstVNF_CPU_Server ) + Max( ACS,FirstVNF_CPU ) ) ) ) ,( Min( ( ( FirstVNF_Mem + ARS ) + ( RRS + FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM ) ,( DDR / FirstVNF_RAM_Server ) ) ) + Min( ( ( AMS + MRS ) / ( Const * ARS ) ) ,( Max( PN,RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) ,( ( Min( ( ( MDR * BR ) + ( FirstVNF_Mem - ACS ) ) ,( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem + BR ) ) ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Max( RRS,Const ) ) * Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_RAM_Server / CRS ) ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,RRS ),Max( FirstVNF_CPU_Server,PN ) ) * ( ( ACS + FirstVNF_RAM_Server ) / Min( BR ,Const ) ) ) * Max( ( ( RRS - CRS ) + ( ARS - FirstVNF_Mem_Server ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,( BR / AMS ) ) ) ) ) ) ,Max( Max( Min( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - Max( ( CRS * CRS ),Max( BR,ACS ) ) ) ,Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / PN ) ) ,( Max( FirstVNF_Mem,BR ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ),( Max( ( ( PN + CRS ) + Max( ARS,CRS ) ),Max( Min( FirstVNF_Mem_Server ,Const ),Max( FirstVNF_Mem,RRS ) ) ) * ( Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),Max( RRS,ARS ) ) - ( ( FirstVNF_CPU - PN ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ),Min( ( ( ( ( DDR / PN ) / ( FirstVNF_RAM / ACS ) ) / ( ( PN - FirstVNF_RAM_Server ) - Max( BR,FirstVNF_CPU ) ) ) * Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( ARS * FirstVNF_RAM_Server ) ),( Max( ACS,FirstVNF_Mem_Server ) * ( CRS / MDR ) ) ) ) ,Max( ( ( ( Const * ARS ) * ( CRS * BR ) ) / ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_CPU_Server * MDR ) ) ),( ( Max( DDR,FirstVNF_RAM ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Max( ( PN - PN ),( Const + DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( CS + MLU ) * RCSe ) / ( MUC + ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) / DS )", "obj1": 0.07723577235772358, "obj2": 0.7565053129011348}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.3821138211382114, "obj2": 0.42152377091827153}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.40040650406504064, "obj2": 0.31762382115281096}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.5345528455284553, "obj2": 0.24055277953087972}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) + ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * MUC ) )", "obj1": 0.6971544715447154, "obj2": 0.15497249025901053}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( RRSe * CS ) ) + ( DS - DS ) )", "obj1": 0.48577235772357724, "obj2": 0.2724221625537444}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,FirstVNF_CPU ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * MUM ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5711382113821138, "obj2": 0.21791943921503587}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_CPU ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ) )", "choosing": "( ( DS * MUR ) * DS )", "obj1": 0.13617886178861788, "obj2": 0.6591202056934534}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( ( DS - MLU ) + CS ) ) ) / DS )", "obj1": 0.08333333333333333, "obj2": 0.7129533561704331}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.8536585365853658, "obj2": 0.09108463826654573}, {"determining": "( ( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + FirstVNF_RAM_Server ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * ( RRSe * MUR ) ) )", "obj1": 0.8150406504065041, "obj2": 0.10322756988826708}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe ) - CS ) * CS )", "obj1": 0.31097560975609756, "obj2": 0.49168176866106494}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) + ( ( AMS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) + ( DS - DS ) ) - Min( ( ( ( MUR / DS ) - ( DS * CS ) ) * CS ) ,( RRSe * CS ) ) ) / RMSe )", "obj1": 0.2926829268292683, "obj2": 0.5144479932994453}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( BR / FirstVNF_Mem ) ) ) ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU / DS ) + ( DS - CS ) ) / DS )", "obj1": 0.19308943089430894, "obj2": 0.593797527335827}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9634146341463414, "obj2": 0.026125383873084388}, {"determining": "( FirstVNF_CPU - ( Max( AMS,PN ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( Max( MUC,RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.9186991869918699, "obj2": 0.06272795530159146}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_Mem,AMS ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RMSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( MUC + MUR ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.05209895827232932}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5975609756097561, "obj2": 0.20248512342133898}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS + DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "Max( ( ( ( Max( MUC,RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR + DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5623402744138958}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4451219512195122, "obj2": 0.29937207384521863}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8882113821138211, "obj2": 0.0710320659526369}, {"determining": "( ( ( ( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( ARS - MRS ) ) + ( ( ARS + ARS ) / ( MDR / CRS ) ) ) ,Max( ( Max( MDR,FirstVNF_Mem_Server ) + ( CRS + BR ) ),( ( MRS - FirstVNF_CPU ) - ( MDR + MDR ) ) ) ) - ( ( Max( ( MDR - FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( AMS * FirstVNF_RAM ) - ( FirstVNF_RAM_Server + RRS ) ) ) + Max( Min( Min( FirstVNF_Mem ,ARS ) ,( MDR * Const ) ),Max( ( Const * PN ),( DDR + ACS ) ) ) ) ) * Max( ( ( ( ( FirstVNF_CPU * AMS ) * ( PN / RRS ) ) + Max( ( CRS - DDR ),( Const - FirstVNF_CPU_Server ) ) ) + Max( ( ( FirstVNF_CPU * MDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),( ( RRS * FirstVNF_CPU_Server ) + ( BR - DDR ) ) ) ),( ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( FirstVNF_CPU + BR ) ) * ( ( FirstVNF_Mem_Server * ACS ) * ( FirstVNF_Mem / MRS ) ) ) + ( ( Max( BR,FirstVNF_Mem ) / Min( PN ,PN ) ) - ( ( BR - Const ) / ( Const / FirstVNF_CPU ) ) ) ) ) ) / ( ( ( Max( Min( ( FirstVNF_CPU_Server - ARS ) ,Min( PN ,FirstVNF_RAM ) ),Max( ( MRS * CRS ),( PN * MRS ) ) ) + ( ( ( PN / AMS ) + ( Const + FirstVNF_CPU_Server ) ) + Min( ( MRS / FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( Max( ( ( PN - AMS ) * ( MRS * RRS ) ),Max( ( ACS + PN ),( DDR + FirstVNF_RAM ) ) ) * ( Max( Min( FirstVNF_Mem ,MRS ),Max( RRS,ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - Max( MRS,ACS ) ) ) ) ) * Max( ( Min( ( ( CRS / ACS ) / Max( Const,FirstVNF_Mem_Server ) ) ,( Max( PN,Const ) + ( FirstVNF_Mem * CRS ) ) ) * ( ( ( FirstVNF_RAM_Server + CRS ) - ( ARS / FirstVNF_CPU_Server ) ) - ( ( ARS - ARS ) / ( FirstVNF_RAM_Server / Const ) ) ) ),( ( Max( Max( MRS,FirstVNF_RAM ),( MRS * FirstVNF_RAM ) ) - ( ( CRS / FirstVNF_Mem_Server ) - Min( MDR ,MDR ) ) ) * Min( Min( Max( BR,BR ) ,Min( BR ,MDR ) ) ,Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( ACS,Const ) ) ) ) ) ) ) + ( Min( ( ( ( ( Max( FirstVNF_RAM,PN ) / Max( Const,FirstVNF_RAM ) ) * Max( Max( AMS,FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / Const ) ) ) * Min( ( Max( AMS,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,( ( DDR / FirstVNF_RAM_Server ) / ( AMS - CRS ) ) ) ) - ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - ARS ) ) * ( ( FirstVNF_CPU_Server * CRS ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) / ( ( Max( CRS,AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) / ( Max( FirstVNF_RAM,Const ) / Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ,( ( ( Max( ( FirstVNF_CPU / AMS ),Min( MDR ,AMS ) ) * Max( ( AMS - FirstVNF_Mem ),( FirstVNF_RAM_Server + AMS ) ) ) - ( Min( Max( RRS,RRS ) ,( ACS - CRS ) ) - ( ( BR / FirstVNF_Mem ) / ( ARS / FirstVNF_RAM ) ) ) ) - Min( ( Max( ( FirstVNF_Mem / ARS ),( MDR + FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / DDR ) - ( AMS / AMS ) ) ) ,Max( Max( ( FirstVNF_RAM / FirstVNF_RAM ),Min( DDR ,Const ) ),( ( FirstVNF_RAM - AMS ) * Max( Const,FirstVNF_CPU_Server ) ) ) ) ) ) + ( Min( ( ( Min( Min( ACS ,ARS ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - Max( ( AMS - FirstVNF_CPU_Server ),Min( CRS ,FirstVNF_CPU_Server ) ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + Min( MRS ,FirstVNF_CPU_Server ) ) * Min( ( MRS * FirstVNF_CPU_Server ) ,( DDR - Const ) ) ) ) ,Max( Max( ( Min( FirstVNF_Mem ,RRS ) - ( FirstVNF_Mem_Server - ACS ) ),Min( ( FirstVNF_RAM_Server * BR ) ,( DDR / FirstVNF_CPU ) ) ),Min( ( Max( CRS,CRS ) - ( PN * Const ) ) ,( ( FirstVNF_Mem_Server * RRS ) + ( FirstVNF_RAM_Server * Const ) ) ) ) ) + ( ( ( ( ( RRS * Const ) - Max( FirstVNF_CPU,BR ) ) * Min( ( MDR / RRS ) ,( FirstVNF_Mem * AMS ) ) ) - Max( Min( ( Const + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / MDR ) ),( Min( Const ,MRS ) + ( MDR / FirstVNF_RAM ) ) ) ) * Min( ( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( ACS,FirstVNF_CPU_Server ) ) + ( Min( CRS ,Const ) - ( PN - RRS ) ) ) ,( Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_RAM - BR ) ) / Min( ( BR * DDR ) ,Max( RRS,ACS ) ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( Min( ( ( ( RCSe - RRSe ) - Min( RMSe ,CS ) ) * ( ( CS + CS ) * ( RMSe + MUC ) ) ) ,Min( ( Min( RMSe ,MUR ) / ( MUR - CS ) ) ,( ( MUR / RCSe ) / ( MUC + MUC ) ) ) ) - ( ( ( Max( RCSe,RRSe ) * ( RRSe - DS ) ) / ( Min( RRSe ,MUR ) + ( MUR * MUC ) ) ) - ( ( ( RRSe + MUR ) + ( RCSe + MUC ) ) * ( ( RMSe - MUR ) / ( DS * RMSe ) ) ) ) ) ,( ( ( ( ( MUM - MUC ) / Min( RRSe ,RMSe ) ) + Min( Max( RMSe,DS ) ,Max( MUR,RCSe ) ) ) * ( ( ( CS + MUR ) / ( MLU / RMSe ) ) - Max( ( DS + DS ),( RRSe + DS ) ) ) ) - ( ( ( ( RRSe + RMSe ) / ( RCSe * MUM ) ) * ( ( RMSe + RCSe ) / ( MUC + RCSe ) ) ) - ( ( ( MUM / RCSe ) / Min( MUC ,MUM ) ) * Max( ( MLU - RMSe ),( DS - CS ) ) ) ) ) ) * ( ( ( Max( ( ( CS + RRSe ) - ( RRSe + RCSe ) ),Max( ( MLU * MUM ),( MUM - MUC ) ) ) + Max( ( Max( DS,DS ) / Min( MUR ,RRSe ) ),( ( RMSe - DS ) + Min( MUR ,MUR ) ) ) ) * Min( ( ( ( MUR - CS ) - ( MUR * CS ) ) * ( Min( RRSe ,RRSe ) * Min( RCSe ,MUM ) ) ) ,Min( ( ( DS + RRSe ) * ( DS + MUM ) ) ,Min( ( MUM - RCSe ) ,( MUR * MUM ) ) ) ) ) - Max( Max( Min( ( ( MUM - MUR ) * Max( RMSe,MUR ) ) ,Min( Max( RMSe,RCSe ) ,Min( CS ,RCSe ) ) ),Max( ( Min( DS ,MUC ) - ( RMSe - CS ) ),( Max( RCSe,MUR ) * ( MUC - MUM ) ) ) ),Max( ( ( ( MLU / MLU ) + ( CS / MUM ) ) / Min( Max( RCSe,MUM ) ,( DS + RMSe ) ) ),Max( ( ( RCSe + RCSe ) + ( RMSe - MLU ) ),( ( MUM + RRSe ) - ( RCSe - CS ) ) ) ) ) ) ) ,( ( ( ( Max( ( ( DS * CS ) / ( RRSe + RRSe ) ),Min( ( RCSe * RRSe ) ,( DS - MUR ) ) ) / ( ( ( CS + RCSe ) * Min( MUM ,RRSe ) ) / Min( ( MLU - RCSe ) ,( RMSe * MUM ) ) ) ) + ( ( Max( ( MUC + MLU ),( MUC + MLU ) ) + ( ( DS * MUM ) / ( MUR / RRSe ) ) ) - ( ( Max( MLU,MUC ) / ( MLU + CS ) ) / Min( Min( MLU ,MUR ) ,Min( DS ,MUC ) ) ) ) ) * Max( ( ( ( ( MLU - RRSe ) - ( MLU * MLU ) ) + ( ( MUM + DS ) / ( MLU + DS ) ) ) * ( ( Max( CS,MUM ) - Min( MUC ,MUR ) ) + Max( Max( CS,MUR ),Min( MLU ,MLU ) ) ) ),Max( ( ( Min( RCSe ,RCSe ) * ( MLU + MLU ) ) - Max( ( DS * DS ),( DS * CS ) ) ),( Min( ( RMSe * RCSe ) ,( MLU * CS ) ) / ( ( MUC * MUC ) - Max( RMSe,RMSe ) ) ) ) ) ) - Min( Min( ( Max( ( Min( DS ,RRSe ) + Max( MUM,RCSe ) ),( ( MUC * MLU ) - ( RCSe + MLU ) ) ) * ( Min( ( RMSe / DS ) ,( DS * RMSe ) ) * ( Min( MUM ,DS ) * ( RMSe / MUC ) ) ) ) ,Max( Max( ( ( MUR + DS ) - ( MUM / RMSe ) ),( Max( MUC,RMSe ) * Min( RRSe ,DS ) ) ),Min( ( ( RCSe * MUC ) - ( RRSe - CS ) ) ,( Min( RRSe ,MUR ) + ( RMSe * RCSe ) ) ) ) ) ,( ( ( ( ( RRSe + DS ) * Min( CS ,MUR ) ) * ( ( MLU / MUR ) + ( MUM / RMSe ) ) ) + Max( Min( ( MLU / MUC ) ,Min( CS ,MUC ) ),( ( RMSe + RCSe ) + ( RCSe / RRSe ) ) ) ) / ( Min( Max( ( RRSe * MLU ),Max( RRSe,CS ) ) ,( Min( RCSe ,MLU ) / ( RMSe * MUM ) ) ) * Max( Max( Min( DS ,MLU ),Min( RRSe ,MUM ) ),( ( RRSe - DS ) - Max( RMSe,DS ) ) ) ) ) ) ) )", "obj1": 0.9654471544715447, "obj2": 0.022361308495191582}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( Max( Max( DDR,Const ),( ACS * MRS ) ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MUC - CS ) / RRSe )", "obj1": 0.7886178861788617, "obj2": 0.13256669910754273}, {"determining": "( Max( Max( DDR,ACS ),PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) * RRSe )", "obj1": 0.8719512195121951, "obj2": 0.08487591485341767}, {"determining": "( ( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.9878048780487805, "obj2": 0.004512673414837834}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6321138211382114, "obj2": 0.18791783021430533}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RMSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( MUC * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6077235772357723, "obj2": 0.19973597125250894}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MDR - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * ( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) - ( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ) * ( ( DS - CS ) * ( ( MUR / DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.7987804878048781, "obj2": 0.11065552569369122}, {"determining": "( Max( AMS,PN ) - RRS )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.33739837398373984, "obj2": 0.469105407277318}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,( ( DS - CS ) / RRSe ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7215447154471545, "obj2": 0.14999355733078906}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( MUC * RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7560975609756098, "obj2": 0.14766868530231736}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) + ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( DS + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.17276422764227642, "obj2": 0.6086228634357277}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,MRS ) ) ),AMS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.15853658536585366, "obj2": 0.6317018087666778}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / DS )", "obj1": 0.6260162601626016, "obj2": 0.18936472426450482}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / FirstVNF_CPU ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.27235772357723576, "obj2": 0.5171615119866968}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7642276422764228, "obj2": 0.14304972753358255}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) )", "choosing": "Max( ( ( ( RCSe - DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.25203252032520324, "obj2": 0.5441768392240659}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.3516260162601626, "obj2": 0.43938637544209086}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3115779545461767}, {"determining": "( Max( ( FirstVNF_Mem + ACS ),Max( BR,ACS ) ) - RRS )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MUC,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( CS + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.3313008130081301, "obj2": 0.4888023726937516}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.34552845528455284, "obj2": 0.45610207978616707}, {"determining": "( Max( AMS,PN ) - ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,RCSe ) * RMSe )", "obj1": 0.8821138211382114, "obj2": 0.07446658481187518}, {"determining": "( Max( AMS,RRS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( DS - RMSe ) * DS )", "obj1": 0.36585365853658536, "obj2": 0.4296116311048692}, {"determining": "( Max( AMS,AMS ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + ( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ) * ( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3115779545461767}], "12": [{"determining": "( Max( AMS,RRS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( DS - RMSe ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe * MLU ) ) ) ) / DS )", "obj1": 0.07113821138211382, "obj2": 0.7503542628455735}, {"determining": "( Max( AMS,( Max( AMS,PN ) - RRS ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( ( RCSe / CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ) / DS )", "obj1": 0.37601626016260165, "obj2": 0.4024769203264865}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.40040650406504064, "obj2": 0.31762382115281096}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) + ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * MUC ) )", "obj1": 0.6971544715447154, "obj2": 0.15497249025901053}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( ( DS - MLU ) + CS ) ) ) / DS )", "obj1": 0.08333333333333333, "obj2": 0.7129533561704331}, {"determining": "( Max( AMS,Max( AMS,PN ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( ( ( ( MLU - DS ) + ( DS - CS ) ) / DS ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.6483739837398373, "obj2": 0.1872336084815442}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,MRS ) ) ),AMS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.15853658536585366, "obj2": 0.6317018087666778}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_CPU ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ) )", "choosing": "( ( DS * MUR ) * DS )", "obj1": 0.13617886178861788, "obj2": 0.6591202056934534}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4451219512195122, "obj2": 0.29937207384521863}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.5182926829268293, "obj2": 0.25202798736389226}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / FirstVNF_CPU ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.27235772357723576, "obj2": 0.5171615119866968}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( DS - CS ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.7865853658536586, "obj2": 0.11960884685602566}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe ) - CS ) * CS )", "obj1": 0.31097560975609756, "obj2": 0.49168176866106494}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) + ( ( AMS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) + ( DS - DS ) ) - Min( ( ( ( MUR / DS ) - ( DS * CS ) ) * CS ) ,( RRSe * CS ) ) ) / RMSe )", "obj1": 0.2926829268292683, "obj2": 0.5144479932994453}, {"determining": "( Max( ( FirstVNF_Mem + ACS ),Max( BR,ACS ) ) - RRS )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MUC,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( CS + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.3313008130081301, "obj2": 0.4888023726937516}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,( ( DS - CS ) / RRSe ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.7215447154471545, "obj2": 0.14999355733078906}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7642276422764228, "obj2": 0.14304972753358255}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Max( PN,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * ( RRSe * CS ) )", "obj1": 0.9491869918699187, "obj2": 0.040273473158159316}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / ( ( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + FirstVNF_RAM_Server ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / DS )", "obj1": 0.8536585365853658, "obj2": 0.07798392606601112}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_Mem,AMS ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RMSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( MUC + MUR ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.05209895827232932}, {"determining": "( ( AMS - PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - DS ) + ( DS - RRSe ) ) / RMSe )", "obj1": 0.4959349593495935, "obj2": 0.26720277646799395}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,FirstVNF_CPU ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * MUM ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5711382113821138, "obj2": 0.21791943921503587}, {"determining": "( FirstVNF_CPU - ( Max( ( Max( AMS,Const ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ),PN ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( Max( MUC,MUR ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( RRSe * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2540650406504065, "obj2": 0.5436036091540888}, {"determining": "( ( ( ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) / DS ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * ( RRSe * MUR ) ) )", "obj1": 0.8861788617886179, "obj2": 0.06727195935757212}, {"determining": "( Max( ( FirstVNF_Mem + CRS ),Max( RRS,ACS ) ) - RRS )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( CS ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( CS + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.3353658536585366, "obj2": 0.45616508800767713}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( Max( PN,RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( MLU * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.17276422764227642, "obj2": 0.6086228634357277}, {"determining": "( ( Min( ( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / Max( ( ( CRS + DDR ) / ( FirstVNF_Mem / CRS ) ),( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "Max( ( ( ( Max( ( CS * CS ),RMSe ) * DS ) - ( RRSe / MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR + DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4634146341463415, "obj2": 0.2782947598429898}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) + ( ( AMS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) + ( DS - DS ) ) - Min( ( ( ( MUR / DS ) - ( DS * CS ) ) * CS ) ,( RRSe * CS ) ) ) / RMSe )", "obj1": 0.24390243902439024, "obj2": 0.55583966166577}, {"determining": "( ( Min( ( FirstVNF_RAM / AMS ) ,Min( FirstVNF_Mem ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS + DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "Max( ( ( ( Max( MUC,RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RMSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR + DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5623402744138958}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( RRSe * CS ) ) + ( DS - DS ) )", "obj1": 0.48577235772357724, "obj2": 0.2724221625537444}, {"determining": "( Max( AMS,PN ) - ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,RCSe ) * RMSe )", "obj1": 0.8821138211382114, "obj2": 0.07446658481187518}, {"determining": "( FirstVNF_CPU - ( Max( AMS,PN ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( Max( MUC,RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.9186991869918699, "obj2": 0.06272795530159146}, {"determining": "( Max( AMS,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,MUM ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.5345528455284553, "obj2": 0.2376703038021212}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RMSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( MUC * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6077235772357723, "obj2": 0.19973597125250894}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.3516260162601626, "obj2": 0.43938637544209086}, {"determining": "( Max( AMS,AMS ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + ( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ) * ( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.42073170731707316, "obj2": 0.3063285180870469}, {"determining": "( Max( AMS,Min( ( Max( Min( ( DDR + BR ) ,Min( MRS ,CRS ) ),( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_Mem ,Const ) ) ) / Min( ( ( MDR * DDR ) - ( FirstVNF_RAM_Server - BR ) ) ,( ( ACS * FirstVNF_CPU_Server ) + Max( ACS,FirstVNF_CPU ) ) ) ) ,( Min( ( ( FirstVNF_Mem + ARS ) + ( RRS + FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM ) ,( DDR / FirstVNF_RAM_Server ) ) ) + Min( ( ( AMS + MRS ) / ( Const * ARS ) ) ,( Max( PN,RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUR * DS )", "obj1": 0.8394308943089431, "obj2": 0.0957153364693737}, {"determining": "( ( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + FirstVNF_RAM_Server ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * ( RRSe * MUR ) ) )", "obj1": 0.8150406504065041, "obj2": 0.10322756988826708}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MDR - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * ( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) - ( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ) * ( ( DS - CS ) * ( ( MUR / DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.7987804878048781, "obj2": 0.11065552569369122}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( MUC * RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7560975609756098, "obj2": 0.14766868530231736}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.19715447154471544, "obj2": 0.5888461876695388}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * RCSe )", "obj1": 0.9634146341463414, "obj2": 0.026125383873084388}, {"determining": "( Max( AMS,RRS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( DS - RMSe ) * DS )", "obj1": 0.36585365853658536, "obj2": 0.4296116311048692}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.9796747967479674, "obj2": 0.013169871211898627}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * DS )", "obj1": 0.34552845528455284, "obj2": 0.45602925664893024}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.8475609756097561, "obj2": 0.09450530456431663}], "13": [{"determining": "( ( Min( RRS ,AMS ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( ( ( DS * MUR ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,RRS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( DS - RMSe ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe * MLU ) ) ) ) / DS )", "obj1": 0.07113821138211382, "obj2": 0.7503542628455735}, {"determining": "( Max( AMS,( ( FirstVNF_CPU - ( Max( FirstVNF_Mem,PN ) / FirstVNF_RAM_Server ) ) - RRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RMSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ) / DS )", "obj1": 0.3699186991869919, "obj2": 0.3996159416692049}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.3943089430894309, "obj2": 0.32156724754676097}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( ( DS - MLU ) + CS ) ) ) / DS )", "obj1": 0.08333333333333333, "obj2": 0.7129533561704331}, {"determining": "Max( Max( Max( Max( ( DDR - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,MRS ) ) ),AMS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.15853658536585366, "obj2": 0.6317018087666778}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_CPU ) ),Min( ( CRS / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ) )", "choosing": "( ( DS * MUR ) * DS )", "obj1": 0.13617886178861788, "obj2": 0.6591202056934534}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( DS - CS ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.6849593495934959, "obj2": 0.1573139870651723}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,( ARS / Max( FirstVNF_RAM_Server,MRS ) ) ),Max( ( Max( PN,RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( MLU * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.17276422764227642, "obj2": 0.6086228634357277}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MLU ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.11382113821138211, "obj2": 0.6964403339186874}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RMSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( MUC * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.6077235772357723, "obj2": 0.19973597125250894}, {"determining": "( Max( AMS,Max( AMS,PN ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( ( ( ( MLU - DS ) + ( DS - CS ) ) / DS ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.6483739837398373, "obj2": 0.1872336084815442}, {"determining": "( Max( AMS,Min( ( Max( Min( ( DDR + BR ) ,Min( MRS ,CRS ) ),( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_Mem ,Const ) ) ) * Min( ( ( MDR * DDR ) - ( FirstVNF_RAM_Server - BR ) ) ,( ( ACS * FirstVNF_CPU_Server ) + Max( ACS,FirstVNF_CPU ) ) ) ) ,( Min( ( ( FirstVNF_Mem + ARS ) + ( RRS + FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM ) ,( DDR / FirstVNF_RAM_Server ) ) ) + Min( ( ( AMS + MRS ) / ( Const * ARS ) ) ,( Max( PN,RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM * DS )", "obj1": 0.8821138211382114, "obj2": 0.0671134321073316}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / FirstVNF_CPU ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.27235772357723576, "obj2": 0.5171615119866968}, {"determining": "( ( Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) ) + Min( MDR ,RRS ) ) / ( ( ( CRS * FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) + ( ( AMS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) + ( DS - DS ) ) - Min( ( ( ( MUR / DS ) - ( DS * CS ) ) * CS ) ,( RRSe * CS ) ) ) / RMSe )", "obj1": 0.2926829268292683, "obj2": 0.5144479932994453}, {"determining": "( ( ( Min( PN ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( ( ( MRS + FirstVNF_Mem_Server ) * PN ),MDR ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) / ( MUC / Max( ( RRSe * MUR ),( RRSe / MUM ) ) ) ) - Min( ( RRSe * CS ) ,( RRSe + CS ) ) ) / DS )", "obj1": 0.13008130081300814, "obj2": 0.6849983048860935}, {"determining": "( Max( AMS,RRS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( DS - RMSe ) * DS )", "obj1": 0.36585365853658536, "obj2": 0.4296116311048692}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( AMS / Const ) ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( MLU - DS ) + ( DS - CS ) ) / RMSe ) - CS ) * CS )", "obj1": 0.31097560975609756, "obj2": 0.49168176866106494}, {"determining": "Max( ( FirstVNF_CPU_Server * DDR ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( ( RCSe * MLU ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( DS - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5866390759176409}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,( ( DS - CS ) / RRSe ) ) ) ) + ( CS * ( ( Min( MUC ,DS ) - MUC ) / ( ( RMSe * DS ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.782520325203252, "obj2": 0.11804345880434386}, {"determining": "( Max( AMS,AMS ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + ( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ) * ( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.42073170731707316, "obj2": 0.3063285180870469}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8394308943089431, "obj2": 0.09135727886589251}, {"determining": "( Max( AMS,Max( AMS,PN ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( ( ( ( MLU - DS ) + ( DS - CS ) ) / DS ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.6483739837398373, "obj2": 0.1872336084815442}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.540650406504065, "obj2": 0.2348126780283366}, {"determining": "( Max( AMS,Max( Const,Min( CRS ,FirstVNF_CPU ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * MUM ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * RMSe ) ) / ( RMSe * DS ) )", "obj1": 0.5691056910569106, "obj2": 0.22396577461252687}, {"determining": "( ( AMS - PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - DS ) + ( DS - RRSe ) ) / RMSe )", "obj1": 0.4959349593495935, "obj2": 0.26720277646799395}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / CRS )", "choosing": "Max( ( ( ( ( MUC * RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( ( MUR * DS ) + ( DS + MUR ) ) + ( DS + MUR ) ) ) )", "obj1": 0.7703252032520326, "obj2": 0.13821819348096345}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / FirstVNF_CPU ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.19308943089430894, "obj2": 0.593797527335827}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Max( Max( FirstVNF_CPU,BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.9817073170731707, "obj2": 0.011281132670887832}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR - MUM ) + ( CS * MUR ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * MUC ) )", "obj1": 0.6971544715447154, "obj2": 0.15497249025901053}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MDR - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * ( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) - ( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ) * ( ( DS - CS ) * ( ( MUR / DS ) + ( DS + MUR ) ) ) ) / ( MUR * DS ) )", "obj1": 0.7987804878048781, "obj2": 0.11065552569369122}, {"determining": "( Max( ( FirstVNF_Mem + ACS ),Max( BR,( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ) ) - RRS )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,MUR ) - ( DS - MLU ) )", "obj1": 0.3333333333333333, "obj2": 0.48443057631582437}, {"determining": "( ( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + FirstVNF_RAM_Server ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / ( RMSe * ( RRSe * MUR ) ) )", "obj1": 0.8150406504065041, "obj2": 0.10322756988826708}, {"determining": "( Max( ( FirstVNF_Mem + CRS ),Max( RRS,ACS ) ) - RRS )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( CS ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( CS + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.3353658536585366, "obj2": 0.45616508800767713}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / ( ( ( Min( ( FirstVNF_RAM / ACS ) ,Min( FirstVNF_Mem ,Const ) ) + FirstVNF_RAM_Server ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( FirstVNF_Mem ,MDR ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + RMSe ) ) ) ) / DS )", "obj1": 0.8597560975609756, "obj2": 0.07778826555515345}, {"determining": "( FirstVNF_CPU - ( Max( AMS,PN ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( Max( MUC,RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.9186991869918699, "obj2": 0.06272795530159146}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5934959349593496, "obj2": 0.20594826469892108}, {"determining": "( ( ( Min( ARS ,PN ) * ( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Min( Min( Min( AMS ,Const ) ,Min( MRS ,FirstVNF_RAM ) ) ,( ( CRS / AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,RCSe ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( Max( ( ( Max( ( ( RRSe * MUM ) + Max( DS,MUR ) ),( ( MLU * MUC ) + ( RRSe * MUC ) ) ) / ( ( Min( RMSe ,RMSe ) * ( RMSe / DS ) ) / ( ( MUC * MLU ) + ( DS / DS ) ) ) ) / ( Max( ( Min( RRSe ,DS ) * Max( RRSe,RRSe ) ),Max( ( RCSe - MUC ),( MUM + RCSe ) ) ) + ( ( ( RCSe + CS ) / ( MUM + RCSe ) ) - Max( ( DS + MLU ),( MUM - DS ) ) ) ) ),Min( ( ( Min( Max( MUM,MLU ) ,( MLU - MUR ) ) - ( Max( MUR,MLU ) + ( RMSe * RCSe ) ) ) / Max( Min( Min( RCSe ,RRSe ) ,( RCSe * DS ) ),( ( MUR * MUC ) + ( MUR / MUM ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Min( CS ,MUR ) ) - ( ( RCSe * MLU ) + Min( RRSe ,MUC ) ) ) + ( Min( Max( MUM,CS ) ,Max( CS,DS ) ) * Max( ( MUR - MLU ),( MUC - RCSe ) ) ) ) ) ) + ( ( ( Max( ( ( RMSe - RCSe ) * Max( CS,CS ) ),Min( ( MUC + DS ) ,( MUR / MLU ) ) ) + ( ( ( DS + MUC ) - Max( RCSe,MLU ) ) * ( ( RCSe / CS ) - ( DS - RMSe ) ) ) ) / ( Max( ( ( MLU * CS ) / ( CS - MUC ) ),( Min( MUR ,RRSe ) + Max( MLU,MUM ) ) ) - Min( ( ( RRSe - RCSe ) - ( RMSe + DS ) ) ,( ( MLU + RMSe ) - ( CS * MLU ) ) ) ) ) / ( Min( ( Max( ( RMSe * MLU ),( MUR * MUM ) ) / ( ( MLU / MUM ) + ( RMSe * RCSe ) ) ) ,Max( Max( ( RRSe * RRSe ),Min( DS ,MUR ) ),( Min( MUM ,DS ) - ( RRSe / MLU ) ) ) ) + Max( ( Max( ( MUC + RRSe ),Min( DS ,RRSe ) ) * ( Min( MUC ,MLU ) / ( MLU * RRSe ) ) ),( Max( Min( MUR ,MUR ),( DS + MLU ) ) * ( ( MUC * RMSe ) / ( DS / MUR ) ) ) ) ) ) ) )", "obj1": 0.19715447154471544, "obj2": 0.5888461876695388}, {"determining": "( FirstVNF_CPU - ( Max( ( Max( AMS,Const ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ),PN ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( Max( MUC,MUR ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( RRSe * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2540650406504065, "obj2": 0.5436036091540888}, {"determining": "( Max( PN,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) * ( RRSe * CS ) )", "obj1": 0.9491869918699187, "obj2": 0.040273473158159316}, {"determining": "( Max( ( ( ( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU - BR ) ) - ( ( MRS * FirstVNF_CPU_Server ) * ( RRS - BR ) ) ) + ( ( Max( ARS,MRS ) / ( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server + CRS ) - ( MRS - BR ) ) ) ) / Max( Max( Max( ( FirstVNF_CPU - RRS ),Min( RRS ,FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ARS ) / Max( PN,MRS ) ) ),Max( ( ( CRS * FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ),( Min( AMS ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) * ( ( ( Min( ( Const * FirstVNF_RAM_Server ) ,( BR - RRS ) ) * Max( ( FirstVNF_Mem / CRS ),Max( CRS,PN ) ) ) / ( ( Max( RRS,MRS ) + Min( BR ,DDR ) ) + Min( Min( Const ,FirstVNF_RAM ) ,Min( MRS ,ACS ) ) ) ) * ( ( Max( ( PN - MRS ),Max( ARS,ARS ) ) - ( Max( Const,FirstVNF_Mem ) / Max( BR,ACS ) ) ) - ( ( ( DDR - FirstVNF_CPU ) / ( PN * AMS ) ) / Min( Max( MDR,MDR ) ,Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.7296747967479674, "obj2": 0.14979624272556838}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,FirstVNF_CPU ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( RCSe * MUM ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.5833333333333334, "obj2": 0.2133406124781453}, {"determining": "( Max( AMS,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),Min( CRS ,Const ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS - MUR ) - MUR ) * DS )", "obj1": 0.3434959349593496, "obj2": 0.4443718202184151}, {"determining": "( Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) - RRS )", "choosing": "Max( ( ( ( Max( MUC,RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR + DS ) + ( DS + MUR ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5623402744138958}, {"determining": "( Max( AMS,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,MUM ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.5345528455284553, "obj2": 0.2376703038021212}, {"determining": "( Max( AMS,AMS ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - DS ) + ( DS - CS ) ) / DS )", "obj1": 0.4065040650406504, "obj2": 0.316152159838716}, {"determining": "( Max( AMS,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS - CS ) - CS ) ,( Max( Max( ( ( Max( MLU,MUM ) + ( CS + CS ) ) / Max( Min( RCSe ,CS ),( MUM - MUR ) ) ),( Max( ( MLU * MUR ),Min( RCSe ,MUC ) ) - ( Max( RRSe,MLU ) / ( MUR - DS ) ) ) ),Max( ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ),Min( ( ( CS + MUC ) - ( RMSe + MUM ) ) ,Max( ( MUM / RCSe ),( RRSe + CS ) ) ) ) ) + ( Max( Min( ( ( CS + DS ) + ( RRSe / CS ) ) ,( ( MUC / RRSe ) + Min( CS ,MUM ) ) ),( ( Max( RRSe,MUM ) * Max( CS,CS ) ) / ( ( DS / MLU ) + Min( MUR ,MUR ) ) ) ) * Min( Min( ( ( CS * CS ) / ( MUM + CS ) ) ,( Min( MUM ,MUM ) * ( DS * RCSe ) ) ) ,( ( ( MUC / MUC ) / ( RMSe + MUC ) ) - ( ( MUR / RCSe ) + ( MUC / MUM ) ) ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.5203252032520326, "obj2": 0.2472755617334836}, {"determining": "( Max( AMS,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / MUC ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * MUR ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.4532520325203252, "obj2": 0.29538718087367444}, {"determining": "( Min( ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_Mem / MRS ) ) ) + Max( Max( ( CRS / MDR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) / ( ( ( ( Const - ARS ) * ( FirstVNF_Mem - AMS ) ) + ( Min( MRS ,PN ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Min( ACS ,RRS ) ),( ( DDR + FirstVNF_Mem ) * ( CRS + BR ) ) ) ) ) + Max( ( ( ( ( ARS + RRS ) + ( FirstVNF_CPU_Server + ARS ) ) + ( ( MRS - BR ) * Min( BR ,MRS ) ) ) - Max( Min( ( RRS / MDR ) ,( ARS - AMS ) ),Min( ( CRS / PN ) ,( ACS / MDR ) ) ) ),( ( ( ( MRS + ACS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( Const + MRS ) - Max( DDR,BR ) ) ) + ( ( ( BR / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,ACS ) / Max( ACS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( ( Const * BR ) / Max( MDR,MRS ) ) ) / ( ( Max( MDR,MDR ) * ( PN / FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( PN * ARS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_RAM_Server * CRS ) / ( ARS * MDR ) ),Max( ( FirstVNF_Mem + ACS ),Max( RRS,ACS ) ) ) ) ) - ( ( ( ( Min( FirstVNF_CPU ,AMS ) - Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU + AMS ) ) ) - ( ( ( Const + DDR ) / ( RRS * Const ) ) - ( Max( ACS,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) / Max( Min( CRS ,FirstVNF_CPU_Server ),( MRS - BR ) ) ) / ( Min( ( Const - PN ) ,( PN + CRS ) ) * ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) / Max( FirstVNF_CPU_Server,( ( ( ( Min( ( ARS + RRS ) ,( RRS / RRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - BR ) ) ) / Min( ( ( MDR + BR ) - ( FirstVNF_RAM * RRS ) ) ,( ( Const * RRS ) / ( MDR / BR ) ) ) ) * Max( ( ( Min( CRS ,DDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( ( PN + BR ) / ( PN + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) * Min( MRS ,ARS ) ) * Max( ( MDR / CRS ),( DDR / BR ) ) ) ) ) / ( ( FirstVNF_Mem_Server + MRS ) * ( Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( BR * FirstVNF_Mem_Server ) ) ,( ( MDR - ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) * Min( Min( Min( PN ,PN ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS * ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( MUC * RMSe ) * DS ) - ( RRSe + MUC ) ) - ( Max( DS,RRSe ) * Min( DS ,MLU ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.7560975609756098, "obj2": 0.14766868530231736}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),( FirstVNF_Mem + CRS ) ) + Min( MDR ,RRS ) ) )", "choosing": "( Max( MUR,DS ) * ( Min( ( RCSe * MUC ) ,Min( MLU ,RMSe ) ) - ( ( MUC - MUM ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 0.959349593495935, "obj2": 0.029130250375554594}]}