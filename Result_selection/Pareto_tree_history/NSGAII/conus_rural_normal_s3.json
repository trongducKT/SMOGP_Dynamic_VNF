{"1": [{"determining": "( ( FirstVNF_Mem - ARS ) - Max( ( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + DS ) * ( ( CS + ( MUR - DS ) ) + RMSe ) )", "obj1": 0.47764227642276424, "obj2": 0.4202472339281251}, {"determining": "( ( PN / PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.32926829268292684, "obj2": 0.5005168188587477}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( RRSe + DS ) + ( MUR + MUR ) )", "obj1": 0.6117886178861789, "obj2": 0.2562598528431283}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * Min( MUC ,RCSe ) )", "obj1": 0.4634146341463415, "obj2": 0.4256459771212945}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( FirstVNF_Mem - BR ) ) - ARS ) ,Min( ACS ,DDR ) )", "choosing": "( Min( RCSe ,CS ) - ( RCSe + ( Min( RMSe ,( RMSe * RMSe ) ) / MUC ) ) )", "obj1": 0.9065040650406504, "obj2": 0.0990035653909965}, {"determining": "( ( Const / AMS ) - ( MRS * DDR ) )", "choosing": "( ( MUM + MUR ) * Max( DS,DS ) )", "obj1": 0.5833333333333334, "obj2": 0.3155031042991125}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + Min( ACS ,MRS ) ),BR ) + ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( MUC + ( ( RMSe * RCSe ) - ( CS + ( ( MUM - ( MLU + CS ) ) - RCSe ) ) ) ) - ( MLU / ( RCSe + DS ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ARS ) / ( AMS * FirstVNF_Mem ) )", "choosing": "( ( MUC / MLU ) / Max( DS,MUM ) )", "obj1": 0.2682926829268293, "obj2": 0.6127640770565935}, {"determining": "( Max( ARS,( PN - PN ) ) + ( BR - CRS ) )", "choosing": "( Min( MUR ,RCSe ) / ( RCSe - MLU ) )", "obj1": 0.2804878048780488, "obj2": 0.6118157495849121}, {"determining": "( ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MUC ) + ( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * FirstVNF_RAM_Server ) ,( ACS * RRS ) ) / ( Min( FirstVNF_Mem_Server ,PN ) * ( MDR - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / ( MUM / DS ) ) + ( DS * MUM ) )", "obj1": 0.5813008130081301, "obj2": 0.3209056580175497}, {"determining": "Min( ( Min( ACS ,MRS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( PN - FirstVNF_CPU ) * CRS ) - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUC ) / ( Max( RMSe,MUM ) / ( RRSe / MUC ) ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( ( CRS + MDR ) + ( BR - ARS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( RMSe + RMSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + MRS ) ),( BR + ( DDR * PN ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( Max( MUC,MUC ) / ( RRSe - DS ) ) )", "obj1": 0.22560975609756098, "obj2": 0.6468310315275366}, {"determining": "Min( ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - ( ARS / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * ( MUC / DS ) ) + ( ( MUC * MUC ) + Max( ( ( Max( Min( RRSe ,RMSe ),RRSe ) * RMSe ) * RRSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( RRS ,AMS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( MRS ,( PN - RRS ) ) ) ) )", "choosing": "Max( Min( ( MLU * RRSe ) ,DS ),Max( MUR,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( RRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RMSe ) / MLU ) * ( MLU * ( ( ( MLU - RMSe ) / DS ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * ( MDR + Const ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( RMSe ,MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS - PN ) ,( ARS / DDR ) ) * Min( ( FirstVNF_RAM + PN ) ,Min( PN ,DDR ) ) ) * ( Min( Min( DDR ,Const ) ,( DDR * FirstVNF_CPU ) ) / ( ( BR / ARS ) - ( CRS - MRS ) ) ) )", "choosing": "Max( ( RRSe / RCSe ),( CS + Max( RRSe,( MUC * MUC ) ) ) )", "obj1": 0.8475609756097561, "obj2": 0.1678938875523856}, {"determining": "( ( FirstVNF_CPU / CRS ) / ( MRS * FirstVNF_Mem ) )", "choosing": "Max( Min( RCSe ,( Max( DS,RRSe ) + ( RMSe - ( MLU + Max( RMSe,DS ) ) ) ) ),Min( CS ,( Max( DS,MUM ) / ( MLU * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,DDR ) ,Min( PN ,( FirstVNF_CPU_Server * Max( Min( ( CRS * FirstVNF_RAM_Server ) ,BR ),RRS ) ) ) )", "choosing": "( ( CS / Min( ( MLU / Max( MUM,Max( MLU,Max( Max( MUM,MUR ),DS ) ) ) ) ,RMSe ) ) - ( MUM / MUR ) )", "obj1": 0.943089430894309, "obj2": 0.03710097999289731}, {"determining": "( Min( Min( ( DDR * Const ) ,( CRS + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * Max( DDR,FirstVNF_Mem_Server ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( DS + MUC ) ) + ( ( MUM - RMSe ) + Max( DS,MUC ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( DS - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ( FirstVNF_Mem_Server * RRS ) ) ) ) + ( MRS - ( ACS / ( Max( FirstVNF_Mem_Server,BR ) + ( ( AMS + ACS ) - ( ( ( DDR / CRS ) / Min( BR ,AMS ) ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( MLU - Min( ( ( Max( MUC,( ( MUM / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5669810776158694}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( Min( MDR ,DDR ) - MRS ) ) ) - ( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC + Min( MUC ,( CS + ( Min( ( MUM - Min( CS ,MLU ) ) ,MUR ) - ( ( MUR / Max( CS,RCSe ) ) * ( RMSe * CS ) ) ) ) ) ) / ( MLU / MUR ) )", "obj1": 0.9715447154471545, "obj2": 0.015113998439609975}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const / FirstVNF_RAM ) ) * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * MLU ),CS ) ) )", "obj1": 0.9410569105691057, "obj2": 0.0557241125324581}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + AMS ),( FirstVNF_RAM - MDR ) ) * Max( ( DDR + FirstVNF_Mem ),Max( MDR,CRS ) ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - RRSe ) ) ) ,( Min( ( RCSe / RMSe ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,( CRS * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( MUM ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / MRS ) - ( AMS + Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,DDR ) ) ) )", "choosing": "( ( ( DS + ( MUM - MLU ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( RRS / ( MDR + ( ( ( PN * CRS ) * ACS ) * MRS ) ) ) * ( MDR + CRS ) ),( Const + FirstVNF_CPU ) )", "choosing": "( ( ( DS - Max( MLU,Max( ( ( RCSe - CS ) * ( RRSe - RRSe ) ),RCSe ) ) ) + ( ( Min( Max( ( CS / MUR ),RRSe ) ,MUR ) + RRSe ) - ( Min( DS ,( RRSe + RRSe ) ) / CS ) ) ) - ( ( ( MUR + CS ) - ( CS + RCSe ) ) - ( ( MLU / MLU ) + ( RMSe + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5669399500112732}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( ( MUC + ( RCSe + MUM ) ) + ( ( RMSe - RRSe ) + CS ) ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}], "2": [{"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - PN ) - Max( MRS,MRS ) )", "choosing": "( ( MLU / DS ) - ( MUM - Min( MUR ,MUC ) ) )", "obj1": 0.11382113821138211, "obj2": 0.7404501514352}, {"determining": "Min( ( Min( ACS ,MRS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( PN - FirstVNF_CPU ) * CRS ) - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUC ) / ( Max( RMSe,MUM ) / ( RRSe / MUC ) ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( ( MUM - Min( CS ,MLU ) ) ,MUR ) ) )", "obj1": 0.7235772357723578, "obj2": 0.19231270350841734}, {"determining": "( AMS - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUC ) * ( RCSe + MUC ) ) * ( MUC - ( MUR - RCSe ) ) ) * ( ( CS + ( MUR - DS ) ) + RMSe ) )", "obj1": 0.7865853658536586, "obj2": 0.1384966589617629}, {"determining": "( Max( Max( ( MDR - FirstVNF_RAM_Server ),( CRS * FirstVNF_Mem ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.4410569105691057, "obj2": 0.4168982398633093}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + MUM ) )", "obj1": 0.9065040650406504, "obj2": 0.09896412117317456}, {"determining": "Min( Min( MRS ,MDR ) ,Max( CRS,( FirstVNF_CPU_Server / MDR ) ) )", "choosing": "( ( ( ( RCSe * DS ) - ( ( MUR * MLU ) - ( MLU + RRSe ) ) ) - ( ( MLU / DS ) - ( ( MLU / MLU ) - ( CS + CS ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.573170731707317, "obj2": 0.296762643661243}, {"determining": "Min( ( ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ,( Const * PN ) )", "choosing": "Min( ( MLU * RCSe ) ,Max( MUC,CS ) )", "obj1": 0.6890243902439024, "obj2": 0.25496140485094015}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( ( DS + ( DS - RRSe ) ) / ( RCSe + RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "( ( ARS * ARS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) )", "obj1": 0.6991869918699187, "obj2": 0.22123290234491383}, {"determining": "Max( ( ( RRS - BR ) * DDR ),Min( DDR ,BR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( MUC * MLU ) ) + ( Max( MUR,MLU ) / ( ( CS - MLU ) / ( RMSe * RCSe ) ) ) ) - ( ( ( MUR + CS ) - ( CS + RCSe ) ) - ( ( MLU / MLU ) + ( RMSe + MUR ) ) ) )", "obj1": 0.18089430894308944, "obj2": 0.692520415405327}, {"determining": "( ( PN * Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( MRS ,( PN - RRS ) ) ),MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( ( RRSe + RCSe ) / RMSe ) / ( MUR * CS ) ) - ( Min( MUR ,MUM ) - Max( RRSe,MUC ) ) )", "obj1": 0.30284552845528456, "obj2": 0.5265630304488912}, {"determining": "( ( ARS * ARS ) - ( FirstVNF_CPU_Server * Max( ( ACS / FirstVNF_RAM ),( ( PN / FirstVNF_Mem ) - MDR ) ) ) )", "choosing": "( RCSe / Max( Min( RMSe ,MUC ),MUR ) )", "obj1": 0.9207317073170732, "obj2": 0.05892941952329521}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( Min( MDR ,DDR ) - MRS ) ) ) - ( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC + Min( MUC ,( CS + ( Min( ( MUM - Min( CS ,MLU ) ) ,MUR ) - ( ( MUR / Max( CS,RCSe ) ) * ( RMSe * CS ) ) ) ) ) ) / ( MLU / MUR ) )", "obj1": 0.2601626016260163, "obj2": 0.622547263425103}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5914634146341463, "obj2": 0.25690720834486774}, {"determining": "( ARS + ( Min( MDR ,AMS ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( DS - ( ( ( RRSe + MLU ) / MUM ) / ( RCSe + CS ) ) ) - RMSe ) ,( RCSe - MLU ) )", "obj1": 0.22560975609756098, "obj2": 0.6335623176804236}, {"determining": "Max( ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ),( ( AMS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.5365853658536586, "obj2": 0.3281011699691252}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ( FirstVNF_Mem_Server * RRS ) ) ) ) + ( MRS - ( ACS / ( Max( FirstVNF_Mem_Server,BR ) + ( ( AMS + ACS ) - ( ( ( DDR / CRS ) / Min( BR ,AMS ) ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( MLU - Min( ( ( Max( MUC,( ( MUM / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5669810776158694}, {"determining": "( ( Const - MDR ) * Max( ( ACS * FirstVNF_CPU ),( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + MUR ) )", "obj1": 0.6199186991869918, "obj2": 0.25514788960821044}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * ( Max( DS,MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.4186991869918699, "obj2": 0.44281619887135637}, {"determining": "Max( ( ( Const - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_RAM ) ),( ( ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) + Const ) * ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / Max( CS,CS ) ) ,( ( CS / DS ) - ( MUR - RCSe ) ) )", "obj1": 0.3475609756097561, "obj2": 0.4797277435422476}, {"determining": "( ( Const / AMS ) - ( MRS * DDR ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.5508130081300813, "obj2": 0.32371501397791114}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) )", "choosing": "( ( DS + DS ) - Min( MUM ,Min( MUR ,CS ) ) )", "obj1": 0.3902439024390244, "obj2": 0.45480908711518553}, {"determining": "( ( FirstVNF_RAM / ARS ) * ( AMS / ( ( FirstVNF_CPU + Const ) - PN ) ) )", "choosing": "Min( ( MUC * MUR ) ,( DS / RRSe ) )", "obj1": 0.8597560975609756, "obj2": 0.10928998215345764}, {"determining": "( Max( Const,ARS ) - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR + DS ) * ( ( CS + ( MUR - DS ) ) + RMSe ) )", "obj1": 0.8150406504065041, "obj2": 0.12432173217964618}, {"determining": "Min( Min( ACS ,( ( Max( MRS,( PN - ( BR - Const ) ) ) * FirstVNF_RAM ) - ACS ) ) ,( ARS - Const ) )", "choosing": "( Max( RCSe,MUC ) + Min( MUC ,( CS + Max( RRSe,Min( DS ,MUM ) ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5910942805748852}, {"determining": "( ( FirstVNF_RAM / ARS ) * ( ACS * ( ARS - ( ARS / ACS ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Max( DS,( CS + Min( CS ,MUR ) ) ) )", "obj1": 0.8597560975609756, "obj2": 0.10928998215345764}, {"determining": "Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) )", "obj1": 0.16463414634146342, "obj2": 0.7024587828756406}, {"determining": "( ( FirstVNF_Mem - ARS ) - Max( ( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + DS ) - ( ( CS + ( ( RRSe + MUR ) - DS ) ) / RMSe ) )", "obj1": 0.4247967479674797, "obj2": 0.41879046964167266}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.11991869918699187, "obj2": 0.723283799394736}, {"determining": "( ( FirstVNF_Mem - ARS ) - Max( ( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + DS ) * ( ( CS + ( MUR - DS ) ) + RMSe ) )", "obj1": 0.8150406504065041, "obj2": 0.12432173217964618}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9329268292682927, "obj2": 0.042510532839568835}, {"determining": "Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) )", "obj1": 0.16463414634146342, "obj2": 0.7024587828756406}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.3170731707317073, "obj2": 0.5025007541264532}, {"determining": "( ( PN + ( MDR - DDR ) ) * ( CRS + Min( ACS ,ACS ) ) )", "choosing": "Min( MUC ,Max( Max( DS,MLU ),( RRSe + RMSe ) ) )", "obj1": 0.983739837398374, "obj2": 0.012664155782697308}, {"determining": "( Max( ARS,PN ) + ( BR - MRS ) )", "choosing": "( Min( MUM ,RMSe ) / ( RCSe - MLU ) )", "obj1": 0.2804878048780488, "obj2": 0.5883959689617407}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - Min( RRS ,FirstVNF_RAM ) ) ,( ACS * FirstVNF_Mem ) ) ) * ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const / FirstVNF_RAM ) ) * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * MLU ),CS ) ) )", "obj1": 0.9613821138211383, "obj2": 0.030459232546290127}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.3353658536585366, "obj2": 0.4924109260248238}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( RRSe + DS ) + ( MUR + MUR ) )", "obj1": 0.6117886178861789, "obj2": 0.2562598528431283}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,MUC ) ) / ( MLU / MUR ) )", "obj1": 0.9634146341463414, "obj2": 0.01943143591350784}, {"determining": "( ( MDR - FirstVNF_Mem ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0029050177046252832}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) )", "obj1": 0.9715447154471545, "obj2": 0.01460389358578498}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.11991869918699187, "obj2": 0.723283799394736}, {"determining": "( ( FirstVNF_RAM * ARS ) / AMS )", "choosing": "( ( MUC / DS ) / Max( DS,MUM ) )", "obj1": 0.11788617886178862, "obj2": 0.7297728857636758}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "Max( ( CS / ( MUC * RCSe ) ),( MUR / Min( MLU ,MLU ) ) )", "obj1": 0.9451219512195121, "obj2": 0.03387561311031783}, {"determining": "( ( PN / PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.32926829268292684, "obj2": 0.5005168188587477}, {"determining": "( Max( ARS,( PN - PN ) ) + ( BR - CRS ) )", "choosing": "( Min( MUR ,RCSe ) / ( RCSe - MLU ) )", "obj1": 0.2845528455284553, "obj2": 0.5789138761662808}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( Const,RRS ) ) ) )", "choosing": "( ( CS / Min( ( MLU / ( MUC * RCSe ) ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.9390243902439024, "obj2": 0.03929402643286984}, {"determining": "( Max( CRS,Min( Min( Const ,BR ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( CS ,( RCSe / MUR ) ) - CS ) / Min( RCSe ,RMSe ) )", "obj1": 0.3170731707317073, "obj2": 0.5025007541264532}, {"determining": "( ( PN / PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.3313008130081301, "obj2": 0.49353666479684477}, {"determining": "( Max( ARS,( PN - PN ) ) + ( BR - CRS ) )", "choosing": "( Min( MUR ,RCSe ) / ( RCSe - MLU ) )", "obj1": 0.2845528455284553, "obj2": 0.5789138761662808}, {"determining": "Min( Max( AMS,DDR ) ,Min( PN ,( FirstVNF_CPU_Server * Max( Min( ( CRS * FirstVNF_RAM_Server ) ,BR ),RRS ) ) ) )", "choosing": "( ( CS / Min( ( MLU / Max( MUM,Max( MLU,Max( Max( MUM,MUR ),DS ) ) ) ) ,RMSe ) ) - ( MUM / MUR ) )", "obj1": 0.943089430894309, "obj2": 0.03710097999289731}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( RMSe - MLU ) ) ),Min( CS ,( Max( DS,MUM ) / ( MLU * RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + Min( ACS ,MRS ) ),BR ) + ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( MUC + ( ( RMSe * RCSe ) - ( CS + ( ( MUM - ( MLU + CS ) ) - RCSe ) ) ) ) - ( MLU / ( RCSe + DS ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MUC ) + ( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ( BR - ARS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( RMSe + RMSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - ( ARS / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * ( MUC / DS ) ) + ( ( MUC * MUC ) + Max( ( ( Max( Min( RRSe ,RMSe ),RRSe ) * RMSe ) * RRSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( RRS ,AMS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( MRS ,( PN - RRS ) ) ) ) )", "choosing": "Max( Min( ( MLU * RRSe ) ,DS ),Max( MUR,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( RRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RMSe ) / MLU ) * ( MLU * ( ( ( MLU - RMSe ) / DS ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * ( MDR + Const ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( RMSe ,MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / CRS ) / ( MRS * FirstVNF_Mem ) )", "choosing": "Max( Min( RCSe ,( Max( DS,RRSe ) + ( RMSe - ( MLU + Max( RMSe,DS ) ) ) ) ),Min( CS ,( Max( DS,MUM ) / ( MLU * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( CRS + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * Max( DDR,FirstVNF_Mem_Server ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( DS + MUC ) ) + ( ( MUM - RMSe ) + Max( DS,MUC ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( DS - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + AMS ),( FirstVNF_RAM - MDR ) ) * Max( ( DDR + FirstVNF_Mem ),Max( MDR,CRS ) ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - RRSe ) ) ) ,( Min( ( RCSe / RMSe ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,( CRS * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( MUM ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / MRS ) - ( AMS + Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,DDR ) ) ) )", "choosing": "( ( ( DS + ( MUM - MLU ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( ( MUC + ( RCSe + MUM ) ) + ( ( RMSe - RRSe ) + CS ) ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - Min( Min( FirstVNF_Mem_Server ,ACS ) ,( ARS - DDR ) ) ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( RCSe / MUC ) + Min( RCSe ,MUR ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) ),Min( CS ,( Max( DS,MUM ) / ( MLU * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / CRS ) / ( MDR - ACS ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( RCSe ,( ( DS + RRSe ) + ( RMSe - MLU ) ) ) ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / CRS ) / ( MDR - ACS ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Min( Const ,BR ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Min( RRSe ,RCSe ) - ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - Max( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ),Min( ARS ,( ( Min( BR ,DDR ) / ( RRS - Max( FirstVNF_Mem,DDR ) ) ) + ( DDR - Const ) ) ) ) ) )", "choosing": "Max( ( MLU / Min( ( RMSe * RCSe ) ,DS ) ),Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * CRS ) ) ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( MUC / DS ) ) + ( ( MUC * MUC ) + Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_Mem_Server - ACS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU / RCSe ) - ( MUR + RCSe ) ),Max( ( RMSe - RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( FirstVNF_CPU / CRS ) / ( MDR - ACS ) ) )", "choosing": "( Max( ( ( MLU * MUM ) / ( MUC - CS ) ),( ( CS * RCSe ) + ( RRSe / RMSe ) ) ) - Min( RCSe ,( ( DS + RRSe ) + ( RMSe - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / CRS ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( RMSe - MLU ) ) ),Min( CS ,( Max( DS,MUM ) / ( MLU * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( AMS - ACS ) - ACS ) )", "choosing": "Max( ( RMSe - CS ),( RCSe * ( ( DS - MUC ) - ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / CRS ) / ( MDR - ACS ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const - RRS ) / Min( DDR ,RRS ) ) * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( ( RMSe + MUR ) ,( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / Const ) ) )", "choosing": "( ( ( DS / MLU ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) * ( PN * ( Min( MRS ,PN ) * Min( FirstVNF_Mem ,( ( FirstVNF_RAM_Server / Min( ( DDR - BR ) ,FirstVNF_RAM_Server ) ) / RRS ) ) ) ) )", "choosing": "( ( ( Min( ( CS * RRSe ) ,Min( CS ,MLU ) ) - Max( MUM,MLU ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( MUM / CS ) + Min( CS ,MUM ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,FirstVNF_RAM_Server ) * MRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR + CS ) ) ) + ( ( ( RCSe + DS ) * MLU ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + AMS ),( FirstVNF_RAM - MDR ) ) * Max( ( Min( FirstVNF_Mem_Server ,PN ) * ( MDR - FirstVNF_RAM_Server ) ),Max( MDR,CRS ) ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - RRSe ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + AMS ),( FirstVNF_RAM - MDR ) ) * Max( ( DDR + FirstVNF_Mem ),Max( MDR,CRS ) ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - RRSe ) ) ) ,( Min( ( RCSe / RMSe ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,RRSe ) * Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,RRSe ) * Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( ( MRS - FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) ) ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MLU * RRSe ) ,DS ),( Max( MLU,RRSe ) + ( ( MUM - MUR ) * ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Const / AMS ) - Max( ARS,( PN - PN ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * ( Min( MUR ,RCSe ) / ( RCSe - MLU ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.09959349593495935, "obj2": 0.733688172572854}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.7601626016260162, "obj2": 0.11983745698377105}, {"determining": "Min( ( Min( ACS ,MRS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( PN - FirstVNF_CPU ) * CRS ) - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUC ) / ( Max( RMSe,MUM ) / ( RRSe / MUC ) ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( ARS * ARS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) )", "obj1": 0.7560975609756098, "obj2": 0.17422533059432926}, {"determining": "Max( ( ACS / FirstVNF_RAM ),ACS )", "choosing": "( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + MUR )", "obj1": 0.16260162601626016, "obj2": 0.6899019351742222}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - FirstVNF_RAM )", "choosing": "( ( MUM - ( MUC - DS ) ) / ( MLU / MUR ) )", "obj1": 0.8638211382113821, "obj2": 0.09534780162594488}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( DDR * ACS ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.9186991869918699, "obj2": 0.056858827424884864}, {"determining": "( Max( Const,ARS ) - Max( ACS,( Max( Min( FirstVNF_RAM ,( FirstVNF_CPU * FirstVNF_RAM ) ),ARS ) * ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR + DS ) * ( ( MUC + RCSe ) - ( Min( MLU ,MLU ) / MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.11240383918276513}, {"determining": "( Max( ARS,MRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RCSe ) / ( RCSe - ( CS / ( ( Max( Min( RCSe ,MUC ),Max( MLU,MUR ) ) / ( MLU - MLU ) ) - RCSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.38313386068736527}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6504065040650406, "obj2": 0.20265147360856564}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( ( MUM - Min( CS ,MLU ) ) ,MUR ) ) )", "obj1": 0.7235772357723578, "obj2": 0.19231270350841734}, {"determining": "( ( Const * MDR ) * Min( ARS ,ACS ) )", "choosing": "( ( DS + DS ) - ( ( MLU - MUC ) / RMSe ) )", "obj1": 0.6239837398373984, "obj2": 0.24556631038725568}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.22967479674796748, "obj2": 0.6129558180478493}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( RMSe / RMSe ) ) )", "obj1": 0.6727642276422764, "obj2": 0.19503471121719498}, {"determining": "Max( ( MDR / ACS ),Min( ( Max( CRS,ARS ) / MRS ) ,ARS ) )", "choosing": "( ( ( RCSe / RRSe ) / ( MUM / RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.3800813008130081, "obj2": 0.43009493214161454}, {"determining": "Min( Min( ACS ,( ( Max( MRS,( PN - ( BR - Const ) ) ) * FirstVNF_RAM ) - ACS ) ) ,( ARS - Const ) )", "choosing": "( Max( RCSe,MUC ) + Min( MUC ,( CS + Max( RRSe,Min( DS ,MUM ) ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5910942805748852}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ( FirstVNF_Mem_Server * RRS ) ) ) ) + ( MRS - ( ACS / ( Max( FirstVNF_Mem_Server,BR ) + ( ( AMS + ACS ) - ( ( ( DDR / CRS ) / Min( BR ,AMS ) ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( MLU - Min( ( ( Max( MUC,( ( MUM / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5669810776158694}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( PN * FirstVNF_Mem ) ) ) + Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,BR ) )", "choosing": "( ( RMSe * RCSe ) / Max( RRSe,RRSe ) )", "obj1": 0.29065040650406504, "obj2": 0.5280912969837723}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( ( DS + ( DS - RRSe ) ) / ( RCSe + RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.45934959349593496, "obj2": 0.40770561785128895}, {"determining": "Min( Min( MRS ,MDR ) ,Max( CRS,( FirstVNF_CPU_Server / MDR ) ) )", "choosing": "( ( ( ( RCSe * DS ) - ( ( MUR * MLU ) - ( MLU + RRSe ) ) ) - ( ( MLU / DS ) - ( ( MLU / MLU ) - ( CS + CS ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.573170731707317, "obj2": 0.296762643661243}, {"determining": "Max( ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ),( ( AMS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.5365853658536586, "obj2": 0.3281011699691252}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.1524390243902439, "obj2": 0.7046306371858625}, {"determining": "( ( Const - MDR ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,RRSe ) * Min( ( RMSe + RMSe ) ,MUC ) )", "obj1": 0.556910569105691, "obj2": 0.3101044555000274}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * ( Max( DS,MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.3699186991869919, "obj2": 0.45512767248269914}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( MUC / DS ) / Max( DS,MUM ) )", "obj1": 0.12804878048780488, "obj2": 0.7086424977263507}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.3516260162601626, "obj2": 0.47138072481527926}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5995934959349594, "obj2": 0.24870522100404252}, {"determining": "( ARS + ( Min( MDR ,AMS ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( DS - ( ( ( RRSe + MLU ) / MUM ) / ( RCSe + CS ) ) ) - RMSe ) ,( RCSe - MLU ) )", "obj1": 0.22560975609756098, "obj2": 0.6335623176804236}, {"determining": "( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( Min( Max( ( ACS * FirstVNF_Mem_Server ),CRS ) ,( ARS * ACS ) ),RRS ) ) ) + Min( ( DDR * PN ) ,( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * Min( PN ,MRS ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( ( DS / ( CS / Max( RMSe,RCSe ) ) ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.4268292682926829, "obj2": 0.4164703588167295}, {"determining": "( ( FirstVNF_Mem - ARS ) - Max( ( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + DS ) - ( ( CS + ( ( RRSe + MUR ) - DS ) ) / RMSe ) )", "obj1": 0.4247967479674797, "obj2": 0.41879046964167266}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( ( DS + ( DS - RRSe ) ) / ( RCSe + RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "( ( ( Const / AMS ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5853658536585366, "obj2": 0.25641085778834005}, {"determining": "( ( FirstVNF_RAM / ARS ) * ( AMS / ( ( FirstVNF_CPU + Const ) - PN ) ) )", "choosing": "Min( ( MUC * MUR ) ,( DS / RRSe ) )", "obj1": 0.8597560975609756, "obj2": 0.10928998215345764}, {"determining": "Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.31097560975609756, "obj2": 0.5259418090702239}, {"determining": "Max( ( ( Const - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_RAM ) ),( ( ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) + Const ) * ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / Max( CS,CS ) ) ,( ( CS / DS ) - ( MUR - RCSe ) ) )", "obj1": 0.3475609756097561, "obj2": 0.4797277435422476}, {"determining": "( Max( CRS,Min( Min( Const ,BR ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( CS ,( RCSe / MUR ) ) - CS ) / Min( RCSe ,RMSe ) )", "obj1": 0.3170731707317073, "obj2": 0.5025007541264532}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( ( RRS - ( CRS * Max( ACS,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ACS ) ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Max( RCSe,MLU ) * ( Max( DS,MUM ) / ( RRSe * MLU ) ) ),RCSe ) / ( Min( ( MUR * RMSe ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.44349251015195756}, {"determining": "( ( Const - MDR ) * Max( AMS,DDR ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) / RRSe ) ) ) )", "obj1": 0.5792682926829268, "obj2": 0.2800594923366787}, {"determining": "( Max( ARS,( PN - Min( FirstVNF_Mem ,DDR ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( RMSe * DS ) ,RCSe ) / ( RCSe - MLU ) )", "obj1": 0.27439024390243905, "obj2": 0.5847416635571662}, {"determining": "( ( Const - MDR ) * ( ( ( CRS / ( CRS / MDR ) ) + ( Min( DDR ,( ( Min( DDR ,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) - PN ) ) * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "( Max( MUC,DS ) + ( ( MUR + Max( DS,RRSe ) ) + Max( ( CS * RCSe ),( RRSe / CS ) ) ) )", "obj1": 0.5813008130081301, "obj2": 0.2710760945338943}, {"determining": "( Max( ( Min( MDR ,FirstVNF_CPU_Server ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( Min( ( BR / DDR ) ,Min( PN ,( PN / RRS ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,( RCSe * ( DS + MUR ) ) ) / ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.026046128947942566}, {"determining": "( ( FirstVNF_RAM * ARS ) / AMS )", "choosing": "( ( MUC / DS ) / Max( DS,MUM ) )", "obj1": 0.11788617886178862, "obj2": 0.7297728857636758}, {"determining": "( ( Const / AMS ) - ( MRS * DDR ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.5487804878048781, "obj2": 0.3230050123851809}, {"determining": "( ( PN / PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.32926829268292684, "obj2": 0.5005168188587477}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.9715447154471545, "obj2": 0.010605459285534557}, {"determining": "( ( PN * Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( MRS ,( PN - RRS ) ) ),MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( ( RRSe + RCSe ) / RMSe ) / ( MUR * CS ) ) - ( Min( MUR ,MUM ) - Max( RRSe,MUC ) ) )", "obj1": 0.30284552845528456, "obj2": 0.5265630304488912}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( Const,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + MUR ) )", "obj1": 0.983739837398374, "obj2": 0.005482520958253514}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),( Min( MDR ,DDR ) - MRS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUM - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.9227642276422764, "obj2": 0.04878212798618375}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ( FirstVNF_Mem_Server * RRS ) ) ) ) + ( MRS - ( ACS / ( Max( FirstVNF_Mem_Server,BR ) + ( ( AMS + ACS ) - ( ( ( DDR / CRS ) / Min( BR ,AMS ) ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( MLU - Min( ( ( Max( MUC,( ( MUM / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5751899068553278}, {"determining": "( Max( ( Min( MDR ,Const ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,MUC ) ) / ( DS / MUC ) )", "obj1": 0.9451219512195121, "obj2": 0.03231494949431395}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( ( DS + ( DS - RRSe ) ) / ( RCSe + RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.45934959349593496, "obj2": 0.40770561785128895}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.11991869918699187, "obj2": 0.723283799394736}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.3353658536585366, "obj2": 0.4924109260248238}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,MUC ) ) / ( MLU / MUR ) )", "obj1": 0.9634146341463414, "obj2": 0.01943143591350784}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( MLU - ( ( DS * ( Max( MUC,( ( MUR / MLU ) / MUM ) ) / MLU ) ) / RRSe ) ) )", "obj1": 0.540650406504065, "obj2": 0.32316145614850533}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( AMS / FirstVNF_RAM ) + Const ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( ( MUM + CS ) + RRSe ) ) ) / ( MLU / MUR ) )", "obj1": 0.9878048780487805, "obj2": 0.00522040453958971}, {"determining": "Min( ( ( CRS * PN ) * ACS ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / Min( RRSe ,Min( DS ,MLU ) ) ) + ( ( MLU + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.967479674796748, "obj2": 0.012331450247960736}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( Const,RRS ) ) ) )", "choosing": "( ( CS / Min( ( MLU / ( MUC * RCSe ) ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.9390243902439024, "obj2": 0.03929402643286984}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.11991869918699187, "obj2": 0.723283799394736}, {"determining": "( ( PN / PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.3313008130081301, "obj2": 0.49353666479684477}, {"determining": "( Max( Const,ARS ) - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR + DS ) - ( ( CS + ( MUR - DS ) ) + RMSe ) )", "obj1": 0.4247967479674797, "obj2": 0.41879046964167266}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( MDR - MRS ) - ( FirstVNF_Mem + RRS ) ) ) )", "choosing": "( ( RMSe / RMSe ) - ( MUR / MUM ) )", "obj1": 0.9959349593495935, "obj2": 0.00146245980591839}, {"determining": "( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( RCSe - MLU ) )", "obj1": 0.22560975609756098, "obj2": 0.6335623176804236}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( CS / Min( ( MLU / MLU ) ,( CS * RCSe ) ) ) - ( MUR / MUM ) )", "obj1": 0.943089430894309, "obj2": 0.033591252099194814}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9247967479674797, "obj2": 0.043551502970079585}, {"determining": "Max( ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ),( ( AMS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.5365853658536586, "obj2": 0.3281011699691252}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ( FirstVNF_Mem_Server * RRS ) ) ) ) + ( MRS - ( ACS / ( Max( FirstVNF_Mem_Server,BR ) + ( ( AMS + ACS ) - ( ( ( DDR / CRS ) / Min( BR ,AMS ) ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( MLU - Min( ( ( Max( MUC,( ( MUM / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5751899068553278}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.3353658536585366, "obj2": 0.4924109260248238}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,MUC ) ) / ( MLU / MUR ) )", "obj1": 0.9654471544715447, "obj2": 0.01922644901263807}, {"determining": "( Max( ( Min( MDR ,( Const / CRS ) ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( RRSe / Min( RCSe ,( ( DS + RRSe ) + ( RMSe - MLU ) ) ) ) ) ) / ( MLU / MUR ) )", "obj1": 0.9369918699186992, "obj2": 0.0421839178267639}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( Min( MDR ,CRS ),( Const * ( CRS + FirstVNF_RAM ) ) ) ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe - RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( ( MLU / DS ) ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9308943089430894, "obj2": 0.043506615050165384}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.3170731707317073, "obj2": 0.5025007541264532}, {"determining": "( ( FirstVNF_RAM / ARS ) * ( ACS * ( ARS - ( ARS / ACS ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Max( DS,( CS + Min( CS ,MUR ) ) ) )", "obj1": 0.8597560975609756, "obj2": 0.10928998215345764}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0006760088265171114}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ) ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( CS + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9329268292682927, "obj2": 0.042510532839568835}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9329268292682927, "obj2": 0.042510532839568835}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + Min( ACS ,MRS ) ),BR ) + ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( MUC + ( ( RMSe * RCSe ) - ( CS + ( ( MUM - ( MLU + CS ) ) - RCSe ) ) ) ) - ( MLU / ( RCSe + DS ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MUC ) + ( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ( BR - ARS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( RMSe + RMSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - ( ARS / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * ( MUC / DS ) ) + ( ( MUC * MUC ) + Max( ( ( Max( Min( RRSe ,RMSe ),RRSe ) * RMSe ) * RRSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( RRS ,AMS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( MRS ,( PN - RRS ) ) ) ) )", "choosing": "Max( Min( ( MLU * RRSe ) ,DS ),Max( MUR,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( RRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RMSe ) / MLU ) * ( MLU * ( ( ( MLU - RMSe ) / DS ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * ( MDR + Const ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( RMSe ,MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / CRS ) / ( MRS * FirstVNF_Mem ) )", "choosing": "Max( Min( RCSe ,( Max( DS,RRSe ) + ( RMSe - ( MLU + Max( RMSe,DS ) ) ) ) ),Min( CS ,( Max( DS,MUM ) / ( MLU * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( CRS + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * Max( DDR,FirstVNF_Mem_Server ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( DS + MUC ) ) + ( ( MUM - RMSe ) + Max( DS,MUC ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( DS - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + AMS ),( FirstVNF_RAM - MDR ) ) * Max( ( DDR + FirstVNF_Mem ),Max( MDR,CRS ) ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - RRSe ) ) ) ,( Min( ( RCSe / RMSe ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,( CRS * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( MUM ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / MRS ) - ( AMS + Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,DDR ) ) ) )", "choosing": "( ( ( DS + ( MUM - MLU ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( ( MUC + ( RCSe + MUM ) ) + ( ( RMSe - RRSe ) + CS ) ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( RRS ,( CRS * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( MUM ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - Max( ARS,( PN - PN ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * ( Min( MUR ,RCSe ) / ( RCSe - MLU ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS + ( MUR - ( MUC - MUR ) ) ) + RMSe ) / ( DS / DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7181452219006024}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07620345692189875}, {"determining": "( Max( ( ( AMS / FirstVNF_RAM ) + PN ),( Min( MDR ,DDR ) - MRS ) ) - ( AMS + ARS ) )", "choosing": "( DS * ( ( MUM - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.8739837398373984, "obj2": 0.07384137295889892}, {"determining": "( ( Const - ( ( BR * MRS ) + ( MDR + ( Max( FirstVNF_RAM_Server,ACS ) / ( RRS + PN ) ) ) ) ) - ( MRS * DDR ) )", "choosing": "( Max( MLU,MUM ) * ( MUC * Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.45121951219512196, "obj2": 0.3674120526532742}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( RMSe * RCSe ) / Max( RRSe,RRSe ) )", "obj1": 0.7235772357723578, "obj2": 0.17158998102905282}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) + Min( Max( FirstVNF_CPU_Server,( ( ( Const - MDR ) * ( AMS * AMS ) ) * ( BR / FirstVNF_Mem ) ) ) ,BR ) )", "choosing": "( ( ( ( RRSe + MUR ) - DS ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.24390243902439024, "obj2": 0.5896309202940719}, {"determining": "Min( ( Min( ACS ,MRS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( PN - FirstVNF_CPU ) * CRS ) - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUC ) / ( Max( RMSe,MUM ) / ( RRSe / MUC ) ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( Const - ( ( FirstVNF_CPU * DDR ) * Max( FirstVNF_CPU,RRS ) ) ) - ( MRS * CRS ) )", "choosing": "( ( Min( DS ,MUM ) / ( CS - ( MLU - ( RMSe / MUM ) ) ) ) + ( ( MLU - DS ) * Max( MUM,MUM ) ) )", "obj1": 0.5223577235772358, "obj2": 0.3339007774631954}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( Max( RMSe,MUC ) / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.2621951219512195, "obj2": 0.5465086934682046}, {"determining": "( ARS + Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) ,( RCSe - MLU ) )", "obj1": 0.18902439024390244, "obj2": 0.6584173260063644}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.7601626016260162, "obj2": 0.11983745698377105}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( Min( MLU ,( CS + ( MUR - DS ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.5264227642276422, "obj2": 0.28384681369784565}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.3800813008130081, "obj2": 0.43009493214161454}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.7601626016260162, "obj2": 0.11983745698377105}, {"determining": "( ( AMS / MRS ) - Min( MRS ,DDR ) )", "choosing": "( Min( Min( Min( MUM ,MUC ) ,MLU ) ,CS ) / ( RMSe * RCSe ) )", "obj1": 0.5630081300813008, "obj2": 0.26287031052258103}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * Min( ( RRS / FirstVNF_Mem_Server ) ,CRS ) ) ),CRS ) * ( AMS * AMS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( MLU,MUR ) ) + ( Min( MLU ,( RCSe / ( MUC - DS ) ) ) - CS ) ) )", "obj1": 0.43089430894308944, "obj2": 0.39953530542613885}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( MUM - RMSe ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6971544715447154, "obj2": 0.17286338899992565}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( ( MLU / RCSe ) - ( DS + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6321138211382114, "obj2": 0.22377570463752344}, {"determining": "Min( Max( AMS,DDR ) ,( ( Const - MDR ) * ( AMS * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RRSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5365853658536586, "obj2": 0.2796866850406536}, {"determining": "( ( ( Const / AMS ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.6036585365853658, "obj2": 0.23907447421709901}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),( Min( MDR ,DDR ) - MRS ) ) - ( AMS + ARS ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.9024390243902439, "obj2": 0.06056828490562896}, {"determining": "( ( Const - MDR ) - ( MRS * Max( FirstVNF_Mem,MDR ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.6808943089430894, "obj2": 0.19114911334867715}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.27439024390243905, "obj2": 0.5320644396017117}, {"determining": "Max( ( ACS / FirstVNF_RAM ),ACS )", "choosing": "( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + MUR )", "obj1": 0.16260162601626016, "obj2": 0.6899019351742222}, {"determining": "( ( FirstVNF_Mem - ARS ) - Max( ( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + DS ) - ( ( CS + ( ( RRSe + MUR ) - DS ) ) / RMSe ) )", "obj1": 0.4247967479674797, "obj2": 0.41879046964167266}, {"determining": "Max( PN,( ( CRS - AMS ) - ( ACS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS * ( MUM - MUM ) ) + Min( RRSe ,( Max( MUR,Min( MUC ,MUC ) ) * CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.3048780487804878, "obj2": 0.5108885220597449}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7180360383701987}, {"determining": "( ARS + ( Min( MDR ,AMS ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( DS - ( ( ( RRSe + MLU ) / MUM ) / ( RCSe + CS ) ) ) - RMSe ) ,( RCSe - MLU ) )", "obj1": 0.22560975609756098, "obj2": 0.6335623176804236}, {"determining": "Max( ( ACS / FirstVNF_RAM ),ACS )", "choosing": "( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + MUR )", "obj1": 0.16260162601626016, "obj2": 0.6899019351742222}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( RMSe / RMSe ) ) )", "obj1": 0.6727642276422764, "obj2": 0.19503471121719498}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( MUM ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.6422764227642277, "obj2": 0.21689314995589462}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.1524390243902439, "obj2": 0.7046306371858625}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.34146341463414637, "obj2": 0.47770101140674937}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( ( RRS - ( CRS * Max( ACS,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ACS ) ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Max( RCSe,MLU ) * ( Max( DS,MUM ) / ( RRSe * MLU ) ) ),RCSe ) / ( Min( ( MUR * RMSe ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.44349251015195756}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6504065040650406, "obj2": 0.20265147360856564}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.22967479674796748, "obj2": 0.6129558180478493}, {"determining": "( ( ( Const / AMS ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5853658536585366, "obj2": 0.25641085778834005}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) - Max( ( MDR + ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server / Min( CRS ,Const ) ) - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) - Max( ( Min( ( ( CS - RCSe ) * MUM ) ,Min( MUR ,( CS / DS ) ) ) * CS ),Min( RRSe ,DS ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.34959349593495936, "obj2": 0.46602531080646714}, {"determining": "( Max( ARS,MRS ) + ( BR - CRS ) )", "choosing": "( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6368897819482239}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( ( AMS * AMS ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) )", "obj1": 0.32723577235772355, "obj2": 0.49024093856001927}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( MUC / DS ) / Max( DS,MUM ) )", "obj1": 0.12804878048780488, "obj2": 0.7086424977263507}, {"determining": "Max( ( ACS / FirstVNF_RAM ),ACS )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.29471544715447157, "obj2": 0.5221035313606238}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.3556910569105691, "obj2": 0.45849862916803924}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.22967479674796748, "obj2": 0.6129558180478493}, {"determining": "( ( ( Const / AMS ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5955284552845529, "obj2": 0.24350685074395764}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.33739837398373984, "obj2": 0.4896242755604026}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * ( Max( DS,MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.3699186991869919, "obj2": 0.45512767248269914}, {"determining": "( Max( CRS,Min( Min( Const ,BR ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( CS ,( RCSe / MUR ) ) - CS ) / Min( RCSe ,RMSe ) )", "obj1": 0.3170731707317073, "obj2": 0.5025007541264532}, {"determining": "Min( AMS ,( ARS / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS / Min( MUC ,MUC ) ) - MUC ) + CS ) * ( RCSe - CS ) ) - ( MUR / MUM ) )", "obj1": 0.9573170731707317, "obj2": 0.017665787177784262}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( ( DS + ( DS - RRSe ) ) / ( RCSe + RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.5894308943089431, "obj2": 0.2526779808420504}, {"determining": "( ( ( ( FirstVNF_RAM - DDR ) / ( ACS * Const ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * Max( ( FirstVNF_RAM_Server / Min( AMS ,FirstVNF_Mem ) ),Const ) ) ) ) + ( ( ( PN + CRS ) + ( AMS / ACS ) ) * Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( DS + RCSe ) ,( CS + MUC ) ) / Max( MLU,RCSe ) )", "obj1": 0.42886178861788615, "obj2": 0.4111229863651711}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / DS ) / Max( DS,MUM ) )", "obj1": 0.943089430894309, "obj2": 0.03113932707981173}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( PN * FirstVNF_Mem ) ) ) + Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,BR ) )", "choosing": "( ( RMSe * RCSe ) / Max( RRSe,RRSe ) )", "obj1": 0.29065040650406504, "obj2": 0.5280912969837723}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( MUC / DS ) / Max( DS,MUM ) )", "obj1": 0.12804878048780488, "obj2": 0.7086424977263507}, {"determining": "( ( Min( Max( RRS,PN ) ,FirstVNF_Mem_Server ) / PN ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( Min( RCSe ,DS ) - Min( ( DS / RMSe ) ,MLU ) ) )", "obj1": 0.3170731707317073, "obj2": 0.5025007541264532}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( Const,RRS ) ) ) )", "choosing": "( ( CS / Min( ( MLU / ( MUC * RCSe ) ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.9390243902439024, "obj2": 0.03929402643286984}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6504065040650406, "obj2": 0.20265147360856564}, {"determining": "Max( ( MDR / ACS ),Min( ( Max( CRS,ARS ) / MRS ) ,ARS ) )", "choosing": "( ( ( RCSe / RRSe ) / ( MUM / RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.9654471544715447, "obj2": 0.012932084647115809}, {"determining": "( Max( Const,ARS ) - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR + DS ) - ( ( CS + ( MUR - DS ) ) + RMSe ) )", "obj1": 0.4247967479674797, "obj2": 0.41879046964167266}, {"determining": "Min( AMS ,Min( ACS ,( ( Const / ( RRS - BR ) ) * PN ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - ( CS * MUC ) ) ,( MLU - Min( ( ( Max( MUC,( ( DS / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.9471544715447154, "obj2": 0.026786900600485594}, {"determining": "( Max( ARS,MRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.1524390243902439, "obj2": 0.7046306371858625}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9247967479674797, "obj2": 0.043551502970079585}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( AMS / FirstVNF_RAM ) + Const ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( ( MUM + CS ) + RRSe ) ) ) / ( MLU / MUR ) )", "obj1": 0.9878048780487805, "obj2": 0.00522040453958971}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),( Min( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ( FirstVNF_Mem_Server * RRS ) ) ) ) ,DDR ) - MRS ) ) - ( Max( ( ARS - FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,( DDR / FirstVNF_RAM_Server ) ) ) / MDR ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( Max( Max( ( MLU / Min( DS ,Min( MUR ,MUR ) ) ),MUR ),Min( ( Max( MUM,( MLU + RCSe ) ) - DS ) ,RMSe ) ) * ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) ) ) * ( ( MUC - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.9207317073170732, "obj2": 0.050614737406037946}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) ) - ( AMS + ARS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.9105691056910569, "obj2": 0.05707334743927718}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( RMSe * RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002090553275082411}, {"determining": "( Max( ( Min( MDR ,MRS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUC ) - ( RCSe * CS ) )", "obj1": 0.975609756097561, "obj2": 0.009304536589687185}, {"determining": "( Max( ( Min( MDR ,FirstVNF_CPU_Server ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( Min( ( BR / DDR ) ,Min( PN ,( PN / RRS ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,( RCSe * ( DS + MUR ) ) ) / ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.026046128947942566}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.9085365853658537, "obj2": 0.05930353666774613}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.05341595139985091}, {"determining": "( Max( ( Min( MDR ,( Const / CRS ) ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( RRSe / Min( RCSe ,( ( DS + RRSe ) + ( RMSe - MLU ) ) ) ) ) ) / ( MLU / MUR ) )", "obj1": 0.9369918699186992, "obj2": 0.0421839178267639}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( Min( CRS ,FirstVNF_Mem_Server ),Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),Min( DDR ,( FirstVNF_Mem_Server * RRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + ( DS * ( Max( MUC,( ( MUM / Max( ( RRSe / MLU ),Min( RRSe ,RRSe ) ) ) / MUM ) ) / MLU ) ) )", "obj1": 0.9796747967479674, "obj2": 0.006886321344594493}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( Min( MDR ,CRS ),( Const * ( CRS + FirstVNF_RAM ) ) ) ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe - RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( ( MLU / DS ) ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9308943089430894, "obj2": 0.043506615050165384}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( ( Min( MLU ,( CS + ( MUR - DS ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.29065040650406504, "obj2": 0.5280912969837723}, {"determining": "( Max( ( ( ( FirstVNF_CPU / CRS ) / ( MDR - ACS ) ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,RMSe ) ) / ( MLU / MUR ) )", "obj1": 0.9532520325203252, "obj2": 0.026323976308587845}, {"determining": "( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( Min( Max( ( ACS * FirstVNF_Mem_Server ),CRS ) ,( ARS * ACS ) ),RRS ) ) ) + Min( ( DDR * PN ) ,( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * Min( PN ,MRS ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( ( DS / ( CS / Max( RMSe,RCSe ) ) ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.4268292682926829, "obj2": 0.4164703588167295}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),( Min( MDR ,DDR ) - MRS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUM - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.9227642276422764, "obj2": 0.04878212798618375}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * ( Max( DS,MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.3699186991869919, "obj2": 0.45512767248269914}, {"determining": "( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( RCSe - MLU ) )", "obj1": 0.22560975609756098, "obj2": 0.6335623176804236}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.05341595139985091}, {"determining": "Min( ( MDR - FirstVNF_Mem_Server ) ,( PN - ( Max( Const,RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) ) ) )", "choosing": "( ( DS + DS ) - ( ( ( CS - RMSe ) / RCSe ) / RMSe ) )", "obj1": 0.983739837398374, "obj2": 0.005410939775929016}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.9715447154471545, "obj2": 0.010605459285534557}, {"determining": "Min( ( ARS - Max( ( ARS / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ,AMS )", "choosing": "( ( DS * ( RMSe / MUC ) ) * ( ( DS + ( MLU - MUM ) ) + ( CS / RMSe ) ) )", "obj1": 0.9817073170731707, "obj2": 0.00617075320172088}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( MDR - MRS ) - ( FirstVNF_Mem + RRS ) ) ) )", "choosing": "( ( RMSe / RMSe ) - ( MUR / MUM ) )", "obj1": 0.9959349593495935, "obj2": 0.00146245980591839}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.9715447154471545, "obj2": 0.010605459285534557}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ) ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( CS + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9329268292682927, "obj2": 0.042510532839568835}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.4268292682926829, "obj2": 0.4164703588167295}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Min( ( AMS - ARS ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( MUR,DS ) ) + ( ( ( DS + MLU ) * RCSe ) * ( RMSe / RRSe ) ) ) )", "obj1": 0.967479674796748, "obj2": 0.012331450247960736}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),( Min( MDR ,DDR ) - MRS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUM - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.9227642276422764, "obj2": 0.04878212798618375}, {"determining": "Min( ( ( CRS * PN ) * ACS ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / Min( RRSe ,Min( DS ,MLU ) ) ) + ( ( MLU + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.967479674796748, "obj2": 0.012331450247960736}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( DDR,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - Min( RCSe ,( MUC - RMSe ) ) ) ) + ( ( ( ( RCSe + MUC ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0006760088265171114}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0006760088265171114}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ) ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( CS + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9329268292682927, "obj2": 0.042510532839568835}, {"determining": "( Max( ( Min( MDR ,ACS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,( RRSe * DS ) ) / ( MLU / RCSe ) )", "obj1": 0.9552845528455285, "obj2": 0.026046128947942566}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( DDR,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,( CRS * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( MUM ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),MRS ) + Min( DDR ,Min( ( AMS - DDR ) ,RRS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS + ( MUM / Min( MUM ,RCSe ) ) ) + Min( CS ,RMSe ) ) / RMSe ) + DS ) ) * Max( MLU,MUM ) )", "obj1": 0.08536585365853659, "obj2": 0.7364634934809794}, {"determining": "( ( Min( Min( Const ,RRS ) ,CRS ) / Min( MDR ,DDR ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( DS,Min( DS ,MUR ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( DS + MUM ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.12601626016260162, "obj2": 0.6743836691553738}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( MUM ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.758130081300813, "obj2": 0.11973023080456008}, {"determining": "( Min( MRS ,FirstVNF_CPU ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( DS / MUC ) - ( ( ( RCSe - ( MUR + ( Min( Max( RRSe,MLU ) ,( DS + CS ) ) / CS ) ) ) - RMSe ) * CS ) )", "obj1": 0.7113821138211383, "obj2": 0.14671827074388633}, {"determining": "Min( Max( AMS,FirstVNF_CPU ) ,( PN - ( ( ARS * MRS ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( ( DS / Max( Min( ( MUM - RMSe ) ,Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( ( RCSe * Min( Max( RCSe,( ( ( CS - MUM ) / MUC ) - MUM ) ) ,RRSe ) ),MUR ) )", "obj1": 0.8089430894308943, "obj2": 0.06967848549826959}, {"determining": "( MDR - ( Min( ( MRS / ACS ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( Min( ( RMSe / Min( MUR ,( RRSe / ( MLU * ( Min( RMSe ,RCSe ) + MUR ) ) ) ) ) ,DS ) ,( CS - CS ) )", "obj1": 0.8617886178861789, "obj2": 0.0629932764175904}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.42073170731707316, "obj2": 0.39378899420504954}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Min( ( ( FirstVNF_CPU_Server * ( Const / AMS ) ) / Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ACS ) * ( BR / FirstVNF_Mem ) ) ) ) ,ARS ) )", "choosing": "( ( MUC / DS ) / ( ( CS + ( MLU * CS ) ) + RMSe ) )", "obj1": 0.1016260162601626, "obj2": 0.7121113382038048}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) + Min( Max( FirstVNF_CPU_Server,( ( ( Const - MDR ) * ( AMS * AMS ) ) * ( BR / FirstVNF_Mem ) ) ) ,BR ) )", "choosing": "( ( ( ( RRSe + MUR ) - DS ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.24390243902439024, "obj2": 0.5896309202940719}, {"determining": "( ( ARS * ARS ) - Max( Max( FirstVNF_Mem_Server,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,CRS ) / BR ) - ( FirstVNF_RAM_Server * CRS ) ) ) ) ) )", "choosing": "( ( CS + MLU ) / Max( CS,MUR ) )", "obj1": 0.5772357723577236, "obj2": 0.2381490203322402}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07620345692189875}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.6260162601626016, "obj2": 0.22685292549013075}, {"determining": "( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * Max( Const,( ( BR + FirstVNF_CPU_Server ) - RRS ) ) ) ) ,( ( PN * AMS ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( MUR + RCSe ) / ( ( ( MUR + Max( MUR,MLU ) ) + Max( ( CS * RCSe ),( CS / RRSe ) ) ) * RCSe ) )", "obj1": 0.2601626016260163, "obj2": 0.5572536057878164}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.4634146341463415, "obj2": 0.35917230809582895}, {"determining": "( ( Const - MDR ) - ( MRS * ( ( Const - MDR ) - ( MRS * DDR ) ) ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.5182926829268293, "obj2": 0.3094068926359018}, {"determining": "Min( ( ARS - Max( ( ARS / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ,AMS )", "choosing": "( ( DS * ( RMSe / MUC ) ) * ( ( DS + ( MLU - MUM ) ) + ( CS / RMSe ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6473841068890408}, {"determining": "( ( ( Const / AMS ) - MDR ) * ( Max( ( ARS - FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,( DDR / FirstVNF_RAM_Server ) ) ) / MDR ) )", "choosing": "( ( Max( Max( ( MLU / Min( DS ,Min( MUR ,MUR ) ) ),MUR ),Min( ( Max( MUM,( MLU + RCSe ) ) - DS ) ,RMSe ) ) / CS ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.47560975609756095, "obj2": 0.3307595482054715}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( ( ( AMS * AMS ) * PN ) / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),( Max( Max( Max( MLU,MUR ),DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.22764227642276422, "obj2": 0.600590688955374}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ) / Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / MLU ) - CS ) - ( RCSe * RRSe ) )", "obj1": 0.21544715447154472, "obj2": 0.6164028539489014}, {"determining": "( ( ( Max( ( Min( MDR ,ACS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.6483739837398373, "obj2": 0.1961450017482645}, {"determining": "( ( ( ( ( FirstVNF_CPU / ( Min( FirstVNF_CPU ,( FirstVNF_Mem_Server * BR ) ) - MDR ) ) * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( PN,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + Max( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ),( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( CS + ( MUR - DS ) ) ) / ( CS * RCSe ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUM ) + RMSe ) )", "obj1": 0.5, "obj2": 0.3155300679224148}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( ( RRS - ( CRS * Max( ACS,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ACS ) ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Max( RCSe,MLU ) * ( Max( DS,MUM ) / ( RRSe * MLU ) ) ),RCSe ) / ( Min( ( MUR * RMSe ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.44349251015195756}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,BR ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) )", "obj1": 0.3170731707317073, "obj2": 0.5014623870996645}, {"determining": "( ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.4146341463414634, "obj2": 0.41273467285647825}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / MLU )", "obj1": 0.3556910569105691, "obj2": 0.4537004436868185}, {"determining": "Min( Max( AMS,DDR ) ,( ( Const - MDR ) * ( AMS * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RRSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5447154471544715, "obj2": 0.2717233703656356}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.5630081300813008, "obj2": 0.2591375043465054}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( Max( DDR,MDR ) - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * ( Min( CS ,MUM ) + ( MUM + CS ) ) ) )", "obj1": 0.29065040650406504, "obj2": 0.5162668973082045}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.676829268292683, "obj2": 0.18243939183762434}, {"determining": "( ( ARS * ARS ) - ( Max( CRS,Const ) * ( Max( ( RRS / PN ),MDR ) / ( RRS * ( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS + ( ( RRSe * MLU ) - MUM ) ) ,( ( RCSe - CS ) * ( ( Min( CS ,MUM ) + ( MUM + CS ) ) + Min( ( RCSe + RRSe ) ,( DS + RCSe ) ) ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,( CS / CS ) ) )", "obj1": 0.6849593495934959, "obj2": 0.1647469914911358}, {"determining": "( ( Const - MDR ) - ( MRS * Max( ( AMS / FirstVNF_RAM ),MDR ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( ( ( ( DS + MUR ) + Max( DS,MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.7032520325203252, "obj2": 0.16433969269655585}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Const + FirstVNF_Mem ) ) + ( Max( ( ( FirstVNF_Mem / BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Min( ( Max( ( MUM / RCSe ),RCSe ) + ( RMSe / MUR ) ) ,DS ) - RMSe ) * Min( CS ,MUM ) ),( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MLU ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.20528455284552846, "obj2": 0.631508541399616}, {"determining": "Min( Min( ARS ,( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,( ARS * Const ) ) ) ) ,AMS )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + Min( ( MLU * CS ) ,( ( CS * ( MUC - ( CS - Min( MUR ,MUC ) ) ) ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6473841068890408}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS + ( MUR - ( MUC - MUR ) ) ) + RMSe ) / ( DS / DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7181452219006024}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( Min( MLU ,( CS + ( MUR - DS ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.5264227642276422, "obj2": 0.28384681369784565}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * ( RMSe / RMSe ) ) )", "obj1": 0.6727642276422764, "obj2": 0.19503471121719498}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.45121951219512196, "obj2": 0.3674120526532742}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - ( FirstVNF_RAM - DDR ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.29471544715447157, "obj2": 0.5072730476202328}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ) ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.8963414634146342, "obj2": 0.06106770165635964}, {"determining": "( ( Const - MDR ) * ( ( ( ( FirstVNF_CPU / CRS ) * Const ) / ( FirstVNF_RAM - DDR ) ) * AMS ) )", "choosing": "( ( Min( MLU ,( CS + ( MUR - Min( ( MUR * CS ) ,MUC ) ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.4878048780487805, "obj2": 0.32869794635206157}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( ( DS / MUC ) - ( RMSe * CS ) ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.40447154471544716, "obj2": 0.42309960440338834}, {"determining": "( ( Const - ( ( BR * MRS ) + ( MDR + ( Max( FirstVNF_RAM_Server,ACS ) / ( RRS + PN ) ) ) ) ) - ( MRS * DDR ) )", "choosing": "( Max( MLU,MUM ) * ( MUC * Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.45121951219512196, "obj2": 0.3674120526532742}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.7784552845528455, "obj2": 0.07591791201329721}, {"determining": "( ( ARS * ARS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM / CS ) ) ) * ( CS - RCSe ) ) ) * ( ( MUC - Min( ( DS / CS ) ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.5650406504065041, "obj2": 0.2463162857539259}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.3800813008130081, "obj2": 0.43009493214161454}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) - Max( ( MDR + ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server / Min( CRS ,Const ) ) - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) - Max( ( Min( ( ( CS - RCSe ) * MUM ) ,Min( MUR ,( CS / DS ) ) ) * CS ),Min( RRSe ,DS ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.34959349593495936, "obj2": 0.46602531080646714}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( MUM ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.6422764227642277, "obj2": 0.21689314995589462}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( Max( RMSe,MUC ) / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.2621951219512195, "obj2": 0.5465086934682046}, {"determining": "( ( Const - MRS ) - ( DDR * ( Max( ( ( MDR - MRS ) / ( FirstVNF_RAM * ( ( MRS * CRS ) + ( Const - CRS ) ) ) ),( ( AMS - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * Max( DDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,( ( RCSe * RRSe ) - ( MLU * RMSe ) ) ) * Max( MUM,MUR ) )", "obj1": 0.9349593495934959, "obj2": 0.027450276422603295}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_Mem - FirstVNF_RAM ) ) ) * BR ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MLU / ( Max( RMSe,( MUR - MUC ) ) / MUR ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.3882113821138211, "obj2": 0.42437306338739494}, {"determining": "( ( ( AMS * ( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( ( MLU * CS ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.9288617886178862, "obj2": 0.03978633153324736}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( MDR * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( ( ( BR / ACS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) ) ) ) + ( AMS + ( ( ( MRS - ( AMS - FirstVNF_RAM_Server ) ) - MRS ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe * RCSe ) / ( Min( MLU ,( Max( RMSe,MUC ) / ( RCSe / RMSe ) ) ) - Min( CS ,MUM ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5388366733709475}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) * ( AMS * AMS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.32926829268292684, "obj2": 0.4818109999426733}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( ( DS + ( DS - RRSe ) ) / ( RCSe + RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "Min( Max( AMS,DDR ) ,( ( Const - MDR ) * ( AMS * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RRSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.5365853658536586, "obj2": 0.2796866850406536}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.34146341463414637, "obj2": 0.47770101140674937}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( DDR / ( MDR / FirstVNF_CPU ) ) / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),( ( MUR - MLU ) - RRSe ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.27439024390243905, "obj2": 0.5320644396017117}, {"determining": "( ( ( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( DS + ( MUM - MUM ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9573170731707317, "obj2": 0.016952046640253713}, {"determining": "Min( AMS ,Min( ACS ,( ( Const / ( RRS - BR ) ) * PN ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - ( CS * MUC ) ) ,( MLU - Min( ( ( Max( MUC,( ( DS / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.9471544715447154, "obj2": 0.026786900600485594}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( Max( CRS,FirstVNF_CPU ) * Const ) / Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MLU ) + Max( ( RRSe / ( MUR * ( DS / ( MLU * CS ) ) ) ),RMSe ) ),MLU ) - ( MUM + CS ) )", "obj1": 0.3434959349593496, "obj2": 0.4732949296964917}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * ( Const / AMS ) ) ) )", "choosing": "( ( ( MLU * CS ) * ( RCSe - CS ) ) - ( MUR / MUM ) )", "obj1": 0.9512195121951219, "obj2": 0.021165610824517865}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.27439024390243905, "obj2": 0.5320644396017117}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( ( AMS * AMS ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) )", "obj1": 0.32723577235772355, "obj2": 0.49024093856001927}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9247967479674797, "obj2": 0.043551502970079585}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( AMS / FirstVNF_RAM ) + Const ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( ( MUM + CS ) + RRSe ) ) ) / ( MLU / MUR ) )", "obj1": 0.9878048780487805, "obj2": 0.00522040453958971}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.9654471544715447, "obj2": 0.012932084647115809}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( ( AMS * AMS ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) )", "obj1": 0.32723577235772355, "obj2": 0.49024093856001927}, {"determining": "( ( Const - MDR ) - ( MRS * DDR ) )", "choosing": "( Max( ( DS * ( Max( DS,MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.532520325203252, "obj2": 0.2834512780669148}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( ( MLU / RCSe ) - ( DS + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6321138211382114, "obj2": 0.22377570463752344}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( MUM ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.6422764227642277, "obj2": 0.21689314995589462}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( MUM ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9207317073170732, "obj2": 0.047294120366113704}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),( Min( MDR ,DDR ) - MRS ) ) - ( AMS + ARS ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.9024390243902439, "obj2": 0.06056828490562896}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( ( MLU / RCSe ) - ( DS + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6321138211382114, "obj2": 0.22377570463752344}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.048684746274968264}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) ) - ( AMS + ARS ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.9105691056910569, "obj2": 0.05707334743927718}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,ARS ) ) - ( AMS + ARS ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.9085365853658537, "obj2": 0.05930353666774613}, {"determining": "Max( ( MDR / ACS ),Min( ( Max( CRS,ARS ) / MRS ) ,ARS ) )", "choosing": "( ( ( RCSe / RRSe ) / ( MUM / RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / Const ) / ( FirstVNF_CPU_Server - MRS ) ),( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_RAM_Server - Min( Min( Const ,DDR ) ,( MRS - ACS ) ) ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUC ,Min( Min( DS ,Max( ( MLU * RCSe ),DS ) ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + Min( ( ( CS / MUM ) + Min( CS ,MUM ) ) ,Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) ) )", "obj1": 0.975609756097561, "obj2": 0.008274038373144709}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.05341595139985091}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9796747967479674, "obj2": 0.0060619153147653156}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( CS + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9817073170731707, "obj2": 0.005316991310080944}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( RMSe * RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002090553275082411}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ( Const * DDR ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) - Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( ( Min( MUM ,( ( RMSe + RCSe ) * CS ) ) + Min( RRSe ,CS ) ) / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.9715447154471545, "obj2": 0.010006509608147793}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + ( PN / PN ) ) ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( MLU / MUR ) )", "obj1": 0.9695121951219512, "obj2": 0.011676764779446317}, {"determining": "( Max( ( ACS / FirstVNF_RAM ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.05341595139985091}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( ( DS / MUC ) - ( RMSe * CS ) ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9735772357723578, "obj2": 0.009526132603626372}, {"determining": "( ( Const * ( CRS + ACS ) ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,Const ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( ( ( DS * RRSe ) - CS ) + RCSe ) ) + ( Min( MUM ,MUM ) + ( RMSe * RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002090553275082411}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) )", "choosing": "( ( MUC / ( ( MUM + CS ) + RRSe ) ) / Max( DS,MUM ) )", "obj1": 0.9959349593495935, "obj2": 0.0011800490931045372}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,( ( Min( MRS ,MRS ) * AMS ) * PN ) ) - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ,Max( AMS,FirstVNF_RAM ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + ( Min( Min( MLU ,( RCSe / ( ( RRSe / MLU ) + Min( MUR ,MUC ) ) ) ) ,CS ) / ( RCSe * ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 0.967479674796748, "obj2": 0.012136728609087898}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( DDR,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - Min( RCSe ,( MUC - RMSe ) ) ) ) + ( ( ( ( RCSe + MUC ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0006760088265171114}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUM - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0006760088265171114}, {"determining": "( ( Const / AMS ) - Max( ARS,( PN - PN ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * ( Min( MUR ,RCSe ) / ( RCSe - MLU ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * Max( ( RRSe / ( MUR * CS ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MLU ,MLU ) - CS ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * Max( FirstVNF_Mem,MDR ) ) * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( DS ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * PN ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Max( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * Max( ( RRSe / ( MUR * CS ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( DDR,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + RRS ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ),( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.08130081300813008, "obj2": 0.7550235218321659}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.3617886178861789, "obj2": 0.3536922707354744}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / MLU )", "obj1": 0.3556910569105691, "obj2": 0.4537004436868185}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( MLU * CS ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.4186991869918699, "obj2": 0.3335408326050001}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,Min( MUM ,Min( MUR ,CS ) ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.758130081300813, "obj2": 0.11973023080456008}, {"determining": "( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ,( ( AMS * AMS ) * PN ) ) ) + ( Const - MDR ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3249669501189717}, {"determining": "Min( Max( AMS,DDR ) ,( ( Const - ( Min( DDR ,CRS ) / BR ) ) * ( AMS * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RCSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.8556910569105691, "obj2": 0.054537591576681484}, {"determining": "( ( ARS * Const ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUR * CS ) ,MUC ) + RMSe ) / ( MUC - MLU ) )", "obj1": 0.47560975609756095, "obj2": 0.28711898846661144}, {"determining": "Min( Max( AMS,FirstVNF_CPU ) ,( PN - ( ( ARS * MRS ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( ( DS / Max( Min( ( MUM - RMSe ) ,Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( ( RCSe * Min( Max( RCSe,( ( ( CS - MUM ) / MUC ) - MUM ) ) ,RRSe ) ),MUR ) )", "obj1": 0.8089430894308943, "obj2": 0.06967848549826959}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( ( ARS + RRS ) * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( MUC + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUC - Max( RCSe,RRSe ) ) * ( MUC / RMSe ) ) )", "obj1": 0.5203252032520326, "obj2": 0.2776936113407887}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) )", "choosing": "( ( Min( MLU ,( Max( RMSe,MUC ) / MUR ) ) - Min( CS ,MUM ) ) / ( RMSe * RCSe ) )", "obj1": 0.7113821138211383, "obj2": 0.14542686671608285}, {"determining": "Min( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( RCSe + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.8821138211382114, "obj2": 0.04016468422681495}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( FirstVNF_RAM_Server * CRS ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.5284552845528455, "obj2": 0.2468579914199476}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * PN ) ) ) + Min( Max( FirstVNF_CPU_Server,( ( ( Const - MDR ) * ( AMS * AMS ) ) * ( BR / FirstVNF_Mem ) ) ) ,BR ) )", "choosing": "( ( ( ( RRSe + MUR ) - DS ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.24390243902439024, "obj2": 0.5896309202940719}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS + ( MUR - ( MUC - MUR ) ) ) + RMSe ) / ( DS / DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7181452219006024}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( Min( MLU ,( CS + ( MUR - DS ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.7621951219512195, "obj2": 0.07741083836488062}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( ACS ,Const ) / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / RMSe ) / CS ) + ( ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) + Min( ( MUR - MUC ) ,MLU ) ) )", "obj1": 0.6036585365853658, "obj2": 0.21397060828462788}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUC - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.573170731707317, "obj2": 0.23499830271298794}, {"determining": "( ( ( AMS * ( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( ( MLU * CS ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.9288617886178862, "obj2": 0.03978633153324736}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.32113821138211385, "obj2": 0.47794898067327063}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( Max( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( ( ( AMS * AMS ) * PN ) / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),( Max( Max( Max( MLU,Max( RMSe,MUC ) ),DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.21544715447154472, "obj2": 0.6029347863145119}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.3008130081300813, "obj2": 0.500260233589772}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,FirstVNF_CPU_Server ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( CS + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUC - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23890338225696464}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),MRS ) + Min( DDR ,Min( ( AMS - DDR ) ,RRS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS + ( MUM / Min( MUM ,RCSe ) ) ) + Min( CS ,RMSe ) ) / RMSe ) + DS ) ) * Max( MLU,MUM ) )", "obj1": 0.08536585365853659, "obj2": 0.7364634934809794}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ( MRS * DDR ) * Const ) / ( FirstVNF_RAM - ( FirstVNF_RAM - DDR ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.1565040650406504, "obj2": 0.6662362700396693}, {"determining": "( ( Min( ( AMS * AMS ) ,Max( Const,RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( CS + ( MUR - DS ) ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.09959349593495935, "obj2": 0.6893421977472625}, {"determining": "( ( ARS * ARS ) - Max( Max( MDR,Const ),( FirstVNF_Mem / ( RRS * ( Min( FirstVNF_Mem_Server ,( ACS * ( AMS + AMS ) ) ) + ( Max( FirstVNF_RAM_Server,PN ) * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe + RRSe ) / ( DS + RMSe ) ) + ( Min( CS ,MUM ) + Max( MUC,RCSe ) ) ) * ( RCSe - CS ) ) + ( DS + ( MUM - MUM ) ) ) * ( DS * ( MUC * RMSe ) ) ) + Min( MUR ,( DS - MUR ) ) ) / ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) )", "obj1": 0.6280487804878049, "obj2": 0.20354374077826057}, {"determining": "( ( ( Max( ( Min( MDR ,ACS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.6483739837398373, "obj2": 0.1961450017482645}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( MDR * MDR ) ) ) + ( Max( ( ( FirstVNF_Mem - BR ) * ( DDR + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( ( ( AMS * AMS ) * PN ) / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),( Max( Max( Max( MLU,MUC ),DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.22764227642276422, "obj2": 0.5951174892171941}, {"determining": "( ( Min( ( Const / RRS ) ,CRS ) / ( Min( Min( MDR ,CRS ) ,DDR ) * DDR ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( DS,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( DS + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.10772357723577236, "obj2": 0.6862023847121886}, {"determining": "( ( Min( CRS ,Max( ( ( Const - MDR ) - ( MRS * DDR ) ),RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( DS + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.12398373983739837, "obj2": 0.6734654969369465}, {"determining": "( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ,( ( AMS * AMS ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) )", "obj1": 0.2601626016260163, "obj2": 0.5572536057878164}, {"determining": "( ( Min( CRS ,Max( Const,RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.6685647461515258}, {"determining": "( ( ARS * ARS ) - ( Max( CRS,Const ) * ( Max( ( RRS / PN ),MDR ) / ( RRS * ( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS + ( ( RRSe * MLU ) - MUM ) ) ,( ( RCSe - CS ) * ( ( Min( CS ,MUM ) + ( MUM + CS ) ) + Min( ( RCSe + RRSe ) ,( DS + RCSe ) ) ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,( CS / CS ) ) )", "obj1": 0.6849593495934959, "obj2": 0.1647469914911358}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Const + FirstVNF_Mem ) ) + ( Max( ( ( FirstVNF_Mem / BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Min( ( Max( ( MUM / RCSe ),RCSe ) + ( RMSe / MUR ) ) ,DS ) - RMSe ) * Min( CS ,MUM ) ),( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MLU ) ) ) ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.20528455284552846, "obj2": 0.631508541399616}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.7784552845528455, "obj2": 0.07591791201329721}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) - Max( ( MDR + ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server / Min( CRS ,Const ) ) - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) - Max( ( Min( ( ( CS - RCSe ) * MUM ) ,Min( MUR ,( CS / DS ) ) ) * CS ),Min( RRSe ,DS ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.34959349593495936, "obj2": 0.46602531080646714}, {"determining": "( ( Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) / Min( CRS ,ARS ) ) - ( ACS - MDR ) )", "choosing": "( Max( ( Max( ( CS * RRSe ),MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.2804878048780488, "obj2": 0.5287630526048872}, {"determining": "Min( ( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,AMS )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( ( ( DS + MUR ) + Min( CS ,RMSe ) ) / RMSe ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6617801899519191}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( Max( DDR,MDR ) - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * ( Min( CS ,MUM ) + ( MUM + CS ) ) ) )", "obj1": 0.29065040650406504, "obj2": 0.5162668973082045}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( ARS / ( RRS * ( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( Min( CS ,MUM ) + ( MUM + CS ) ) + Min( ( RCSe + RRSe ) ,( DS + RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / ( DS * ( MUC / RMSe ) ) ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,( CS / CS ) ) )", "obj1": 0.7073170731707317, "obj2": 0.15899476400976914}, {"determining": "( ( ARS * ARS ) - Max( MRS,( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( ( DS * ( MUC / RMSe ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.6808943089430894, "obj2": 0.1798019011923691}, {"determining": "( ( Const - MDR ) - ( MRS * Max( ( AMS / FirstVNF_RAM ),MDR ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( ( ( ( DS + MUR ) + Max( DS,MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.7032520325203252, "obj2": 0.16433969269655585}, {"determining": "( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * Max( Const,( ( BR + FirstVNF_CPU_Server ) - RRS ) ) ) ) ,( ( PN * AMS ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( MUR + RCSe ) / ( ( ( MUR + Max( MUR,MLU ) ) + Max( ( CS * RCSe ),( CS / RRSe ) ) ) * RCSe ) )", "obj1": 0.2601626016260163, "obj2": 0.5572536057878164}, {"determining": "( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.34146341463414637, "obj2": 0.47770101140674937}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6524390243902439, "obj2": 0.1857658952556706}, {"determining": "Min( ( Max( Min( Max( FirstVNF_Mem,FirstVNF_Mem ) ,BR ),PN ) - ( MRS / FirstVNF_CPU_Server ) ) ,FirstVNF_CPU )", "choosing": "( ( DS * ( RMSe / MUC ) ) * ( ( Max( RRSe,MUC ) / ( MUM * Min( Min( RCSe ,Max( RMSe,DS ) ) ,( RRSe - MLU ) ) ) ) + DS ) )", "obj1": 0.17886178861788618, "obj2": 0.6575089771830332}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( ( ( DS + ( DS - RRSe ) ) / ( RCSe + RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "( ( Const - MDR ) - ( ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ( FirstVNF_RAM - DDR ) ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) * DDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) + Max( ( ( MUM + CS ) + RRSe ),RMSe ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.027450276422603295}, {"determining": "Min( ( ARS - ( MRS / FirstVNF_CPU_Server ) ) ,AMS )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( MLU * CS ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6473841068890408}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( MDR * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( ( ( BR / ACS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) ) ) ) + ( AMS + ( ( ( MRS - ( AMS - FirstVNF_RAM_Server ) ) - MRS ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe * RCSe ) / ( Min( MLU ,( Max( RMSe,MUC ) / ( RCSe / RMSe ) ) ) - Min( CS ,MUM ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5388366733709475}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * MDR ) ) ) + ( ( BR - ( FirstVNF_Mem * RRS ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * Min( CS ,MUM ) ),( Max( Max( ( DS + ( ( CS / MUC ) * ( RRSe / RMSe ) ) ),DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) ) / ( ( ( MUR * CS ) / MUC ) + RMSe ) )", "obj1": 0.20528455284552846, "obj2": 0.631508541399616}, {"determining": "( ( ARS * ARS ) - Max( AMS,( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( FirstVNF_RAM_Server * CRS ) ) ) ) ) )", "choosing": "( ( ( DS / Max( Max( ( ( RCSe * MUM ) - RMSe ),( MUM + CS ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6158536585365854, "obj2": 0.20927257761729018}, {"determining": "Min( Max( AMS,DDR ) ,( Max( Const,RRS ) * ( AMS * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RRSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( Min( CS ,MUC ),MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.266260162601626, "obj2": 0.5446075730797819}, {"determining": "( ( Const - MDR ) - ( ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) * DDR ) )", "choosing": "( Max( ( Min( MLU ,( CS + ( MUR - DS ) ) ) * ( Max( DS,MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.9512195121951219, "obj2": 0.016967546322089463}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ARS ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6138211382113821, "obj2": 0.20990503927369072}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.676829268292683, "obj2": 0.18243939183762434}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( ( FirstVNF_Mem / MDR ) - MDR ) / ( Const * RRS ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( ( MUR / ( MUR / ( DS * MUR ) ) ) ,( Max( RMSe,MUC ) / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.2621951219512195, "obj2": 0.5465086934682046}, {"determining": "Min( AMS ,Min( ACS ,( ( Const / ( RRS - BR ) ) * PN ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - ( CS * MUC ) ) ,( MLU - Min( ( ( Max( MUC,( ( DS / CS ) / MUM ) ) / MLU ) * DS ) ,RRSe ) ) )", "obj1": 0.9471544715447154, "obj2": 0.026786900600485594}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RRSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.9491869918699187, "obj2": 0.025413275487310403}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( Min( CS ,MUM ) + ( MUM + CS ) ) + Min( ( RCSe + RRSe ) ,( DS + RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,( CS / CS ) ) )", "obj1": 0.6626016260162602, "obj2": 0.18490779701880738}, {"determining": "( Max( CRS,( RRS - ( CRS * Max( ACS,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ACS ) ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Min( ( MUR * RMSe ) ,MUC ) ),MUM ) ) )", "obj1": 0.2926829268292683, "obj2": 0.512830891279896}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07620345692189875}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.27439024390243905, "obj2": 0.5320644396017117}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * Max( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ),( PN / ( ( FirstVNF_CPU_Server - ARS ) * AMS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( Min( CS ,MUM ) + ( MUM + CS ) ) + Min( ( RCSe + RRSe ) ,( DS + CS ) ) ) * ( RCSe - CS ) ) ) * ( RRSe * RMSe ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,( CS / CS ) ) )", "obj1": 0.6626016260162602, "obj2": 0.18490779701880738}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,DDR ) - MRS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.9878048780487805, "obj2": 0.004051762272396414}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( BR + ( ( ACS * Const ) / ( ( MDR - FirstVNF_CPU ) - ( FirstVNF_RAM - DDR ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * ( ( CS * ( RMSe + MUR ) ) - ( CS - RCSe ) ) ) ,MUC ) + Max( ( RRSe / ( CS * MUR ) ),DS ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.29471544715447157, "obj2": 0.5072730476202328}, {"determining": "Max( ( MDR / ACS ),Min( ( Max( CRS,ARS ) / MRS ) ,ARS ) )", "choosing": "( ( ( RCSe / RRSe ) / ( MUM / RMSe ) ) + ( ( RMSe + MUC ) / Max( CS,MUR ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6422555792582908}, {"determining": "Min( ( ARS - Max( ( ARS / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ,AMS )", "choosing": "( ( DS * ( RMSe / MUC ) ) * ( ( DS + ( MLU - MUM ) ) + ( CS / RMSe ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6473841068890408}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( MUM + CS ) )", "obj1": 0.3434959349593496, "obj2": 0.4732949296964917}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( Max( CRS,FirstVNF_CPU ) * Const ) / Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MLU ) + Max( ( RRSe / ( MUR * ( DS / ( MLU * CS ) ) ) ),RMSe ) ),MLU ) - ( MUM + CS ) )", "obj1": 0.3434959349593496, "obj2": 0.4732949296964917}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - ( FirstVNF_RAM - DDR ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.29471544715447157, "obj2": 0.5072730476202328}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / Const ) / ( FirstVNF_CPU_Server - MRS ) ),( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_RAM_Server - Min( Min( Const ,DDR ) ,( MRS - ACS ) ) ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUC ,Min( Min( DS ,Max( ( MLU * RCSe ),DS ) ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + Min( ( ( CS / MUM ) + Min( CS ,MUM ) ) ,Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) ) )", "obj1": 0.975609756097561, "obj2": 0.008274038373144709}, {"determining": "Min( Max( ( FirstVNF_RAM / MRS ),( MDR + ( Const - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,( PN - ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( ( ( MUR + Max( DS,MUR ) ) / RRSe ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RRSe ,RMSe ) * Max( MLU,RRSe ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.9613821138211383, "obj2": 0.014509934180738817}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.9654471544715447, "obj2": 0.012932084647115809}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( AMS / FirstVNF_RAM ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( RMSe * RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0030543963439462027}, {"determining": "( ( ( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( DS + ( MUM - MUM ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9573170731707317, "obj2": 0.016952046640253713}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.676829268292683, "obj2": 0.18243939183762434}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,Max( RRS,RRS ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( RMSe * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.959349593495935, "obj2": 0.016075080721866034}, {"determining": "( Max( ( ( CRS + RRS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( CS + ( RMSe / ( RCSe * RRSe ) ) ) + ( ( RCSe + RRSe ) / ( DS + RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9817073170731707, "obj2": 0.005316991310080944}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + ( PN / PN ) ) ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( MLU / MUR ) )", "obj1": 0.9695121951219512, "obj2": 0.011676764779446317}, {"determining": "( ( Const - MRS ) - ( DDR * ( Max( ( ( MDR - MRS ) / ( FirstVNF_RAM * ( ( MRS * CRS ) + ( Const - CRS ) ) ) ),( ( AMS - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * Max( DDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,( ( RCSe * RRSe ) - ( MLU * RMSe ) ) ) * Max( MUM,MUR ) )", "obj1": 0.9349593495934959, "obj2": 0.027450276422603295}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.9715447154471545, "obj2": 0.009751193420630667}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( AMS * ( ( AMS / FirstVNF_RAM ) + Const ) ) )", "choosing": "( ( MUC / ( ( MUM + CS ) + RRSe ) ) / Max( DS,MUM ) )", "obj1": 0.9959349593495935, "obj2": 0.0011800490931045372}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( DDR / ( MDR / FirstVNF_CPU ) ) / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),( ( MUR - MLU ) - RRSe ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.27439024390243905, "obj2": 0.5320644396017117}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( AMS / FirstVNF_RAM ) + Const ) )", "choosing": "( ( ( MUR / MLU ) - CS ) - ( RCSe * RRSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00045549187761215366}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9796747967479674, "obj2": 0.0060619153147653156}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9796747967479674, "obj2": 0.0060619153147653156}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( Max( RMSe,MUC ) / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.2621951219512195, "obj2": 0.5465086934682046}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( CS + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9817073170731707, "obj2": 0.005316991310080944}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( ( DS / MUC ) - ( RMSe * CS ) ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9735772357723578, "obj2": 0.009526132603626372}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07620345692189875}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( RMSe * RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002090553275082411}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,DDR ) - MRS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( RMSe * RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002090553275082411}, {"determining": "Min( Max( AMS,DDR ) ,( Min( FirstVNF_CPU_Server ,( ( AMS * AMS ) * PN ) ) - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) ) )", "obj1": 0.967479674796748, "obj2": 0.012136728609087898}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,( ( Min( MRS ,MRS ) * AMS ) * PN ) ) - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ,Max( AMS,FirstVNF_RAM ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + ( Min( Min( MLU ,( RCSe / ( ( RRSe / MLU ) + Min( MUR ,MUC ) ) ) ) ,CS ) / ( RCSe * ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 0.967479674796748, "obj2": 0.012136728609087898}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( ( DS / MUC ) - ( RMSe * CS ) ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9735772357723578, "obj2": 0.009526132603626372}, {"determining": "( ( ( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( DS + ( MUM - MUM ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9573170731707317, "obj2": 0.016952046640253713}], "7": [{"determining": "( ( Const + RRS ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ),( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.08130081300813008, "obj2": 0.7550235218321659}, {"determining": "( ( ( AMS * ( PN - ( FirstVNF_CPU_Server * ARS ) ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( ( MLU * CS ),MUM ) * ( MLU / ( ( ( ( DS + ( MLU * CS ) ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( AMS * ( ( AMS / FirstVNF_RAM ) + PN ) ) * ( FirstVNF_RAM - CRS ) ),Min( ( ACS / MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) - ( AMS + ACS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( ( MUR / MLU ) - CS ) ) ) * Max( ( RRSe / ( MUR * CS ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + RRS ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ),( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.08130081300813008, "obj2": 0.7550235218321659}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.3617886178861789, "obj2": 0.3536922707354744}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.6991869918699187, "obj2": 0.10507397817791479}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / MLU )", "obj1": 0.3556910569105691, "obj2": 0.4537004436868185}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * CRS ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( RRSe ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6849593495934959, "obj2": 0.16402524898488594}, {"determining": "Min( Max( AMS,FirstVNF_CPU ) ,( PN - ( ( ARS * MRS ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( ( DS / Max( Min( ( MUM - RMSe ) ,Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUM ) ) + Min( MUR ,( DS - DS ) ) ) / Max( ( RCSe * Min( Max( RCSe,( ( ( CS - MUM ) / MUC ) - MUM ) ) ,RRSe ) ),MUR ) )", "obj1": 0.8089430894308943, "obj2": 0.06967848549826959}, {"determining": "( ( Min( ( AMS * AMS ) ,Max( Const,RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( DDR,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( CS + ( MUR - DS ) ),( RRSe / ( MUR * CS ) ) ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.1991869918699187, "obj2": 0.5987636135579582}, {"determining": "Min( ( ( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,AMS )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( ( ( DS + MUR ) + Min( ( Min( CS ,MUM ) + ( MUM + CS ) ) ,RMSe ) ) / RMSe ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.7317073170731707, "obj2": 0.09309764417893467}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * Max( ( ARS / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( DS * ( RMSe / MUC ) ) * RCSe ) ) ) )", "obj1": 0.43902439024390244, "obj2": 0.30299932703170956}, {"determining": "( ( ( ( ( Max( CRS,FirstVNF_CPU ) * Const ) / Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) + BR ) * FirstVNF_CPU_Server ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) ) ) - CS ) / ( MUR * ( DS / ( MLU * CS ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5794741699480113}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( AMS * AMS ) * PN ) ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) / CS ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) ) )", "obj1": 0.5508130081300813, "obj2": 0.2336564580310413}, {"determining": "Min( Max( AMS,DDR ) ,( ( Const - ( Min( DDR ,CRS ) / BR ) ) * ( AMS * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RCSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.8556910569105691, "obj2": 0.054537591576681484}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ( MRS * DDR ) * Const ) / ( FirstVNF_RAM - ( FirstVNF_RAM - DDR ) ) ) + ( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) ) ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),( ( RCSe + RRSe ) / ( DS + RCSe ) ) ) - ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.18902439024390244, "obj2": 0.6310897726437075}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( FirstVNF_CPU_Server / BR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( ( ( MUC - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.5813008130081301, "obj2": 0.22768755279374048}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,CS ) / ( Max( ( ( MUM / Min( MUC ,MLU ) ) - ( Min( MUR ,MUR ) * ( DS * RCSe ) ) ),MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.46747967479674796, "obj2": 0.29130253884709284}, {"determining": "Max( ( ACS / FirstVNF_RAM ),Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS + ( MUR - ( MUC - MUR ) ) ) + RMSe ) / ( DS / DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7181452219006024}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( Max( ( Max( ( CS * RRSe ),MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.47560975609756095, "obj2": 0.27405685537948715}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( Min( MLU ,( CS + ( MUR - DS ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.7621951219512195, "obj2": 0.07741083836488062}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( MLU * CS ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.4186991869918699, "obj2": 0.3335408326050001}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( Const - MDR ) ) ) ) ) ) ) )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( MLU * CS ) ,( ( CS * ( MUR - MUR ) ) - CS ) ) ) )", "obj1": 0.4329268292682927, "obj2": 0.3284923421383621}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),MRS ) + Min( DDR ,Min( ( AMS - DDR ) ,RRS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS + ( MUM / Min( MUM ,RCSe ) ) ) + Min( CS ,RMSe ) ) / RMSe ) + DS ) ) * Max( MLU,MUM ) )", "obj1": 0.08536585365853659, "obj2": 0.7364634934809794}, {"determining": "( ( ( AMS * ( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ) * ( FirstVNF_RAM - CRS ) ) / Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( ( MLU * CS ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * DS ) ) )", "obj1": 0.9288617886178862, "obj2": 0.03978633153324736}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ARS ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.6158536585365854, "obj2": 0.20282852978196517}, {"determining": "Min( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( RCSe + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.8821138211382114, "obj2": 0.04016468422681495}, {"determining": "( ( ( Max( ( Min( Min( DDR ,BR ) ,ACS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( RMSe * Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Min( ( MUR * RMSe ) ,MUC ) ),MUM ) ),( RMSe / RRSe ) ) ) )", "obj1": 0.6626016260162602, "obj2": 0.1699222335663695}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,Const ) / DDR ),Min( ( ARS / MRS ) ,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.32113821138211385, "obj2": 0.47794898067327063}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.5, "obj2": 0.26194393661664195}, {"determining": "( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ,( ( AMS * AMS ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) )", "obj1": 0.24390243902439024, "obj2": 0.5703667001784611}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( FirstVNF_RAM_Server * CRS ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.5284552845528455, "obj2": 0.2468579914199476}, {"determining": "( ( Min( ( AMS * AMS ) ,Max( Const,RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( CS + ( MUR - DS ) ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.09959349593495935, "obj2": 0.6893421977472625}, {"determining": "( ( Min( CRS ,Max( ( ( Const - MDR ) - ( MRS * DDR ) ),RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( DS + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.12398373983739837, "obj2": 0.6734654969369465}, {"determining": "( ( Min( CRS ,Max( Const,RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.6685647461515258}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( DDR / ( MDR / FirstVNF_CPU ) ) / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),( ( MUR - MLU ) - RRSe ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.3170731707317073, "obj2": 0.498477685379772}, {"determining": "( ( ARS * ARS ) - Max( MRS,( FirstVNF_Mem / ( RRS * ( ( Min( DDR ,CRS ) / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( ( DS * ( MUC / RMSe ) ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.6443089430894309, "obj2": 0.19633485495263636}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( Min( MLU ,( CS + ( MUR - DS ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.7784552845528455, "obj2": 0.07179823444368724}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,FirstVNF_CPU_Server ),( FirstVNF_Mem / ( RRS * ( ( RRS / BR ) - ( ARS * CRS ) ) ) ) ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( ( MUM - MUM ) ,MUM ) + ( CS + CS ) ) ) * ( RCSe - CS ) ) ) * ( ( MUC - Min( CS ,MLU ) ) * ( MUC / RMSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2163893517330378}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( MLU * CS ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.4186991869918699, "obj2": 0.3335408326050001}, {"determining": "( ( Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) / Min( CRS ,ARS ) ) - ( ACS - MDR ) )", "choosing": "( Max( ( Max( ( CS * RRSe ),MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.2804878048780488, "obj2": 0.5287630526048872}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / ( ( MUM + CS ) + RRSe ) ) / Max( DS,MUM ) )", "obj1": 0.25203252032520324, "obj2": 0.5651175798290161}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.3313008130081301, "obj2": 0.47141495590069515}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( ACS ,Const ) / BR ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( MUR / RMSe ) / CS ) + ( ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) + ( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.258639043614954}, {"determining": "Max( ( MDR / ACS ),Min( ( Max( CRS,ARS ) / MRS ) ,ARS ) )", "choosing": "( ( MUC / ( ( MUM + CS ) + RRSe ) ) / Max( DS,MUM ) )", "obj1": 0.2601626016260163, "obj2": 0.5549179160125072}, {"determining": "Min( Max( AMS,DDR ) ,( ( Const - ( Min( DDR ,CRS ) / BR ) ) * ( AMS * Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( ( MUR + Max( DS,RCSe ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.8638211382113821, "obj2": 0.05254225732398438}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.5223577235772358, "obj2": 0.24739226585548854}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) - Max( ( MDR + ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server / Min( CRS ,Const ) ) - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) - Max( ( Min( ( ( CS - RCSe ) * MUM ) ,Min( MUR ,( CS / DS ) ) ) * CS ),Min( RRSe ,DS ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.34959349593495936, "obj2": 0.46602531080646714}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ( MRS * DDR ) * Const ) / ( FirstVNF_RAM - ( FirstVNF_RAM - DDR ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.1565040650406504, "obj2": 0.6662362700396693}, {"determining": "Min( AMS ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( MUC / ( ( MUM + CS ) + RRSe ) ) / Max( DS,MUM ) )", "obj1": 0.9471544715447154, "obj2": 0.02323049250272178}, {"determining": "( ( ( Max( ( Min( MDR ,ACS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.6504065040650406, "obj2": 0.1828539420680353}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( Min( CS ,MUM ) + ( MUM + CS ) ) + Min( ( RCSe + RRSe ) ,( DS + RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,( CS / CS ) ) )", "obj1": 0.6585365853658537, "obj2": 0.18150262953046567}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) / ( RRS * ( ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU * PN ),( AMS + CRS ) ) ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RRSe / ( MUR * CS ) ) + ( ( ( Min( CS ,MUM ) + ( MUM + CS ) ) + Min( ( RCSe + RRSe ) ,( DS + RCSe ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,( CS / CS ) ) )", "obj1": 0.6056910569105691, "obj2": 0.20939115289329255}, {"determining": "Min( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( ( ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) ) + Min( MUR ,( DS - DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.8739837398373984, "obj2": 0.04307586322534906}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,Const ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( ( DS / MUC ) - ( RMSe * CS ) ) ) ) - CS ) / MLU )", "obj1": 0.3475609756097561, "obj2": 0.4711091960960464}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.3008130081300813, "obj2": 0.500260233589772}, {"determining": "Min( ( Max( Min( Max( FirstVNF_Mem,FirstVNF_Mem ) ,BR ),PN ) - ( MRS / FirstVNF_CPU_Server ) ) ,FirstVNF_CPU )", "choosing": "( ( DS * ( RMSe / MUC ) ) * ( ( Max( RRSe,MUC ) / ( MUM * Min( Min( RCSe ,Max( RMSe,DS ) ) ,( RRSe - MLU ) ) ) ) + DS ) )", "obj1": 0.17886178861788618, "obj2": 0.6575089771830332}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ( MRS * DDR ) * Const ) / ( FirstVNF_RAM - ( FirstVNF_RAM - DDR ) ) ) + BR ) * BR ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( ( ( ( DS + MUR ) + Max( ( ( MUM + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( ( DS + ( MUM - MUM ) ),MUC ) ) ) )", "obj1": 0.15853658536585366, "obj2": 0.6656912791148225}, {"determining": "( ( Min( ( Const / RRS ) ,CRS ) / ( Min( Min( MDR ,CRS ) ,DDR ) * DDR ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( DS,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( DS + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.10772357723577236, "obj2": 0.6862023847121886}, {"determining": "( ( ( Max( ( Min( MDR ,ACS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.6483739837398373, "obj2": 0.1961450017482645}, {"determining": "Min( ( ARS - ( MRS / FirstVNF_CPU_Server ) ) ,AMS )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( MLU * CS ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6473841068890408}, {"determining": "Min( ( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,AMS )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( ( ( DS + MUR ) + Min( CS ,RMSe ) ) / RMSe ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6617801899519191}, {"determining": "Min( Max( AMS,DDR ) ,( Min( FirstVNF_CPU_Server ,( ( AMS * AMS ) * PN ) ) - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( DS + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.9308943089430894, "obj2": 0.03425696138513822}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * PN ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / MLU )", "obj1": 0.3556910569105691, "obj2": 0.4537004436868185}, {"determining": "( ( Const - MRS ) - ( DDR * ( Max( ( ( MDR - MRS ) / ( FirstVNF_RAM * ( ( MRS * CRS ) + ( Const - CRS ) ) ) ),( ( AMS - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * Max( DDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,( ( RCSe * RRSe ) - ( MLU * RMSe ) ) ) * Max( MUM,MUR ) )", "obj1": 0.9349593495934959, "obj2": 0.027450276422603295}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( MDR * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( ( ( BR / ACS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) ) ) ) + ( AMS + ( ( ( MRS - ( AMS - FirstVNF_RAM_Server ) ) - MRS ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe * RCSe ) / ( Min( MLU ,( Max( RMSe,MUC ) / ( RCSe / RMSe ) ) ) - Min( CS ,MUM ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5388366733709475}, {"determining": "( ( Min( ( Const / RRS ) ,CRS ) / ( Min( Min( MDR ,CRS ) ,DDR ) * DDR ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( DS,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( ( DS + CS ) + RRSe ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.10772357723577236, "obj2": 0.6862023847121886}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( Min( CS ,MUM ) + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07620345692189875}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Const + FirstVNF_Mem ) ) + ( ( AMS * AMS ) * PN ) )", "choosing": "( Max( ( ( Min( ( Max( ( MUM / RCSe ),RCSe ) + ( RMSe / MUR ) ) ,DS ) - RMSe ) * Min( CS ,MUM ) ),( Max( Max( MUR,DS ),MUM ) * ( ( RCSe / DS ) * Max( MLU,MLU ) ) ) ) / ( ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) + RMSe ) )", "obj1": 0.18292682926829268, "obj2": 0.6482457583287263}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( Max( DDR,MDR ) - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * ( Min( CS ,MUM ) + ( MUM + CS ) ) ) )", "obj1": 0.29065040650406504, "obj2": 0.5162668973082045}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( Max( DDR,MDR ) - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * ( Min( CS ,MUM ) + ( MUM + CS ) ) ) )", "obj1": 0.29065040650406504, "obj2": 0.5162668973082045}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / Max( Min( FirstVNF_Mem ,CRS ),( Const * ARS ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.27439024390243905, "obj2": 0.5320644396017117}, {"determining": "( ( Const - MDR ) - ( ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) * DDR ) )", "choosing": "( Max( ( Min( MLU ,( CS + ( MUR - DS ) ) ) * ( Max( DS,MUM ) / ( MLU * RRSe ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.9512195121951219, "obj2": 0.016967546322089463}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( Max( DDR,MDR ) - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * ( Min( CS ,MUM ) + ( MUM + CS ) ) ) )", "obj1": 0.266260162601626, "obj2": 0.5419275548657843}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - ( FirstVNF_RAM - DDR ) ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * CS ) ,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.29471544715447157, "obj2": 0.5072730476202328}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( Max( RMSe,MUC ) / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.2621951219512195, "obj2": 0.5465086934682046}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - Const ) ) ) ) ) ) )", "choosing": "( ( ( MUR / RMSe ) / CS ) + ( ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) + Min( ( MUR - MUC ) ,MLU ) ) )", "obj1": 0.5040650406504065, "obj2": 0.2596270070876241}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( BR + ( ( ACS * Const ) / ( ( MDR - FirstVNF_CPU ) - ( FirstVNF_RAM - DDR ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( MUR * ( ( CS * ( RMSe + MUR ) ) - ( CS - RCSe ) ) ) ,MUC ) + Max( ( RRSe / ( CS * MUR ) ),DS ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.29471544715447157, "obj2": 0.5072730476202328}, {"determining": "Min( Max( ( FirstVNF_RAM / MRS ),( MDR + ( Const - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,( PN - ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( ( ( MUR + Max( DS,MUR ) ) / RRSe ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RRSe ,RMSe ) * Max( MLU,RRSe ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.9613821138211383, "obj2": 0.014509934180738817}, {"determining": "( ( Min( ( AMS * AMS ) ,Max( Const,RRS ) ) / Min( CRS ,( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) + BR ) * FirstVNF_CPU_Server ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUC,( ( MUM / CS ) / MUM ) ),MUM ) * ( MLU / ( ( ( ( DS + MUR ) + Max( ( CS + ( MUR - DS ) ),MLU ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.09959349593495935, "obj2": 0.6893421977472625}, {"determining": "( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ,( ( MDR - MRS ) - ( ( BR / ACS ) * FirstVNF_RAM ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) / ( ( MUR * CS ) * RCSe ) )", "obj1": 0.26422764227642276, "obj2": 0.542955126407715}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.9654471544715447, "obj2": 0.012932084647115809}, {"determining": "( ( Const - MDR ) - ( ( Max( ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ),( ( MDR - MRS ) - ( ( BR / ( FirstVNF_RAM - DDR ) ) * FirstVNF_RAM ) ) ) * ( Max( MRS,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) * DDR ) )", "choosing": "( Max( MLU,MUM ) * ( MLU / ( ( ( ( DS + ( ( RCSe / DS ) * Max( MLU,MUR ) ) ) + Max( ( ( MUM + CS ) + RRSe ),RMSe ) ) / MUR ) * Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.027450276422603295}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( MDR * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( ( ( BR / ACS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) ) ) ) + ( AMS + ( ( ( MRS - ( AMS - FirstVNF_RAM_Server ) ) - MRS ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS * ( MUC / RMSe ) ) * ( ( DS + ( MUM - MUM ) ) + Min( ( ( ( DS + MUR ) + Min( CS ,RMSe ) ) / RMSe ) ,( ( CS * ( MUC - MUR ) ) - CS ) ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6617801899519191}, {"determining": "( Max( CRS,( RRS - ( CRS * Max( ACS,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ACS ) ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Min( ( MUR * RMSe ) ,MUC ) ),MUM ) ) )", "obj1": 0.2926829268292683, "obj2": 0.512830891279896}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( MDR - FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.3008130081300813, "obj2": 0.500260233589772}, {"determining": "( Max( ( ( CRS + RRS ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( ( CS + ( RMSe / ( RCSe * RRSe ) ) ) + ( ( RCSe + RRSe ) / ( MUR - ( MUC - MUR ) ) ) ) * ( RCSe - CS ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.983739837398374, "obj2": 0.004508619782876656}, {"determining": "( ( Const * FirstVNF_RAM ) - ( Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + ( ( PN / ARS ) * ( DDR - RRS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,DDR ) - MRS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.9878048780487805, "obj2": 0.004051762272396414}, {"determining": "( ( ARS * ARS ) - Max( Max( CRS,Const ),( FirstVNF_Mem / ( RRS * ( ( Min( ACS ,Const ) / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / RMSe ) / CS ) + ( ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) + Min( ( MUR - MUC ) ,MLU ) ) )", "obj1": 0.6036585365853658, "obj2": 0.21397060828462788}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / Const ) / ( FirstVNF_CPU_Server - MRS ) ),( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_Mem + RRS ) * Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_RAM_Server - Min( Min( Const ,DDR ) ,( MRS - ACS ) ) ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUC ,Min( Min( DS ,Max( ( MLU * RCSe ),DS ) ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + Min( ( ( CS / MUM ) + Min( CS ,MUM ) ) ,Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) ) )", "obj1": 0.975609756097561, "obj2": 0.008274038373144709}, {"determining": "( ( ( ( Const * FirstVNF_RAM ) - ( Min( MDR ,DDR ) - MRS ) ) - MDR ) * ( AMS * AMS ) )", "choosing": "( ( DS + ( MUM - MUM ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.9573170731707317, "obj2": 0.016952046640253713}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,Max( RRS,RRS ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + Max( ( RMSe * RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.959349593495935, "obj2": 0.016075080721866034}, {"determining": "Min( Max( AMS,DDR ) ,( Min( FirstVNF_CPU_Server ,( ( AMS * AMS ) * PN ) ) - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + ( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.011456094407109504}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( Min( ( CS * RRSe ) ,Min( MUR ,Min( Min( DS ,RRSe ) ,Max( RMSe,MUC ) ) ) ) - ( ( Min( RMSe ,RRSe ) * Min( CS ,MUC ) ) * ( MUR * CS ) ) ) + ( Max( Max( DS,RMSe ),Min( MUC ,RCSe ) ) / ( ( CS / MUM ) + Min( CS ,MUM ) ) ) )", "obj1": 0.9715447154471545, "obj2": 0.009751193420630667}, {"determining": "( Max( CRS,( Max( Max( ( MDR - FirstVNF_RAM_Server ),( ( ( FirstVNF_Mem / MDR ) - MDR ) / ( Const * RRS ) ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + Min( ( DDR * PN ) ,( Min( PN ,MRS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( ( MUR / ( MUR / ( DS * MUR ) ) ) ,( Max( RMSe,MUC ) / MUR ) ) - CS ) / ( RMSe * RCSe ) )", "obj1": 0.2621951219512195, "obj2": 0.5465086934682046}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( ( DDR / ( MDR / FirstVNF_CPU ) ) / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),( ( MUR - MLU ) - RRSe ) ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.3170731707317073, "obj2": 0.498477685379772}, {"determining": "( Max( CRS,( RRS - ( CRS * Max( ACS,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ACS ) ) ) ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( Min( MLU ,( RCSe / MUR ) ) - CS ) / ( RMSe * Max( Max( ( ( MLU / RCSe ) - ( RMSe + MUR ) ),Min( ( MUR * RMSe ) ,MUC ) ),MUM ) ) )", "obj1": 0.2926829268292683, "obj2": 0.512830891279896}, {"determining": "( ( Min( CRS ,ARS ) / Min( CRS ,( ( AMS / FirstVNF_RAM ) + PN ) ) ) - ( Const - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,MUC ) + Max( ( RRSe / ( MUR * CS ) ),RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 0.27439024390243905, "obj2": 0.5320644396017117}, {"determining": "Min( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( Const / FirstVNF_RAM ) - ( DDR - DDR ) ) ) ,( PN - ( Max( Min( ACS ,FirstVNF_RAM_Server ),BR ) * Max( MDR,RRS ) ) ) )", "choosing": "( ( MUC + DS ) + ( MUR + ( ( DS + ( MUM - MUM ) ) + ( ( ( ( RCSe + RRSe ) / ( DS + RCSe ) ) + ( RCSe + ( MUM + CS ) ) ) * ( RCSe - CS ) ) ) ) )", "obj1": 0.8760162601626016, "obj2": 0.0419989786034162}, {"determining": "Min( ( RRS * ( ( FirstVNF_CPU_Server / BR ) - ( ARS * ( ( Const + RRS ) - ( ACS + FirstVNF_CPU ) ) ) ) ) ,( Min( FirstVNF_CPU_Server ,( ( AMS * AMS ) * PN ) ) - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( MUR + Max( DS,MUR ) ) + ( ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) / ( ( ( MUR + Max( MLU,MUR ) ) + Max( ( CS * RCSe ),( RMSe / RRSe ) ) ) * RCSe ) ) ) )", "obj1": 0.967479674796748, "obj2": 0.011755560822961352}]}