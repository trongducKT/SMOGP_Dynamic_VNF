{"1": [{"determining": "( ( FirstVNF_RAM - MDR ) * ( MRS / PN ) )", "choosing": "( ( DS / MLU ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.49905152499213845}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( RRS - CRS ) )", "choosing": "Min( ( MLU * MUR ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( MUR * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) )", "choosing": "( ( RCSe - RMSe ) - Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / ACS ) ,FirstVNF_Mem ) + ( ( DDR * FirstVNF_RAM ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe * RCSe ) / ( RRSe * MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5966931197980082}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + DS ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "( ( ( MRS - ACS ) + Min( ACS ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.48027292190427606}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM * ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "( ( FirstVNF_CPU * PN ) + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5138374900122431}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / CS ) ) ) )", "obj1": 0.525, "obj2": 0.41314859807024856}, {"determining": "Max( ( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ),( MRS * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( ( CS * RCSe ),Max( MUM,MUM ) ),Max( ( CS - MUC ),( RCSe / MUM ) ) ),Max( Min( ( MUR * MLU ) ,( RCSe + MUR ) ),( Max( DS,DS ) + ( RMSe + CS ) ) ) )", "obj1": 0.46875, "obj2": 0.49259052609960013}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.4041666666666667, "obj2": 0.529512587500365}], "2": [{"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - ( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) ) ) )", "choosing": "Max( ( ( ( ( RMSe / MUR ) / ( MUC / CS ) ) * ( ( MUM / MLU ) + Min( MUM ,RRSe ) ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6819500536396796}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( PN - FirstVNF_CPU ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),MUC )", "obj1": 0.81875, "obj2": 0.18668663876475514}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( CS * RCSe ) + Max( MUC,MUR ) )", "obj1": 0.9416666666666667, "obj2": 0.05739066345395953}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.31875, "obj2": 0.5744470335468904}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ) )", "choosing": "Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.99375, "obj2": 0.008432938272224041}, {"determining": "( ( ( MRS - ACS ) + Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( ( ( MUR * MUC ) / Min( MUM ,MLU ) ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.18887201296287026}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5520833333333334, "obj2": 0.37105575176896766}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.2708333333333333, "obj2": 0.650872059316384}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) )", "obj1": 0.35, "obj2": 0.5555658079340552}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.35833333333333334, "obj2": 0.5428414267793776}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / MLU ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47129524138143897}, {"determining": "( ( Min( ( ( Min( ( ( BR / CRS ) * Min( MDR ,MRS ) ) ,( ( CRS * DDR ) * Max( ARS,FirstVNF_CPU_Server ) ) ) * ( ( Min( ACS ,FirstVNF_CPU ) + ( MDR * DDR ) ) - ( ( CRS / RRS ) * Max( PN,FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( MRS + CRS ) ) ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server - Const ) - ( MDR - DDR ) ) ) ) ) ,Min( ( ( ( ( Const / RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Max( ( CRS * CRS ),( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) / ( ( Max( CRS,PN ) / ( ACS * FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM - Const ) ,( MDR + RRS ) ) ) ) ,Max( ( Min( Min( CRS ,RRS ) ,( ACS - CRS ) ) + ( Min( DDR ,AMS ) / Max( FirstVNF_CPU,AMS ) ) ),Max( Max( ( BR / BR ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( Max( ARS,ACS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) + Max( Min( Min( Min( Min( Min( RRS ,DDR ) ,( FirstVNF_RAM_Server - BR ) ) ,( Max( FirstVNF_Mem_Server,MRS ) * ( ARS * PN ) ) ) ,( ( ( AMS - CRS ) - ( FirstVNF_CPU - PN ) ) * Max( Min( AMS ,BR ),( RRS - FirstVNF_RAM ) ) ) ) ,Min( Max( ( ( ACS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_CPU ) ),( ( Const / MDR ) + ( PN + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_Mem / Const ) * ( DDR * DDR ) ) ,Max( Max( ARS,DDR ),( AMS - MDR ) ) ) ) ),( ( Min( ( ( Const * MDR ) / ( Const - ARS ) ) ,( ( Const + FirstVNF_RAM ) * ( Const + FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * RRS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / Max( Min( DDR ,MDR ),( AMS + BR ) ) ) ) * ( ( ( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - RRS ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * RRS ) ) - ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( Const / Const ) ) ) ) ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + MUC ) * Min( RRSe ,DS ) )", "obj1": 0.925, "obj2": 0.08497513369969567}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.39791666666666664, "obj2": 0.5127252167495315}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( Min( ( FirstVNF_Mem * MDR ) ,Min( Const ,FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU ,MRS ) / Max( FirstVNF_CPU,AMS ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - MUM ) - ( MUM / MUC ) )", "obj1": 0.425, "obj2": 0.5011964210088897}, {"determining": "( ( AMS - BR ) * FirstVNF_RAM )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * RMSe ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.39375, "obj2": 0.5313833238114094}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 0.5270833333333333, "obj2": 0.4033930813270332}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.46875, "obj2": 0.4650930441438671}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4917269812924049}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( BR / AMS ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.6373200703195459}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.4216930069314103}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / CS ) ) ) )", "obj1": 0.525, "obj2": 0.41314859807024856}, {"determining": "( ( AMS - BR ) * ( RRS - DDR ) )", "choosing": "Max( Min( ( ( RRSe + MUM ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.5041666666666667, "obj2": 0.4278551635067192}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + DS ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "( Min( BR ,FirstVNF_Mem ) / ( DDR + FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( Min( RRSe ,RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / DS ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.527446275474888}, {"determining": "( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "Max( ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ),( RRSe + MUC ) )", "obj1": 0.48125, "obj2": 0.4550350810271799}, {"determining": "Min( ( ( ( ( Min( Min( Max( ARS,FirstVNF_Mem_Server ) ,( CRS - MRS ) ) ,( ( ARS + PN ) + ( FirstVNF_Mem - BR ) ) ) * ( ( Min( Const ,AMS ) / Max( PN,RRS ) ) / ( ( DDR * RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( ARS * FirstVNF_RAM ) ,( FirstVNF_RAM_Server / BR ) ) / Min( Max( CRS,FirstVNF_Mem ) ,( Const / Const ) ) ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( FirstVNF_RAM / Const ) ) - ( ( MDR * DDR ) / ( AMS + FirstVNF_CPU_Server ) ) ) ) ) - Max( ( Max( Min( ( Const + Const ) ,Min( MDR ,FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,MDR ),( FirstVNF_CPU / BR ) ) ) / ( Min( ( CRS + FirstVNF_CPU ) ,Min( DDR ,PN ) ) * Min( ( FirstVNF_Mem * RRS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ),Min( Max( ( ( AMS * FirstVNF_Mem_Server ) + ( ARS / RRS ) ),( ( CRS / FirstVNF_Mem ) - Min( ARS ,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,PN ) + Max( DDR,MDR ) ) / ( ( RRS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) ) ) ) ) / Min( ( ( ( ( Min( CRS ,ARS ) + ( ACS + ARS ) ) / Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ARS * Const ) ) ) * ( ( ( FirstVNF_RAM * Const ) - ( FirstVNF_Mem + MDR ) ) * ( ( AMS + FirstVNF_RAM ) - ( RRS * Const ) ) ) ) / Max( ( ( Max( FirstVNF_RAM,Const ) * Max( ARS,PN ) ) + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ),( ( ( DDR / FirstVNF_RAM_Server ) * Min( MDR ,AMS ) ) - ( ( BR * MRS ) / ( FirstVNF_CPU_Server * AMS ) ) ) ) ) ,( Min( ( Min( Min( FirstVNF_CPU_Server ,PN ) ,( FirstVNF_RAM * RRS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) * Min( DDR ,MRS ) ) ) ,( Max( ( ACS * ARS ),( PN * MDR ) ) / ( ( FirstVNF_RAM_Server + ACS ) / ( CRS - ACS ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( RRS + BR ) ) * Max( ( CRS * BR ),( PN / FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,RRS ) + Min( MDR ,BR ) ) * ( ( Const * FirstVNF_CPU_Server ) - Min( Const ,AMS ) ) ) ) ) ) ) ,( ( Min( ( ( ( Min( FirstVNF_RAM ,ARS ) / ( ARS - DDR ) ) - ( ( FirstVNF_RAM * RRS ) * Max( ARS,CRS ) ) ) + ( ( Max( MRS,FirstVNF_Mem ) - ( RRS * CRS ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Min( DDR ,RRS ) ) ) ) ,( Min( ( ( MDR - FirstVNF_RAM_Server ) * ( MRS / BR ) ) ,( ( ACS / BR ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) + ( Min( ( AMS + BR ) ,Min( Const ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( ( BR - FirstVNF_RAM_Server ) + ( FirstVNF_CPU + Const ) ) - Min( Min( ARS ,ACS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) + ( ( Max( MRS,Const ) / Min( FirstVNF_CPU ,DDR ) ) / Max( Min( PN ,ACS ),Min( CRS ,FirstVNF_CPU ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( DDR * AMS ) ),( ( MDR - FirstVNF_CPU ) * Max( FirstVNF_RAM,BR ) ) ) - Max( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ),( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) ) ) ) * ( ( Min( ( ( ( DDR * MRS ) - ( FirstVNF_CPU - DDR ) ) / ( Max( DDR,MDR ) / ( ARS * MRS ) ) ) ,Min( ( ( FirstVNF_RAM_Server - MRS ) + ( FirstVNF_CPU_Server - CRS ) ) ,( Min( FirstVNF_Mem ,DDR ) * ( FirstVNF_CPU * MRS ) ) ) ) * ( ( Min( Max( ARS,Const ) ,Max( Const,MDR ) ) - ( ( ARS / MDR ) / ( DDR + MRS ) ) ) * ( ( Max( FirstVNF_CPU_Server,MRS ) / Max( PN,FirstVNF_Mem_Server ) ) - ( ( MRS / RRS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) - Min( ( ( ( Max( BR,MRS ) - ( FirstVNF_Mem_Server - PN ) ) * ( Max( Const,Const ) / ( FirstVNF_CPU / MRS ) ) ) / ( Max( Min( MRS ,FirstVNF_Mem ),( MDR / MRS ) ) + ( ( CRS / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ) ,( ( Min( ( RRS / FirstVNF_RAM_Server ) ,( MRS + MRS ) ) / ( Max( RRS,FirstVNF_Mem_Server ) / ( PN - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / Const ) / ( RRS + BR ) ) * ( Max( ARS,ARS ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,( ( MUR / DS ) + ( MUC - MUM ) ) ) + Max( ( RRSe - DS ),MLU ) )", "obj1": 0.4791666666666667, "obj2": 0.4639685113839462}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( RMSe ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.5083333333333333, "obj2": 0.4271007718548245}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( RRS - CRS ) )", "choosing": "Min( ( MLU * MUR ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( MUR * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) )", "choosing": "( ( RCSe - RMSe ) - Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ACS ) + Min( ACS ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( Const - ( MDR / MDR ) ) )", "choosing": "( Min( RMSe ,MUM ) / Min( ( MLU * ( CS + CS ) ) ,( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ( FirstVNF_RAM - CRS ) ) )", "choosing": "( ( ( MUR * MUR ) / Min( RRSe ,RCSe ) ) - Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) )", "choosing": "( ( MUR * MUR ) / Min( RRSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - MRS ) * ( DDR + Const ) ) - ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / MDR )", "choosing": "Max( ( MUR + ( MUM + Min( MLU ,MUR ) ) ),( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe * RMSe ) + ( MUM * ( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( ( MRS - FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * ( RMSe * RMSe ) ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6819500536396796}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - ( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) ) ) )", "choosing": "Max( ( ( ( ( RMSe / MUR ) / ( MUC / CS ) ) * ( ( MUM / MLU ) + Min( MUM ,RRSe ) ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) / ( DDR + FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,CS ) / ( RCSe - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6819500536396796}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / ( DS - MUR ) )", "obj1": 0.8625, "obj2": 0.06410952638065578}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / MUC ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.675, "obj2": 0.2774296365184871}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) + ( ( BR / FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( RCSe + Max( MUC,MUR ) )", "obj1": 0.825, "obj2": 0.1620890924977965}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( PN * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( MUR * Max( RCSe,RRSe ) ) ) * ( Max( ( MUR / CS ),Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.9375, "obj2": 0.04691930987053998}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( MUR * RMSe ) + ( MUM * MUR ) )", "obj1": 0.6416666666666667, "obj2": 0.32553484079024075}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.31875, "obj2": 0.5744470335468904}, {"determining": "( ( AMS - BR ) * ( FirstVNF_CPU_Server - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( Min( MUR ,Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.20762515298471917}, {"determining": "( ( ( Max( Max( ( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU_Server / AMS ) ) * ( ( MRS / FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_RAM ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) + ( RRS / MDR ) ) * ( ( Const + Const ) / Max( FirstVNF_Mem,MDR ) ) ) ),( ( ( ( FirstVNF_Mem_Server + PN ) + Min( FirstVNF_Mem ,ACS ) ) + ( ( BR / BR ) / Max( FirstVNF_RAM,AMS ) ) ) / ( Max( Max( DDR,AMS ),Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server - RRS ) ,Min( CRS ,FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( MDR + DDR ) - Min( DDR ,DDR ) ) / Max( ( CRS - MRS ),Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) - ( FirstVNF_RAM + ACS ) ) / ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ACS ) ) ) ) + ( ( ( Min( AMS ,ACS ) / ( Const * ARS ) ) - ( Max( FirstVNF_CPU,BR ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_RAM + FirstVNF_Mem ) / Max( AMS,FirstVNF_RAM ) ) ,( ( DDR + Const ) - ( FirstVNF_RAM_Server * RRS ) ) ) ) ) ) * Max( ( Max( Max( Min( Max( BR,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),Max( ( RRS + FirstVNF_RAM ),( MRS / FirstVNF_RAM ) ) ),( Min( Max( CRS,Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem + ARS ) ,( ARS + FirstVNF_Mem ) ) ) ) + ( ( ( Min( BR ,FirstVNF_RAM ) - ( BR - DDR ) ) * ( ( MDR / DDR ) * Max( MDR,FirstVNF_CPU ) ) ) + ( ( Max( PN,MDR ) - ( FirstVNF_RAM_Server / PN ) ) / ( ( CRS * MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) ),Max( ( ( Min( ( FirstVNF_Mem + ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) * ( ( MDR + Const ) - Max( ACS,FirstVNF_RAM_Server ) ) ) - ( Max( ( DDR / Const ),( Const / MDR ) ) + ( ( MRS - ARS ) / Max( CRS,FirstVNF_RAM ) ) ) ),Min( ( ( ( PN - AMS ) + Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( PN - DDR ) + ( BR + ACS ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),Max( RRS,Const ) ) / ( Min( AMS ,FirstVNF_Mem ) + Max( MRS,FirstVNF_Mem ) ) ) ) ) ) ) / ( Max( ( ( Min( ( Min( DDR ,FirstVNF_RAM ) / Min( Const ,PN ) ) ,( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) ) - ( ( ( DDR - CRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( PN / FirstVNF_CPU ) ) ) ) / ( Max( ( Max( RRS,FirstVNF_CPU ) * ( RRS + RRS ) ),( Max( ARS,MDR ) + Max( DDR,BR ) ) ) / ( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( FirstVNF_CPU_Server - PN ) ) - ( ( FirstVNF_RAM + BR ) / Max( ARS,MDR ) ) ) ) ),Min( ( Max( ( ( CRS - CRS ) * ( RRS / MDR ) ),( Min( BR ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + DDR ) ) ) - Min( ( ( AMS + Const ) + Min( FirstVNF_CPU ,AMS ) ) ,( Min( FirstVNF_RAM_Server ,PN ) + ( Const + CRS ) ) ) ) ,( Max( Max( Max( FirstVNF_RAM,CRS ),( ARS + CRS ) ),( Min( BR ,ARS ) + Max( CRS,RRS ) ) ) - ( ( Min( MRS ,FirstVNF_Mem ) - Max( FirstVNF_CPU,RRS ) ) + ( ( MRS / DDR ) - ( FirstVNF_RAM / Const ) ) ) ) ) ) / Max( Max( ( ( Max( ( MDR / AMS ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server / ACS ) - ( AMS - AMS ) ) ) / Min( Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,( ARS + FirstVNF_RAM_Server ) ) ,( ( CRS / PN ) + ( PN - FirstVNF_Mem ) ) ) ),( ( ( Max( FirstVNF_RAM_Server,BR ) - ( Const * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / ( MRS / BR ) ) ) - Max( ( Max( BR,MDR ) - Min( RRS ,RRS ) ),( ( FirstVNF_CPU_Server / CRS ) / Max( MRS,ARS ) ) ) ) ),Min( ( Min( Max( ( ACS + CRS ),Max( RRS,PN ) ) ,Max( Max( CRS,Const ),Max( DDR,BR ) ) ) / ( ( ( AMS - Const ) / ( FirstVNF_Mem * MRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) ,( ( ( ( RRS - BR ) * ( FirstVNF_CPU / AMS ) ) - Min( ( MRS * CRS ) ,( RRS / DDR ) ) ) + ( Max( ( ARS + FirstVNF_Mem ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) * ( ( ACS / PN ) / Min( ACS ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( RRSe + RRSe ) - Min( Min( MUC ,RRSe ) ,DS ) )", "obj1": 0.9791666666666666, "obj2": 0.02239544811910713}, {"determining": "( ( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.8166666666666667, "obj2": 0.18551643132476317}, {"determining": "( ( Min( ( ( Min( ( ( BR / CRS ) * Min( MDR ,MRS ) ) ,( ( CRS * DDR ) * Max( ARS,FirstVNF_CPU_Server ) ) ) * ( ( Min( ACS ,FirstVNF_CPU ) + ( MDR * DDR ) ) - ( ( CRS / RRS ) * Max( PN,FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( MRS + CRS ) ) ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server - Const ) - ( MDR - DDR ) ) ) ) ) ,Min( ( ( ( ( Const / RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Max( ( CRS * CRS ),( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) / ( ( Max( CRS,PN ) / ( ACS * FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM - Const ) ,( MDR + RRS ) ) ) ) ,Max( ( Min( Min( CRS ,RRS ) ,( ACS - CRS ) ) + ( Min( DDR ,AMS ) / Max( FirstVNF_CPU,AMS ) ) ),Max( Max( ( BR / BR ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( Max( ARS,ACS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) + Max( Min( Min( Min( Min( Min( RRS ,DDR ) ,( FirstVNF_RAM_Server - BR ) ) ,( Max( FirstVNF_Mem_Server,MRS ) * ( ARS * PN ) ) ) ,( ( ( AMS - CRS ) - ( FirstVNF_CPU - PN ) ) * Max( Min( AMS ,BR ),( RRS - FirstVNF_RAM ) ) ) ) ,Min( Max( ( ( ACS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_CPU ) ),( ( Const / MDR ) + ( PN + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_Mem / Const ) * ( DDR * DDR ) ) ,Max( Max( ARS,DDR ),( AMS - MDR ) ) ) ) ),( MRS + ARS ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.6041666666666666, "obj2": 0.3309476553716437}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.36875, "obj2": 0.5408750076433573}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.3875, "obj2": 0.5145045932648571}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ) ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,CS ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.4982398002163856}, {"determining": "( ( ( MRS - ACS ) + Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( ( ( MUR * MUC ) / Min( MUM ,MLU ) ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.18887201296287026}, {"determining": "( ( AMS - MDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( Min( RRSe ,RMSe ) / CS ) ) )", "obj1": 0.5208333333333334, "obj2": 0.3898882133616209}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / ( PN + FirstVNF_CPU ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( ( MUC * RMSe ) * DS ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5875, "obj2": 0.36932332655451466}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.5145833333333333, "obj2": 0.411771171000827}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.2708333333333333, "obj2": 0.650872059316384}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) / Max( FirstVNF_CPU,AMS ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ) ) - CS ) - ( MUM / MUC ) )", "obj1": 0.4791666666666667, "obj2": 0.4420949379639766}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.46875, "obj2": 0.4650930441438671}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.39791666666666664, "obj2": 0.5127252167495315}, {"determining": "( ( FirstVNF_CPU * PN ) + ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.2708333333333333, "obj2": 0.650872059316384}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5520833333333334, "obj2": 0.37105575176896766}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) )", "obj1": 0.35, "obj2": 0.5555658079340552}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - CS ) - ( MUM / MUC ) )", "obj1": 0.44583333333333336, "obj2": 0.465303356908085}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.575, "obj2": 0.3700980172659118}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / MLU ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47129524138143897}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.31875, "obj2": 0.5744470335468904}, {"determining": "( ( ( ( DDR / PN ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.5333333333333333, "obj2": 0.3791059008687579}, {"determining": "( ( RRS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.4270833333333333, "obj2": 0.4867437804720199}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) )", "obj1": 0.35, "obj2": 0.5555658079340552}, {"determining": "( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "Max( ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ),( RRSe + MUC ) )", "obj1": 0.50625, "obj2": 0.42518067300189}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.49375, "obj2": 0.43468293108127}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.43125, "obj2": 0.484269435583522}, {"determining": "( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( MLU / DS ) ) + Max( Max( MUR,MUR ),( RCSe * CS ) ) ) )", "obj1": 0.35833333333333334, "obj2": 0.5428414267793776}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9916666666666667, "obj2": 0.0076871417867266905}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9895833333333334, "obj2": 0.012578154140619862}, {"determining": "( ( BR / ( FirstVNF_RAM - DDR ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4875, "obj2": 0.436317291055291}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.9833333333333333, "obj2": 0.021997152358016647}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + BR ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Min( MUR ,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( BR / AMS ) / Max( DDR,Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) ) ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,( ( ( ( MUR * MUC ) / Min( MUM ,MLU ) ) + RMSe ) / CS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.6373200703195459}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( BR / AMS ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.6373200703195459}], "4": [{"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6819500536396796}, {"determining": "( ( RRS - BR ) * FirstVNF_RAM )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6819500536396796}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / ( DS - MUR ) )", "obj1": 0.8625, "obj2": 0.06410952638065578}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( ACS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( MLU,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( Min( MUR ,Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.6895833333333333, "obj2": 0.26421316985514026}, {"determining": "( ( RRS * FirstVNF_RAM ) + ( ( BR / FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( RCSe + ( MUC - MUR ) )", "obj1": 0.8270833333333333, "obj2": 0.16055752775657223}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "( ( AMS - BR ) * ( ( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) ) - DDR ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.7708333333333334, "obj2": 0.18308160409621255}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7416666666666667, "obj2": 0.2364870528416406}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.4625, "obj2": 0.4258297352124769}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4125, "obj2": 0.4572436095833225}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,Const ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( PN * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( MUR * Max( RCSe,RRSe ) ) ) * ( Max( ( RMSe / CS ),Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.049037506958339735}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.44375, "obj2": 0.4539589922447833}, {"determining": "( ( RRS / FirstVNF_Mem ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( ( MUC * RMSe ) * CS ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.61875, "obj2": 0.3096885552404142}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) + ( ( BR / FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( RCSe + Max( MUC,MUR ) )", "obj1": 0.825, "obj2": 0.1620890924977965}, {"determining": "( ( ( ( DDR / PN ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.34845043363956474}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + Max( MUM,MUC ) ) * Min( RRSe ,DS ) )", "obj1": 0.7520833333333333, "obj2": 0.19666796000507705}, {"determining": "( ( PN * PN ) + ( ( FirstVNF_CPU / AMS ) * ( PN + ( Min( ( MRS - MRS ) ,( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( Min( CS ,MUC ) - ( RRSe - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.3, "obj2": 0.6108771265623314}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( MRS + ARS ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6633855414677667}, {"determining": "( ( Min( ( ( Min( ( ( BR / CRS ) * Min( MDR ,MRS ) ) ,( ( CRS * DDR ) * Max( ARS,FirstVNF_CPU_Server ) ) ) * ( ( Min( ACS ,FirstVNF_CPU ) + ( MDR * DDR ) ) - ( ( CRS / RRS ) * Max( PN,FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( MRS + CRS ) ) ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server - Const ) - ( MDR - DDR ) ) ) ) ) ,Min( ( ( ( ( Const / RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Max( ( CRS * CRS ),( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) / ( ( Max( CRS,PN ) / ( ACS * FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM - Const ) ,( MDR + RRS ) ) ) ) ,Max( ( Min( Min( CRS ,RRS ) ,( ACS - CRS ) ) + ( Min( DDR ,AMS ) / Max( FirstVNF_CPU,AMS ) ) ),Max( Max( ( BR / BR ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( Max( ARS,ACS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) + Max( Min( Min( Min( Min( Min( RRS ,DDR ) ,( FirstVNF_RAM_Server - BR ) ) ,( Max( FirstVNF_Mem_Server,MRS ) * ( ARS * PN ) ) ) ,( ( ( AMS - CRS ) - ( FirstVNF_CPU - PN ) ) * Max( Min( AMS ,BR ),( RRS - FirstVNF_RAM ) ) ) ) ,Min( Max( ( ( ACS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_CPU ) ),( ( Const / MDR ) + ( PN + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_Mem / Const ) * ( DDR * DDR ) ) ,Max( Max( ARS,DDR ),( AMS - MDR ) ) ) ) ),( MRS + ARS ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.41041666666666665, "obj2": 0.507693390679351}, {"determining": "( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "Max( ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ),( RRSe + MUC ) )", "obj1": 0.50625, "obj2": 0.42518067300189}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - MRS )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) - MUC ) ) ) )", "obj1": 0.9520833333333333, "obj2": 0.040054280173217174}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Const )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,DS ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.5120813563984328}, {"determining": "( ( FirstVNF_Mem_Server + ACS ) - Min( Const ,RRS ) )", "choosing": "Min( Min( Min( ( ( ( ( Max( RCSe,RMSe ) + ( RMSe / RMSe ) ) + ( ( MUC / MUR ) - ( CS - MUC ) ) ) / Max( Min( Max( MLU,CS ) ,Max( RMSe,MLU ) ),( ( DS - MLU ) + ( MLU - DS ) ) ) ) / ( ( ( ( CS + RCSe ) - Max( RCSe,RRSe ) ) + Max( ( MLU * RRSe ),( CS / MUR ) ) ) * Max( ( Max( MUM,MUM ) / ( RMSe - MUM ) ),( Max( RCSe,MUC ) / ( RRSe / DS ) ) ) ) ) ,( ( Min( ( ( RRSe / MUC ) * ( RMSe + MLU ) ) ,( Max( MUM,MLU ) + ( MUM / CS ) ) ) - ( ( ( MLU * MUR ) / ( RMSe + DS ) ) / Max( ( MUC + MUM ),( MUM - MLU ) ) ) ) / ( Max( Min( Max( RRSe,MUR ) ,Max( MUM,MUR ) ),( ( CS + MUC ) * ( MUC * MLU ) ) ) - ( ( ( MLU / MUC ) - ( RMSe + RCSe ) ) - Min( ( MUC * RMSe ) ,( MLU - DS ) ) ) ) ) ) ,( Max( Min( Min( Max( ( DS - DS ),( MLU * MLU ) ) ,Min( Min( RMSe ,MUM ) ,( MUR * CS ) ) ) ,( Min( ( RMSe - MUR ) ,Max( MUR,DS ) ) - Min( ( RRSe / RMSe ) ,( MUC / MUC ) ) ) ),( ( Max( Min( MUR ,MUM ),( DS - RMSe ) ) / Max( ( RRSe + MUR ),( RCSe * DS ) ) ) / ( ( ( CS - DS ) / ( MUM * CS ) ) - Min( ( MUC - CS ) ,( CS - MLU ) ) ) ) ) * ( ( ( ( Max( MLU,MUM ) * ( MUC + RCSe ) ) / ( ( RCSe * MUM ) - Min( MUC ,RRSe ) ) ) / Max( ( ( MLU * MLU ) * ( RRSe * MUM ) ),Min( ( RMSe - DS ) ,( RCSe / DS ) ) ) ) / ( ( ( ( RCSe * MUC ) / ( RCSe / MUC ) ) + Min( ( RMSe / MUC ) ,( MLU / MLU ) ) ) + ( Min( ( RCSe * MLU ) ,Min( CS ,RCSe ) ) * ( ( MUR - CS ) - ( MUC + RRSe ) ) ) ) ) ) ) ,Max( Max( ( Min( ( Min( Max( MLU,RCSe ) ,( RMSe - RCSe ) ) + ( ( MUC + MUC ) * ( DS + DS ) ) ) ,( Min( ( MUM / RMSe ) ,Min( MLU ,MUC ) ) * ( ( MUC - MUC ) - Max( RRSe,MLU ) ) ) ) * Min( Max( Min( Min( MUC ,DS ) ,( DS + MUR ) ),Max( Min( RMSe ,RMSe ),Max( RCSe,MLU ) ) ) ,( ( Min( CS ,RRSe ) + ( MUM * RRSe ) ) * Min( ( MUC + DS ) ,( CS * RMSe ) ) ) ) ),( ( ( ( ( MLU / DS ) + ( MUC * MUC ) ) + Min( ( MUR + RMSe ) ,( DS * MLU ) ) ) - Min( Max( ( CS + DS ),( MUR * MUM ) ) ,( ( CS - MLU ) / Min( CS ,MUR ) ) ) ) + ( ( ( ( RMSe + RRSe ) - ( CS / RCSe ) ) - ( Min( MLU ,MLU ) * ( MUC / MLU ) ) ) + Max( ( ( CS / MUC ) * ( RMSe * MLU ) ),( ( DS - RRSe ) * ( MUM + MUR ) ) ) ) ) ),( ( ( ( ( ( CS + MLU ) - Min( DS ,DS ) ) + ( Min( RMSe ,DS ) * ( CS - MUR ) ) ) * ( ( Min( DS ,MUR ) / ( DS + MLU ) ) + ( ( RRSe + MLU ) + ( RCSe - RRSe ) ) ) ) - ( ( ( Min( RRSe ,RRSe ) * Max( MUC,RCSe ) ) * Max( ( MUC + CS ),Max( MLU,MUM ) ) ) - ( Max( ( RMSe - RCSe ),( RRSe / RRSe ) ) * Min( ( RCSe + RCSe ) ,( RCSe * MUC ) ) ) ) ) / ( ( ( Min( ( MLU / RCSe ) ,( RMSe + DS ) ) - Min( ( RRSe * CS ) ,( MUC * RRSe ) ) ) * Min( ( ( MUR - DS ) - ( RMSe + MUC ) ) ,( ( CS * MUC ) + Min( MUM ,RRSe ) ) ) ) - Min( ( ( Max( MLU,RMSe ) + Min( MLU ,CS ) ) * ( Max( MUC,MLU ) / ( MUC - CS ) ) ) ,Min( ( Max( CS,CS ) / ( MUR * RMSe ) ) ,( ( MUM / DS ) - ( DS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5675597106527202}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.5520833333333334, "obj2": 0.36817848888569393}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server - MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.31875, "obj2": 0.5744470335468904}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( RMSe - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) )", "obj1": 0.40625, "obj2": 0.5087335746389803}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,( ( RRSe + RMSe ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) )", "obj1": 0.29791666666666666, "obj2": 0.6205339245129925}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( RRSe + RMSe ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.60625, "obj2": 0.3209379047502041}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - PN )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.02770494363836671}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MUR,CS ) / ( RCSe - ( MUR / DS ) ) )", "obj1": 0.37083333333333335, "obj2": 0.5255944666932685}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) )", "obj1": 0.35, "obj2": 0.5555658079340552}, {"determining": "( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( MLU / DS ) ) + Max( Max( MUR,MUR ),( RCSe * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6523078031432475}, {"determining": "( ( ( ( DDR / PN ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.5333333333333333, "obj2": 0.3791059008687579}, {"determining": "( ( Min( ( ( Min( ( ( BR / CRS ) * Min( MDR ,MRS ) ) ,( ( CRS * DDR ) * Max( ARS,FirstVNF_CPU_Server ) ) ) * ( ( Min( ACS ,FirstVNF_CPU ) + ( MDR * DDR ) ) - ( ( CRS / RRS ) * Max( PN,FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( MRS + CRS ) ) ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server - Const ) - ( MDR - DDR ) ) ) ) ) ,Min( ( ( ( ( Const / RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Max( ( CRS * CRS ),( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) / ( ( Max( CRS,PN ) / ( ACS * FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM - Const ) ,( MDR + RRS ) ) ) ) ,Max( ( Min( Min( CRS ,RRS ) ,( ACS - CRS ) ) + ( Min( DDR ,AMS ) / Max( FirstVNF_CPU,AMS ) ) ),Max( Max( ( BR / BR ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( Max( ARS,ACS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) + Max( Min( Min( Min( Min( Min( RRS ,DDR ) ,( FirstVNF_RAM_Server - BR ) ) ,( Max( FirstVNF_Mem_Server,MRS ) * ( ARS * PN ) ) ) ,( ( ( AMS - CRS ) - ( FirstVNF_CPU - PN ) ) * Max( Min( AMS ,BR ),( RRS - FirstVNF_RAM ) ) ) ) ,Min( Max( ( ( ACS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_CPU ) ),( ( Const / MDR ) + ( PN + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_Mem / Const ) * ( DDR * DDR ) ) ,Max( Max( ARS,DDR ),( AMS - MDR ) ) ) ) ),( MRS + ARS ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.6041666666666666, "obj2": 0.3309476553716437}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37277038755457126}, {"determining": "( ( AMS - MDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( Min( RRSe ,RMSe ) / CS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.39276441801078765}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.5145833333333333, "obj2": 0.411771171000827}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.36875, "obj2": 0.5408750076433573}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.31875, "obj2": 0.5744470335468904}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.35833333333333334, "obj2": 0.5428414267793776}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) )", "obj1": 0.35, "obj2": 0.5555658079340552}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9916666666666667, "obj2": 0.00753434304189769}, {"determining": "( ( BR / AMS ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.6373200703195459}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.9833333333333333, "obj2": 0.021997152358016647}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) + Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.2708333333333333, "obj2": 0.650872059316384}], "5": [{"determining": "( ( ( BR - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( RRS - BR ) * FirstVNF_RAM )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( Min( Max( ( ( ( ( ( MRS / FirstVNF_CPU_Server ) + Max( MDR,ACS ) ) * Min( Max( FirstVNF_CPU_Server,ARS ) ,Min( AMS ,ACS ) ) ) * ( Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,( AMS * ACS ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU ) * ( BR - ACS ) ) ) ) + Max( ( ( ( BR - FirstVNF_CPU ) - ( ACS + ARS ) ) / ( ( ACS + Const ) + Min( DDR ,CRS ) ) ),( ( Min( Const ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / Const ) ) - ( ( FirstVNF_RAM * Const ) * ( MRS + FirstVNF_CPU_Server ) ) ) ) ),( ( Max( Min( Max( FirstVNF_RAM,MRS ) ,( MRS / FirstVNF_CPU_Server ) ),Min( Min( RRS ,FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,MDR ) ) ) / Min( Min( Min( CRS ,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - PN ) ) ,( ( BR / FirstVNF_Mem ) * ( DDR / BR ) ) ) ) * Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),Min( RRS ,MRS ) ),Max( ( ACS - DDR ),( CRS - FirstVNF_CPU ) ) ) ,Max( ( Min( PN ,ACS ) * ( AMS - FirstVNF_RAM_Server ) ),Min( ( AMS + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) ) ,Min( ( ( Max( ( Max( PN,FirstVNF_RAM ) + ( AMS + PN ) ),( ( CRS * PN ) * ( ACS / RRS ) ) ) + ( ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_RAM / PN ) ) + Min( Min( FirstVNF_Mem ,CRS ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) + Min( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( RRS + PN ) ) ) ,( ( ( MDR / BR ) * Min( FirstVNF_Mem ,CRS ) ) - Max( Max( FirstVNF_RAM_Server,PN ),( MDR * FirstVNF_Mem ) ) ) ) ) ,( Min( ( ( ( AMS + FirstVNF_CPU ) * ( AMS + CRS ) ) / ( ( MRS + FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MDR ) ) ) ,( ( ( FirstVNF_Mem * CRS ) * ( FirstVNF_RAM_Server / MDR ) ) + Min( ( FirstVNF_RAM_Server * Const ) ,( RRS - FirstVNF_RAM_Server ) ) ) ) / Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( ARS ,CRS ) ) * Min( ( CRS / MRS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Min( Max( AMS,RRS ) ,( Const * ACS ) ) * Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) ) * Max( ( Min( Min( ( ( Min( Const ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * ( ( ARS * Const ) + ( Const - MDR ) ) ) ,( ( ( Const - AMS ) * ( RRS * MDR ) ) - ( ( PN * AMS ) * ( Const / FirstVNF_CPU ) ) ) ) ,Min( ( ( ( MDR / FirstVNF_RAM ) - ( DDR / FirstVNF_RAM ) ) + ( ( FirstVNF_RAM / FirstVNF_Mem ) / Min( FirstVNF_RAM ,MDR ) ) ) ,Min( ( ( PN / MRS ) + Min( BR ,FirstVNF_Mem_Server ) ) ,( ( AMS / RRS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Max( FirstVNF_RAM,MDR ) * ( DDR / FirstVNF_RAM_Server ) ) + ( ( DDR + AMS ) + ( BR + FirstVNF_CPU ) ) ) + Min( ( ( FirstVNF_RAM - Const ) * Max( ARS,PN ) ) ,( ( ACS - BR ) * ( RRS / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( CRS - PN ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( ARS * ACS ) * Max( Const,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / MRS ) - ( CRS - Const ) ) / ( ( FirstVNF_RAM / PN ) + ( Const + AMS ) ) ) ) ) ),( Min( ( ( ( ( CRS + FirstVNF_Mem ) - Min( DDR ,BR ) ) * ( Max( RRS,FirstVNF_RAM ) / ( RRS - PN ) ) ) / ( ( Max( FirstVNF_Mem,AMS ) / ( PN * MRS ) ) + ( Max( FirstVNF_Mem_Server,DDR ) + Max( MDR,FirstVNF_CPU ) ) ) ) ,( Min( Max( Min( Const ,FirstVNF_CPU_Server ),( CRS * MDR ) ) ,Max( ( BR * ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) / ( ( Max( BR,MDR ) - ( CRS / ACS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Min( Const ,MRS ) ) ) ) ) - Min( Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / Max( Const,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( FirstVNF_RAM / DDR ) ) ) ) ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - Max( RRS,FirstVNF_Mem ) ) * ( Max( FirstVNF_Mem_Server,MDR ) + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) + ( Max( ( CRS * FirstVNF_RAM ),Min( FirstVNF_Mem ,PN ) ) - ( ( FirstVNF_RAM / ARS ) / ( DDR - MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( ( ( ( DS / MUM ) + ( RRSe + RCSe ) ) + Min( ( MUR + RRSe ) ,( RRSe / RCSe ) ) ),( ( ( MUR * MLU ) * ( RMSe * RCSe ) ) - ( ( MUR / DS ) + Min( CS ,MUR ) ) ) ) * Min( ( ( Max( RCSe,RMSe ) * ( MUR - RCSe ) ) / ( ( RMSe + RMSe ) / ( MLU + MLU ) ) ) ,( ( ( RMSe / MUC ) - ( MUC / MLU ) ) * ( Max( MUM,RRSe ) / ( DS - RCSe ) ) ) ) ) / ( Max( ( Max( Max( RCSe,RRSe ),Max( RRSe,DS ) ) + Min( ( MUM * RRSe ) ,( RMSe * RMSe ) ) ),( ( ( CS + MLU ) / ( MUM * RRSe ) ) * Max( ( CS / DS ),( MUC + CS ) ) ) ) + ( Min( ( Min( RRSe ,MUR ) * ( MUR - MLU ) ) ,Min( ( RRSe / CS ) ,( DS - MUM ) ) ) - Max( ( Min( DS ,RMSe ) / ( MUC + DS ) ),( Max( MUR,DS ) / ( RRSe * MUM ) ) ) ) ) ),( ( Min( Max( ( ( MUR * DS ) - Max( DS,RCSe ) ),( ( RCSe + MLU ) * Max( DS,CS ) ) ) ,( Min( Max( MLU,MUM ) ,( MUC - MLU ) ) * Min( Min( CS ,MLU ) ,( RRSe / MUC ) ) ) ) / ( ( Max( Max( MUM,MUR ),Max( MUR,MUC ) ) * ( ( RMSe * RCSe ) - ( RMSe * DS ) ) ) / Min( Min( ( RCSe * RRSe ) ,Min( MUM ,RMSe ) ) ,Min( ( RCSe / DS ) ,( RCSe / MUR ) ) ) ) ) + ( ( ( Max( ( MLU - RCSe ),( RRSe / MUM ) ) * ( ( RMSe * MUC ) - ( CS - MUM ) ) ) - ( ( ( MUC / RMSe ) - ( MUM * RMSe ) ) * ( ( DS - DS ) - ( CS - MUC ) ) ) ) / Min( ( Min( ( MUR * CS ) ,( RCSe + RCSe ) ) + ( Min( RRSe ,RCSe ) * ( MUR * MUM ) ) ) ,( Max( ( MLU + RCSe ),Max( RRSe,CS ) ) + ( ( RMSe / MUC ) - ( DS - MUM ) ) ) ) ) ) ) * ( ( ( ( Min( ( ( MUM / MUR ) + Max( RMSe,CS ) ) ,Min( ( RRSe * CS ) ,Min( DS ,MUM ) ) ) - ( Min( ( MUC + RMSe ) ,( RMSe - MUC ) ) / ( ( DS + RRSe ) / ( RMSe - RCSe ) ) ) ) - ( ( ( Max( RMSe,CS ) / ( RMSe + DS ) ) / Min( Max( DS,CS ) ,Min( MUR ,DS ) ) ) / Min( ( Min( MUC ,MUM ) - ( RCSe / MUC ) ) ,Min( ( MUC + MLU ) ,( RMSe * RCSe ) ) ) ) ) * ( ( Min( ( ( RRSe / MLU ) + ( MLU * MLU ) ) ,( Max( MUM,MUR ) * ( RRSe - MUR ) ) ) * Max( ( Max( RMSe,RRSe ) * ( MUM + MUM ) ),( ( DS / RCSe ) / ( MLU * RRSe ) ) ) ) - ( ( ( Max( MUR,MLU ) - ( MUR / DS ) ) / Min( Min( CS ,RCSe ) ,Max( MUR,RMSe ) ) ) - Max( Min( ( RCSe - MUR ) ,( MUC + RRSe ) ),Min( Max( RMSe,CS ) ,Max( MUM,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe / MUM ) + Min( MLU ,RRSe ) ) * Max( ( MUR + MUC ),Min( RMSe ,MUR ) ) ) * ( Min( ( RRSe * MUR ) ,Max( RRSe,MUR ) ) + Min( ( RRSe - MUR ) ,Max( MLU,RRSe ) ) ) ) * ( Max( ( ( MUR - MUC ) / ( RMSe + MUR ) ),( Max( DS,MUC ) - ( RCSe / RMSe ) ) ) / ( ( ( MUM + RRSe ) * Max( RRSe,DS ) ) - ( ( DS - RCSe ) + ( RRSe + MUM ) ) ) ) ) - Max( ( ( ( ( MUR / RMSe ) - Min( RMSe ,MLU ) ) + ( Min( RRSe ,MUM ) + ( RMSe / RCSe ) ) ) + Max( ( ( MLU - RMSe ) * ( MUR + DS ) ),Min( ( RCSe - RRSe ) ,Max( RMSe,RRSe ) ) ) ),( ( ( ( RCSe * RMSe ) * ( RCSe / RRSe ) ) - Min( ( MLU + MLU ) ,( RCSe - MUM ) ) ) / ( Min( ( CS / MUC ) ,( MUC * MUC ) ) / ( ( RCSe - RCSe ) - ( MUR - DS ) ) ) ) ) ) ) )", "obj1": 0.8479166666666667, "obj2": 0.14067812275253974}, {"determining": "( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "Max( ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ),( RRSe + MUC ) )", "obj1": 0.50625, "obj2": 0.42518067300189}, {"determining": "( ( AMS - BR ) * ( ( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) ) - DDR ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.7708333333333334, "obj2": 0.18308160409621255}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( ACS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( MLU,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( Min( MUR ,Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.6895833333333333, "obj2": 0.26421316985514026}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( Min( ( MLU * DS ) ,MUM ) / ( DS - MUR ) )", "obj1": 0.8604166666666667, "obj2": 0.06703102429645046}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.3671478544475167}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) + ( ( BR / FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.8125, "obj2": 0.15527279614273926}, {"determining": "( ( ( ( DDR / PN ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.34845043363956474}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + RRSe ) + ( ( RCSe * CS ) - MUC ) ) )", "obj1": 0.4395833333333333, "obj2": 0.45084182985394416}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( BR / AMS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUR + RMSe ) / Min( RMSe ,( ( RRSe + RMSe ) / CS ) ) ) + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.7145833333333333, "obj2": 0.25434593925660315}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "Max( ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ),( RRSe + MUC ) )", "obj1": 0.9083333333333333, "obj2": 0.04794750471162792}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + Max( MUM,MUC ) ) * Min( RRSe ,DS ) )", "obj1": 0.7520833333333333, "obj2": 0.19666796000507705}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.4625, "obj2": 0.4258297352124769}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( MRS + ARS ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6633855414677667}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) * MDR ) )", "choosing": "Min( ( MLU + ( CS + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.89375, "obj2": 0.055313004812831974}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7416666666666667, "obj2": 0.2364870528416406}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,MUM ) / Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.46948453012619146}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,FirstVNF_CPU ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.63125, "obj2": 0.3011328761906091}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / FirstVNF_CPU ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - MRS )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) / ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) - MUC ) ) ) )", "obj1": 0.95, "obj2": 0.04032027185492921}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / ( DS - MUR ) )", "obj1": 0.38958333333333334, "obj2": 0.48855826462843027}, {"determining": "( ( FirstVNF_CPU + AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( Max( MLU,( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.31875, "obj2": 0.5744470335468904}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4125, "obj2": 0.4572436095833225}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Const )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,DS ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.5120813563984328}, {"determining": "( ( RRS / FirstVNF_Mem ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( ( MUC * RMSe ) * CS ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.61875, "obj2": 0.3096885552404142}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / ( DS - MUR ) )", "obj1": 0.8625, "obj2": 0.06410952638065578}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3875, "obj2": 0.4959739562340335}, {"determining": "( ( PN * PN ) + ( ( FirstVNF_CPU / AMS ) * ( PN + ( Min( ( MRS - MRS ) ,( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( Min( CS ,MUC ) - ( RRSe - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.3, "obj2": 0.6108771265623314}, {"determining": "( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "( RRSe / ( MLU - ( MUR / DS ) ) )", "obj1": 0.22708333333333333, "obj2": 0.7010713048048605}, {"determining": "( ( FirstVNF_CPU * PN ) + ( ( FirstVNF_CPU / AMS ) * ( ( FirstVNF_CPU * AMS ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUR / CS ) + ( MLU / DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) / Min( DS ,MUC ) )", "obj1": 0.21875, "obj2": 0.721592045643775}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.825, "obj2": 0.14749146315949974}, {"determining": "( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( MLU / DS ) ) + Max( Max( MUR,MUR ),( RCSe * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6523078031432475}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.9833333333333333, "obj2": 0.02165626965975014}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5287500071805336}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.2708333333333333, "obj2": 0.650872059316384}, {"determining": "( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.225, "obj2": 0.7120181185615196}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MUR,CS ) / ( RCSe - ( MUR / DS ) ) )", "obj1": 0.37083333333333335, "obj2": 0.5255944666932685}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) )", "obj1": 0.35, "obj2": 0.5555658079340552}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - PN )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.02770494363836671}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - PN )", "choosing": "( RCSe + ( RRSe - MUR ) )", "obj1": 0.96875, "obj2": 0.03602347560460766}, {"determining": "Max( ( FirstVNF_CPU - ACS ),( MRS + ARS ) )", "choosing": "( ( MLU - ( ( Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( MLU ,MUC ) )", "obj1": 0.3, "obj2": 0.6108771265623314}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6819500536396796}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server - MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.31875, "obj2": 0.5744470335468904}], "6": [{"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( RRS - BR ) * FirstVNF_RAM )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( Min( Max( ( ( ( ( ( MRS / FirstVNF_CPU_Server ) + Max( MDR,ACS ) ) * Min( Max( FirstVNF_CPU_Server,ARS ) ,Min( AMS ,ACS ) ) ) * ( Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,( AMS * ACS ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU ) * ( BR - ACS ) ) ) ) + Max( ( ( ( BR - FirstVNF_CPU ) - ( ACS + ARS ) ) / ( ( ACS + Const ) + Min( DDR ,CRS ) ) ),( ( Min( Const ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / Const ) ) - ( ( FirstVNF_RAM * Const ) * ( MRS + FirstVNF_CPU_Server ) ) ) ) ),( ( Max( Min( Max( FirstVNF_RAM,MRS ) ,( MRS / FirstVNF_CPU_Server ) ),Min( Min( RRS ,FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,MDR ) ) ) / Min( Min( Min( CRS ,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - PN ) ) ,( ( BR / FirstVNF_Mem ) * ( DDR / BR ) ) ) ) * Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),Min( RRS ,MRS ) ),Max( ( ACS - DDR ),( CRS - FirstVNF_CPU ) ) ) ,Max( ( Min( PN ,ACS ) * ( AMS - FirstVNF_RAM_Server ) ),Min( ( AMS + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) ) ,Min( ( ( Max( ( Max( PN,FirstVNF_RAM ) + ( AMS + PN ) ),( ( CRS * PN ) * ( ACS / RRS ) ) ) + ( ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_RAM / PN ) ) + Min( Min( FirstVNF_Mem ,CRS ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) + Min( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( RRS + PN ) ) ) ,( ( ( MDR / BR ) * Min( FirstVNF_Mem ,CRS ) ) - Max( Max( FirstVNF_RAM_Server,PN ),( MDR * FirstVNF_Mem ) ) ) ) ) ,( Min( ( ( ( AMS + FirstVNF_CPU ) * ( AMS + CRS ) ) / ( ( MRS + FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MDR ) ) ) ,( ( ( FirstVNF_Mem * CRS ) * ( FirstVNF_RAM_Server / MDR ) ) + Min( ( FirstVNF_RAM_Server * Const ) ,( RRS - FirstVNF_RAM_Server ) ) ) ) / Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( ARS ,CRS ) ) * Min( ( CRS / MRS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Min( Max( AMS,RRS ) ,( Const * ACS ) ) * Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) ) * Max( ( Min( Min( ( ( Min( Const ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * ( ( ARS * Const ) + ( Const - MDR ) ) ) ,( ( ( Const - AMS ) * ( RRS * MDR ) ) - ( ( PN * AMS ) * ( Const / FirstVNF_CPU ) ) ) ) ,Min( ( ( ( MDR / FirstVNF_RAM ) - ( DDR / FirstVNF_RAM ) ) + ( ( FirstVNF_RAM / FirstVNF_Mem ) / Min( FirstVNF_RAM ,MDR ) ) ) ,Min( ( ( PN / MRS ) + Min( BR ,FirstVNF_Mem_Server ) ) ,( ( AMS / RRS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Max( FirstVNF_RAM,MDR ) * ( DDR / FirstVNF_RAM_Server ) ) + ( ( DDR + AMS ) + ( BR + FirstVNF_CPU ) ) ) + Min( ( ( FirstVNF_RAM - Const ) * Max( ARS,PN ) ) ,( ( ACS - BR ) * ( RRS / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( CRS - PN ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( ARS * ACS ) * Max( Const,RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / MRS ) - ( CRS - Const ) ) / ( ( FirstVNF_RAM / PN ) + ( Const + AMS ) ) ) ) ) ),( Min( ( ( ( ( CRS + FirstVNF_Mem ) - Min( DDR ,BR ) ) * ( Max( RRS,FirstVNF_RAM ) / ( RRS - PN ) ) ) / ( ( Max( FirstVNF_Mem,AMS ) / ( PN * MRS ) ) + ( Max( FirstVNF_Mem_Server,DDR ) + Max( MDR,FirstVNF_CPU ) ) ) ) ,( Min( Max( Min( Const ,FirstVNF_CPU_Server ),( CRS * MDR ) ) ,Max( ( BR * ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) / ( ( Max( BR,MDR ) - ( CRS / ACS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Min( Const ,MRS ) ) ) ) ) - Min( Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / Max( Const,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( FirstVNF_RAM / DDR ) ) ) ) ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - Max( RRS,FirstVNF_Mem ) ) * ( Max( FirstVNF_Mem_Server,MDR ) + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) + ( Max( ( CRS * FirstVNF_RAM ),Min( FirstVNF_Mem ,PN ) ) - ( ( FirstVNF_RAM / ARS ) / ( DDR - MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( ( ( ( DS / MUM ) + ( RRSe + RCSe ) ) + Min( ( MUR + RRSe ) ,( RRSe / RCSe ) ) ),( ( ( MUR * MLU ) * ( RMSe * RCSe ) ) - ( ( MUR / DS ) + Min( CS ,MUR ) ) ) ) * Min( ( ( Max( RCSe,RMSe ) * ( MUR - RCSe ) ) / ( ( RMSe + RMSe ) / ( MLU + MLU ) ) ) ,( ( ( RMSe / MUC ) - ( MUC / MLU ) ) * ( Max( MUM,RRSe ) / ( DS - RCSe ) ) ) ) ) / ( Max( ( Max( Max( RCSe,RRSe ),Max( RRSe,DS ) ) + Min( ( MUM * RRSe ) ,( RMSe * RMSe ) ) ),( ( ( CS + MLU ) / ( MUM * RRSe ) ) * Max( ( CS / DS ),( MUC + CS ) ) ) ) + ( Min( ( Min( RRSe ,MUR ) * ( MUR - MLU ) ) ,Min( ( RRSe / CS ) ,( DS - MUM ) ) ) - Max( ( Min( DS ,RMSe ) / ( MUC + DS ) ),( Max( MUR,DS ) / ( RRSe * MUM ) ) ) ) ) ),( ( Min( Max( ( ( MUR * DS ) - Max( DS,RCSe ) ),( ( RCSe + MLU ) * Max( DS,CS ) ) ) ,( Min( Max( MLU,MUM ) ,( MUC - MLU ) ) * Min( Min( CS ,MLU ) ,( RRSe / MUC ) ) ) ) / ( ( Max( Max( MUM,MUR ),Max( MUR,MUC ) ) * ( ( RMSe * RCSe ) - ( RMSe * DS ) ) ) / Min( Min( ( RCSe * RRSe ) ,Min( MUM ,RMSe ) ) ,Min( ( RCSe / DS ) ,( RCSe / MUR ) ) ) ) ) + ( ( ( Max( ( MLU - RCSe ),( RRSe / MUM ) ) * ( ( RMSe * MUC ) - ( CS - MUM ) ) ) - ( ( ( MUC / RMSe ) - ( MUM * RMSe ) ) * ( ( DS - DS ) - ( CS - MUC ) ) ) ) / Min( ( Min( ( MUR * CS ) ,( RCSe + RCSe ) ) + ( Min( RRSe ,RCSe ) * ( MUR * MUM ) ) ) ,( Max( ( MLU + RCSe ),Max( RRSe,CS ) ) + ( ( RMSe / MUC ) - ( DS - MUM ) ) ) ) ) ) ) * ( ( ( ( Min( ( ( MUM / MUR ) + Max( RMSe,CS ) ) ,Min( ( RRSe * CS ) ,Min( DS ,MUM ) ) ) - ( Min( ( MUC + RMSe ) ,( RMSe - MUC ) ) / ( ( DS + RRSe ) / ( RMSe - RCSe ) ) ) ) - ( ( ( Max( RMSe,CS ) / ( RMSe + DS ) ) / Min( Max( DS,CS ) ,Min( MUR ,DS ) ) ) / Min( ( Min( MUC ,MUM ) - ( RCSe / MUC ) ) ,Min( ( MUC + MLU ) ,( RMSe * RCSe ) ) ) ) ) * ( ( Min( ( ( RRSe / MLU ) + ( MLU * MLU ) ) ,( Max( MUM,MUR ) * ( RRSe - MUR ) ) ) * Max( ( Max( RMSe,RRSe ) * ( MUM + MUM ) ),( ( DS / RCSe ) / ( MLU * RRSe ) ) ) ) - ( ( ( Max( MUR,MLU ) - ( MUR / DS ) ) / Min( Min( CS ,RCSe ) ,Max( MUR,RMSe ) ) ) - Max( Min( ( RCSe - MUR ) ,( MUC + RRSe ) ),Min( Max( RMSe,CS ) ,Max( MUM,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe / MUM ) + Min( MLU ,RRSe ) ) * Max( ( MUR + MUC ),Min( RMSe ,MUR ) ) ) * ( Min( ( RRSe * MUR ) ,Max( RRSe,MUR ) ) + Min( ( RRSe - MUR ) ,Max( MLU,RRSe ) ) ) ) * ( Max( ( ( MUR - MUC ) / ( RMSe + MUR ) ),( Max( DS,MUC ) - ( RCSe / RMSe ) ) ) / ( ( ( MUM + RRSe ) * Max( RRSe,DS ) ) - ( ( DS - RCSe ) + ( RRSe + MUM ) ) ) ) ) - Max( ( ( ( ( MUR / RMSe ) - Min( RMSe ,MLU ) ) + ( Min( RRSe ,MUM ) + ( RMSe / RCSe ) ) ) + Max( ( ( MLU - RMSe ) * ( MUR + DS ) ),Min( ( RCSe - RRSe ) ,Max( RMSe,RRSe ) ) ) ),( ( ( ( RCSe * RMSe ) * ( RCSe / RRSe ) ) - Min( ( MLU + MLU ) ,( RCSe - MUM ) ) ) / ( Min( ( CS / MUC ) ,( MUC * MUC ) ) / ( ( RCSe - RCSe ) - ( MUR - DS ) ) ) ) ) ) ) )", "obj1": 0.8479166666666667, "obj2": 0.14067812275253974}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.4016903938299823}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) + ( ( BR / FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.8125, "obj2": 0.15527279614273926}, {"determining": "( ( ( ( DDR / PN ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.34845043363956474}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "Max( ( FirstVNF_RAM - DDR ),( MRS + ARS ) )", "choosing": "( ( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) ) / Min( RCSe ,MUC ) )", "obj1": 0.29375, "obj2": 0.6116942854406668}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "( ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,( RRSe - CS ) ),Max( MLU,( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.7729166666666667, "obj2": 0.18301544660278213}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( MRS / BR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - Max( ( MLU + Max( MUM,CS ) ),( ( CS + DS ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.32083333333333336, "obj2": 0.5511682848770803}, {"determining": "( ( BR / Const ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * ( ( RCSe * RMSe ) * DS ) ) ,MUM ) / ( DS - MUR ) )", "obj1": 0.9375, "obj2": 0.02897903898225998}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.2125, "obj2": 0.6921294496249846}, {"determining": "( ( FirstVNF_CPU * AMS ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5923297899376998}, {"determining": "( ( DDR * MDR ) * ( ( FirstVNF_RAM / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( MLU ,RMSe ) )", "obj1": 0.2708333333333333, "obj2": 0.6341115486520269}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( Min( ( MLU * DS ) ,MUM ) / ( MLU - ( ( RCSe * RMSe ) * DS ) ) )", "obj1": 0.675, "obj2": 0.2745167219729192}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + Max( MUM,MUC ) ) * Min( RRSe ,DS ) )", "obj1": 0.7520833333333333, "obj2": 0.19666796000507705}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.3671478544475167}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3, "obj2": 0.5558299797778227}, {"determining": "( ( Min( ( Const / PN ) ,( Const / DDR ) ) / Max( ( DDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( DS / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUC ) ,( RMSe - CS ) ) ),( ( ( RRSe / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.98125, "obj2": 0.020958364912158675}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( MRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,DS ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + Max( MUM,MUC ) ) * Min( RRSe ,DS ) )", "obj1": 0.7104166666666667, "obj2": 0.24023056737099263}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,FirstVNF_CPU ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.63125, "obj2": 0.3011328761906091}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / ( MUR / MUC ) ) ) / ( ( CS + RRSe ) + ( ( RCSe * CS ) - MUC ) ) )", "obj1": 0.4395833333333333, "obj2": 0.45084182985394416}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ARS )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) * Min( MLU ,DS ) ) + Min( ( MUR - MUC ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.35, "obj2": 0.5356473541379068}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,MUM ) / Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.46948453012619146}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.825, "obj2": 0.14749146315949974}, {"determining": "( ( BR / Const ) * ( ( ACS * PN ) + MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / Min( ( MLU * Min( MLU ,CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.044005421751341554}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4125, "obj2": 0.4572436095833225}, {"determining": "( ( FirstVNF_CPU * RRS ) + ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * ( MUR / MUC ) ) ) / Min( DS ,MUC ) )", "obj1": 0.26666666666666666, "obj2": 0.6463941385493841}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.4625, "obj2": 0.4258297352124769}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Max( ARS,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) / DS ) ) - ( MUR / DS ) ) )", "obj1": 0.2375, "obj2": 0.6488623173988467}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( BR / AMS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.7, "obj2": 0.2599305361902009}, {"determining": "( ( FirstVNF_CPU * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.21458333333333332, "obj2": 0.6714763154259614}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( RMSe + RRSe ) + MUR ) )", "obj1": 0.6083333333333333, "obj2": 0.3153816387956882}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.4625, "obj2": 0.4258297352124769}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.89375, "obj2": 0.0547876425985281}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( ( ( ( ( ( MRS - MRS ) * ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) - FirstVNF_CPU_Server ),( FirstVNF_RAM + Const ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3875, "obj2": 0.4959739562340335}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / ACS ) ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,MUC ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.39375, "obj2": 0.48768857286323447}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( ACS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( MLU,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( Min( MUR ,Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.6895833333333333, "obj2": 0.26421316985514026}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - PN )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.02770494363836671}, {"determining": "( ( DDR * RRS ) + ( ( PN * AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Max( MUR,MUC ) ) ) / ( Min( CS ,RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5175250052727203}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( BR / RRS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUR + RMSe ) / ( RMSe / ( ( RRSe + RMSe ) / CS ) ) ) + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.73125, "obj2": 0.23619967101109232}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "Max( ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ),( RRSe + MUC ) )", "obj1": 0.9083333333333333, "obj2": 0.04794750471162792}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.7666666666666667, "obj2": 0.18667930290246795}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.3671478544475167}, {"determining": "( ( RRS / FirstVNF_Mem ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( ( MUC * RMSe ) * CS ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.61875, "obj2": 0.3096885552404142}], "7": [{"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( Max( ( ( Max( ( ( ( ACS - MRS ) / ( FirstVNF_CPU + RRS ) ) * ( Max( FirstVNF_CPU,MRS ) - ( PN - FirstVNF_Mem ) ) ),( ( ( ACS / ACS ) - ( CRS * FirstVNF_Mem_Server ) ) * Min( ( CRS + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) * ( Max( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem_Server - BR ) ),Max( ( MRS - FirstVNF_RAM ),Min( ACS ,DDR ) ) ) - ( ( ( AMS + ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) + Min( Max( ACS,BR ) ,( PN / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( CRS,RRS ) ) * Max( ( PN * PN ),( FirstVNF_RAM_Server * PN ) ) ) * Max( ( ( FirstVNF_RAM + ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ),( ( AMS * Const ) * Max( FirstVNF_Mem,MRS ) ) ) ) + ( ( ( ( ARS - MDR ) - ( CRS + FirstVNF_Mem ) ) - Max( ( RRS - AMS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( ( Const / ACS ) + Max( CRS,FirstVNF_RAM_Server ) ) + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ),( ( ( ( ( ( RRS / Const ) * Max( ARS,MRS ) ) / ( ( MDR + MDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / ( Max( ( CRS + CRS ),( DDR + FirstVNF_RAM ) ) / ( Min( ACS ,CRS ) / ( ARS - MDR ) ) ) ) * ( Max( ( ( MDR / FirstVNF_RAM_Server ) / ( MRS + Const ) ),( Min( BR ,RRS ) - Max( FirstVNF_Mem,RRS ) ) ) / ( ( Max( ACS,FirstVNF_Mem_Server ) + ( DDR * ACS ) ) * ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_Mem - AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( AMS * FirstVNF_Mem ) ) * Max( ( Const / DDR ),( CRS + DDR ) ) ) / ( Max( ( AMS * FirstVNF_Mem ),Min( ACS ,PN ) ) / ( ( AMS / ACS ) + ( PN / ARS ) ) ) ) / ( Max( ( Max( ACS,FirstVNF_Mem ) * ( FirstVNF_Mem + PN ) ),( ( RRS + ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * ACS ) - ( MDR * RRS ) ) * Min( Min( FirstVNF_RAM_Server ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( Max( Min( Min( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( DDR - FirstVNF_RAM_Server ) ) ,Max( Min( BR ,DDR ),( FirstVNF_CPU - MDR ) ) ) ,( Min( ( RRS - Const ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) ,( Min( ( ( AMS * FirstVNF_Mem ) - ( Const - ARS ) ) ,Min( ( BR - DDR ) ,( BR * FirstVNF_Mem ) ) ) - Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + Max( RRS,MDR ) ) ,( ( FirstVNF_RAM / Const ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ),( ( ( Max( Max( Const,FirstVNF_RAM ),( FirstVNF_CPU_Server / AMS ) ) + Max( ( ACS * CRS ),( Const / DDR ) ) ) * ( ( Min( FirstVNF_CPU ,BR ) + ( FirstVNF_RAM * Const ) ) / ( Min( DDR ,ARS ) + ( AMS - DDR ) ) ) ) - Min( Min( ( ( ARS / RRS ) - ( RRS / AMS ) ) ,( ( ARS - PN ) * ( DDR * PN ) ) ) ,( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( AMS + FirstVNF_Mem ) ) + Min( ( Const + PN ) ,Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) / ( ( Max( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,Const ) ) ,( ( BR - FirstVNF_Mem ) + Min( BR ,CRS ) ) ),( ( ( FirstVNF_RAM_Server + DDR ) + Min( MRS ,RRS ) ) * Max( Min( FirstVNF_Mem_Server ,Const ),Max( Const,CRS ) ) ) ) * ( Min( ( ( FirstVNF_RAM - ARS ) - Max( ACS,MDR ) ) ,( ( FirstVNF_CPU * ACS ) - ( FirstVNF_RAM * PN ) ) ) / Max( ( ( MRS * ARS ) + Min( PN ,ACS ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) * Min( ( ( ( ( RRS / FirstVNF_CPU_Server ) + ( RRS * FirstVNF_Mem_Server ) ) + Min( ( BR / FirstVNF_CPU ) ,( FirstVNF_Mem_Server - Const ) ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * BR ) + ( FirstVNF_RAM_Server - CRS ) ) ) ) ,Max( ( Max( ( MRS + BR ),Min( AMS ,FirstVNF_Mem ) ) * ( ( FirstVNF_RAM - BR ) - ( MDR - FirstVNF_RAM_Server ) ) ),( Min( Max( ARS,FirstVNF_CPU_Server ) ,( CRS / MDR ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( CRS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( Min( ( Min( MUC ,RCSe ) / ( MLU * RMSe ) ) ,( Min( MUR ,RCSe ) + ( MUC - MUR ) ) ) / ( ( Min( RMSe ,MUM ) / Min( MUM ,MUM ) ) * ( Max( RCSe,MUC ) / ( RCSe - MUM ) ) ) ),( ( ( Max( RRSe,RRSe ) * ( MUR + DS ) ) * ( Min( RRSe ,RRSe ) + ( CS * RMSe ) ) ) - Min( Min( ( MUR / MLU ) ,( MUM + DS ) ) ,( ( MLU - DS ) - ( CS + MLU ) ) ) ) ) - ( Max( ( Min( ( MUC / RRSe ) ,Max( DS,RMSe ) ) / ( ( MUC - RCSe ) + ( MUR * DS ) ) ),( Min( ( MUM - MUM ) ,( DS * RCSe ) ) - ( Min( RCSe ,MUR ) - ( RRSe * RCSe ) ) ) ) - ( ( Min( ( MUM + DS ) ,( MLU - MLU ) ) - ( ( CS - MUC ) / ( RCSe * CS ) ) ) / ( ( Max( RMSe,CS ) / ( MUC / DS ) ) / ( ( RMSe / RMSe ) - ( DS / MUC ) ) ) ) ) ) / Max( ( ( ( Min( ( RRSe - RCSe ) ,( RMSe + MUM ) ) + ( ( MUM - CS ) + Min( CS ,MUM ) ) ) - ( Min( ( RRSe * MUC ) ,( MUM + RCSe ) ) - ( ( RRSe / RMSe ) * Max( RRSe,RRSe ) ) ) ) + ( ( ( ( MUM * RRSe ) - Min( DS ,RMSe ) ) - ( ( RCSe + RRSe ) * ( MUC / MLU ) ) ) * Max( Min( ( MLU + MUM ) ,( RRSe - MLU ) ),Max( ( RMSe / MUR ),( RCSe * RMSe ) ) ) ) ),Min( ( Max( Min( ( RCSe * MUC ) ,Max( RCSe,DS ) ),( ( DS - MUR ) / ( MUM * RMSe ) ) ) + Min( ( ( MUR + MUM ) + Max( RMSe,CS ) ) ,( ( MLU * MLU ) * Max( MUR,RRSe ) ) ) ) ,( ( Min( ( MUM * RMSe ) ,( MUR + RCSe ) ) + Max( ( MLU - CS ),( MLU / RCSe ) ) ) / Min( Max( Min( RMSe ,MLU ),( DS - MUR ) ) ,( Min( MUM ,RCSe ) - ( RCSe - MLU ) ) ) ) ) ) ) / ( ( Max( ( ( Max( ( MUC - DS ),( MUC / MUM ) ) + ( Min( RCSe ,MUR ) / ( RMSe * MUC ) ) ) * ( Min( Max( DS,RRSe ) ,( RMSe / MUR ) ) - ( ( CS / DS ) / ( MUR / MUC ) ) ) ),Min( ( Max( ( DS + CS ),( MUR - CS ) ) / ( Min( RCSe ,MLU ) * ( RCSe / MUC ) ) ) ,Max( ( ( MUC / RMSe ) / Min( MUM ,MUM ) ),( ( DS * CS ) - ( RMSe + RMSe ) ) ) ) ) / ( Min( ( ( ( MUM / MLU ) - ( MUM - MUM ) ) + Min( ( RRSe - MUM ) ,Min( DS ,DS ) ) ) ,( Max( Max( MLU,RMSe ),( MUC * RRSe ) ) - ( ( RMSe * MUC ) / Min( RRSe ,RMSe ) ) ) ) - ( ( ( Min( MUC ,MLU ) + Min( MUM ,DS ) ) - ( ( MUR / RRSe ) / Max( DS,MUM ) ) ) * Max( Max( ( MLU - MUC ),Max( MUR,RMSe ) ),Max( ( MUR + MUR ),( RCSe * MUM ) ) ) ) ) ) - Min( ( Min( ( ( ( MUR + RCSe ) * Min( MUC ,MUM ) ) + ( Max( MUR,MLU ) * ( MUC + MLU ) ) ) ,( ( Max( RMSe,MLU ) - ( MUR / MLU ) ) / ( Min( CS ,MUM ) * ( MLU * RRSe ) ) ) ) + ( Min( ( Max( MUR,RMSe ) * ( MUM - MUC ) ) ,Min( ( MUR * MUC ) ,Min( MUM ,RCSe ) ) ) + ( Max( ( MUR / RMSe ),Max( MUR,MLU ) ) * ( ( RMSe * RRSe ) * ( MLU + CS ) ) ) ) ) ,( ( Min( ( ( RCSe + RCSe ) / ( DS / RRSe ) ) ,( Min( MUR ,MUR ) * ( MUC * MUR ) ) ) * Max( Max( ( MUC - DS ),Min( CS ,RCSe ) ),Min( ( MUC + MUM ) ,Min( MUM ,MUC ) ) ) ) * ( Max( Min( ( DS + CS ) ,Max( DS,RCSe ) ),( Min( MUR ,CS ) - ( DS * MUC ) ) ) - ( Max( ( MUC * RMSe ),( DS * RRSe ) ) * ( Max( MLU,MUM ) * Max( RMSe,MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) * FirstVNF_RAM )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "Min( ( ( AMS / FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.3660750571316774}, {"determining": "( ( ( ( FirstVNF_RAM - DDR ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUC / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.7833333333333333, "obj2": 0.1388435415702405}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const + DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( ( PN / CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MLU * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,MLU ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.8354166666666667, "obj2": 0.12948115015383296}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) * ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - RRSe ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.8520833333333333, "obj2": 0.11490578784400605}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,MUC ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4384176382038628}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( AMS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / MUC ) ) ) / ( ( CS + ( Min( RCSe ,RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( ( DDR * MDR ) * ( ( FirstVNF_RAM / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( MLU ,RMSe ) )", "obj1": 0.2916666666666667, "obj2": 0.5927941581401567}, {"determining": "( ( ( ( DDR / PN ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.34845043363956474}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "( ( FirstVNF_CPU * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.21458333333333332, "obj2": 0.6714763154259614}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.2125, "obj2": 0.6921294496249846}, {"determining": "( ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,( RRSe - CS ) ),Max( MLU,( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.7729166666666667, "obj2": 0.18301544660278213}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_RAM / AMS ) * ( PN * MDR ) ) )", "choosing": "( ( MLU - ( ( ( RCSe * RMSe ) * MLU ) * DS ) ) / Min( MLU ,RMSe ) )", "obj1": 0.28125, "obj2": 0.6294721260872508}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( Min( ( MLU * DS ) ,MUM ) / ( MLU - ( ( RCSe * RMSe ) * DS ) ) )", "obj1": 0.675, "obj2": 0.2745167219729192}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.7375, "obj2": 0.2256125965952059}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Max( ARS,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) / DS ) ) - ( MUR / DS ) ) )", "obj1": 0.2375, "obj2": 0.6488623173988467}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) ) / Min( RCSe ,MUC ) )", "obj1": 0.7104166666666667, "obj2": 0.2389144267550775}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4125, "obj2": 0.4572436095833225}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,FirstVNF_CPU ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.63125, "obj2": 0.3011328761906091}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( RMSe + RRSe ) + MUR ) )", "obj1": 0.6083333333333333, "obj2": 0.3153816387956882}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.4625, "obj2": 0.4258297352124769}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,MUM ) / Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.46948453012619146}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / ACS ) ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,MUC ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.39375, "obj2": 0.48768857286323447}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Max( MUR,MUM ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6385574115955135}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ARS )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.5694341542508394}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( BR / AMS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.7, "obj2": 0.2599305361902009}, {"determining": "( ( BR / Const ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.95, "obj2": 0.023396067664908485}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( Min( Max( FirstVNF_CPU,CRS ) ,( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * MLU ) * DS ) ) / CS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.34487216689823436}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( Min( ( MLU * DS ) ,MUM ) / ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) )", "obj1": 0.9770833333333333, "obj2": 0.013919185429934781}, {"determining": "( ( DDR * RRS ) + ( ( PN * AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Max( MUR,MUC ) ) ) / ( Min( CS ,RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5175250052727203}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.4016903938299823}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.475, "obj2": 0.4026627525875329}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( BR / RRS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUR + RMSe ) / ( RMSe / ( ( RRSe + RMSe ) / CS ) ) ) + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.73125, "obj2": 0.23619967101109232}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( ACS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( MLU,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( Min( MUR ,Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.6895833333333333, "obj2": 0.26421316985514026}, {"determining": "( ( BR / Const ) * ( ( ACS * PN ) + MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / Min( ( MLU * Min( MLU ,CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.044005421751341554}, {"determining": "( ( RRS / FirstVNF_Mem ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( ( MUC * RMSe ) * CS ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.61875, "obj2": 0.3096885552404142}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.89375, "obj2": 0.0547876425985281}, {"determining": "( ( BR / Const ) * ( ( ( ( ( DDR / FirstVNF_RAM_Server ) - ( Const / DDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) / ( DS - MUR ) )", "obj1": 0.9979166666666667, "obj2": 0.0009686236607644376}, {"determining": "( ( BR / ARS ) * ( ( ( ( FirstVNF_CPU * AMS ) * FirstVNF_CPU ) * FirstVNF_RAM_Server ) - MDR ) )", "choosing": "( Min( ( ( MUR + ( RMSe + Min( Min( DS ,MUC ) ,MUR ) ) ) * ( ( RCSe * RCSe ) * DS ) ) ,MUM ) / ( MUM - MUR ) )", "obj1": 0.96875, "obj2": 0.015430972499993771}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / Max( ( Min( ( ( ( Min( FirstVNF_CPU_Server ,BR ) / ( Const * AMS ) ) - Max( Max( BR,FirstVNF_Mem ),( BR + BR ) ) ) - Min( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ARS / MDR ) ) ,Min( ( PN + MRS ) ,Max( MDR,PN ) ) ) ) ,Min( ( ( ( DDR + AMS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,Const ) / Max( PN,RRS ) ) ) ,( ( ( MDR - MDR ) * ( FirstVNF_Mem_Server * PN ) ) - Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ) ) ) ) - ( ( ( ( ( MRS / AMS ) - Max( FirstVNF_Mem_Server,ACS ) ) / ( ( ACS * BR ) / ( CRS * FirstVNF_RAM_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server + Const ),( DDR / MRS ) ) + Max( ( DDR + FirstVNF_CPU ),( MRS - FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - DDR ) ) * ( ( CRS - BR ) + Max( MRS,DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ),( ( ( ( Max( ( RRS - CRS ),( FirstVNF_RAM - MDR ) ) * Max( ( ARS / PN ),( FirstVNF_Mem_Server * MDR ) ) ) - ( Min( ( FirstVNF_CPU_Server - RRS ) ,( DDR * AMS ) ) * Max( ( FirstVNF_RAM - RRS ),Max( AMS,Const ) ) ) ) - Max( ( Min( Max( ARS,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) + ( AMS + DDR ) ) ),( Max( Min( FirstVNF_Mem_Server ,CRS ),Min( FirstVNF_Mem ,AMS ) ) + ( ( Const * ARS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) ) * Max( Max( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( BR * DDR ) - Min( CRS ,BR ) ) ),( Max( ( FirstVNF_CPU_Server * MDR ),Min( CRS ,FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ),( ( ( ( DDR / FirstVNF_CPU ) + ( AMS / ACS ) ) * ( ( RRS / AMS ) - ( BR + Const ) ) ) + ( Max( ( FirstVNF_Mem / CRS ),( DDR * FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + Max( MUM,MUC ) ) * Min( RRSe ,DS ) )", "obj1": 0.7520833333333333, "obj2": 0.19666796000507705}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( ( RMSe / RMSe ) - ( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.5120813563984328}, {"determining": "( ( DDR * MDR ) * ( ( FirstVNF_RAM / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( MLU ,RMSe ) )", "obj1": 0.2708333333333333, "obj2": 0.6341115486520269}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe / CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.4016903938299823}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3854166666666667, "obj2": 0.5075412362299799}], "8": [{"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( MDR - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( ( ( ( ACS - MRS ) / ( FirstVNF_CPU + RRS ) ) * ( Max( FirstVNF_CPU,MRS ) - ( PN - FirstVNF_Mem ) ) ),( ( ( ACS / ACS ) - ( CRS * FirstVNF_Mem_Server ) ) * Min( ( CRS + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) * ( Max( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem_Server - BR ) ),Max( ( MRS - FirstVNF_RAM ),Min( ACS ,DDR ) ) ) - ( ( ( AMS + ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) + Min( Max( ACS,BR ) ,( PN / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( CRS,RRS ) ) * Max( ( PN * PN ),( FirstVNF_RAM_Server * PN ) ) ) * Max( ( ( FirstVNF_RAM + ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ),( ( AMS * Const ) * Max( FirstVNF_Mem,MRS ) ) ) ) + ( ( ( ( ARS - MDR ) - ( CRS + FirstVNF_Mem ) ) - Max( ( RRS - AMS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( ( Const / ACS ) + Max( CRS,FirstVNF_RAM_Server ) ) + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ),( ( ( ( ( ( RRS / Const ) * Max( ARS,MRS ) ) / ( ( MDR + MDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / ( Max( ( CRS + CRS ),( DDR + FirstVNF_RAM ) ) / ( Min( ACS ,CRS ) / ( ARS - MDR ) ) ) ) * ( Max( ( ( MDR / FirstVNF_RAM_Server ) / ( MRS + Const ) ),( Min( BR ,RRS ) - Max( FirstVNF_Mem,RRS ) ) ) / ( ( Max( ACS,FirstVNF_Mem_Server ) + ( DDR * ACS ) ) * ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_Mem - AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( AMS * FirstVNF_Mem ) ) * Max( ( Const / DDR ),( CRS + DDR ) ) ) / ( Max( ( AMS * FirstVNF_Mem ),Min( ACS ,PN ) ) / ( ( AMS / ACS ) + ( PN / ARS ) ) ) ) / ( Max( ( Max( ACS,FirstVNF_Mem ) * ( FirstVNF_Mem + PN ) ),( ( RRS + ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * ACS ) - ( MDR * RRS ) ) * Min( Min( FirstVNF_RAM_Server ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( Max( Min( Min( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( DDR - FirstVNF_RAM_Server ) ) ,Max( Min( BR ,DDR ),( FirstVNF_CPU - MDR ) ) ) ,( Min( ( RRS - Const ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) ,( Min( ( ( AMS * FirstVNF_Mem ) - ( Const - ARS ) ) ,Min( ( BR - DDR ) ,( BR * FirstVNF_Mem ) ) ) - Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + Max( RRS,MDR ) ) ,( ( FirstVNF_RAM / Const ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ),( ( ( Max( Max( Const,FirstVNF_RAM ),( FirstVNF_CPU_Server / AMS ) ) + Max( ( ACS * CRS ),( Const / DDR ) ) ) * ( ( Min( FirstVNF_CPU ,BR ) + ( FirstVNF_RAM * Const ) ) / ( Min( DDR ,ARS ) + ( AMS - DDR ) ) ) ) - Min( Min( ( ( ARS / RRS ) - ( RRS / AMS ) ) ,( ( ARS - PN ) * ( DDR * PN ) ) ) ,( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( AMS + FirstVNF_Mem ) ) + Min( ( Const + PN ) ,Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) / ( ( Max( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,Const ) ) ,( ( BR - FirstVNF_Mem ) + Min( BR ,CRS ) ) ),( ( ( FirstVNF_RAM_Server + DDR ) + Min( MRS ,RRS ) ) * Max( Min( FirstVNF_Mem_Server ,Const ),Max( Const,CRS ) ) ) ) * ( Min( ( ( FirstVNF_RAM - ARS ) - Max( ACS,MDR ) ) ,( ( FirstVNF_CPU * ACS ) - ( FirstVNF_RAM * PN ) ) ) / Max( ( ( MRS * ARS ) + Min( PN ,ACS ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) * Min( ( ( ( ( RRS / FirstVNF_CPU_Server ) + ( RRS * FirstVNF_Mem_Server ) ) + Min( ( BR / FirstVNF_CPU ) ,( FirstVNF_Mem_Server - Const ) ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * BR ) + ( FirstVNF_RAM_Server - CRS ) ) ) ) ,Max( ( Max( ( MRS + BR ),Min( AMS ,FirstVNF_Mem ) ) * ( ( FirstVNF_RAM - BR ) - ( MDR - FirstVNF_RAM_Server ) ) ),( Min( Max( ARS,FirstVNF_CPU_Server ) ,( CRS / MDR ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( CRS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( Min( ( Min( MUC ,RCSe ) / ( MLU * RMSe ) ) ,( Min( MUR ,RCSe ) + ( MUC - MUR ) ) ) / ( ( Min( RMSe ,MUM ) / Min( MUM ,MUM ) ) * ( Max( RCSe,MUC ) / ( RCSe - MUM ) ) ) ),( ( ( Max( RRSe,RRSe ) * ( MUR + DS ) ) * ( Min( RRSe ,RRSe ) + ( CS * RMSe ) ) ) - Min( Min( ( MUR / MLU ) ,( MUM + DS ) ) ,( ( MLU - DS ) - ( CS + MLU ) ) ) ) ) - ( Max( ( Min( ( MUC / RRSe ) ,Max( DS,RMSe ) ) / ( ( MUC - RCSe ) + ( MUR * DS ) ) ),( Min( ( MUM - MUM ) ,( DS * RCSe ) ) - ( Min( RCSe ,MUR ) - ( RRSe * RCSe ) ) ) ) - ( ( Min( ( MUM + DS ) ,( MLU - MLU ) ) - ( ( CS - MUC ) / ( RCSe * CS ) ) ) / ( ( Max( RMSe,CS ) / ( MUC / DS ) ) / ( ( RMSe / RMSe ) - ( DS / MUC ) ) ) ) ) ) / Max( ( ( ( Min( ( RRSe - RCSe ) ,( RMSe + MUM ) ) + ( ( MUM - CS ) + Min( CS ,MUM ) ) ) - ( Min( ( RRSe * MUC ) ,( MUM + RCSe ) ) - ( ( RRSe / RMSe ) * Max( RRSe,RRSe ) ) ) ) + ( ( ( ( MUM * RRSe ) - Min( DS ,RMSe ) ) - ( ( RCSe + RRSe ) * ( MUC / MLU ) ) ) * Max( Min( ( MLU + MUM ) ,( RRSe - MLU ) ),Max( ( RMSe / MUR ),( RCSe * RMSe ) ) ) ) ),Min( ( Max( Min( ( RCSe * MUC ) ,Max( RCSe,DS ) ),( ( DS - MUR ) / ( MUM * RMSe ) ) ) + Min( ( ( MUR + MUM ) + Max( RMSe,CS ) ) ,( ( MLU * MLU ) * Max( MUR,RRSe ) ) ) ) ,( ( Min( ( MUM * RMSe ) ,( MUR + RCSe ) ) + Max( ( MLU - CS ),( MLU / RCSe ) ) ) / Min( Max( Min( RMSe ,MLU ),( DS - MUR ) ) ,( Min( MUM ,RCSe ) - ( RCSe - MLU ) ) ) ) ) ) ) / ( ( Max( ( ( Max( ( MUC - DS ),( MUC / MUM ) ) + ( Min( RCSe ,MUR ) / ( RMSe * MUC ) ) ) * ( Min( Max( DS,RRSe ) ,( RMSe / MUR ) ) - ( ( CS / DS ) / ( MUR / MUC ) ) ) ),Min( ( Max( ( DS + CS ),( MUR - CS ) ) / ( Min( RCSe ,MLU ) * ( RCSe / MUC ) ) ) ,Max( ( ( MUC / RMSe ) / Min( MUM ,MUM ) ),( ( DS * CS ) - ( RMSe + RMSe ) ) ) ) ) / ( Min( ( ( ( MUM / MLU ) - ( MUM - MUM ) ) + Min( ( RRSe - MUM ) ,Min( DS ,DS ) ) ) ,( Max( Max( MLU,RMSe ),( MUC * RRSe ) ) - ( ( RMSe * MUC ) / Min( RRSe ,RMSe ) ) ) ) - ( ( ( Min( MUC ,MLU ) + Min( MUM ,DS ) ) - ( ( MUR / RRSe ) / Max( DS,MUM ) ) ) * Max( Max( ( MLU - MUC ),Max( MUR,RMSe ) ),Max( ( MUR + MUR ),( RCSe * MUM ) ) ) ) ) ) - Min( ( Min( ( ( ( MUR + RCSe ) * Min( MUC ,MUM ) ) + ( Max( MUR,MLU ) * ( MUC + MLU ) ) ) ,( ( Max( RMSe,MLU ) - ( MUR / MLU ) ) / ( Min( CS ,MUM ) * ( MLU * RRSe ) ) ) ) + ( Min( ( Max( MUR,RMSe ) * ( MUM - MUC ) ) ,Min( ( MUR * MUC ) ,Min( MUM ,RCSe ) ) ) + ( Max( ( MUR / RMSe ),Max( MUR,MLU ) ) * ( ( RMSe * RRSe ) * ( MLU + CS ) ) ) ) ) ,( ( Min( ( ( RCSe + RCSe ) / ( DS / RRSe ) ) ,( Min( MUR ,MUR ) * ( MUC * MUR ) ) ) * Max( Max( ( MUC - DS ),Min( CS ,RCSe ) ),Min( ( MUC + MUM ) ,Min( MUM ,MUC ) ) ) ) * ( Max( Min( ( DS + CS ) ,Max( DS,RCSe ) ),( Min( MUR ,CS ) - ( DS * MUC ) ) ) - ( Max( ( MUC * RMSe ),( DS * RRSe ) ) * ( Max( MLU,MUM ) * Max( RMSe,MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( BR / Const ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.70625, "obj2": 0.12645848433875836}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.69375, "obj2": 0.24820701142762996}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const + DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( ( PN / CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MLU * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,MLU ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.8479166666666667, "obj2": 0.12218003724446305}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.20625, "obj2": 0.6901968455547022}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.89375, "obj2": 0.0547876425985281}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "( ( ( ( DDR / AMS ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) ,Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.54375, "obj2": 0.3649977999780881}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,MUC ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4384176382038628}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.45416666666666666, "obj2": 0.4343728726945644}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,Min( RMSe ,CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.675, "obj2": 0.27399408699747}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.37861787757629517}, {"determining": "Min( ( ( AMS / FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.3660750571316774}, {"determining": "( ( DDR * MDR ) * ( ( FirstVNF_RAM / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( MLU ,RMSe ) )", "obj1": 0.2916666666666667, "obj2": 0.5927941581401567}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.6053640844276905}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,FirstVNF_CPU ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.63125, "obj2": 0.3011328761906091}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) * ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - RRSe ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.8520833333333333, "obj2": 0.11490578784400605}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4125, "obj2": 0.4572436095833225}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( BR / AMS ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * ( MUR + RMSe ) ) ) - ( MUR / DS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6240790566938106}, {"determining": "( ( BR / Const ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9416666666666667, "obj2": 0.02792774308771809}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( Max( MDR,FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( CS / Max( RCSe,RCSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4625, "obj2": 0.40448180309890824}, {"determining": "( ( FirstVNF_CPU * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.21458333333333332, "obj2": 0.6714763154259614}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3854166666666667, "obj2": 0.5075412362299799}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.39313924774196934}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8645833333333334, "obj2": 0.06318755557192345}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "( ( BR / Const ) * ( ( ACS * PN ) + MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / Min( ( MLU * Min( MLU ,CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.044005421751341554}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( Min( Max( FirstVNF_CPU,CRS ) ,( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * MLU ) * DS ) ) / CS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.34487216689823436}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( Min( ( MLU * DS ) ,MUM ) / ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) )", "obj1": 0.9770833333333333, "obj2": 0.013919185429934781}, {"determining": "( ( ( ( DDR / PN ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * CRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / MUC ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RMSe ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.34845043363956474}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( DDR * RRS ) + ( ( PN * AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Max( MUR,MUC ) ) ) / ( Min( CS ,RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5175250052727203}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.5694341542508394}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6320632745468543}, {"determining": "( ( BR / Const ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.95, "obj2": 0.023396067664908485}, {"determining": "Min( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) ,( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.60625, "obj2": 0.32631337857362125}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.6125, "obj2": 0.305929383759078}, {"determining": "( ( BR / Const ) * ( ( ( ( ( DDR / FirstVNF_Mem ) - ( Const / DDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.9979166666666667, "obj2": 0.000865129205979732}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,MUM ) / Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.46948453012619146}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,Max( RCSe,CS ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.47846139076771516}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.9145833333333333, "obj2": 0.045009877875405745}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6579619923508851}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( ACS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( MLU,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( Min( MUR ,Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.6895833333333333, "obj2": 0.26421316985514026}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Max( ARS,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) / DS ) ) - ( MUR / DS ) ) )", "obj1": 0.2375, "obj2": 0.6488623173988467}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( AMS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / MUC ) ) ) / ( ( CS + ( Min( RCSe ,RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}], "9": [{"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / ( DS * CS ) ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( BR / Const ) * ( ( ACS * PN ) + MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / Min( ( MLU * Min( MLU ,CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7979166666666667, "obj2": 0.09028382778964106}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.69375, "obj2": 0.24820701142762996}, {"determining": "( ( BR / MRS ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / Min( ( MLU * ( CS - CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12688923579790085}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( RMSe + ( ( MUM * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.70625, "obj2": 0.1263573376609726}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( Max( PN,CRS ) / ( MDR * RRS ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * ( MUR / RMSe ) ) * DS ) ) / CS ) ) )", "obj1": 0.5958333333333333, "obj2": 0.33128703817160965}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "Min( ( ( AMS / FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3054197271609117}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( Max( MDR,FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( CS / Max( RCSe,RCSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4625, "obj2": 0.40448180309890824}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.5694341542508394}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,FirstVNF_CPU ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * DS ) ) / Min( RCSe ,MUC ) )", "obj1": 0.63125, "obj2": 0.3011328761906091}, {"determining": "( ( DDR * MDR ) * ( ( FirstVNF_RAM / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( RMSe + Min( MLU ,MUR ) ) ) ) * RMSe ) * DS ) ) / Min( MLU ,RMSe ) )", "obj1": 0.2916666666666667, "obj2": 0.5927941581401567}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Max( MUR,MUC ) ) ) / ( Min( CS ,RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.9729166666666667, "obj2": 0.013681314036508782}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3854166666666667, "obj2": 0.5075412362299799}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5139668337244906}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,Min( RMSe ,CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.675, "obj2": 0.27399408699747}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.6053640844276905}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( BR / AMS ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * ( MUR + RMSe ) ) ) - ( MUR / DS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6240790566938106}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( Min( Max( FirstVNF_CPU,CRS ) ,( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * MLU ) * DS ) ) / CS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.34487216689823436}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.45416666666666666, "obj2": 0.4343728726945644}, {"determining": "( ( FirstVNF_CPU * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.21458333333333332, "obj2": 0.6714763154259614}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "( ( ( ( DDR / AMS ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) ,Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.54375, "obj2": 0.3649977999780881}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.3660750571316774}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( FirstVNF_CPU,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.253602404842884}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.20625, "obj2": 0.6901968455547022}, {"determining": "( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,Max( RCSe,CS ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.47846139076771516}, {"determining": "( ( FirstVNF_Mem_Server - ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,Max( RCSe,( RMSe + ( ( RCSe * RMSe ) * DS ) ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.491760437073011}, {"determining": "( ( BR / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9375, "obj2": 0.029092092290262595}, {"determining": "( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,Max( RCSe,CS ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4270833333333333, "obj2": 0.4533520300256612}, {"determining": "( ( DDR * MDR ) * ( ( ( FirstVNF_CPU * PN ) - MDR ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ) / Min( MLU ,RMSe ) )", "obj1": 0.8645833333333334, "obj2": 0.06295503877597956}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const + DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( ( PN / CRS ) / ( MDR * RRS ) ) + ( ( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MLU * RRSe ) ) ) * ( RMSe + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.99375, "obj2": 0.006786372161531715}, {"determining": "( ( BR / BR ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,Max( RMSe,CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.8895833333333333, "obj2": 0.05716434597571306}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,MUM ) / Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.46948453012619146}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,MUC ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4384176382038628}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,ARS ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( ACS ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUC,( ( Max( MLU,CS ) / Max( CS,DS ) ) + RRSe ) ) / Min( DS ,Min( ( MLU + Max( MUM,RCSe ) ) ,( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5520833333333334, "obj2": 0.35078648425947273}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.4791666666666667, "obj2": 0.39272368085882164}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4125, "obj2": 0.4572436095833225}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.23125, "obj2": 0.6506187307401832}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( CRS * ( ( FirstVNF_CPU * PN ) + MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( MUR / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.04795269591231005}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.37861787757629517}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( ( FirstVNF_RAM_Server * RRS ),Min( MDR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / Const ) * ( FirstVNF_RAM_Server * PN ) ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,DS ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.37861787757629517}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6320632745468543}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / MUC ) ) ) / Min( ( CS + ( ( RCSe * RMSe ) * DS ) ) ,( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( ( BR / Const ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - CS ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.95, "obj2": 0.023396067664908485}], "10": [{"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) ) - ( Max( PN,CRS ) / ( MDR * RRS ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * ( ( DS * CS ) / RMSe ) ) * DS ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / ( DS * CS ) ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( FirstVNF_CPU,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.6979166666666666, "obj2": 0.2417483510554553}, {"determining": "( ( BR / MRS ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / Min( ( MLU * ( CS - CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12688923579790085}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * DS ) ,MUM ) / Min( ( MLU * ( MLU + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.80625, "obj2": 0.08670785755279187}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3854166666666667, "obj2": 0.5075412362299799}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7541666666666667, "obj2": 0.09920207216818332}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5770833333333333, "obj2": 0.32053850876905104}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,Min( RMSe ,CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.675, "obj2": 0.27399408699747}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.3660750571316774}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5717336397634354}, {"determining": "( ( BR / Const ) * ( ( ACS * PN ) + MDR ) )", "choosing": "( Min( ( ( MUC * RMSe ) * DS ) ,MUM ) / Min( ( MLU * Min( MLU ,CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7979166666666667, "obj2": 0.09028382778964106}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "( ( ( ( DDR / AMS ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) ,Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) )", "obj1": 0.54375, "obj2": 0.3649977999780881}, {"determining": "( ( BR / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9375, "obj2": 0.029092092290262595}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "( ( BR / Const ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.7166666666666667, "obj2": 0.1235528204107516}, {"determining": "( ( BR / Const ) * ( ( ACS - PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7354166666666667, "obj2": 0.10554668767250552}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4479166666666667, "obj2": 0.43254887852927437}, {"determining": "Min( ( ( AMS / FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),( FirstVNF_CPU * MDR ) ) ) ) )", "choosing": "( ( DS / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6104166666666667, "obj2": 0.2961439498731417}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( MDR * PN ) - MDR ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / ( RCSe / RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.9145833333333333, "obj2": 0.046142697731210706}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.6354166666666666, "obj2": 0.2896026444499071}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6320632745468543}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.5694341542508394}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.20625, "obj2": 0.6901968455547022}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( Min( Max( FirstVNF_CPU,CRS ) ,( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * MLU ) * DS ) ) / CS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.34487216689823436}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5139668337244906}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.46041666666666664, "obj2": 0.4168634012774073}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ACS ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( RRSe + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.4836764246821209}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.6053640844276905}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.4791666666666667, "obj2": 0.39272368085882164}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3149768186510558}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,Max( RCSe,CS ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.4498493839841258}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( BR / AMS ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * ( MUR + RMSe ) ) ) - ( MUR / DS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6240790566938106}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( Min( FirstVNF_CPU ,AMS ) * ( PN * FirstVNF_CPU ) ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * ( MUR / RMSe ) ) * MLU ) ) / CS ) ) )", "obj1": 0.9729166666666667, "obj2": 0.013608299592407808}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - Const ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + Max( ( RMSe + ( ( RCSe * RMSe ) * DS ) ),DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6518951419380464}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,MUM ) / Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.46948453012619146}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.6053640844276905}, {"determining": "( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Min( RCSe ,Max( RCSe,CS ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.47846139076771516}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.23958333333333334, "obj2": 0.6428806382827651}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( Max( MDR,FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( CS / Max( RCSe,RCSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4625, "obj2": 0.40448180309890824}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * ( BR / FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.9583333333333334, "obj2": 0.021673718735186615}, {"determining": "Min( ( ( AMS / FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3054197271609117}, {"determining": "( ( DDR * MDR ) * ( ( ( FirstVNF_CPU * PN ) - MDR ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ) / Min( MLU ,RMSe ) )", "obj1": 0.8645833333333334, "obj2": 0.06295503877597956}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "( ( BR / Const ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "Min( ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe + CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ,Min( RRSe ,RCSe ) )", "obj1": 0.8854166666666666, "obj2": 0.05940953238555594}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( FirstVNF_CPU,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.6770833333333334, "obj2": 0.2546625832504169}], "11": [{"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( RRS / MRS ) * ( ( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( ( MLU * ( CS - CS ) ) + Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( PN + FirstVNF_CPU ) ) ) - MDR ) ) - ( Max( PN,CRS ) / ( MDR * RRS ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * ( ( DS * CS ) / RMSe ) ) * DS ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) + ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( RCSe * RRSe ) ) ) - ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.68125, "obj2": 0.1975478153178723}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) * DS ) ) - ( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / DS ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6865053643516696}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * Min( ( RMSe / RMSe ) ,( Min( MUM ,DS ) * RRSe ) ) ) * DS ) ,MUM ) / Min( ( MLU * ( MLU + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08593704003604626}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + Const ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( FirstVNF_CPU,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.6770833333333334, "obj2": 0.2546625832504169}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - Const ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + Max( ( RMSe + ( ( RCSe * RMSe ) * DS ) ),DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6518951419380464}, {"determining": "( ( BR / Const ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12688923579790085}, {"determining": "( ( BR / Const ) * ( ( ACS - PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3854166666666667, "obj2": 0.5075412362299799}, {"determining": "( ( BR / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9375, "obj2": 0.029092092290262595}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.6645833333333333, "obj2": 0.2628137527301485}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( DS - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.49166666666666664, "obj2": 0.3881648805667571}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( ACS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR + RMSe ) / ( RMSe - ( ( RRSe + RMSe ) / MUR ) ) )", "obj1": 0.6375, "obj2": 0.2761172308456503}, {"determining": "( ( DDR * MDR ) * ( ( ( FirstVNF_CPU * ( Min( Max( FirstVNF_CPU,CRS ) ,( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) - MDR ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,RCSe ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) + CS ) ) ) / Min( MLU ,RMSe ) )", "obj1": 0.55, "obj2": 0.34338311902309543}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,FirstVNF_CPU_Server ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * DS ) ,( ( CS + DS ) + ( MUR - MUC ) ) ) / Min( ( MLU * ( MLU + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7958333333333333, "obj2": 0.09026775258117584}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40625, "obj2": 0.4643175962651966}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.41458333333333336, "obj2": 0.44309406430329196}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( BR / Const ) * ( ( Max( FirstVNF_CPU_Server,MRS ) * PN ) - MDR ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / RRSe ) ) ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12334128359507228}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09682228611122584}, {"determining": "Min( ( ( AMS / FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),( FirstVNF_CPU * MDR ) ) ) ) )", "choosing": "( ( DS / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6104166666666667, "obj2": 0.2961439498731417}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5770833333333333, "obj2": 0.32053850876905104}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.4791666666666667, "obj2": 0.39272368085882164}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.5694341542508394}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6320632745468543}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) * ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5139668337244906}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( Max( MDR,FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( CS / Max( RCSe,RCSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4625, "obj2": 0.40448180309890824}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.23958333333333334, "obj2": 0.6428806382827651}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,Min( RMSe ,CS ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.525, "obj2": 0.35259922816247774}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ACS ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( RRSe + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.4836764246821209}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.6354166666666666, "obj2": 0.2896026444499071}, {"determining": "( Min( DDR ,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MLU,RCSe ) / RCSe ) ,Min( RCSe ,( DS + RMSe ) ) ) * ( ( MUR * DS ) + ( MUM / Max( ( ( RRSe / DS ) / Min( RMSe ,MUC ) ),Max( ( ( MLU + MUC ) + MUC ),MUM ) ) ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0023718690092198926}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4479166666666667, "obj2": 0.43254887852927437}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( ARS - Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( RCSe * ( ( RRSe + RMSe ) / MUR ) ) * DS ) ) / CS ) ) )", "obj1": 0.975, "obj2": 0.012794998497479164}, {"determining": "( ( ( ( DDR / MRS ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) - DS ) ) / ( DS + MUC ) )", "obj1": 0.4375, "obj2": 0.44254590802722754}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( MDR * PN ) - MDR ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / ( RCSe / RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.9145833333333333, "obj2": 0.046142697731210706}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.3660750571316774}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * ( BR / FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.9583333333333334, "obj2": 0.021673718735186615}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( RRS * BR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3149768186510558}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.3660750571316774}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MRS - MRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU + ( MUM * RCSe ) ) ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.51875, "obj2": 0.35564010679630326}, {"determining": "( ( BR / FirstVNF_CPU ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) + Min( ARS ,FirstVNF_CPU_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + Max( ( MUR + RRSe ),( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( MUM / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5645833333333333, "obj2": 0.3307496865761988}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5604166666666667, "obj2": 0.3316640665259609}, {"determining": "( ( BR / Const ) * ( ( ACS - PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7354166666666667, "obj2": 0.10554668767250552}], "12": [{"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( ( ( FirstVNF_Mem_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) - ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) ) ) / ( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MRS ) * ( ( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( ( MLU * ( CS - CS ) ) + Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2533195238125933}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) + ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( RCSe * RRSe ) ) ) - ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.68125, "obj2": 0.1975478153178723}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( MDR * PN ) - MDR ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / ( RCSe / RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * Min( RRSe ,DS ) )", "obj1": 0.9145833333333333, "obj2": 0.046142697731210706}, {"determining": "( ( BR / Const ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) )", "choosing": "( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12688923579790085}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_CPU_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * Min( ( RMSe / RMSe ) ,( Min( MLU ,DS ) * RRSe ) ) ) * DS ) ,MUM ) / Min( ( MLU * ( MLU + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.6666666666666666, "obj2": 0.24828509964448978}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) * DS ) ) - ( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / DS ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6865053643516696}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5770833333333333, "obj2": 0.32053850876905104}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - Const ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + Max( ( RMSe + ( ( RCSe * RMSe ) * DS ) ),DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6518951419380464}, {"determining": "( ( BR / FirstVNF_RAM ) * ( Min( ( Max( AMS,FirstVNF_CPU ) * ( PN + FirstVNF_CPU ) ) ,PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,MUR ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.8458333333333333, "obj2": 0.07400103918979507}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) + ( Max( DS,CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3854166666666667, "obj2": 0.5075412362299799}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.66875, "obj2": 0.23778224066924616}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ACS ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( RRSe + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.4836764246821209}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.5208333333333334, "obj2": 0.33178788731094183}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9375, "obj2": 0.02909209229026259}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09682228611122584}, {"determining": "( ( BR / ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) ) * ( ( ACS - PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.5940709060007718}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) * ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5139668337244906}, {"determining": "( ( BR / Const ) * ( ( ACS - PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7354166666666667, "obj2": 0.10554668767250552}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( ( ( RMSe * Min( ( RMSe / RMSe ) ,( Min( MLU ,DS ) * RRSe ) ) ) * DS ) ,MUM ) / Min( ( MLU * ( MLU + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.8083333333333333, "obj2": 0.08476953242091302}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( BR / Const ) * ( ( Max( FirstVNF_CPU_Server,MRS ) * PN ) - MDR ) ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / RRSe ) ) ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12334128359507228}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,FirstVNF_CPU_Server ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( ( ( MUC * Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * DS ) ,( ( CS + DS ) + ( MUR - MUC ) ) ) / Min( ( MLU * ( MLU + CS ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.7958333333333333, "obj2": 0.09026775258117584}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4479166666666667, "obj2": 0.42162868846674045}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MRS - MRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU + ( MUM * RCSe ) ) ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.51875, "obj2": 0.35564010679630326}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6320632745468543}, {"determining": "( ( BR / Const ) * ( ( ACS - Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) )", "obj1": 0.9541666666666667, "obj2": 0.020516564078058658}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.41458333333333336, "obj2": 0.44309406430329196}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.4791666666666667, "obj2": 0.39272368085882164}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( RRS * BR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.23958333333333334, "obj2": 0.6428806382827651}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,PN ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.5020833333333333, "obj2": 0.38125480087645963}, {"determining": "( ( ( ( DDR / MRS ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) - DS ) ) / ( DS + MUC ) )", "obj1": 0.4375, "obj2": 0.44254590802722754}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5604166666666667, "obj2": 0.3316640665259609}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40625, "obj2": 0.4643175962651966}, {"determining": "Max( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * ( ( Const + Const ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( MUR / CS ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5693343911414784}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( Max( MDR,FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( CS / Max( RCSe,RCSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.4625, "obj2": 0.40448180309890824}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( DS - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.49166666666666664, "obj2": 0.3881648805667571}, {"determining": "Min( ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_Mem_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( ( RCSe * ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) * DS ) ) / Min( DS ,MUM ) )", "obj1": 0.9875, "obj2": 0.0051596826515507305}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.44375, "obj2": 0.4312751372893148}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( BR / Const ) * ( ( Max( FirstVNF_CPU_Server,BR ) * PN ) - MDR ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.74375, "obj2": 0.10267196861422995}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40625, "obj2": 0.4643175962651966}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( Max( FirstVNF_CPU_Server,BR ) * PN ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * ( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) / Min( MUR ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.46458333333333335, "obj2": 0.40448147021607467}, {"determining": "( ( BR / FirstVNF_CPU ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) + Min( ARS ,FirstVNF_CPU_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + Max( ( MUR + RRSe ),( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( MUM / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5645833333333333, "obj2": 0.3307496865761988}], "13": [{"determining": "( ( BR / MRS ) * ( ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( MLU + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server + MDR ) - BR ) * ( FirstVNF_RAM - DDR ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) - ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) ) ) / ( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * RRS ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.738438901879573}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2533195238125933}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( MUR * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.65625, "obj2": 0.20814752086805707}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) + ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( RCSe * RRSe ) ) ) - ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.68125, "obj2": 0.1975478153178723}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12525347275221801}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ACS ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( RRSe + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.4836764246821209}, {"determining": "( ( BR / Const ) * ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( ( MLU - ( ( RCSe * DS ) - DS ) ) - MUC ) ) ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5046819500118207}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.5770833333333333, "obj2": 0.32053850876905104}, {"determining": "( ( BR / MRS ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( MRS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,CS ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( MUR * Max( RCSe,RRSe ) ) * CS ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.8916666666666667, "obj2": 0.05575920863238684}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) * DS ) ) - ( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / DS ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6865053643516696}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.5208333333333334, "obj2": 0.33178788731094183}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 0.4479166666666667, "obj2": 0.4019906719941213}, {"determining": "( ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RCSe + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.9125, "obj2": 0.04124742177339807}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MRS - MRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU + ( MUM * RCSe ) ) ,MUC ) ) ) / ( ( CS + RRSe ) + MUR ) )", "obj1": 0.51875, "obj2": 0.35564010679630326}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.5604166666666667, "obj2": 0.32225896219351696}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) * DS ) ) / ( DS + MUC ) )", "obj1": 0.8604166666666667, "obj2": 0.06675016710447504}, {"determining": "( ( BR / ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( RRS * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) ) * ( ( ACS - PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.5940709060007718}, {"determining": "( ( BR / Const ) * ( ( ACS - PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5552984745283551}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS + Min( ( RCSe * RMSe ) ,RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS - ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.4791666666666667, "obj2": 0.39272368085882164}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - Const ) ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RMSe + Max( ( RMSe + ( ( RCSe * RMSe ) * DS ) ),DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6656777909270453}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.44375, "obj2": 0.4312751372893148}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2533195238125933}, {"determining": "( ( ( ( Max( Min( FirstVNF_CPU ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( ( ( RMSe * Min( ( RMSe / RMSe ) ,( Min( MLU ,DS ) * RRSe ) ) ) * DS ) ,MUM ) / Min( ( MLU * ( RMSe + ( ( MUC * RMSe ) * DS ) ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.8083333333333333, "obj2": 0.08448868904837198}, {"determining": "( ( BR / Const ) * ( ( ACS - Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) )", "obj1": 0.9541666666666667, "obj2": 0.020516564078058658}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.41458333333333336, "obj2": 0.44309406430329196}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( ( ( DDR / MRS ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( MLU - ( ( RCSe * DS ) - DS ) ) / ( DS + MUC ) )", "obj1": 0.4375, "obj2": 0.44254590802722754}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09682228611122584}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.23958333333333334, "obj2": 0.6428806382827651}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40625, "obj2": 0.4643175962651966}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.8354166666666667, "obj2": 0.0771691256324956}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,PN ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) ),( ( ( MUR / RMSe ) * ( DS - MUR ) ) - ( RCSe * CS ) ) )", "obj1": 0.5020833333333333, "obj2": 0.38125480087645963}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( RRS * BR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.6708333333333333, "obj2": 0.20049810276041344}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( DS - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.49166666666666664, "obj2": 0.3881648805667571}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9375, "obj2": 0.02909209229026259}, {"determining": "Min( ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_Mem_Server - Max( Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( ( RCSe * ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) * DS ) ) / Min( DS ,MUM ) )", "obj1": 0.9875, "obj2": 0.0051596826515507305}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( ( RMSe * RMSe ) * DS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6518951419380464}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( ( ( Max( MUC,( ( Max( RCSe,CS ) / Max( CS,DS ) ) + RRSe ) ) + ( ( CS / Max( RCSe,RRSe ) ) * Min( MUC ,DS ) ) ) * Min( CS ,( ( ( MUR * Max( RCSe,RRSe ) ) * CS ) + RRSe ) ) ) + DS ) * ( ( Max( MUR,CS ) / ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / Min( ( MLU * ( CS + CS ) ) ,Min( RRSe ,RCSe ) ) ) )", "obj1": 0.7270833333333333, "obj2": 0.1150582575407128}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / ( BR / Const ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( CS + RRSe ) ) ) ) ) ) )", "obj1": 0.9729166666666667, "obj2": 0.011440257224616397}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.9375, "obj2": 0.02909209229026259}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40625, "obj2": 0.4643175962651966}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( ( ( ACS * PN ) - MDR ) + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * RRSe ) ) / CS ) ) )", "obj1": 0.96875, "obj2": 0.015430972499993771}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09682228611122584}], "14": [{"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) * ( FirstVNF_RAM_Server - Max( Min( ( MDR + FirstVNF_CPU ) ,( MDR / ( BR / Const ) ) ),( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / Max( ( CS + RRSe ),( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( CS + RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / MRS ) * ( ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( MLU + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * RRS ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.738438901879573}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.6479166666666667, "obj2": 0.22642990089225437}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.54375, "obj2": 0.29068271353133157}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) + ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( RCSe * RRSe ) ) ) - ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.68125, "obj2": 0.1975478153178723}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2533195238125933}, {"determining": "( ( BR / Const ) * ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( ( MLU - ( ( RCSe * DS ) - DS ) ) - MUC ) ) ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5046819500118207}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4875, "obj2": 0.3462486015127043}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.4791666666666667, "obj2": 0.39272368085882164}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12525347275221801}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) * DS ) ) - ( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / DS ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6865053643516696}, {"determining": "( ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RCSe + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.9125, "obj2": 0.04124742177339807}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( CS + DS ) + ( ( MLU - ( ( RCSe * DS ) - DS ) ) - MUC ) ) / CS ) ) )", "obj1": 0.8875, "obj2": 0.05290915478924665}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.53125, "obj2": 0.3248458494924097}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2533195238125933}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.7270833333333333, "obj2": 0.11467667932809}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3854166666666667, "obj2": 0.4660695311461104}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - Const ) ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RMSe + Max( ( RMSe + ( ( RCSe * RMSe ) * DS ) ),DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6656777909270453}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUM + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9354166666666667, "obj2": 0.02612955863785126}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS + Min( ( RCSe * RMSe ) ,RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS - ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.5145833333333333, "obj2": 0.3321645417195926}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( ( RMSe * RMSe ) * DS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6518951419380464}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3854166666666667, "obj2": 0.4660695311461104}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * AMS ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MUR * RRSe ) ) ) ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.41928155745466983}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.23958333333333334, "obj2": 0.6428806382827651}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.4270833333333333, "obj2": 0.43731264821280336}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8645833333333334, "obj2": 0.06297890427443058}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 0.4479166666666667, "obj2": 0.4019906719941213}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.4, "obj2": 0.4534581493188014}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * ( FirstVNF_RAM * Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( RRS * BR ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.5498234721247409}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.6708333333333333, "obj2": 0.20049810276041344}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( ( ACS + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.8208333333333333, "obj2": 0.08275878989910375}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( MUR * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.65625, "obj2": 0.20814752086805707}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.41458333333333336, "obj2": 0.44309406430329196}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09682228611122584}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.8541666666666666, "obj2": 0.06708018712995774}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Max( AMS,FirstVNF_CPU ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,DS ) ) ) ) ) ) )", "obj1": 0.44583333333333336, "obj2": 0.41183559737957}, {"determining": "( ( ( ( Max( Min( FirstVNF_CPU ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( ( ( RMSe * Min( ( RMSe / RMSe ) ,( Min( MLU ,DS ) * RRSe ) ) ) * DS ) ,MUM ) / Min( ( MLU * ( RMSe + ( ( MUC * RMSe ) * DS ) ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.8083333333333333, "obj2": 0.08448868904837198}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.8375, "obj2": 0.07644771752730849}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7666666666666667, "obj2": 0.0937841108419207}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.23958333333333334, "obj2": 0.6428806382827651}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / Const ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12525347275221801}], "15": [{"determining": "( ( DDR * RRS ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( DS ,MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.738438901879573}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU - AMS ) * ( ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( CS + DS ) + ( ( MLU - ( ( MUC * DS ) - DS ) ) - MUC ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) * ( FirstVNF_RAM_Server - Max( Min( ( MDR + FirstVNF_CPU ) ,( MDR / ( BR / Const ) ) ),( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / Max( ( CS + RRSe ),( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( CS + RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * RRS ) + MRS )", "choosing": "( ( MUC - ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) * CS ) ) / Min( DS ,MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.738438901879573}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4375, "obj2": 0.3640047076011266}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * ( ( MUC * RMSe ) * DS ) ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.4875, "obj2": 0.3254210905887683}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( DS / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15731969849801322}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3891027875103236}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * CS ) ) - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.28070439716698425}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) * DS ) ) - ( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / DS ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6865053643516696}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / MDR ) * ( ( ACS * ARS ) - MDR ) )", "choosing": "( Max( RCSe,( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12486337640090714}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6104166666666667, "obj2": 0.22519578960627026}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) / Const ) * ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( ( MLU - ( ( RMSe * DS ) - DS ) ) - MUC ) ) ) ) )", "obj1": 0.37083333333333335, "obj2": 0.4889570324657564}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.6666666666666666, "obj2": 0.2061095330151003}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.41458333333333336, "obj2": 0.44309406430329196}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5645833333333333, "obj2": 0.26018954765354396}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.6479166666666667, "obj2": 0.2194175691717716}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( ( RCSe * RMSe ) * RCSe ) ) / Min( DS ,MUC ) )", "obj1": 0.20208333333333334, "obj2": 0.7247638040313573}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09682228611122584}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server + MDR ) + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,( RMSe / RMSe ) ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5395833333333333, "obj2": 0.32218390846942846}, {"determining": "( ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RCSe + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.9125, "obj2": 0.04124742177339807}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.53125, "obj2": 0.3248458494924097}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.23901035575601787}, {"determining": "( ( BR / Const ) * ( ( ( ( ( MRS + ( FirstVNF_CPU * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( MUC,RRSe ) ) + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.95, "obj2": 0.023943164802144035}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7666666666666667, "obj2": 0.0937841108419207}, {"determining": "( PN * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5432549347736819}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.23958333333333334, "obj2": 0.6297446522791463}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( CS + DS ) + ( ( MLU - ( ( RCSe * DS ) - DS ) ) - MUC ) ) / CS ) ) )", "obj1": 0.8875, "obj2": 0.05290915478924665}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "( ( BR / Const ) * ( ( Min( FirstVNF_RAM ,MRS ) * ( ARS * BR ) ) - MDR ) )", "choosing": "( Min( MUR ,MUM ) / ( DS - ( ( MLU + Max( ( RMSe / MUM ),RCSe ) ) / ( ( CS + DS ) + ( ( MUC - ( ( RCSe * DS ) - DS ) ) - MUC ) ) ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5046819500118207}, {"determining": "( ( BR / Const ) * ( Min( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ,BR ) * ( PN + FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / ( RMSe * RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( MUR + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.2375, "obj2": 0.6409703024169849}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU + AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) - ( MUR - MUC ) ) )", "obj1": 0.3375, "obj2": 0.5300015070228176}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( ( RMSe * RMSe ) * DS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6518951419380464}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * RMSe ) ) ) ) ) / CS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.008751112030899143}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS + Min( ( RCSe * RMSe ) ,RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS - ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "Min( ( ( ( ( ( MRS + ( ( ACS + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( ( RCSe * RMSe ) * ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.8979166666666667, "obj2": 0.04861814481454054}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3854166666666667, "obj2": 0.4660695311461104}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( MDR / ( ( FirstVNF_CPU_Server + MDR ) - BR ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.93125, "obj2": 0.027876899041693923}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( DDR * RRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.012440503616211409}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( MUR / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.86875, "obj2": 0.06065444998693968}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.7270833333333333, "obj2": 0.11467667932809}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( MUR * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.65625, "obj2": 0.20814752086805707}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.58125, "obj2": 0.24870529688235227}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,( BR / Const ) ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( RCSe * RMSe ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.554221241163619}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.575, "obj2": 0.25152047602002436}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - ( Const + PN ) ) ) ,( ( FirstVNF_CPU_Server - MDR ) * Min( FirstVNF_RAM_Server ,( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( MUR ,MUM ),RMSe ) ) / ( ( CS + Min( DS ,RMSe ) ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.45581148846777547}], "16": [{"determining": "( Min( BR ,Const ) - ( ( ACS - PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU - AMS ) * ( ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( CS + DS ) + ( ( MLU - ( ( MUC * DS ) - DS ) ) - MUC ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.19583333333333333, "obj2": 0.7262086857558371}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * ( ( MUC * RMSe ) * DS ) ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.4875, "obj2": 0.3254210905887683}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( DS / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15731969849801322}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.51875, "obj2": 0.30874935554255406}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4375, "obj2": 0.3640047076011266}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) * DS ) ) - ( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / DS ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6865053643516696}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * CS ) ) - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.28070439716698425}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Const ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ) ) ) ) ) )", "obj1": 0.4125, "obj2": 0.41871942267448486}, {"determining": "Min( ( ( ( ( ( ( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) + ( ( ACS + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM * RCSe ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.8604166666666667, "obj2": 0.07559713348000267}, {"determining": "( ( ACS - PN ) * ( ( ACS * PN ) - MRS ) )", "choosing": "( ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3891027875103236}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( MUR * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.6666666666666666, "obj2": 0.20524067393669368}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.6479166666666667, "obj2": 0.2194175691717716}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3854166666666667, "obj2": 0.4660695311461104}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RCSe + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.9125, "obj2": 0.04124742177339807}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5645833333333333, "obj2": 0.26018954765354396}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - ( Const + PN ) ) ) ,( ( FirstVNF_CPU_Server - MDR ) * Min( FirstVNF_RAM_Server ,( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( MUR ,MUM ),RMSe ) ) / ( ( CS + Min( DS ,RMSe ) ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.45581148846777547}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6104166666666667, "obj2": 0.22519578960627026}, {"determining": "( ( DDR * RRS ) + ACS )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( MUR + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.2, "obj2": 0.7229807106688744}, {"determining": "( ( BR / Const ) * ( ( Min( FirstVNF_RAM ,MRS ) * ( ARS * BR ) ) - MDR ) )", "choosing": "( Min( MUR ,MUM ) / ( DS - ( ( MLU + Max( ( RMSe / MUM ),RCSe ) ) / ( ( CS + DS ) + ( ( MUC - ( ( RCSe * DS ) - DS ) ) - MUC ) ) ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5046819500118207}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.23901035575601787}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( MUC,RRSe ) ) + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.36559413828830606}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - BR ) * ( MRS / BR ) ) * ( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / CS ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * DS ) ) + ( MUR - MUC ) ) )", "obj1": 0.34375, "obj2": 0.5250326497895905}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( ( RMSe * RMSe ) * DS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6518951419380464}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7666666666666667, "obj2": 0.0937841108419207}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,( BR / Const ) ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( PN * FirstVNF_CPU ) )", "choosing": "( ( RCSe * RMSe ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.554221241163619}, {"determining": "( ( ( DDR * RRS ) + MRS ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( Min( DS ,MUC ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.7395833333333334, "obj2": 0.10388401897735884}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( DDR * RRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.012440503616211409}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS + Min( ( RCSe * RMSe ) ,RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS - ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,MUM ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12486337640090714}, {"determining": "( ( BR / Const ) * ( ( Min( FirstVNF_RAM ,MRS ) * ( ARS * BR ) ) - MDR ) )", "choosing": "( Min( MUR ,MUM ) / ( DS - ( ( MLU + Max( ( RMSe / MUM ),RCSe ) ) / ( ( CS + DS ) + ( ( MUC - ( ( RCSe * DS ) - DS ) ) - MUC ) ) ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5388692134969182}, {"determining": "Max( Max( Max( ( MDR + FirstVNF_CPU ),( MDR / ( BR / Const ) ) ),( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( CS + RRSe ) ) ) ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.4999412227863688}, {"determining": "( ( BR / Const ) * ( Min( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ,BR ) * ( PN + FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / ( RMSe * RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( MUR + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.2375, "obj2": 0.6409703024169849}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * CS ) / Min( ( MLU - ( MUR * DS ) ) ,MUC ) ) ) / ( Max( CS,RRSe ) + MUR ) )", "obj1": 0.65625, "obj2": 0.20814752086805707}, {"determining": "( ( ( ( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) / MDR ) * ( ( ACS * ARS ) - MDR ) )", "choosing": "( Max( RCSe,( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12486337640090714}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) / ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( MDR / ( ( FirstVNF_CPU_Server + MDR ) - BR ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS + Min( ( RCSe * RMSe ) ,RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR + MUC ) ) )", "obj1": 0.9520833333333333, "obj2": 0.01985285403607276}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5770833333333333, "obj2": 0.24767771978519007}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.2280072575185301}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.725, "obj2": 0.11575231328434235}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( Max( RMSe,RMSe ) / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.70625, "obj2": 0.1239431088502807}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) / Const ) * ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RCSe ) ) / ( ( CS + DS ) + ( ( MLU - ( ( RMSe * DS ) - DS ) ) - MUC ) ) ) ) )", "obj1": 0.37083333333333335, "obj2": 0.4889570324657564}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.32083333333333336, "obj2": 0.5484857063695724}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.23958333333333334, "obj2": 0.6297446522791463}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( MDR ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * AMS ) * ( ( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) - MDR ) + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( CS + DS ) + ( ( MLU - ( ( RCSe * DS ) - DS ) ) - MUC ) ) / CS ) ) )", "obj1": 0.8875, "obj2": 0.05290915478924665}], "17": [{"determining": "( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.19583333333333333, "obj2": 0.7262086857558371}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Const ) - ( ( ACS - PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * PN ) ) - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.19583333333333333, "obj2": 0.7262086857558371}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( DS / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15731969849801322}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6354166666666666, "obj2": 0.2051900584017647}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.48733936968713104}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Const ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ) ) ) ) ) )", "obj1": 0.4125, "obj2": 0.41871942267448486}, {"determining": "( ( BR + Const ) * ( ( ( ( FirstVNF_RAM_Server - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Min( Min( RMSe ,( RMSe / RMSe ) ) ,RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.8520833333333333, "obj2": 0.06997995507554924}, {"determining": "( ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) * ( ( ( ( FirstVNF_CPU * ( MRS + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RCSe + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.9125, "obj2": 0.04124742177339807}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.46875, "obj2": 0.3327871772541046}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - ( Const + PN ) ) ) ,( ( FirstVNF_CPU_Server - MDR ) * Min( FirstVNF_RAM_Server ,( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( MUR ,MUM ),RMSe ) ) / ( ( CS + Min( DS ,RMSe ) ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.45581148846777547}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MRS ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / RMSe ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.8708333333333333, "obj2": 0.05241627708494032}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3891027875103236}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1257227939936999}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS + Min( ( RCSe * RMSe ) ,RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS - ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.3555969779925411}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.38125, "obj2": 0.4852595088210036}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( DS / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.3064286884696895}, {"determining": "( ( DDR * RRS ) + ACS )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( MUR + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.2, "obj2": 0.7229807106688744}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( MDR ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5482427317133141}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22083333333333333, "obj2": 0.664500917685044}, {"determining": "Max( ( ( ( MRS - MRS ) + Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) * DS ) ) - ( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / DS ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6865053643516696}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( MRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.23083090437607093}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( MUC,RRSe ) ) + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.36559413828830606}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - AMS ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( DDR * RRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.93125, "obj2": 0.02812834245587033}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.22481653906181442}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.55, "obj2": 0.2748598448698044}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * ( ( MUC * RMSe ) * DS ) ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.4875, "obj2": 0.319052975089021}, {"determining": "( ( ACS - PN ) * ( ( ACS * PN ) - MRS ) )", "choosing": "( ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6846263635393756}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2959536023796245}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3173185720882396}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Min( BR ,Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( RMSe / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8604166666666667, "obj2": 0.06522674417586875}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.76875, "obj2": 0.09340117467600906}, {"determining": "( ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) * ( ( ( Const * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RCSe + ( ( ( CS + DS ) + ( MUR - MUC ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.9895833333333334, "obj2": 0.0043633716574124305}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3854166666666667, "obj2": 0.4660695311461104}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * CS ) ) - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.28070439716698425}, {"determining": "( ( DDR * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * ( RCSe * RRSe ) ) ) - ( MUR / DS ) ) )", "obj1": 0.25, "obj2": 0.6264121312083286}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.29171355855674136}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5770833333333333, "obj2": 0.24767771978519007}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5770833333333333, "obj2": 0.24767771978519007}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( DDR * RRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( DS - RMSe ) )", "obj1": 0.9416666666666667, "obj2": 0.02368213371048008}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( Const + PN ) ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MLU + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) + ( MUR - MUC ) ) )", "obj1": 0.7520833333333333, "obj2": 0.09972862815434426}, {"determining": "( ( AMS / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( MUM / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( RCSe,RRSe ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) / CS ) ) )", "obj1": 0.5645833333333333, "obj2": 0.26018954765354396}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( MDR ,FirstVNF_RAM_Server ) ) ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}], "18": [{"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_CPU_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( MUC * RMSe ) * DS ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.4083333333333333, "obj2": 0.40894503428113554}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU - ( Const + PN ) ) ) ,( ( FirstVNF_CPU_Server - MDR ) * Min( FirstVNF_RAM_Server ,( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( MUR ,MUM ),RMSe ) ) / ( ( CS + Min( DS ,RMSe ) ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.45581148846777547}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.48733936968713104}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * Const ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,DS ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.6395833333333333, "obj2": 0.20159051705269668}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.3555969779925411}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( DS / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15731969849801322}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1257227939936999}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) + FirstVNF_RAM ) * ( ( ( ACS * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( CS ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( ( MUR - MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.98125, "obj2": 0.008328300454492888}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11697168196280074}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( ( MDR + Const ),( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( DS / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( MUC * RMSe ) ) ) ) ) ) ) )", "obj1": 0.8229166666666666, "obj2": 0.07719075759031051}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.46875, "obj2": 0.3327871772541046}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9125, "obj2": 0.040184542340509416}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.2, "obj2": 0.6881949330321409}, {"determining": "Max( Min( ARS ,FirstVNF_RAM_Server ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.547066599913445}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( AMS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( Min( CS ,RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.89375, "obj2": 0.04670203578538312}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / Max( MUC,RRSe ) ) + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.36559413828830606}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6461059771394835}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * ( ( CS + DS ) + ( MUR - MUC ) ) ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.7479166666666667, "obj2": 0.101929617697549}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.55, "obj2": 0.2748598448698044}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( MRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.23083090437607093}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - ( Max( ( MDR + Const ),( DDR * RRS ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MLU / DS ) ) ) / ( DS - RMSe ) )", "obj1": 0.9416666666666667, "obj2": 0.02368213371048008}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.36041666666666666, "obj2": 0.4792895498951656}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.41458333333333336, "obj2": 0.3856840829567628}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3854166666666667, "obj2": 0.4660695311461104}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( DS / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.3064286884696895}, {"determining": "( ( DDR * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * ( RCSe * RRSe ) ) ) - ( MUR / DS ) ) )", "obj1": 0.25, "obj2": 0.6264121312083286}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6104166666666667, "obj2": 0.22519578960627026}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS - ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.37083333333333335, "obj2": 0.47054193970653807}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22083333333333333, "obj2": 0.664500917685044}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / ( ( RMSe + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUC ) / DS ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6443118489558545}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2959536023796245}, {"determining": "( ( ACS - PN ) * ( ( ACS * PN ) - MRS ) )", "choosing": "( ( ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Min( BR ,Const ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( RMSe / ( DS - ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( MUR + Max( Min( RMSe ,MUM ),RCSe ) ) ) ) )", "obj1": 0.8458333333333333, "obj2": 0.07182617722260372}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RMSe ) * ( RCSe * RRSe ) ) ) - ( MUR / DS ) ) )", "obj1": 0.41875, "obj2": 0.37915356393078453}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.76875, "obj2": 0.09340117467600906}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS + Min( ( RCSe * RMSe ) ,RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS - ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.79375, "obj2": 0.08574632030882226}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,BR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( CS + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.275244986763583}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3268215597713214}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6354166666666666, "obj2": 0.2051900584017647}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( Const + PN ) ) - BR ) * ( MRS / BR ) ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe - ( RMSe + ( ( MUC * RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12491310742849779}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_CPU ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,MUM ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.22167650163598673}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * ( ( MUC * RMSe ) * DS ) ) / ( DS - ( CS + ( ( RCSe * RMSe ) * RMSe ) ) ) )", "obj1": 0.4875, "obj2": 0.319052975089021}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MRS ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / RMSe ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.8729166666666667, "obj2": 0.05132600410097407}], "19": [{"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / RMSe ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.34375, "obj2": 0.4752524790855686}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( CS,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.4411176432248465}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - ( Max( ( MDR + Const ),( DDR * RRS ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MLU / DS ) ) ) / ( DS - RMSe ) )", "obj1": 0.9416666666666667, "obj2": 0.02368213371048008}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) / MRS ) )", "choosing": "( Max( MUR,MUR ) / ( ( MUM + ( ( RMSe + Max( RMSe,( ( MUC * RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.24262608417964301}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.55, "obj2": 0.2748598448698044}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) + FirstVNF_RAM ) * ( ( ( ACS * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( CS ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( ( MUR - MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.98125, "obj2": 0.008328300454492888}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_CPU_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.40625, "obj2": 0.4001339731603903}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.2, "obj2": 0.6881949330321409}, {"determining": "Max( Min( ARS ,FirstVNF_RAM_Server ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.547066599913445}, {"determining": "( ( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( RMSe ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.6458333333333334, "obj2": 0.20020657625839633}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.14876751693698798}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( AMS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( Min( CS ,RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.89375, "obj2": 0.04670203578538312}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) - MDR ) ) - MRS ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( MUR ,MUM ),RMSe ) ) / ( ( CS + Min( RMSe ,RMSe ) ) + ( Min( RRSe ,RCSe ) - MUC ) ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06828036446373394}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1257227939936999}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "( ( DDR * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03930146616120579}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6677995203932198}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS - ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.37083333333333335, "obj2": 0.47054193970653807}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.3555969779925411}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.4646692766396624}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MRS ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / RMSe ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.8729166666666667, "obj2": 0.05132600410097407}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.8604166666666667, "obj2": 0.064418714585823}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,( Const + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.45625, "obj2": 0.3494058610708246}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.275244986763583}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2959536023796245}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_CPU ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,MUM ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.22167650163598673}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22083333333333333, "obj2": 0.664500917685044}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / Min( DS ,MUC ) ) / ( ( RMSe + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUC ) / DS ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6443118489558545}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( BR / Const ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / MUR ) ) + MUM ) / DS ) ) )", "obj1": 0.8125, "obj2": 0.08085823276941584}, {"determining": "( ( MDR / FirstVNF_Mem_Server ) * ( ( ( ( Const + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * MUC ) ) / ( ( CS * ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.3097901353917187}, {"determining": "( Min( DDR ,Min( ( ACS * PN ) ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU / DDR ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( ( ( RCSe * ( RMSe / RMSe ) ) / ( CS / MUC ) ) * RMSe ) * ( RCSe * RRSe ) ) ) - ( MUR / MUC ) ) )", "obj1": 0.225, "obj2": 0.6508269334495741}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.76875, "obj2": 0.09340117467600906}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.2875, "obj2": 0.5684296223755717}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6354166666666666, "obj2": 0.2051900584017647}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( DS / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.3064286884696895}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9125, "obj2": 0.04006368500625029}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.4625, "obj2": 0.3363784582156464}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( PN / FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) )", "obj1": 0.7270833333333333, "obj2": 0.11411433619960965}, {"determining": "( DDR * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * ( ( CS + MUR ) + ( MUR - MUC ) ) ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.7583333333333333, "obj2": 0.1005624331931885}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( MRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.23083090437607093}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7395833333333334, "obj2": 0.10458349716858553}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( ( MDR + Const ),( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8625, "obj2": 0.05749672261417554}], "20": [{"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) - MDR ) ) - MRS ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - PN ) * ( ( AMS * PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / RMSe ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1860622036224971}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.56875, "obj2": 0.253814399283708}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.37916666666666665, "obj2": 0.4269852137352328}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.76875, "obj2": 0.09340117467600906}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + Max( RMSe,RCSe ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.40208333333333335, "obj2": 0.39688012338396966}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( RCSe * RMSe ) * DS ) ) / ( ( ( ( Min( RMSe ,( RMSe / RMSe ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) ) ) / ( ( RMSe + ( ( RMSe + ( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUC ) / DS ) ) )", "obj1": 0.2375, "obj2": 0.6421844734551329}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( DS * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.40625, "obj2": 0.39485578871234944}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.55, "obj2": 0.2748598448698044}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.14876751693698798}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( BR / Const ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) * ( CRS - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR + DS ) ) )", "obj1": 0.80625, "obj2": 0.0810748208694077}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.43366957362174857}, {"determining": "Max( Min( ARS ,FirstVNF_RAM_Server ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.547066599913445}, {"determining": "( Min( BR ,Const ) * ( ( ACS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MLU + Max( Min( RMSe ,MUM ),RMSe ) ) / Min( ( CS + DS ) ,( MUR - MUR ) ) ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5721176079292726}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.34375, "obj2": 0.4752524790855686}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648941992056453}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( CRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * MUR ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.19791666666666666, "obj2": 0.6930769738927149}, {"determining": "( ( MDR / FirstVNF_Mem_Server ) * ( ( ( ( Const + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * MUC ) ) / ( ( CS * ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.3097901353917187}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6354166666666666, "obj2": 0.2051900584017647}, {"determining": "( ( DDR * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5612855431571286}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,( Const + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.45625, "obj2": 0.3494058610708246}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,Const ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( ( MUR / DS ) - MUR ) ) ) ) ) ) )", "obj1": 0.7, "obj2": 0.12966869777925769}, {"determining": "Max( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.25, "obj2": 0.6181533116152437}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS - ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.37083333333333335, "obj2": 0.47054193970653807}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * ACS ) - MDR ) )", "choosing": "( ( ( RCSe * MUM ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.21931524540196964}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MLU - ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3540106982649901}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) + FirstVNF_RAM ) * ( ( ( ACS * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( CS ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( ( MUR - MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.98125, "obj2": 0.008328300454492888}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( Max( ( MDR + Const ),( DDR * RRS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( DS - RMSe ) )", "obj1": 0.9416666666666667, "obj2": 0.02368213371048008}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.475, "obj2": 0.3214511962562118}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) / MRS ) )", "choosing": "( Max( MUR,MUR ) / ( ( MUM + ( ( RMSe + Max( RMSe,( ( MUC * RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.24262608417964301}, {"determining": "( DDR * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * ( ( CS + MUR ) + ( MUR - MUC ) ) ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.7583333333333333, "obj2": 0.1005624331931885}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( Min( DDR ,Min( ( ACS * PN ) ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU / DDR ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( ( ( RCSe * ( RMSe / RMSe ) ) / ( CS / MUC ) ) * RMSe ) * ( RCSe * RRSe ) ) ) - ( MUR / MUC ) ) )", "obj1": 0.225, "obj2": 0.6508269334495741}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( MRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,MUM ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5916666666666667, "obj2": 0.23656501762390736}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( CRS - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( MUM ,( RMSe / MLU ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8458333333333333, "obj2": 0.06467386592345972}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.2875, "obj2": 0.5684296223755717}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21875, "obj2": 0.6582977387058879}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.275244986763583}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3645833333333333, "obj2": 0.47371985939458416}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.61875, "obj2": 0.218433856484273}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) + FirstVNF_RAM ) * ( ( ( ACS * ( PN + BR ) ) * DDR ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( CS ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( ( MUR - MUR ) ,CS ) ) ) ) / CS ) ) )", "obj1": 0.98125, "obj2": 0.008328300454492888}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( MRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + ( ( ( Min( RMSe ,MUM ) / ( RMSe + RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RCSe ) ) ) * Max( ( CS / Min( RCSe ,RRSe ) ),Min( Max( MUR,MUR ) ,CS ) ) ) ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6208333333333333, "obj2": 0.21493651465449887}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MLU - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9104166666666667, "obj2": 0.03766972013522059}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MRS ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / RMSe ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.8729166666666667, "obj2": 0.05132600410097407}], "21": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) - MDR ) ) - MRS ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * MUR ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.19791666666666666, "obj2": 0.6930769738927149}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.2998467560099186}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.56875, "obj2": 0.253814399283708}, {"determining": "( ( BR / Const ) * ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + Max( RMSe,RCSe ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.40208333333333335, "obj2": 0.39688012338396966}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.275244986763583}, {"determining": "Max( Min( ARS ,FirstVNF_RAM_Server ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.547066599913445}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.55, "obj2": 0.2748598448698044}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.37916666666666665, "obj2": 0.4269852137352328}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) + MRS ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + MUR ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.07089361456208004}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( BR / Const ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) * ( CRS - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR + DS ) ) )", "obj1": 0.80625, "obj2": 0.0810748208694077}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.7, "obj2": 0.12958273769967316}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648941992056453}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + PN ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.047607753296704504}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MUC ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( ( MLU + Max( MUM,RCSe ) ) + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6339913915711012}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( CRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.45625, "obj2": 0.34228249298768154}, {"determining": "( ( BR / CRS ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MUM + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1860622036224971}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * ACS ) - MDR ) )", "choosing": "( ( ( RCSe * MUM ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.21931524540196964}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.14876751693698798}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS - ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9145833333333333, "obj2": 0.036162389250037646}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * DDR ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( ( ( MUC * RMSe ) * DS ),RCSe ) ) / ( ( CS + RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.95, "obj2": 0.021740337769154527}, {"determining": "Max( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.25, "obj2": 0.6181533116152437}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20491278509881475}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.725, "obj2": 0.11550439330982132}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.43366957362174857}, {"determining": "( ( ( Const - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( Max( FirstVNF_CPU,AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( DS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5569351849068241}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR - ( ( Min( MUC ,RMSe ) * DS ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.4395833333333333, "obj2": 0.35354641477183496}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( RMSe ,( RMSe / MLU ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8520833333333333, "obj2": 0.062171507132264214}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ) - BR ) * ( PN + FirstVNF_CPU ) ) * PN ) / MRS ) )", "choosing": "( Max( MUR,MUR ) / ( ( MUM + ( ( RMSe + Max( RMSe,( ( MUC * RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.24262608417964301}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS - ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9104166666666667, "obj2": 0.03751757263202095}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( MUR + ( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.4481673309463018}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1860622036224971}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.9708333333333333, "obj2": 0.012738592208887378}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.34375, "obj2": 0.4752524790855686}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( MLU + ( MUM * RCSe ) ),RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.26875, "obj2": 0.5908197302683647}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) * ( ( ( ACS * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( RCSe * CS ) ) ) ) ) )", "obj1": 0.70625, "obj2": 0.12326880836199898}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) )", "choosing": "( Max( ( Min( MUC ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.4125, "obj2": 0.3799087745568022}, {"determining": "( ( ACS - ( ( DDR + Const ) * Min( BR ,FirstVNF_RAM_Server ) ) ) * ( ( ( BR / FirstVNF_CPU ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MRS ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / ( RCSe * RMSe ) ) ) + ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) + ( ( DS * ( RMSe / RMSe ) ) / ( CS / MUC ) ) ) / ( ( CS - ( ( RCSe * RMSe ) * RMSe ) ) + ( MUR - MUC ) ) )", "obj1": 0.86875, "obj2": 0.053024182876506086}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( CRS - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( MUM ,( RMSe / MLU ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8458333333333333, "obj2": 0.06467386592345972}, {"determining": "( ( DDR * Min( ( ACS * PN ) ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU / PN ) * ( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,MUR ) / ( Max( RMSe,( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.2125, "obj2": 0.6582704206745755}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.76875, "obj2": 0.0930353899424674}], "22": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( Min( ( FirstVNF_RAM_Server - ACS ) ,MDR ) - ( FirstVNF_Mem * ACS ) )", "choosing": "( Min( Max( Min( ( ( ( ( RCSe + MUR ) / ( MUR - MUC ) ) / Min( Max( MUC,MLU ) ,( DS + RRSe ) ) ) - Max( ( ( MLU - MUM ) * ( CS - MUC ) ),( Max( CS,MUM ) - Max( MUM,DS ) ) ) ) ,Max( Max( ( ( RCSe / MLU ) / Min( MUR ,MUR ) ),( Min( RCSe ,DS ) * ( RMSe * MLU ) ) ),Min( ( ( DS / RCSe ) + ( RCSe + RCSe ) ) ,Max( ( MUR - MUM ),( DS + DS ) ) ) ) ),( ( ( Min( Max( DS,MUM ) ,Max( RCSe,MUM ) ) / ( Max( MUR,RCSe ) - Max( MUR,MUR ) ) ) + Max( Min( Max( RRSe,MUM ) ,( MUR + MUC ) ),( ( MUR + MUM ) * ( RMSe * CS ) ) ) ) * Max( ( ( Min( MUC ,RCSe ) - Max( MUM,RRSe ) ) - ( ( MUR + MLU ) - ( MUC * RCSe ) ) ),( ( Min( RCSe ,RMSe ) - Min( RMSe ,RCSe ) ) + Max( Max( RRSe,MUM ),( DS / DS ) ) ) ) ) ) ,( Max( Min( ( ( ( MUR + MUR ) * Max( MUC,MUM ) ) * ( ( RRSe * MUC ) * ( CS - MUM ) ) ) ,( ( ( CS / MUR ) - ( MUM / MUR ) ) + ( Min( MUR ,MUR ) / ( CS + MUM ) ) ) ),Min( Max( Max( ( CS + MUR ),( RCSe / MUC ) ),( ( DS * CS ) / Min( MLU ,MUC ) ) ) ,( ( ( CS * MUR ) + ( RCSe + MUM ) ) - Min( Min( MUM ,RMSe ) ,( RMSe * MLU ) ) ) ) ) / ( ( ( ( ( MUR - RRSe ) - Max( MUR,RMSe ) ) * Max( Min( RMSe ,CS ),( DS / MLU ) ) ) * ( Max( ( RCSe + MUC ),( CS - DS ) ) + ( ( RRSe / RCSe ) * Max( MLU,MUR ) ) ) ) - Min( Min( Max( ( MLU - CS ),( MUC / CS ) ) ,( ( RMSe / RRSe ) * Max( RRSe,MUM ) ) ) ,( Min( ( MUR / MUM ) ,( DS / RRSe ) ) * ( ( MUC * MUM ) - ( RRSe + MUC ) ) ) ) ) ) ) * ( ( Max( ( ( Max( ( RMSe + RRSe ),( MUC / DS ) ) + Max( Min( CS ,MUR ),( MLU / CS ) ) ) * ( ( Max( MUR,DS ) / ( RMSe - RCSe ) ) * ( ( MLU + MLU ) - ( RCSe + CS ) ) ) ),( Min( ( ( CS + RCSe ) + Max( MUR,RRSe ) ) ,( Min( MUC ,MLU ) + ( RRSe - MUM ) ) ) * ( ( ( RMSe / RCSe ) + ( RCSe + CS ) ) * Max( Min( RRSe ,CS ),( RMSe / RMSe ) ) ) ) ) / ( ( ( Min( ( DS / DS ) ,( RCSe - MUC ) ) - Max( ( MUM * RRSe ),Min( RRSe ,RCSe ) ) ) + ( ( ( MLU - MUC ) / Min( MUR ,MUM ) ) * ( ( MUR + RCSe ) * Max( MUR,MUM ) ) ) ) + ( ( ( ( MUC + MLU ) * ( RCSe * MLU ) ) - ( ( MUC / DS ) - ( CS * MLU ) ) ) / ( Min( Max( RMSe,MLU ) ,( MUR / MUR ) ) * ( Max( CS,MUR ) * ( CS - MUC ) ) ) ) ) ) + ( ( Min( ( ( ( CS / MUM ) + ( MUR - MLU ) ) / ( Max( MUC,RRSe ) + ( MUM * MUR ) ) ) ,( Max( ( MUR * MLU ),Max( CS,RRSe ) ) + Max( Min( DS ,DS ),Max( RRSe,RCSe ) ) ) ) + Max( ( ( ( RCSe / RCSe ) - ( RCSe / MUR ) ) / ( Min( MLU ,MUC ) - Min( RRSe ,MLU ) ) ),( ( ( MUR / RMSe ) + Max( RMSe,MUC ) ) - Min( ( MUC * CS ) ,Min( MUC ,RCSe ) ) ) ) ) + ( Max( ( ( ( MUC - MUM ) / ( MLU + MUM ) ) * ( ( CS / MUR ) / ( MUM * DS ) ) ),( Max( ( MLU * RCSe ),Min( RMSe ,RRSe ) ) * Min( ( MLU - MUM ) ,( MLU * MLU ) ) ) ) / ( ( Min( ( CS * MUR ) ,( MUR * MUM ) ) * ( ( RRSe / RMSe ) + Min( CS ,MUC ) ) ) / ( Min( ( RMSe - MLU ) ,( RRSe / CS ) ) - ( ( RRSe - CS ) - Max( RMSe,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) - MDR ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( DS + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6166666666666667, "obj2": 0.20120201116204012}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.34375, "obj2": 0.4752524790855686}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.32227888670496024}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.73125, "obj2": 0.11136636082380509}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * MUR ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.19791666666666666, "obj2": 0.6930769738927149}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.2998467560099186}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.275244986763583}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.37916666666666665, "obj2": 0.4259004888754181}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) + MRS ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + MUR ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.07089361456208004}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.28125, "obj2": 0.5735101951825026}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * ACS ) - MDR ) )", "choosing": "( ( ( RCSe * MUM ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.21931524540196964}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS - ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9145833333333333, "obj2": 0.036162389250037646}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( CRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,DS ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.46041666666666664, "obj2": 0.33465456936291543}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) - ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUC / DS ) ) )", "obj1": 0.6979166666666666, "obj2": 0.12943327326324516}, {"determining": "( ( BR / CRS ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MUM + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1860622036224971}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ( Const + Const ) ) - ACS ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + MUR ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6510442725172929}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.50625, "obj2": 0.30976835887418636}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * DDR ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( ( ( MUC * RMSe ) * DS ),RCSe ) ) / ( ( CS + RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.95, "obj2": 0.021740337769154527}, {"determining": "Max( Min( ARS ,FirstVNF_RAM_Server ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.547066599913445}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1860622036224971}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( BR / Const ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) * ( CRS - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR + DS ) ) )", "obj1": 0.80625, "obj2": 0.0810748208694077}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.76875, "obj2": 0.0930353899424674}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MUC ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( MUR - MUC ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.20208333333333334, "obj2": 0.6743214990865275}, {"determining": "( ( ( Min( ( ( ( ACS * PN ) + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - RRS ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( RMSe * RCSe ) ) + ( RMSe * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08773021504585712}, {"determining": "Max( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.25, "obj2": 0.6181533116152437}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( MLU + ( MUM * RCSe ) ),RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.26875, "obj2": 0.5908197302683647}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) * ( ( Min( Const ,FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MLU + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.012531986488644401}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server + ( BR / Const ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( MUR + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.9770833333333333, "obj2": 0.009582374869664343}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.58125, "obj2": 0.23838046349410677}, {"determining": "( ( ( Const - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU_Server + ( ( Const + PN ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - BR ) ,MDR ) - BR ) * ( MRS / BR ) ) * ( ( ACS * PN ) - MDR ) )", "choosing": "Max( Min( DS ,RMSe ),Max( MLU,( ( ( MLU + ( MUM * RCSe ) ) + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( DS * RRSe ) ) ) * ( DS * CS ) ) ) / CS ) ) )", "obj1": 0.76875, "obj2": 0.0930353899424674}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * DDR ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( ( ( MUC * RMSe ) * DS ),RCSe ) ) / ( ( CS + RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.95, "obj2": 0.021740337769154527}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( MLU + ( MUM * RCSe ) ),RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.56875, "obj2": 0.25032170701154505}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( ( ( MUC * RMSe ) * DS ),RCSe ) ) / ( ( CS + RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.88125, "obj2": 0.048989796263724884}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + PN ) - BR ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) / ( ( CS + ( RCSe * RRSe ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0010191073022510384}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MUC ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( ( MLU + Max( MUM,RCSe ) ) + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6339913915711012}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( CRS - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( MUM ,( RMSe / MLU ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8458333333333333, "obj2": 0.06467386592345972}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( MUC * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.55, "obj2": 0.2748598448698044}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.4481673309463018}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}], "23": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - ACS ) ,MDR ) - ( FirstVNF_Mem * ACS ) )", "choosing": "( Min( Max( Min( ( ( ( ( RCSe + MUR ) / ( MUR - MUC ) ) / Min( Max( MUC,MLU ) ,( DS + RRSe ) ) ) - Max( ( ( MLU - MUM ) * ( CS - MUC ) ),( Max( CS,MUM ) - Max( MUM,DS ) ) ) ) ,Max( Max( ( ( RCSe / MLU ) / Min( MUR ,MUR ) ),( Min( RCSe ,DS ) * ( RMSe * MLU ) ) ),Min( ( ( DS / RCSe ) + ( RCSe + RCSe ) ) ,Max( ( MUR - MUM ),( DS + DS ) ) ) ) ),( ( ( Min( Max( DS,MUM ) ,Max( RCSe,MUM ) ) / ( Max( MUR,RCSe ) - Max( MUR,MUR ) ) ) + Max( Min( Max( RRSe,MUM ) ,( MUR + MUC ) ),( ( MUR + MUM ) * ( RMSe * CS ) ) ) ) * Max( ( ( Min( MUC ,RCSe ) - Max( MUM,RRSe ) ) - ( ( MUR + MLU ) - ( MUC * RCSe ) ) ),( ( Min( RCSe ,RMSe ) - Min( RMSe ,RCSe ) ) + Max( Max( RRSe,MUM ),( DS / DS ) ) ) ) ) ) ,( Max( Min( ( ( ( MUR + MUR ) * Max( MUC,MUM ) ) * ( ( RRSe * MUC ) * ( CS - MUM ) ) ) ,( ( ( CS / MUR ) - ( MUM / MUR ) ) + ( Min( MUR ,MUR ) / ( CS + MUM ) ) ) ),Min( Max( Max( ( CS + MUR ),( RCSe / MUC ) ),( ( DS * CS ) / Min( MLU ,MUC ) ) ) ,( ( ( CS * MUR ) + ( RCSe + MUM ) ) - Min( Min( MUM ,RMSe ) ,( RMSe * MLU ) ) ) ) ) / ( ( ( ( ( MUR - RRSe ) - Max( MUR,RMSe ) ) * Max( Min( RMSe ,CS ),( DS / MLU ) ) ) * ( Max( ( RCSe + MUC ),( CS - DS ) ) + ( ( RRSe / RCSe ) * Max( MLU,MUR ) ) ) ) - Min( Min( Max( ( MLU - CS ),( MUC / CS ) ) ,( ( RMSe / RRSe ) * Max( RRSe,MUM ) ) ) ,( Min( ( MUR / MUM ) ,( DS / RRSe ) ) * ( ( MUC * MUM ) - ( RRSe + MUC ) ) ) ) ) ) ) * ( ( Max( ( ( Max( ( RMSe + RRSe ),( MUC / DS ) ) + Max( Min( CS ,MUR ),( MLU / CS ) ) ) * ( ( Max( MUR,DS ) / ( RMSe - RCSe ) ) * ( ( MLU + MLU ) - ( RCSe + CS ) ) ) ),( Min( ( ( CS + RCSe ) + Max( MUR,RRSe ) ) ,( Min( MUC ,MLU ) + ( RRSe - MUM ) ) ) * ( ( ( RMSe / RCSe ) + ( RCSe + CS ) ) * Max( Min( RRSe ,CS ),( RMSe / RMSe ) ) ) ) ) / ( ( ( Min( ( DS / DS ) ,( RCSe - MUC ) ) - Max( ( MUM * RRSe ),Min( RRSe ,RCSe ) ) ) + ( ( ( MLU - MUC ) / Min( MUR ,MUM ) ) * ( ( MUR + RCSe ) * Max( MUR,MUM ) ) ) ) + ( ( ( ( MUC + MLU ) * ( RCSe * MLU ) ) - ( ( MUC / DS ) - ( CS * MLU ) ) ) / ( Min( Max( RMSe,MLU ) ,( MUR / MUR ) ) * ( Max( CS,MUR ) * ( CS - MUC ) ) ) ) ) ) + ( ( Min( ( ( ( CS / MUM ) + ( MUR - MLU ) ) / ( Max( MUC,RRSe ) + ( MUM * MUR ) ) ) ,( Max( ( MUR * MLU ),Max( CS,RRSe ) ) + Max( Min( DS ,DS ),Max( RRSe,RCSe ) ) ) ) + Max( ( ( ( RCSe / RCSe ) - ( RCSe / MUR ) ) / ( Min( MLU ,MUC ) - Min( RRSe ,MLU ) ) ),( ( ( MUR / RMSe ) + Max( RMSe,MUC ) ) - Min( ( MUC * CS ) ,Min( MUC ,RCSe ) ) ) ) ) + ( Max( ( ( ( MUC - MUM ) / ( MLU + MUM ) ) * ( ( CS / MUR ) / ( MUM * DS ) ) ),( Max( ( MLU * RCSe ),Min( RMSe ,RRSe ) ) * Min( ( MLU - MUM ) ,( MLU * MLU ) ) ) ) / ( ( Min( ( CS * MUR ) ,( MUR * MUM ) ) * ( ( RRSe / RMSe ) + Min( CS ,MUC ) ) ) / ( Min( ( RMSe - MLU ) ,( RRSe / CS ) ) - ( ( RRSe - CS ) - Max( RMSe,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) - MDR ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( DS + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( CRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.4481673309463018}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.34375, "obj2": 0.4752524790855686}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * ACS ) - MDR ) )", "choosing": "( ( ( RCSe * MUM ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.21931524540196964}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( CRS - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( MUM ,( RMSe / MLU ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8458333333333333, "obj2": 0.06467386592345972}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( CS / RMSe ) ) ) )", "obj1": 0.45208333333333334, "obj2": 0.3406430830087138}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * MUR ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.19791666666666666, "obj2": 0.6930769738927149}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * Max( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ),MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) - ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.6770833333333334, "obj2": 0.1482844354556059}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * MRS ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( Max( RMSe,RCSe ) - DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.4125, "obj2": 0.3880355659972182}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.37916666666666665, "obj2": 0.4259004888754181}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,DS ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.46041666666666664, "obj2": 0.33465456936291543}, {"determining": "( ( BR / Const ) * ( ( ( ( Min( FirstVNF_CPU_Server ,( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.65625, "obj2": 0.16825873611795222}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.5583333333333333, "obj2": 0.25631334419258545}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) - ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUC / DS ) ) )", "obj1": 0.6979166666666666, "obj2": 0.12943327326324516}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server - ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( CS,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * MUM ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.8791666666666667, "obj2": 0.051098940215433326}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.275244986763583}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( DDR + BR ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RRSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.9333333333333333, "obj2": 0.028467083203192523}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.58125, "obj2": 0.23838046349410677}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.2998467560099186}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6166666666666667, "obj2": 0.20120201116204012}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "( ( BR / DDR ) * ( ( ( ( ACS + FirstVNF_CPU ) * Min( RRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.2738189734219932}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.50625, "obj2": 0.30976835887418636}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5673574980070215}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.32227888670496024}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "Max( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.558136336092839}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( ( ( Const - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe - ( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - ( Min( MUC ,RMSe ) * DS ) ) ) ) ) )", "obj1": 0.7395833333333334, "obj2": 0.10477067500418638}, {"determining": "Max( Min( ARS ,FirstVNF_RAM_Server ),( ( PN + FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.3125, "obj2": 0.547066599913445}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + ( ( DDR + AMS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MUM - ( ( MLU + Max( ( MLU + ( MUM * RCSe ) ),RCSe ) ) / ( ( CS + DS ) + ( ( ( MUR * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6208333333333333, "obj2": 0.19784640619370913}, {"determining": "( ( BR / CRS ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MUM + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1860622036224971}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,Min( ( CS + RRSe ) ,MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8125, "obj2": 0.08068775306421125}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MUC ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( RCSe * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.2125, "obj2": 0.6615003059793388}, {"determining": "( ( Const + Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MUM + Max( ( MLU + ( MUM * RCSe ) ),RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.5729166666666666, "obj2": 0.2466575984348811}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1860622036224971}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) * ( ( Min( Const ,FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MLU + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.012531986488644401}, {"determining": "( ( BR / Const ) * Max( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) / ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.5807305558177986}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.28125, "obj2": 0.5735101951825026}], "24": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / DDR ) * ( ( ( ( ACS + FirstVNF_CPU ) * Min( RRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server - Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) ) / ( DS - ( ( MUC + Max( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( PN - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / RCSe ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.44426216661267665}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.34375, "obj2": 0.4752524790855686}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RMSe - ( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - ( Min( MUC ,RMSe ) * DS ) ) ) ) ) )", "obj1": 0.7395833333333334, "obj2": 0.10477067500418638}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( CRS - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( MUM ,( RMSe / MLU ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8458333333333333, "obj2": 0.06467386592345972}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * ACS ) - MDR ) )", "choosing": "( ( ( RCSe * MUM ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.59375, "obj2": 0.21931524540196964}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const + ( BR / Const ) ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RCSe,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7625, "obj2": 0.09502040078122553}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( CRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "( ( Const + Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.25515772229317596}, {"determining": "Max( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6501131912077129}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,Min( ( CS + RRSe ) ,MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8125, "obj2": 0.08068775306421125}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "( ( BR / ( ( FirstVNF_CPU_Server / ( ( AMS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * ( ( ( ( Const + FirstVNF_Mem ) * Const ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RCSe,( Max( RMSe,RCSe ) * ( CS + RRSe ) ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.4125, "obj2": 0.38742522876782076}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_CPU_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( MUR - MUC ) )", "obj1": 0.9229166666666667, "obj2": 0.0324259961321869}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) * ( ( Min( Const ,FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MLU + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.012531986488644401}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server - ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( CS,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * MUM ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.8791666666666667, "obj2": 0.051098940215433326}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,DS ) ) / Min( ( RMSe * RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.7104166666666667, "obj2": 0.12255096365948534}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.2998467560099186}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR - Const ) * Min( RRS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( Min( CS ,RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) + Min( RMSe ,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2318712304711854}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6166666666666667, "obj2": 0.20120201116204012}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.53125, "obj2": 0.28593435238024745}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * MUR ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.19791666666666666, "obj2": 0.6930769738927149}, {"determining": "( ( RRS / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) + Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( MUC,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6778408736943775}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.32227888670496024}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe / ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.32413879269578877}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( RCSe * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.14759175137000022}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5274796996355898}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * RCSe ) / ( DS - ( ( MLU + Min( MUM ,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.35710335561908524}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( ( ( Const - BR ) * ( PN + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) )", "obj1": 0.99375, "obj2": 0.003446097708665513}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7604166666666666, "obj2": 0.09674480071878971}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.1724580869765408}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21875, "obj2": 0.6582977387058879}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8125, "obj2": 0.08068775306421125}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( ( Const + FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ),( FirstVNF_Mem + AMS ) ) ) * ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MUC ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( RCSe * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.2125, "obj2": 0.6615003059793388}, {"determining": "( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.23541666666666666, "obj2": 0.6523119660340623}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( DDR + BR ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RRSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.9333333333333333, "obj2": 0.028467083203192523}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + ( ( DDR + AMS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MUM - ( ( MLU + Max( ( MLU + ( MUM * RCSe ) ),RCSe ) ) / ( ( CS + DS ) + ( ( ( MUR * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6208333333333333, "obj2": 0.19784640619370913}, {"determining": "( ( BR / Const ) * Min( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) ,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.31875, "obj2": 0.5156094183504729}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,BR ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( ( MUR + MUM ) / DS ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe / RMSe ) - MUC ) ) ) ) )", "obj1": 0.94375, "obj2": 0.022728072223023345}], "25": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / DDR ) * ( ( ( ( ACS + FirstVNF_CPU ) * Min( RRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / DDR ) * ( ( ( ( ACS + FirstVNF_CPU ) * Min( RRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.53125, "obj2": 0.28593435238024745}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.44426216661267665}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.34375, "obj2": 0.4752524790855686}, {"determining": "( ( Const + Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.25515772229317596}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( DDR + Const ) ) ) - BR ) * BR ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.30625, "obj2": 0.538454136590994}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "Max( ( ( ( MRS - MRS ) * Max( Max( FirstVNF_Mem,BR ),Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + AMS ) ) ) ) * ( ( ( FirstVNF_CPU_Server + MDR ) - BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5724282658616975}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - RMSe ) ) ) ) )", "obj1": 0.46458333333333335, "obj2": 0.3349046425284855}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) * ( ( Min( Const ,FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MLU + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.012531986488644401}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3089162849918489}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( RCSe * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.14759175137000022}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12491310742849779}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR - Const ) * Min( RRS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( Min( CS ,RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) + Min( RMSe ,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2318712304711854}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( MUR - MUC ) )", "obj1": 0.8020833333333334, "obj2": 0.08610393494956461}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6324211578388174}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * RCSe ) / ( DS - ( ( MLU + Min( MUM ,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.35710335561908524}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( CRS - ( FirstVNF_RAM - DDR ) ) + ( ( Const + Const ) * Min( ARS ,ARS ) ) ) - Max( Max( BR,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) * ( PN + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUC + Max( Min( MUM ,( RMSe / MLU ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8458333333333333, "obj2": 0.06467386592345972}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - ( Min( MUC ,RMSe ) * DS ) ) ) ) ) )", "obj1": 0.46875, "obj2": 0.3209094018032536}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * ( ( ( ( Const - ( BR / Const ) ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RCSe,RCSe ) ) / Min( ( CS / MUR ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7666666666666667, "obj2": 0.09335539738313385}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) ) ) )", "obj1": 0.86875, "obj2": 0.06158646084540075}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.18764611277067386}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( BR / ( ( FirstVNF_CPU_Server / ( ( AMS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * ( ( ( ( Const + FirstVNF_Mem ) * Const ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RCSe,( Max( RMSe,RCSe ) * ( CS + RRSe ) ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.56875, "obj2": 0.24706233472937966}, {"determining": "( ( BR / Const ) * ( ( ( ( ( BR + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( RMSe - ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) ) )", "obj1": 0.99375, "obj2": 0.0030141639597808995}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RMSe,( ( RCSe * RMSe ) * DS ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.37916666666666665, "obj2": 0.4288744617619613}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.2998467560099186}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( MUR - ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.90625, "obj2": 0.04020336140501748}, {"determining": "( ( BR / RRS ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - Max( CS,DS ) ) - ( MUR / DS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.37995386656613006}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,BR ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.95, "obj2": 0.019947362464645232}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5274796996355898}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( Const * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( MUC / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7354166666666667, "obj2": 0.11002157552893657}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( CRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5083333333333333, "obj2": 0.30134239729236467}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ),( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( Max( AMS,FirstVNF_CPU ) + ( PN + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) / ( ( RMSe + ( ( MUR + ( ( RCSe * RMSe ) * MUR ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.19375, "obj2": 0.7055140055063072}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7604166666666666, "obj2": 0.09674480071878971}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( AMS * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( ( RCSe * RMSe ) * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.11812249491627884}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21875, "obj2": 0.6582977387058879}, {"determining": "Max( ( ( ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * CRS ) * ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + ( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) * MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6501131912077129}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( ( FirstVNF_CPU_Server / ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.23541666666666666, "obj2": 0.6523119660340623}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.65, "obj2": 0.17156750624524122}], "26": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * ( ( DDR + MRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RRSe + ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / DDR ) * ( ( ( ( ACS + FirstVNF_CPU ) * Min( RRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MUR * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6145833333333334, "obj2": 0.20237289427610722}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR - Const ) * Min( RRS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( Min( CS ,RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) + Min( RMSe ,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2318712304711854}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * RCSe ) / ( DS - ( ( MLU + Min( MUM ,RCSe ) ) / ( ( ( MUR - MUC ) + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.35710335561908524}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.44426216661267665}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server - MDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( MUR - MUC ) )", "obj1": 0.8020833333333334, "obj2": 0.08610393494956461}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - RMSe ) ) ) ) )", "obj1": 0.46458333333333335, "obj2": 0.3349046425284855}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.18759678089727816}, {"determining": "( ( BR / Const ) / ( ( Max( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ),FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( DS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5333333333333333, "obj2": 0.2854074647114765}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) ) ) * ( ( Const + Const ) * Min( ARS ,DDR ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU - ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.25625, "obj2": 0.6155404872668114}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.2, "obj2": 0.686339544211965}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,BR ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.95, "obj2": 0.019947362464645232}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - FirstVNF_Mem_Server ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( RRSe + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8541666666666666, "obj2": 0.059399672244254235}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( Const * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( MUC / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7354166666666667, "obj2": 0.11002157552893657}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( ( BR / Const ) * ( ( ( ( Const + Const ) * Min( CRS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3598435419275136}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6324211578388174}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5274796996355898}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( DDR + Const ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( DS - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.29375, "obj2": 0.5552607467461685}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.14368128976403516}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) * ( ( Min( Const ,FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MLU + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.012531986488644401}, {"determining": "( ( ACS / PN ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe / ( ( ( Min( RMSe ,MUC ) / Max( RMSe,RCSe ) ) / Min( ( DS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUM + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09063478184062464}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( CS * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1259270752982931}, {"determining": "( ( BR / RRS ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - Max( CS,DS ) ) - ( MUR / DS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.37995386656613006}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5125, "obj2": 0.29933549290867656}, {"determining": "( ( BR / ( ( FirstVNF_CPU_Server / ( ( AMS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * ( ( ( ( Const + FirstVNF_Mem ) * Const ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RCSe,( Max( RMSe,RCSe ) * ( CS + RRSe ) ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.56875, "obj2": 0.24706233472937966}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.7520833333333333, "obj2": 0.09863981047285342}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6398489488899868}, {"determining": "( ( ACS / PN ) * ( ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,Max( Min( CS ,RMSe ),DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21041666666666667, "obj2": 0.6669920061428738}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( RRSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5713262394547817}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.53125, "obj2": 0.28593435238024745}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3089162849918489}, {"determining": "( ( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ) + Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( ( Min( MLU ,RMSe ) * DS ) + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.25515772229317596}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( RCSe * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.14759175137000022}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MLU + Max( MUM,RCSe ) ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6458333333333334, "obj2": 0.17416688324296936}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) * ( ( Min( Const ,FirstVNF_CPU ) * ( ( ACS + FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( MUR * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.007904832392204282}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + PN ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( RCSe / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.9125, "obj2": 0.035849533231759996}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.9291666666666667, "obj2": 0.028440427953641653}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( MLU + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - ( Min( MUC ,RMSe ) * DS ) ) ) ) ) )", "obj1": 0.46875, "obj2": 0.3209094018032536}], "27": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * ( ARS - FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - Min( ( MLU + Max( MUM,RCSe ) ) ,( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * ( ( DDR + MRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RRSe + ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * ARS ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR - Const ) * Min( RRS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( Min( CS ,RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) + Min( RMSe ,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2318712304711854}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,MUR ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.2, "obj2": 0.6800586033862548}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5274796996355898}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.44426216661267665}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Max( DDR,FirstVNF_Mem ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( MDR * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( MLU ,( ( CS + MLU ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * ( MUR / CS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6102962451001634}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + MDR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( ( ( RCSe + RRSe ) + MUR ),MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MUR * RRSe ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27165699491578554}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.7520833333333333, "obj2": 0.09863981047285342}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( AMS ,FirstVNF_RAM_Server ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6324211578388174}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( BR + FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR + ( ( Min( RMSe ,RCSe ) - Max( RMSe,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1587897809240248}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.46041666666666664, "obj2": 0.3316007325466204}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( DDR + Const ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( DS - ( MUM * RCSe ) ) ) * ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5551104710814415}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,AMS ) ) ) / ( ( ( ( Const + Const ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( Min( RMSe ,( Max( CS,RMSe ) * DS ) ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5786299991461368}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.18759678089727816}, {"determining": "( ( BR / Const ) / ( ( Max( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ),FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( DS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.44583333333333336, "obj2": 0.3500733639374556}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,BR ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.95, "obj2": 0.019947362464645232}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( CS * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1259270752982931}, {"determining": "( ( ACS / PN ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe / ( ( ( Min( RMSe ,MUC ) / Max( RMSe,RCSe ) ) / Min( ( DS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "Max( ( ( DDR + Const ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) ),Min( ( ( AMS + ( ( RRS + Const ) * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) - BR ) ,Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,Max( ( RCSe * MLU ),( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe / DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6398489488899868}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ARS + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) * ( ( Min( Const ,FirstVNF_CPU ) * ( ARS * FirstVNF_RAM_Server ) ) * PN ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( MLU + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.012531986488644401}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "( ( BR / ( ( FirstVNF_CPU_Server / ( ( AMS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * ( ( ( ( Const + FirstVNF_Mem ) * Const ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5625, "obj2": 0.24584746378834113}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.14362510940050216}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - FirstVNF_Mem_Server ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( RRSe + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8541666666666666, "obj2": 0.059399672244254235}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( Max( MLU,RCSe ) * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8145833333333333, "obj2": 0.08412005728856688}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( Max( RCSe,( Max( RMSe,RCSe ) * ( CS + RRSe ) ) ) * DS ) ) - ( ( MUR + MUM ) / DS ) ) )", "obj1": 0.37916666666666665, "obj2": 0.4272824127672953}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3089162849918489}, {"determining": "( ( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ) + Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( RMSe ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( ( Min( MLU ,RMSe ) * DS ) + DS ) + ( MUR - MUC ) ) ) ) ) / ( ( RMSe + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.25515772229317596}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + PN ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) ) * PN ) - MDR ) )", "choosing": "( RCSe / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / ( MUR - MUM ) ) ) ) ) ) )", "obj1": 0.84375, "obj2": 0.06379477855157326}, {"determining": "( ( ACS / PN ) * ( ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,Max( Min( CS ,RMSe ),DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21041666666666667, "obj2": 0.6669920061428738}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS / Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS / RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3540106982649901}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server - ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * RRSe ) ) - ( MUR / DS ) ) )", "obj1": 0.65, "obj2": 0.17134811807118494}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.36875, "obj2": 0.4437235317831649}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MLU + Max( MUM,RCSe ) ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.6458333333333334, "obj2": 0.17416688324296936}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.6125, "obj2": 0.2034074726410334}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.6125, "obj2": 0.2034074726410334}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUM + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09063478184062464}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( DDR + Const ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( DS - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.29375, "obj2": 0.5552607467461685}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.53125, "obj2": 0.28593435238024745}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) / Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( RRSe - MUC ) ) ) ) )", "obj1": 0.775, "obj2": 0.09414668488521251}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MUR * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.61875, "obj2": 0.19713747607255516}], "28": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( ( Const / PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( MLU ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * ( ARS - FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - Min( ( MLU + Max( MUM,RCSe ) ) ,( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * ARS ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR - Const ) * Min( RRS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( Min( CS ,RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) + Min( RMSe ,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2318712304711854}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5145833333333333, "obj2": 0.3088812142776802}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU / AMS ) / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( Max( MUM,RCSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.043315066969313365}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - FirstVNF_Mem_Server ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( RRSe + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8541666666666666, "obj2": 0.059399672244254235}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.46041666666666664, "obj2": 0.3316007325466204}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.53125, "obj2": 0.28593435238024745}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( Max( MLU,RCSe ) * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8145833333333333, "obj2": 0.08412005728856688}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,Max( Min( CS ,RMSe ),DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.9416666666666667, "obj2": 0.02425822821407168}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + MDR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( ( ( RCSe + RRSe ) + MUR ),MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MUR * RRSe ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27165699491578554}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.44426216661267665}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.14362510940050216}, {"determining": "( ( ACS / PN ) * ( ( ( ( Max( FirstVNF_CPU_Server,( ( DDR + Const ) * ( DDR + Const ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,Max( DS,DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.19375, "obj2": 0.6867892896254758}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS / Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS / RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3540106982649901}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3089162849918489}, {"determining": "Max( ( ( DDR + Const ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) ),Min( ( ( AMS + ( ( RRS + Const ) * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) - BR ) ,Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,Max( ( RCSe * MLU ),( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe / DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6398489488899868}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUM + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09063478184062464}, {"determining": "( ( ACS / PN ) * ( ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.23958333333333334, "obj2": 0.6255313400629475}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( DS - ( MUM * RCSe ) ) ) * ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.42083333333333334, "obj2": 0.3771713169434528}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.7520833333333333, "obj2": 0.09863981047285342}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * ( DDR + Const ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( DS - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.29375, "obj2": 0.5552607467461685}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( ACS / PN ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe / ( ( ( Min( RMSe ,MUC ) / Max( RMSe,RCSe ) ) / Min( ( DS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.18759678089727816}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( Min( BR ,Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Max( MUC,MUR ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12573845298206252}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,AMS ) ) ) / ( ( ( ( Const + Const ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( Min( RMSe ,( Max( CS,RMSe ) * DS ) ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5786299991461368}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) / Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( RRSe - MUC ) ) ) ) )", "obj1": 0.775, "obj2": 0.09414668488521251}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( ( Const / Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5914735577793394}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( FirstVNF_CPU_Server / ( ( AMS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( Min( RMSe ,( Min( ( Min( CS ,RMSe ) * DS ) ,RMSe ) * DS ) ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5465771075251885}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Max( DDR,FirstVNF_Mem ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( MDR * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( MLU ,( ( CS + MLU ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * ( MUR / CS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.26875, "obj2": 0.5903672354006225}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.6125, "obj2": 0.2034074726410334}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6573953809040537}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5274796996355898}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * ( ARS / FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe / RRSe ) ) ) ) ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.15842362661850165}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Max( DDR,FirstVNF_Mem ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( ( MDR * Min( ARS ,FirstVNF_RAM_Server ) ) + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( MLU ,( ( CS + MLU ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * ( MUR / CS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6102962451001634}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.6125, "obj2": 0.2034074726410334}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RMSe * MLU ) - MUC ) ) ) ) )", "obj1": 0.45416666666666666, "obj2": 0.34264102533289026}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.3468132067754171}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( ( Min( MLU ,RMSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.36875, "obj2": 0.4437235317831649}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( ( ( DS * RRSe ) * RMSe ) ,( MUR * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.006488838894362176}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( MUR + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.4125, "obj2": 0.3794913611416331}], "29": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * ( ARS - FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - Min( ( MLU + Max( MUM,RCSe ) ) ,( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( MLU ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + MDR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( ( ( RCSe + RRSe ) + MUR ),MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MUR * RRSe ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27165699491578554}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR - Const ) * Min( RRS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( Min( CS ,RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) + Min( RMSe ,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2318712304711854}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - FirstVNF_Mem_Server ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( RRSe + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8541666666666666, "obj2": 0.059399672244254235}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5145833333333333, "obj2": 0.3088812142776802}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.53125, "obj2": 0.28593435238024745}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( Max( MLU,RCSe ) * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8145833333333333, "obj2": 0.08412005728856688}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( ( ACS / PN ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe / ( ( ( Min( RMSe ,MUC ) / Max( RMSe,RCSe ) ) / Min( ( DS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU / AMS ) / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.9083333333333333, "obj2": 0.04308303883891614}, {"determining": "Max( ( ( MRS * Max( Max( FirstVNF_CPU_Server,BR ),Max( FirstVNF_Mem,AMS ) ) ) / ( ( ( ( Const + Const ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) ),( ( DDR * RRS ) + ( ( FirstVNF_CPU / AMS ) * ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RMSe ,( Min( RMSe ,( Max( CS,RMSe ) * DS ) ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( RCSe * RMSe ) - MUC ) ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5786299991461368}, {"determining": "( ( ACS / PN ) * ( ( ( ( Max( FirstVNF_CPU_Server,( ( DDR + Const ) * ( DDR + Const ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,Max( DS,DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.19375, "obj2": 0.6867892896254758}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.7520833333333333, "obj2": 0.09863981047285342}, {"determining": "( ( BR / Const ) * ( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,( DS - ( ( MUC + Max( Min( Min( MUR ,RMSe ) ,( RMSe / RMSe ) ),RCSe ) ) / ( ( CS + DS ) + ( MUR - RCSe ) ) ) ) ) / ( ( MUM + ( ( MUC * RMSe ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3625, "obj2": 0.44426216661267665}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( ( MUM * RCSe ) * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9375, "obj2": 0.026867228597571423}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS / Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS / RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3540106982649901}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( ( RCSe * MLU ),( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7375, "obj2": 0.11472990376749076}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + AMS ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * CS ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.1558726411518116}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6, "obj2": 0.21068038575101852}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + MDR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.5895833333333333, "obj2": 0.22390753485482007}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.46041666666666664, "obj2": 0.3316007325466204}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5274796996355898}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "Max( ( ( DDR + Const ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),Min( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ,Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( ( RCSe * MLU ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.2125, "obj2": 0.6684200025575238}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( FirstVNF_CPU_Server / Const ) - BR ) ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( ( ( RRSe * RRSe ) * RMSe ) ,( MUR * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1257227939936999}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,MUR ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.30625, "obj2": 0.5291826643814604}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.475, "obj2": 0.32167067693017215}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * CRS ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,CS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.9583333333333334, "obj2": 0.017769633772155895}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,AMS ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * MUR ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) / Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,RMSe ) ),RCSe ) ) / ( ( CS - DS ) + ( RRSe - MUC ) ) ) ) )", "obj1": 0.775, "obj2": 0.09414668488521251}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + AMS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( DS * ( MUR / DS ) ) * MUC ) )", "obj1": 0.65, "obj2": 0.18463898750314117}, {"determining": "( Min( BR ,Const ) * ( BR - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( RMSe + ( RMSe + ( Max( MUC,MUR ) * DS ) ) ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.008751112030899141}, {"determining": "Max( ( ( DDR + Const ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) ),Min( ( ( AMS + ( ( RRS + Const ) * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) - BR ) ,Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,Max( ( RCSe * MLU ),( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe / DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6398489488899868}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( Max( FirstVNF_CPU_Server,( Const + Const ) ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) / DS ) ) )", "obj1": 0.2, "obj2": 0.6761585374078746}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3089162849918489}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) * ( ( MUC + RCSe ) / Max( RMSe,RCSe ) ) ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.42291666666666666, "obj2": 0.3725934255397854}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( ( BR / Const ) + ( FirstVNF_CPU_Server * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) / ( ( RMSe + ( ( RMSe + ( MUR + ( Min( MUC ,CS ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.7291666666666666, "obj2": 0.12211342092504932}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( AMS + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( RCSe * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4392272364345916}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09063478184062464}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * ( MUR / CS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.3457032914836718}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * ( ARS / FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe / RRSe ) ) ) ) ) ) ) )", "obj1": 0.6604166666666667, "obj2": 0.1665218115605749}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.14362510940050216}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.14362510940050216}], "30": [{"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( ( ( Const / PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( MLU ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * ( ARS - FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - Min( ( MLU + Max( MUM,RCSe ) ) ,( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7361240745165468}, {"determining": "( Min( BR ,Const ) * ( ( ( Max( FirstVNF_CPU_Server,( ( DDR + Const ) * ( DDR + Const ) ) ) - ACS ) * FirstVNF_RAM_Server ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( RMSe + Min( RMSe ,Max( DS,DS ) ) ) )", "obj1": 0.275, "obj2": 0.6091370589483378}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + MDR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( ( ( RCSe + RRSe ) + MUR ),MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( MUR * RRSe ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27165699491578554}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR - Const ) * Min( RRS ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( Min( CS ,RRSe ) - ( MUR - ( ( Min( RMSe ,RCSe ) + Min( RMSe ,RCSe ) ) / ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.2318712304711854}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( RMSe / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6388542442447193}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.5145833333333333, "obj2": 0.3088812142776802}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,MUR ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.30625, "obj2": 0.5291826643814604}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( Max( ( ( Const + FirstVNF_RAM_Server ) * Const ),PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( MUC + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS / DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.53125, "obj2": 0.28593435238024745}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * ( MUR / CS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6145833333333334, "obj2": 0.2003735472471395}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( FirstVNF_CPU / AMS ) / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.9083333333333333, "obj2": 0.04308303883891614}, {"determining": "( ( ACS / PN ) * ( ( ( ( ( FirstVNF_CPU_Server + ( Const + FirstVNF_CPU ) ) - ARS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe + ( ( ( Min( RMSe ,MUC ) / Min( RMSe ,CS ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.3958333333333333, "obj2": 0.391051081948493}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( ( FirstVNF_RAM + Const ) + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( DS ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5659283679566416}, {"determining": "( ( ACS - PN ) * ( ( ( BR / FirstVNF_Mem_Server ) * Min( ( ( ( MDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) ,MDR ) ) - MRS ) )", "choosing": "( ( ( RCSe * RMSe ) * DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8291666666666667, "obj2": 0.0708684409963572}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + MDR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe - ( ( ( RMSe / RMSe ) + Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( CS / RMSe ) ,( MUR + MUM ) ) ),RCSe ) ) / ( ( CS - DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.64375, "obj2": 0.18907786369590734}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( PN + FirstVNF_CPU ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( RMSe ,RCSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.875, "obj2": 0.059266950058644886}, {"determining": "( ( Min( Const ,PN ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5106567114766724}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( ( MUM * RCSe ) * RCSe ) ) / ( ( CS + DS ) + ( ( DS * RRSe ) * RMSe ) ) ) ) )", "obj1": 0.9375, "obj2": 0.026702595333133156}, {"determining": "( Min( BR ,Const ) * ( BR - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( RMSe + ( RMSe + ( Max( MUC,MUR ) * DS ) ) ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.008751112030899141}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * FirstVNF_CPU_Server ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) + BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( CS + Max( MUM,RCSe ) ) / ( ( CS + DS ) / ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) / MUC ) ) ) ) )", "obj1": 0.33125, "obj2": 0.4910224650914233}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( DS ,( ( CS + RRSe ) + RMSe ) ) / ( DS - ( ( DS + ( MUM * RCSe ) ) / ( ( CS + DS ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.8916666666666667, "obj2": 0.04340418516972187}, {"determining": "( ( ACS / PN ) * ( ( ( ( Max( FirstVNF_CPU_Server,( ( DDR + Const ) * ( DDR + Const ) ) ) - ACS ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,Max( DS,DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.19375, "obj2": 0.6867892896254758}, {"determining": "Max( ( ( ( MRS - ( ( Const + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * Max( Max( ( FirstVNF_CPU - AMS ),BR ),( FirstVNF_Mem + CRS ) ) ) * ( ( ( ( ( FirstVNF_CPU / AMS ) - MDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) ),( ( ( AMS + ( ( RRS + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * Max( Min( ( FirstVNF_CPU_Server - MDR ) ,( Const * BR ) ),CRS ) ) )", "choosing": "( Max( ( Min( MLU ,RCSe ) * DS ),MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( RCSe * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.21875, "obj2": 0.6514577304750391}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.35625, "obj2": 0.4549300783301328}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3875, "obj2": 0.4184079461378685}, {"determining": "( ( ACS / PN ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( ( MUC - ( ( ( CS + ( ( CS + DS ) * RMSe ) ) + ( MUR - MUC ) ) * DS ) ) / Min( ( RRSe / ( ( ( Min( RMSe ,MUC ) / Max( RMSe,RCSe ) ) / Min( ( DS / RMSe ) ,( DS * RRSe ) ) ) * ( ( CS / CS ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) ) ) ,MUC ) )", "obj1": 0.18958333333333333, "obj2": 0.7229516242270569}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( RCSe ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.385805457846154}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * CRS ) * PN ) - MDR ) )", "choosing": "( ( RMSe * ( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * ( Min( RMSe ,RCSe ) / Max( RRSe,RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5274796996355898}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * ( MUR / CS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.44375, "obj2": 0.3457032914836718}, {"determining": "( ( BR / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( DDR + MDR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) / MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.28125, "obj2": 0.584743454877547}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS / Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * RMSe ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS / RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3540106982649901}, {"determining": "( ( ( ( ACS / PN ) * ( FirstVNF_RAM / MDR ) ) / Const ) / ( ( ( ( ( ( FirstVNF_CPU_Server / Const ) + ( ( FirstVNF_CPU_Server / Const ) - BR ) ) - ( ( FirstVNF_CPU_Server / Const ) - BR ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( Min( ( DS / RMSe ) ,( DS * RRSe ) ),MUR ) / ( ( RMSe - ( ( RMSe + Min( ( ( RRSe * RRSe ) * RMSe ) ,( MUR * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12571475312031197}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.6, "obj2": 0.21068038575101852}, {"determining": "( ( ( ( ( Const + ( ( PN + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * BR ) * FirstVNF_RAM_Server ) * PN ) * ( ( ( ( ( FirstVNF_CPU_Server / Const ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RCSe ) + MUR ) ) / ( DS - ( ( MLU + Max( ( ( Min( RMSe ,MUM ) / ( MUR - RCSe ) ) / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),RCSe ) ) / ( ( CS / DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.7916666666666666, "obj2": 0.08716830905039197}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( Max( MLU,RCSe ) * ( MUR / DS ) ) / ( ( RMSe + ( ( RMSe + ( RMSe + ( Min( MUC ,RMSe ) * DS ) ) ) * DS ) ) - ( ( ( RCSe + RRSe ) + MUR ) / DS ) ) )", "obj1": 0.85, "obj2": 0.064049357003643}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( ( ( ( Const + FirstVNF_RAM_Server ) * Const ) * ( ( ( ( Const + FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM_Server ) ) * PN ) - MDR ) ) - MDR ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * ( ( FirstVNF_CPU_Server + ( ( DDR + BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( Max( MLU,RCSe ) * ( MUR / DS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.8145833333333333, "obj2": 0.08412005728856688}, {"determining": "( ( BR / Const ) * ( ( ( ( ( ( ( Const + Const ) / AMS ) - BR ) * Const ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RMSe ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3089162849918489}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + Const ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + PN ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RCSe ) + ( ( ( DS * ( MUR / CS ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.65, "obj2": 0.18161968884765586}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS / Min( ARS ,FirstVNF_RAM_Server ) ) ) - ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * ( ( CS + RRSe ) + RMSe ) ) + DS ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS / RRSe ) + ( MUR - ( ( ( RCSe * RMSe ) * RMSe ) / MUM ) ) ) ) ) )", "obj1": 0.7354166666666667, "obj2": 0.10820930031098482}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,AMS ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * MUR ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) - BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( Max( FirstVNF_CPU_Server,( Const + Const ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * Min( RMSe ,MUM ) ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.425, "obj2": 0.36658860709026536}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ( ACS * PN ) - MDR ) ) * BR ) * ( PN + FirstVNF_CPU ) ) ) * ( ( ( ( ( ( BR / Const ) + ( FirstVNF_CPU_Server * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.7208333333333333, "obj2": 0.11572534246269722}, {"determining": "( ( BR / Const ) / ( ( ( ( ( FirstVNF_CPU_Server + ( ARS * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * ( MUR / DS ) ) * RCSe ) - MUC ) ) ) ) )", "obj1": 0.4583333333333333, "obj2": 0.3377881999254827}, {"determining": "( ( PN * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( ( DDR + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.14362510940050216}, {"determining": "( ( ( Const + PN ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,( Min( CS ,RMSe ) * DS ) ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4734488819246929}, {"determining": "( ( BR / Const ) / ( ( ( ( ( RRS + Const ) * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( ( RCSe * MLU ) / ( DS - ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - ( ( Min( RMSe ,RCSe ) / Max( MUC,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RRSe / RRSe ) ) ) ) ) ) ) )", "obj1": 0.9625, "obj2": 0.01519417868074894}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server / ( ( AMS + RRS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - DDR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Min( RMSe ,( ( CS + RRSe ) + MUR ) ) / ( MLU - ( Max( MLU,Max( MUM,RCSe ) ) / ( ( CS + DS ) + ( ( ( DS * RRSe ) * RMSe ) - MUC ) ) ) ) )", "obj1": 0.9416666666666667, "obj2": 0.02402744619494683}, {"determining": "( ( BR / Const ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + Const ) * CRS ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) * ( FirstVNF_CPU_Server - MDR ) ) * PN ) - MDR ) )", "choosing": "( Max( MUR,MUR ) / ( ( RMSe - ( ( RMSe + Min( RMSe ,CS ) ) * DS ) ) - ( MUR / DS ) ) )", "obj1": 0.9583333333333334, "obj2": 0.017769633772155895}, {"determining": "( ( ( Const + PN ) * ( ( ( FirstVNF_CPU_Server + ( ARS * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) ) * ( ( ( ( ( FirstVNF_CPU_Server + ( ( DDR + AMS ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) - BR ) * FirstVNF_RAM_Server ) * PN ) - MDR ) )", "choosing": "( Max( MUR,CS ) / ( ( RMSe + Min( ( Min( RMSe ,( MLU - ( MUM * RCSe ) ) ) * RCSe ) ,MUR ) ) - ( MUR / DS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.43886313916707226}]}