{"1": [{"determining": "Max( ( DDR - RRS ),Max( BR,ARS ) )", "choosing": "Max( ( DS + DS ),( MLU / MUC ) )", "obj1": 0.3333333333333333, "obj2": 0.5864421441667573}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( RMSe / RRSe ) + ( RRSe + MLU ) )", "obj1": 0.6270833333333333, "obj2": 0.3509471011393343}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Max( RMSe,MLU ) / ( MUC + MUM ) )", "obj1": 0.32708333333333334, "obj2": 0.6142812874738417}, {"determining": "( ( CRS / BR ) * ( ( ACS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( MLU - RRSe ) * ( RCSe + ( ( Max( MLU,Max( MLU,RRSe ) ) * Min( ( RRSe - MUC ) ,MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) + ( CRS + DDR ) )", "choosing": "( ( MUC * RRSe ) / Min( MLU ,DS ) )", "obj1": 0.26458333333333334, "obj2": 0.6869733740505921}, {"determining": "Max( Min( FirstVNF_CPU_Server ,ACS ),( FirstVNF_CPU_Server * PN ) )", "choosing": "Max( Min( MLU ,DS ),Max( RRSe,RMSe ) )", "obj1": 0.41875, "obj2": 0.5224590234543528}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( BR ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) )", "choosing": "Min( Min( CS ,DS ) ,( ( Max( RMSe,( CS + ( MUC * MUR ) ) ) * Min( MLU ,DS ) ) / ( RMSe - Max( MUC,( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "( Min( CS ,RCSe ) / ( CS + MUC ) )", "obj1": 0.3770833333333333, "obj2": 0.5471774836865361}, {"determining": "( ( ARS * PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * ( ( Min( MUR ,CS ) + Max( RCSe,Max( ( MUM + RMSe ),MLU ) ) ) * MLU ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ACS * RRS ),( FirstVNF_Mem * PN ) )", "choosing": "( Min( RMSe ,DS ) / ( MUM - Max( RRSe,MLU ) ) )", "obj1": 0.3645833333333333, "obj2": 0.5683270441890566}, {"determining": "( ( ARS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( MDR,FirstVNF_CPU_Server ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( RCSe,RRSe ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( PN + MDR ) ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,( DS * ( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ARS ) / Min( ARS ,MDR ) ) + ( Max( ( MDR + FirstVNF_Mem ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( CS * MUC ) + Min( ( MUR + ( Min( ( RRSe + ( MUC - MUC ) ) ,( MUM / ( RMSe + RMSe ) ) ) * CS ) ) ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / ( Max( ( MUC - ( MUR - RCSe ) ),Max( RCSe,DS ) ) / RRSe ) )", "obj1": 0.34791666666666665, "obj2": 0.582920549887349}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server + MDR ) ,Max( AMS,( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM / RCSe ) * RRSe ) / Max( ( ( Max( MUC,CS ) - RMSe ) * RCSe ),Min( ( DS * ( RMSe - MUR ) ) ,MLU ) ) )", "obj1": 0.3104166666666667, "obj2": 0.6344452861369629}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5715785085367914}, {"determining": "( Max( ( ACS + FirstVNF_RAM ),( DDR + DDR ) ) - ( ( MRS * BR ) - ( CRS - PN ) ) )", "choosing": "( Min( ( MLU + MUM ) ,( DS / MLU ) ) / ( Min( RMSe ,MUC ) - ( MUC - RRSe ) ) )", "obj1": 0.39375, "obj2": 0.5450575617014621}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( DDR / ( CRS - Const ) ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * ( Min( MUC ,MLU ) / MLU ) )", "obj1": 0.5, "obj2": 0.4391999989639286}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( ( AMS - ( Max( Max( AMS,RRS ),BR ) / AMS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + ( MUM - Max( ( ( ( MLU + RCSe ) - RMSe ) - ( ( ( ( RCSe + MUR ) + Max( MUC,MUR ) ) - MUC ) / RRSe ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,( RRS - PN ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM + ( CS - RCSe ) ) ,( MUR * ( MUR - ( ( ( MUC * ( CS + RRSe ) ) * ( MLU / ( MUC + RRSe ) ) ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.9291666666666667, "obj2": 0.0656738576790449}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( MUR * RMSe ) ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "Max( ( ( ( PN / AMS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Max( ACS,RRS ) ) ),( Max( Min( MRS ,Const ),( ACS + BR ) ) - Max( ( MDR + MDR ),( CRS - RRS ) ) ) )", "choosing": "( Max( RCSe,MUR ) + ( MUM * RMSe ) )", "obj1": 0.42291666666666666, "obj2": 0.5018951084190271}, {"determining": "( ( Max( Min( DDR ,ARS ),Min( AMS ,RRS ) ) + Max( ( RRS - FirstVNF_CPU ),( MDR + MRS ) ) ) * Max( Max( Max( RRS,ARS ),( RRS / ARS ) ),( ( MDR / ACS ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( DS ,MLU ) - Max( Max( CS,DS ),( ( RCSe * MUM ) + ( RRSe / MUC ) ) ) )", "obj1": 0.40625, "obj2": 0.5280438955713963}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + MDR ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( ( DDR / FirstVNF_RAM ) / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( MRS - Const ) ) ) )", "choosing": "( ( ( MUM - MUR ) * Max( MUR,MUC ) ) + ( MUR - RRSe ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "Min( ( ( Max( ACS,FirstVNF_CPU ) / MDR ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( ( ARS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) / ( Max( ARS,FirstVNF_RAM ) / Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( RMSe - Min( ( MUM / DS ) ,CS ) ) + Min( ( DS / ( RMSe - MUC ) ) ,RMSe ) ) / CS ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( MDR / DDR ),Min( Max( MRS,BR ) ,( Min( PN ,AMS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( MLU + Max( ( ( Max( MUR,MLU ) / ( MUM / CS ) ) / MUR ),( CS - RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / ( FirstVNF_RAM + PN ) ) ) )", "choosing": "Max( ( MUC / ( RCSe * MLU ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - Min( ( FirstVNF_CPU_Server * ( ARS + AMS ) ) ,ACS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( Max( ( FirstVNF_CPU / Max( ( AMS * ( MRS * RRS ) ),BR ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - Const ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( Max( MUR,( RRSe / RCSe ) ) / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,MUM ) + ( MLU - MUM ) )", "obj1": 0.3125, "obj2": 0.6291928402222066}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( DS - RRSe ) )", "obj1": 0.2875, "obj2": 0.6511940383896782}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / ( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( ( RMSe - MUM ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( ( ARS - Max( DDR,( BR - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( Max( RRSe,DS ) ,RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.27708333333333335, "obj2": 0.6621508180569373}], "2": [{"determining": "( ( CRS / BR ) * ( ( ACS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( MLU - RRSe ) * ( RCSe + ( ( Max( MLU,Max( MLU,RRSe ) ) * Min( ( RRSe - MUC ) ,MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( BR ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) )", "choosing": "Min( Min( CS ,DS ) ,( ( Max( RMSe,( CS + ( MUC * MUR ) ) ) * Min( MLU ,DS ) ) / ( RMSe - Max( MUC,( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * ( ( Min( MUR ,CS ) + Max( RCSe,Max( ( MUM + RMSe ),MLU ) ) ) * MLU ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ACS * RRS ),( FirstVNF_Mem * PN ) )", "choosing": "( Min( RMSe ,DS ) / ( MUM - Max( RRSe,MLU ) ) )", "obj1": 0.3645833333333333, "obj2": 0.5683270441890566}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( MDR,FirstVNF_CPU_Server ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( RCSe,RRSe ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( PN + MDR ) ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,( DS * ( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ARS ) / Min( ARS ,MDR ) ) + ( Max( ( MDR + FirstVNF_Mem ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( CS * MUC ) + Min( ( MUR + ( Min( ( RRSe + ( MUC - MUC ) ) ,( MUM / ( RMSe + RMSe ) ) ) * CS ) ) ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( DDR / ( CRS - Const ) ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * ( Min( MUC ,MLU ) / MLU ) )", "obj1": 0.5, "obj2": 0.4391999989639286}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( ( AMS - ( Max( Max( AMS,RRS ),BR ) / AMS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + ( MUM - Max( ( ( ( MLU + RCSe ) - RMSe ) - ( ( ( ( RCSe + MUR ) + Max( MUC,MUR ) ) - MUC ) / RRSe ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,( RRS - PN ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM + ( CS - RCSe ) ) ,( MUR * ( MUR - ( ( ( MUC * ( CS + RRSe ) ) * ( MLU / ( MUC + RRSe ) ) ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.9291666666666667, "obj2": 0.0656738576790449}, {"determining": "( ( Max( Min( DDR ,ARS ),Min( AMS ,RRS ) ) + Max( ( RRS - FirstVNF_CPU ),( MDR + MRS ) ) ) * Max( Max( Max( RRS,ARS ),( RRS / ARS ) ),( ( MDR / ACS ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( DS ,MLU ) - Max( Max( CS,DS ),( ( RCSe * MUM ) + ( RRSe / MUC ) ) ) )", "obj1": 0.40625, "obj2": 0.5280438955713963}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + MDR ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( ( DDR / FirstVNF_RAM ) / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( MRS - Const ) ) ) )", "choosing": "( ( ( MUM - MUR ) * Max( MUR,MUC ) ) + ( MUR - RRSe ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "Min( ( ( Max( ACS,FirstVNF_CPU ) / MDR ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( ( ARS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) / ( Max( ARS,FirstVNF_RAM ) / Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( RMSe - Min( ( MUM / DS ) ,CS ) ) + Min( ( DS / ( RMSe - MUC ) ) ,RMSe ) ) / CS ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( MDR / DDR ),Min( Max( MRS,BR ) ,( Min( PN ,AMS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( MLU + Max( ( ( Max( MUR,MLU ) / ( MUM / CS ) ) / MUR ),( CS - RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / ( FirstVNF_RAM + PN ) ) ) )", "choosing": "Max( ( MUC / ( RCSe * MLU ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - Min( ( FirstVNF_CPU_Server * ( ARS + AMS ) ) ,ACS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( Max( ( FirstVNF_CPU / Max( ( AMS * ( MRS * RRS ) ),BR ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - Const ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( Max( MUR,( RRSe / RCSe ) ) / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / ( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( ( RMSe - MUM ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server + MDR ) ,( BR / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * ( CRS + FirstVNF_Mem_Server ) )", "choosing": "Max( MUR,( MLU * RRSe ) )", "obj1": 0.41458333333333336, "obj2": 0.5204878309833164}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( MUC ,( DS * MUM ) )", "obj1": 0.53125, "obj2": 0.41218478877495984}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( ( ARS - Max( DDR,( BR - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( Max( RRSe,DS ) ,RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.275, "obj2": 0.6469605084119742}, {"determining": "( Max( ( BR + PN ),Max( FirstVNF_Mem_Server,DDR ) ) / Max( Const,MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( ( MUR / CS ),( RRSe * RCSe ) ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.7242720205441721}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( ( RCSe + MUC ) ,Min( RCSe ,DS ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ARS,ACS ),DDR ) ,( PN / ( RRS / Const ) ) )", "choosing": "( MUM / ( CS + Min( MUC ,( MUM * ( ( RCSe / DS ) + RRSe ) ) ) ) )", "obj1": 0.42083333333333334, "obj2": 0.5076057906221618}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( FirstVNF_CPU_Server,Const ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "( ( ( Min( ( FirstVNF_CPU / MRS ) ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( MUC / MUR ) / ( MLU + MUC ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( MDR - ARS ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,RMSe ) ) + ( CS - ( ( MUM / RRSe ) / DS ) ) ) - Max( ( Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) * RRSe ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( MRS * FirstVNF_RAM_Server ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Min( Const ,( MRS / FirstVNF_RAM ) ) )", "choosing": "Max( Min( CS ,MLU ),Max( ( MUR - ( CS + Min( Max( ( RCSe / MUC ),MLU ) ,Max( ( MUM - ( RCSe * RCSe ) ),DS ) ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS + Min( ( DDR / BR ) ,PN ) ),( ( ( FirstVNF_CPU_Server + DDR ) / ( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + ACS ) + Min( Const ,RRS ) ) ) )", "choosing": "Max( ( RRSe / MUM ),Max( Max( ( CS * RRSe ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 0.325, "obj2": 0.5879427159461252}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * Max( Min( Max( BR,FirstVNF_RAM ) ,( ACS - CRS ) ),( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( Max( MUR,MUR ) ,RMSe ) ) ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) )", "obj1": 0.275, "obj2": 0.6469605084119742}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + Max( Min( FirstVNF_CPU_Server ,ACS ),( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "Min( ( DS + RRSe ) ,Max( ( RRSe + ( Max( RMSe,RMSe ) + MUM ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + ( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ) ) * ( DDR / FirstVNF_RAM ) )", "choosing": "( ( ( DS * MUM ) * ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) ) * Max( MUC,( DS + CS ) ) )", "obj1": 0.7104166666666667, "obj2": 0.25039570899420643}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( CS + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( PN,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( RMSe ,Max( MUC,CS ) ) / DS ) / ( CS - DS ) )", "obj1": 0.93125, "obj2": 0.06463965886472649}, {"determining": "Min( ( Min( FirstVNF_Mem ,( RRS - PN ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM + ( CS - RCSe ) ) ,( MUR * ( MUR - ( ( ( MUC * ( CS + RRSe ) ) * ( MLU / ( MUC + RRSe ) ) ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.9479166666666666, "obj2": 0.049091439325556395}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( Max( RRSe,DS ) ,RMSe ) ) ) ,( MUR / MUM ) )", "obj1": 0.2875, "obj2": 0.6451665165644334}, {"determining": "( ( ( Max( Max( RRS,( CRS / Min( Min( Const ,RRS ) ,( DDR / CRS ) ) ) ),MDR ) + FirstVNF_RAM ) + ( FirstVNF_Mem - AMS ) ) * ( Const + MDR ) )", "choosing": "Max( Min( Min( ( RMSe - ( ( MUC * RCSe ) + MUC ) ) ,CS ) ,MUM ),( ( RCSe / DS ) * RRSe ) )", "obj1": 0.24583333333333332, "obj2": 0.674387749598274}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( MRS - ( ACS + BR ) ) )", "choosing": "( CS - Max( ( ( ( MUC + RCSe ) - Min( MUM ,( Max( MUC,RRSe ) / MLU ) ) ) / MUC ),Max( ( MUR - RCSe ),Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Max( Min( FirstVNF_CPU_Server ,ACS ),( FirstVNF_CPU_Server * PN ) ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + Min( MLU ,DS ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.42291666666666666, "obj2": 0.4918718349965608}, {"determining": "Max( ( AMS * MDR ),( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( MLU,MUC ) - ( DS - DS ) ) / ( CS / MLU ) )", "obj1": 0.29791666666666666, "obj2": 0.637547633405792}, {"determining": "( ( Max( Min( DDR ,ARS ),Min( AMS ,RRS ) ) + Max( ( RRS - FirstVNF_CPU ),( MDR + MRS ) ) ) * Max( Max( Max( RRS,ARS ),( RRS / ARS ) ),( ( MDR / ACS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,MLU ) - Max( Max( CS,DS ),( ( RCSe * MUM ) + ( RRSe / MUR ) ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5687705289247034}, {"determining": "( Max( ( ACS * RRS ),( FirstVNF_Mem * PN ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "Min( ( ACS - ( ( Max( ACS,MDR ) + PN ) / PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) / Const ) )", "choosing": "( Min( MUR ,Max( MUR,RMSe ) ) / ( Min( ( MUM * RCSe ) ,DS ) - ( RMSe + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) )", "obj1": 0.30625, "obj2": 0.627248208449077}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / ( ( MUC / MUR ) / ( MLU + MUC ) ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( ( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) ) ,CRS ) ) )", "choosing": "Max( Min( Min( CS ,DS ) ,( MUR / MLU ) ),( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "Min( Min( CS ,DS ) ,( Max( ( MLU * RRSe ),( DS + RRSe ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.12531557720673328}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / ( Max( ( MUC - ( MUR - ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) ) ),Max( RCSe,DS ) ) / RRSe ) )", "obj1": 0.6395833333333333, "obj2": 0.30659627230343217}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( ( ACS / ( MRS * FirstVNF_CPU ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RRSe,RMSe ) / CS ) ) )", "obj1": 0.6645833333333333, "obj2": 0.2732920289505784}, {"determining": "( DDR - ( AMS + ( FirstVNF_CPU * AMS ) ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / ( ( MUC * RRSe ) / Min( ( Min( RRSe ,( Min( MUR ,MUM ) * ( RRSe + MUC ) ) ) - RCSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - MRS ) ,Max( ( ( MRS / ( ACS * AMS ) ) - ( ACS + MDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) - ( MUC * DS ) )", "obj1": 0.24375, "obj2": 0.6803090138966704}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( ( ( MRS * BR ) - ( CRS - PN ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( Min( RMSe ,MUC ) - ( MUC - RRSe ) ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.007613486789869297}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( DS * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( ( DS - Max( DS,( ( DS - MUR ) + ( RCSe / RMSe ) ) ) ) * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.5405989746465709}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( ( Max( PN,FirstVNF_RAM ) - ACS ),ARS ) ,Max( ( FirstVNF_RAM + ACS ),BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUM,( MUC / DS ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Min( DS ,MLU ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + PN ) / ARS ) / ( ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) * Const ) )", "choosing": "( ( ( RMSe * DS ) + ( RMSe + CS ) ) - ( RCSe * ( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,Max( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( CRS - FirstVNF_CPU ) ) + ( Max( RRS,CRS ) - ( MDR * ACS ) ) ),Min( ( Min( MDR ,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,MDR ) ) ,Max( ( FirstVNF_Mem_Server + PN ),Min( FirstVNF_CPU ,Const ) ) ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( Min( CS ,MUM ) + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( CS - RMSe ) * ( CS - Min( ( CS + MUC ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUR - ( MUM / ( RCSe * RCSe ) ) ) + ( MLU + RMSe ) ) - ( RMSe - MLU ) )", "obj1": 0.9708333333333333, "obj2": 0.025543281754102126}, {"determining": "( Min( ARS ,AMS ) - ( AMS + Max( ( ( ( FirstVNF_CPU_Server + DDR ) / ( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + ACS ) + Min( Const ,RRS ) ) ),( Max( Max( Const,ACS ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( MLU * RRSe ) + ( RRSe * DS ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) + ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) ) / ( MUC + MUM ) )", "obj1": 0.6229166666666667, "obj2": 0.34346629967387726}, {"determining": "( Min( ARS ,AMS ) - ( AMS + ARS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * RCSe ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5669553842363154}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( FirstVNF_RAM + ACS ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.32083333333333336, "obj2": 0.6015740541811583}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * Max( RRS,DDR ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( MUM + RMSe ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.4409973342274053}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5711853199464417}, {"determining": "Min( ( ACS - ( ( Max( ACS,MDR ) + PN ) / PN ) ) ,( MRS * RRS ) )", "choosing": "( Min( MUR ,Max( MUR,RMSe ) ) / ( Max( RCSe,RRSe ) / ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) / ( MRS * Min( ( ACS - ( ( Max( ACS,MDR ) + PN ) / PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) / Const ) ) ) )", "choosing": "( Max( RCSe,( Min( ( MUM * ( CS * ( CS - ( RCSe - MLU ) ) ) ) ,DS ) - ( RMSe + ( MUM + RCSe ) ) ) ) / ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( Min( Min( ARS ,MRS ) ,( FirstVNF_CPU_Server * MRS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / Max( ( MLU + RMSe ),Max( MUR,MUC ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * RMSe ) ) + ( ( RCSe / RRSe ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.7208333333333333, "obj2": 0.23116307951800769}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.38958333333333334, "obj2": 0.5389245251200057}, {"determining": "( ( BR + FirstVNF_CPU_Server ) * ( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) / FirstVNF_CPU ) * AMS ) )", "choosing": "( ( CS * DS ) + ( ( MUC + ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) ) + ( MUR - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( BR / CRS ) )", "choosing": "( ( ( RCSe / MUC ) * ( DS / RMSe ) ) + ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( Max( ( RCSe * RCSe ),( MUR - CS ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,BR )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( ( CS / RRSe ) / RMSe ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.2686035875714677}, {"determining": "( Min( ARS ,AMS ) - ( AMS + Max( ( CRS - FirstVNF_RAM_Server ),( ( FirstVNF_Mem + CRS ) * Const ) ) ) )", "choosing": "( ( Min( MUC ,MUM ) / ( Max( ( MUR + RCSe ),( ( RRSe / MUR ) / RCSe ) ) - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( RRSe / MUC ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.36663022694728914}, {"determining": "( ( Min( RRS ,( DDR + ( AMS * ( Min( FirstVNF_CPU_Server ,Min( BR ,MRS ) ) + AMS ) ) ) ) - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "Min( Min( ( Min( MUC ,CS ) / RCSe ) ,DS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( Min( DDR ,DDR ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( ( RCSe - Max( MUR,MUM ) ),RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / BR ) * ( ( ACS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( MLU - RRSe ) * ( RCSe + ( ( Max( MLU,Max( MLU,RRSe ) ) * Min( ( RRSe - MUC ) ,MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) )", "obj1": 0.22083333333333333, "obj2": 0.7212696032897995}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ACS ) ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( MUC + RRSe ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06126484351397196}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) )", "choosing": "( ( MUR * DS ) - ( ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) - MLU ) )", "obj1": 0.7833333333333333, "obj2": 0.0963954796548212}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * RMSe ) ) + ( ( RCSe / RRSe ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.7208333333333333, "obj2": 0.23116307951800769}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.12531557720673328}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3849237902585424}, {"determining": "Min( Min( ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ,( FirstVNF_RAM * MDR ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( ( MLU + ( DS / Min( MUC ,MUM ) ) ) / MLU ) ),( CS + MUC ) )", "obj1": 0.26875, "obj2": 0.6249095077392974}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.36663022694728914}, {"determining": "( ( ( MDR / ARS ) / Min( ARS ,MDR ) ) + ( Max( ( MDR + FirstVNF_Mem ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( CS * MUC ) + Min( ( MUR + ( Min( ( RRSe + ( MUC - MUC ) ) ,( MUM / ( RMSe + RMSe ) ) ) * CS ) ) ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( ACS + MRS ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( Min( CS ,DS ) ,RCSe ),( MLU * CS ) ) / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( RMSe / RCSe ) ,( MLU + MUR ) ) ) ) - ( ( CS - MUR ) * Max( ( MUM * MLU ),( MLU + DS ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5794414774952182}, {"determining": "( ( ( Max( Max( RRS,( CRS / Min( Min( Const ,RRS ) ,( DDR / CRS ) ) ) ),MDR ) + FirstVNF_RAM ) + ( FirstVNF_Mem - AMS ) ) * ( Const + MDR ) )", "choosing": "Max( Min( Min( ( RMSe - ( ( MUC * RCSe ) + MUC ) ) ,CS ) ,MUM ),( ( RCSe / DS ) * RRSe ) )", "obj1": 0.24583333333333332, "obj2": 0.674387749598274}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - MUR ) + MUC ) ,MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.6191684481445595}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * Max( RRS,DDR ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( MUM + RMSe ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.4409973342274053}, {"determining": "( Min( ARS ,AMS ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( RMSe - MLU ) + ( RCSe / CS ) )", "obj1": 0.59375, "obj2": 0.36194955520618877}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,ARS )", "choosing": "( ( Min( RMSe ,Max( MUC,CS ) ) / DS ) / Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) ) )", "obj1": 0.47708333333333336, "obj2": 0.45142526652631804}, {"determining": "Min( ( FirstVNF_Mem * Const ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * Max( ( Max( PN,FirstVNF_RAM ) - ACS ),ARS ) ) ) )", "choosing": "( Min( ( MUM + ( CS - RCSe ) ) ,( MUR * ( MUR - ( ( ( MUC * ( CS + RRSe ) ) * Max( RRSe,RRSe ) ) / MLU ) ) ) ) / ( CS - DS ) )", "obj1": 0.9395833333333333, "obj2": 0.05846436487113279}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5048403003725062}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / ( Max( ( MUC - ( MUR - ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) ) ),Max( RCSe,DS ) ) / RRSe ) )", "obj1": 0.6395833333333333, "obj2": 0.30659627230343217}, {"determining": "( Max( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( CRS - FirstVNF_CPU ) ) + ( Max( RRS,CRS ) - ( MDR * ACS ) ) ),Min( ( Min( MDR ,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,MDR ) ) ,Max( ( FirstVNF_Mem_Server + PN ),Min( FirstVNF_CPU ,Const ) ) ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( ( DS - Max( DS,RMSe ) ) * ( ( Min( CS ,MUM ) + RRSe ) / MUC ) ) - Max( ( Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) * RRSe ),Min( MUM ,CS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5676564526956179}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( AMS * ( Min( FirstVNF_CPU_Server ,Min( BR ,MRS ) ) + AMS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),MUC )", "obj1": 0.3645833333333333, "obj2": 0.5392007513065127}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( ( DDR / FirstVNF_RAM ) / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( MRS - Const ) ) ) )", "choosing": "( ( ( MUM - MUR ) * Max( MUR,MUC ) ) + ( MUR - RRSe ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4868710762706478}, {"determining": "Min( ( Min( FirstVNF_Mem ,( RRS - PN ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM + ( CS - RCSe ) ) ,( MUR * ( MUR - ( ( ( MUC * ( CS + RRSe ) ) * ( MLU / ( MUC + RRSe ) ) ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.9479166666666666, "obj2": 0.049091439325556395}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) + ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) ) / ( MUC + MUM ) )", "obj1": 0.6229166666666667, "obj2": 0.34346629967387726}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * RMSe ) ) + RMSe )", "obj1": 0.7, "obj2": 0.24460171091689306}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / PN ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( ( AMS - ( Max( FirstVNF_RAM,BR ) / AMS ) ) - AMS ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( RCSe + MUR ) + MUC ) - MUC ) / RRSe ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.6375, "obj2": 0.3416947467039042}, {"determining": "Max( ( AMS * MDR ),( ARS - MRS ) )", "choosing": "( ( Max( MLU,MUC ) - ( DS - DS ) ) / ( CS / Min( ( RMSe / MUC ) ,( DS + MUR ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5383046714715409}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUR - ( MUM / ( RCSe * RCSe ) ) ) + ( MLU + RMSe ) ) - ( RMSe - MLU ) )", "obj1": 0.9708333333333333, "obj2": 0.025543281754102126}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( MDR - ACS ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( Max( RRSe,Max( DS,MLU ) ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6875, "obj2": 0.25616719573200913}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( Const,( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - Min( ACS ,BR ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( ( DS + DS ) * RMSe ) ) + ( ( RRSe / MUC ) - ( DS + RRSe ) ) )", "obj1": 0.6541666666666667, "obj2": 0.2920144449039839}, {"determining": "Min( ( FirstVNF_CPU_Server - MRS ) ,Max( ( ( MRS / ( ACS * AMS ) ) - ( ACS + MDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) - ( MUC * DS ) )", "obj1": 0.24375, "obj2": 0.6803090138966704}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Min( RRS ,BR ) + FirstVNF_Mem_Server ),Min( Max( MRS,( FirstVNF_Mem_Server / MDR ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * RCSe ) / ( ( RCSe * CS ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) )", "obj1": 0.5625, "obj2": 0.36254329739313457}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.007169930460764901}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.38958333333333334, "obj2": 0.5389245251200057}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,Max( Min( ARS ,ARS ),MDR ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),( Min( MUR ,( ( Min( ( MUM + ( MUC - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.325, "obj2": 0.5722814180884382}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * ( MRS - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10290940774556977}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5711853199464417}, {"determining": "Min( ( ( Max( ( ( Min( MDR ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) / ACS ),FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( BR,CRS ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - Max( MUC,( MUR - Max( CS,Max( MUR,RRSe ) ) ) ) ) ) / ( Max( RMSe,MUC ) + ( MUC - RMSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( RMSe / CS ) - MLU ) ) )", "obj1": 0.6583333333333333, "obj2": 0.28114447032062573}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( ( ACS / ( MRS * FirstVNF_CPU ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RRSe,RMSe ) / CS ) ) )", "obj1": 0.6645833333333333, "obj2": 0.2732920289505784}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,BR )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( ( CS / RRSe ) / RMSe ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.2686035875714677}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Const + ( AMS / ( ARS * ( FirstVNF_CPU - DDR ) ) ) ) + ( ( BR * FirstVNF_CPU ) / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( CS * CS ) ) * MUR ) * ( ( MUR * MUR ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.9791666666666666, "obj2": 0.01805005958283629}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( MDR / DDR ),Min( Max( MRS,BR ) ,( Min( PN ,AMS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( MLU + Max( ( ( Max( MUR,MLU ) / ( MUM / CS ) ) / MUR ),( CS - RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( CRS / ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUR - ( MUM / ( RCSe * Min( DS ,CS ) ) ) ) + ( MLU + RMSe ) ) - ( RMSe - MLU ) )", "obj1": 0.975, "obj2": 0.021879858330834036}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * ( ( MUR - ( MUM / ( RCSe * RCSe ) ) ) + ( MLU + RMSe ) ) )", "obj1": 0.9729166666666667, "obj2": 0.024816203414006227}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( BR ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) )", "choosing": "Min( Min( CS ,DS ) ,( ( Max( RMSe,( CS + ( MUC * MUR ) ) ) * Min( MLU ,DS ) ) / ( RMSe - Max( MUC,( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * ( ( Min( MUR ,CS ) + Max( RCSe,Max( ( MUM + RMSe ),MLU ) ) ) * MLU ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( MDR,FirstVNF_CPU_Server ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( RCSe,RRSe ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( PN + MDR ) ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,( DS * ( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( ( AMS - ( Max( Max( AMS,RRS ),BR ) / AMS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + ( MUM - Max( ( ( ( MLU + RCSe ) - RMSe ) - ( ( ( ( RCSe + MUR ) + Max( MUC,MUR ) ) - MUC ) / RRSe ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + MDR ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,FirstVNF_CPU ) / MDR ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( ( ARS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) / ( Max( ARS,FirstVNF_RAM ) / Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( RMSe - Min( ( MUM / DS ) ,CS ) ) + Min( ( DS / ( RMSe - MUC ) ) ,RMSe ) ) / CS ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / ( FirstVNF_RAM + PN ) ) ) )", "choosing": "Max( ( MUC / ( RCSe * MLU ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - Min( ( FirstVNF_CPU_Server * ( ARS + AMS ) ) ,ACS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( Max( ( FirstVNF_CPU / Max( ( AMS * ( MRS * RRS ) ),BR ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - Const ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( Max( MUR,( RRSe / RCSe ) ) / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / ( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( ( RMSe - MUM ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( ( RCSe + MUC ) ,Min( RCSe ,DS ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( FirstVNF_CPU_Server,Const ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_CPU / MRS ) ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( MUC / MUR ) / ( MLU + MUC ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( MDR - ARS ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,RMSe ) ) + ( CS - ( ( MUM / RRSe ) / DS ) ) ) - Max( ( Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) * RRSe ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( MRS * FirstVNF_RAM_Server ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Min( Const ,( MRS / FirstVNF_RAM ) ) )", "choosing": "Max( Min( CS ,MLU ),Max( ( MUR - ( CS + Min( Max( ( RCSe / MUC ),MLU ) ,Max( ( MUM - ( RCSe * RCSe ) ),DS ) ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + Max( Min( FirstVNF_CPU_Server ,ACS ),( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "Min( ( DS + RRSe ) ,Max( ( RRSe + ( Max( RMSe,RMSe ) + MUM ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( CS + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( MRS - ( ACS + BR ) ) )", "choosing": "( CS - Max( ( ( ( MUC + RCSe ) - Min( MUM ,( Max( MUC,RRSe ) / MLU ) ) ) / MUC ),Max( ( MUR - RCSe ),Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( FirstVNF_Mem * PN ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - ( ( Max( ACS,MDR ) + PN ) / PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) / Const ) )", "choosing": "( Min( MUR ,Max( MUR,RMSe ) ) / ( Min( ( MUM * RCSe ) ,DS ) - ( RMSe + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / ( ( MUC / MUR ) / ( MLU + MUC ) ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( ( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) ) ,CRS ) ) )", "choosing": "Max( Min( Min( CS ,DS ) ,( MUR / MLU ) ),( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "Min( Min( CS ,DS ) ,( Max( ( MLU * RRSe ),( DS + RRSe ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( AMS + ( FirstVNF_CPU * AMS ) ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / ( ( MUC * RRSe ) / Min( ( Min( RRSe ,( Min( MUR ,MUM ) * ( RRSe + MUC ) ) ) - RCSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( DS * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( ( DS - Max( DS,( ( DS - MUR ) + ( RCSe / RMSe ) ) ) ) * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( ( Max( PN,FirstVNF_RAM ) - ACS ),ARS ) ,Max( ( FirstVNF_RAM + ACS ),BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUM,( MUC / DS ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Min( DS ,MLU ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + PN ) / ARS ) / ( ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) * Const ) )", "choosing": "( ( ( RMSe * DS ) + ( RMSe + CS ) ) - ( RCSe * ( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,Max( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( CRS - FirstVNF_CPU ) ) + ( Max( RRS,CRS ) - ( MDR * ACS ) ) ),Min( ( Min( MDR ,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,MDR ) ) ,Max( ( FirstVNF_Mem_Server + PN ),Min( FirstVNF_CPU ,Const ) ) ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( Min( CS ,MUM ) + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( CS - RMSe ) * ( CS - Min( ( CS + MUC ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + Max( ( ( ( FirstVNF_CPU_Server + DDR ) / ( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + ACS ) + Min( Const ,RRS ) ) ),( Max( Max( Const,ACS ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( MLU * RRSe ) + ( RRSe * DS ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + ARS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - ( ( Max( ACS,MDR ) + PN ) / PN ) ) ,( MRS * RRS ) )", "choosing": "( Min( MUR ,Max( MUR,RMSe ) ) / ( Max( RCSe,RRSe ) / ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) / ( MRS * Min( ( ACS - ( ( Max( ACS,MDR ) + PN ) / PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) / Const ) ) ) )", "choosing": "( Max( RCSe,( Min( ( MUM * ( CS * ( CS - ( RCSe - MLU ) ) ) ) ,DS ) - ( RMSe + ( MUM + RCSe ) ) ) ) / ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( Min( Min( ARS ,MRS ) ,( FirstVNF_CPU_Server * MRS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / Max( ( MLU + RMSe ),Max( MUR,MUC ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) * ( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) / FirstVNF_CPU ) * AMS ) )", "choosing": "( ( CS * DS ) + ( ( MUC + ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) ) + ( MUR - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( BR / CRS ) )", "choosing": "( ( ( RCSe / MUC ) * ( DS / RMSe ) ) + ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( Max( ( RCSe * RCSe ),( MUR - CS ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + Max( ( CRS - FirstVNF_RAM_Server ),( ( FirstVNF_Mem + CRS ) * Const ) ) ) )", "choosing": "( ( Min( MUC ,MUM ) / ( Max( ( MUR + RCSe ),( ( RRSe / MUR ) / RCSe ) ) - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( RRSe / MUC ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,( ( ( ( Min( ( PN + MRS ) ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) * ( ( RCSe + RRSe ) / ( Min( DS ,( Min( CS ,RRSe ) / MUC ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( ( RCSe - Max( MUR,MUM ) ),RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) )", "obj1": 0.22083333333333333, "obj2": 0.7212696032897995}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) )", "choosing": "( ( MUR * DS ) - ( ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) - MLU ) )", "obj1": 0.7833333333333333, "obj2": 0.0963954796548212}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3849237902585424}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ACS ) ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( MUC + RRSe ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06126484351397196}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.56875, "obj2": 0.32005559174405196}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( DS * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + MUM )", "obj1": 0.7041666666666667, "obj2": 0.2406492159172399}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,( MDR + FirstVNF_Mem ) ) ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RCSe,MLU ) ,( Max( MUC,( ( MUM - Max( RRSe,Min( DS ,DS ) ) ) + MUR ) ) / CS ) ) / ( Max( ( MUC - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ),Max( RCSe,DS ) ) / RRSe ) )", "obj1": 0.6395833333333333, "obj2": 0.3029885824588206}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * Max( RRS,DDR ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( MUM + RMSe ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.4409973342274053}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( Max( ( RMSe * MUR ),( CS - MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.5520833333333334, "obj2": 0.37324666832155345}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - MUR ) + MUC ) ,MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.6191684481445595}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( ACS + MRS ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( Min( CS ,DS ) ,RCSe ),( MLU * CS ) ) / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( RMSe / RCSe ) ,( MLU + MUR ) ) ) ) - ( ( CS - MUR ) * Max( ( MUM * MLU ),( MLU + DS ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5794414774952182}, {"determining": "Min( ( FirstVNF_CPU_Server * AMS ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + ( ( FirstVNF_RAM_Server * RRS ) / AMS ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( DS / RRSe ) ) + ( RCSe * MUR ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5456704688853754}, {"determining": "( ( ( Max( Max( RRS,( CRS / Min( Min( Const ,RRS ) ,( DDR / CRS ) ) ) ),MDR ) + FirstVNF_RAM ) + ( FirstVNF_Mem - AMS ) ) * ( Const + MDR ) )", "choosing": "Max( Min( Min( ( RMSe - ( ( MUC * RCSe ) + MUC ) ) ,CS ) ,MUM ),( ( RCSe / DS ) * RRSe ) )", "obj1": 0.24583333333333332, "obj2": 0.674387749598274}, {"determining": "( ( ( Min( ARS ,AMS ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ( FirstVNF_CPU_Server - AMS ) + Const ) * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( ( ( ( MUC - MUC ) - MUC ) - MLU ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + ( Min( Max( RRSe,( MLU - DS ) ) ,RRSe ) + ( RCSe / CS ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.05317588608022745}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.38958333333333334, "obj2": 0.5389245251200057}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Min( RRS ,BR ) + FirstVNF_Mem_Server ),Min( Max( MRS,( FirstVNF_Mem_Server / MDR ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * RCSe ) / ( ( RCSe * CS ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) )", "obj1": 0.5625, "obj2": 0.36254329739313457}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * ( MRS - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10290940774556977}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( AMS * ( Min( FirstVNF_CPU_Server ,Min( BR ,MRS ) ) + AMS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),MUC )", "obj1": 0.3645833333333333, "obj2": 0.5392007513065127}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 0.39375, "obj2": 0.5074637666124856}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Const + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( ( MLU + MUC ) * CS ) ) * MUR ) * ( Min( MUC ,MLU ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.9604166666666667, "obj2": 0.0343401695260321}, {"determining": "( ( ( ( MDR / ARS ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - PN ) ) )", "choosing": "( ( Min( Min( Max( RRSe,MUM ) ,( MLU / MUM ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + Max( ( DS - ( MUC * RCSe ) ),MUC ) )", "obj1": 0.44166666666666665, "obj2": 0.4550678342519501}, {"determining": "Min( ( FirstVNF_CPU_Server - MRS ) ,Max( ( ( MRS / ( ACS * AMS ) ) - ( ACS + MDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) - ( MUC * DS ) )", "obj1": 0.24375, "obj2": 0.6803090138966704}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5711853199464417}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MUR * ( MUR - ( ( ( MUC * ( CS + RRSe ) ) * ( MLU / ( MUC + RRSe ) ) ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.94375, "obj2": 0.05309821659642642}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( ( DDR / FirstVNF_RAM ) / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( MRS - Const ) ) ) )", "choosing": "( ( ( MUM - MUR ) * Max( MUR,MUC ) ) + ( MUR - RRSe ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( Const,( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - Min( ACS ,BR ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( ( DS + DS ) * RMSe ) ) + ( ( RRSe / MUC ) - ( DS + RRSe ) ) )", "obj1": 0.6541666666666667, "obj2": 0.2920144449039839}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5048403003725062}, {"determining": "Min( Min( ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ,( FirstVNF_RAM * MDR ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( ( MLU + ( DS / Min( MUC ,MUM ) ) ) / MLU ) ),( CS + MUC ) )", "obj1": 0.26875, "obj2": 0.6249095077392974}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * ( MRS - FirstVNF_Mem ) ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.75625, "obj2": 0.09823029962087375}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ARS - PN ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM + ( CS - RCSe ) ) ,( MUR * ( MUR - ( ( RMSe - MLU ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.9458333333333333, "obj2": 0.04786358846323328}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) + ( ACS - ( Min( BR ,ACS ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - RRSe ) ) ) * MLU ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.48870184326750565}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ACS ) ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( MUC + RRSe ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05974630914577588}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4847904213708252}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( ( DDR / FirstVNF_RAM ) / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( MRS - Const ) ) ) )", "choosing": "( ( ( MUM - MUR ) * Max( MUR,MUC ) ) + ( MUR - RRSe ) )", "obj1": 0.23541666666666666, "obj2": 0.7121738864759349}, {"determining": "( FirstVNF_Mem + ( ( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe / MUC ) ) ),( MLU * CS ) ) )", "obj1": 0.43333333333333335, "obj2": 0.47467623620470234}, {"determining": "Min( ( ( Max( ( ( Min( MDR ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) / ACS ),FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( BR,CRS ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - Max( MUC,( MUR - Max( CS,Max( MUR,RRSe ) ) ) ) ) ) / ( Max( RMSe,MUC ) + ( MUC - RMSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( RMSe / CS ) - MLU ) ) )", "obj1": 0.6583333333333333, "obj2": 0.28114447032062573}, {"determining": "( ( ( MDR / ARS ) / Min( ARS ,MDR ) ) + ( Max( ( MDR + FirstVNF_Mem ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( CS * MUC ) + Min( ( MUR + ( Min( ( RRSe + ( MUC - MUC ) ) ,( MUM / ( RMSe + RMSe ) ) ) * CS ) ) ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( ( ACS / ( MRS * FirstVNF_CPU ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RRSe,RMSe ) / CS ) ) )", "obj1": 0.6645833333333333, "obj2": 0.2732920289505784}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.3125, "obj2": 0.5749981421265641}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ACS + MRS ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * Max( CS,Min( MUM ,MUM ) ) ) ) + RMSe )", "obj1": 0.69375, "obj2": 0.25244050447168}, {"determining": "( ( ( Min( Const ,( FirstVNF_CPU_Server / ARS ) ) - ( MDR + MRS ) ) / ( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) - ( DDR - MRS ) ) * CRS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( FirstVNF_RAM / ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Const ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - Min( ( DS / ( MLU / CS ) ) ,CS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.0058569316991067145}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * RMSe ) ) + RMSe )", "obj1": 0.7, "obj2": 0.24460171091689306}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUR - ( MUM / ( RCSe * RCSe ) ) ) + ( MLU + RMSe ) ) - ( RMSe - MLU ) )", "obj1": 0.9708333333333333, "obj2": 0.025543281754102126}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.36663022694728914}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Const - FirstVNF_CPU ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( RCSe + RRSe ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.26237651811890816}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,Max( Min( ARS ,ARS ),MDR ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),( Min( MUR ,( ( Min( ( MUM + ( MUC - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.325, "obj2": 0.5722814180884382}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( MDR / DDR ),Min( Max( MRS,BR ) ,( Min( PN ,AMS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( MLU + Max( ( ( Max( MUR,MLU ) / ( MUM / CS ) ) / MUR ),( CS - RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( MDR - ACS ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( Max( RRSe,Max( DS,MLU ) ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6875, "obj2": 0.25616719573200913}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Const + ( AMS / ( ARS * ( FirstVNF_CPU - DDR ) ) ) ) + ( ( BR * FirstVNF_CPU ) / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( CS * CS ) ) * MUR ) * ( ( MUR * MUR ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.9791666666666666, "obj2": 0.01805005958283629}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,BR )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( ( CS / RRSe ) / RMSe ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.2686035875714677}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( ( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.98125, "obj2": 0.010313527396432896}, {"determining": "( CRS / ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUR - ( MUM / ( RCSe * Min( DS ,CS ) ) ) ) + ( MLU + RMSe ) ) - ( RMSe - MLU ) )", "obj1": 0.975, "obj2": 0.021879858330834036}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.007169930460764901}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * ( ( MUR - ( MUM / ( RCSe * RCSe ) ) ) + ( MLU + RMSe ) ) )", "obj1": 0.9729166666666667, "obj2": 0.024816203414006227}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - Max( RRSe,RRSe ) ) ) - ( Min( RRSe ,MUM ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10197467959095262}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "( ( CRS / BR ) * ( ( ACS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( MLU - RRSe ) * ( RCSe + ( ( Max( MLU,Max( MLU,RRSe ) ) * Min( ( RRSe - MUC ) ,MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( BR ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) )", "choosing": "Min( Min( CS ,DS ) ,( ( Max( RMSe,( CS + ( MUC * MUR ) ) ) * Min( MLU ,DS ) ) / ( RMSe - Max( MUC,( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * ( ( Min( MUR ,CS ) + Max( RCSe,Max( ( MUM + RMSe ),MLU ) ) ) * MLU ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( MDR,FirstVNF_CPU_Server ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( RCSe,RRSe ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( PN + MDR ) ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,( DS * ( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( ( AMS - ( Max( Max( AMS,RRS ),BR ) / AMS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + ( MUM - Max( ( ( ( MLU + RCSe ) - RMSe ) - ( ( ( ( RCSe + MUR ) + Max( MUC,MUR ) ) - MUC ) / RRSe ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + MDR ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,FirstVNF_CPU ) / MDR ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( ( ARS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) / ( Max( ARS,FirstVNF_RAM ) / Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( RMSe - Min( ( MUM / DS ) ,CS ) ) + Min( ( DS / ( RMSe - MUC ) ) ,RMSe ) ) / CS ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / ( FirstVNF_RAM + PN ) ) ) )", "choosing": "Max( ( MUC / ( RCSe * MLU ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - Min( ( FirstVNF_CPU_Server * ( ARS + AMS ) ) ,ACS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( Max( ( FirstVNF_CPU / Max( ( AMS * ( MRS * RRS ) ),BR ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - Const ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( Max( MUR,( RRSe / RCSe ) ) / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / ( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( ( RMSe - MUM ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( ( RCSe + MUC ) ,Min( RCSe ,DS ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( FirstVNF_CPU_Server,Const ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_CPU / MRS ) ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( MUC / MUR ) / ( MLU + MUC ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( MDR - ARS ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,RMSe ) ) + ( CS - ( ( MUM / RRSe ) / DS ) ) ) - Max( ( Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) * RRSe ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( MRS * FirstVNF_RAM_Server ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Min( Const ,( MRS / FirstVNF_RAM ) ) )", "choosing": "Max( Min( CS ,MLU ),Max( ( MUR - ( CS + Min( Max( ( RCSe / MUC ),MLU ) ,Max( ( MUM - ( RCSe * RCSe ) ),DS ) ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + Max( Min( FirstVNF_CPU_Server ,ACS ),( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "Min( ( DS + RRSe ) ,Max( ( RRSe + ( Max( RMSe,RMSe ) + MUM ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( CS + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( MRS - ( ACS + BR ) ) )", "choosing": "( CS - Max( ( ( ( MUC + RCSe ) - Min( MUM ,( Max( MUC,RRSe ) / MLU ) ) ) / MUC ),Max( ( MUR - RCSe ),Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( FirstVNF_Mem * PN ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - ( ( Max( ACS,MDR ) + PN ) / PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) / Const ) )", "choosing": "( Min( MUR ,Max( MUR,RMSe ) ) / ( Min( ( MUM * RCSe ) ,DS ) - ( RMSe + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / ( ( MUC / MUR ) / ( MLU + MUC ) ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( ( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) ) ,CRS ) ) )", "choosing": "Max( Min( Min( CS ,DS ) ,( MUR / MLU ) ),( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "Min( Min( CS ,DS ) ,( Max( ( MLU * RRSe ),( DS + RRSe ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( AMS + ( FirstVNF_CPU * AMS ) ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / ( ( MUC * RRSe ) / Min( ( Min( RRSe ,( Min( MUR ,MUM ) * ( RRSe + MUC ) ) ) - RCSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( DS * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,( ( ( ( Min( ( PN + MRS ) ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) * ( ( RCSe + RRSe ) / ( Min( DS ,( Min( CS ,RRSe ) / MUC ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( DS * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + MUM )", "obj1": 0.7041666666666667, "obj2": 0.2406492159172399}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( MRS - FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RMSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.70625, "obj2": 0.12316889186385717}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server + ACS ) + AMS ) )", "choosing": "( ( MUR * DS ) - ( ( ( MUR * DS ) + MUM ) - Min( DS ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08674034759488777}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.56875, "obj2": 0.32005559174405196}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( ( FirstVNF_RAM_Server - Const ) * DDR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - ( MUR / RCSe ) ) + ( Min( DS ,Max( Max( Max( MUR,RCSe ),Min( Max( RMSe,CS ) ,( MUR - MUM ) ) ),RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( ( MUM / ( RCSe * Min( DS ,CS ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + Min( Min( ( MUM * MLU ) ,( Max( ( Min( MUM ,RRSe ) + MUC ),RRSe ) * Max( MUR,MUM ) ) ) ,( RRSe + RRSe ) ) ) )", "obj1": 0.475, "obj2": 0.38614253956015715}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3849237902585424}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( Max( ( RMSe * MUR ),( CS - MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.5520833333333334, "obj2": 0.37324666832155345}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( MDR / DDR ),Min( Max( MRS,BR ) ,( Min( PN ,AMS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( MLU + Max( ( ( Max( MUR,MLU ) / ( MUM / CS ) ) / MUR ),( CS - RCSe ) ) ) )", "obj1": 0.625, "obj2": 0.3158870090702144}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - MUR ) + MUC ) ,MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.6191684481445595}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( ACS + MRS ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( Min( CS ,DS ) ,RCSe ),( MLU * CS ) ) / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( RMSe / RCSe ) ,( MLU + MUR ) ) ) ) - ( ( CS - MUR ) * Max( ( MUM * MLU ),( MLU + DS ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5794414774952182}, {"determining": "Min( ( FirstVNF_CPU_Server * AMS ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + ( ( FirstVNF_RAM_Server * RRS ) / AMS ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( DS / RRSe ) ) + ( RCSe * MUR ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5456704688853754}, {"determining": "( ( ( Max( Max( RRS,( CRS / Min( Min( Const ,RRS ) ,( DDR / CRS ) ) ) ),MDR ) + FirstVNF_RAM ) + ( FirstVNF_Mem - AMS ) ) * ( Const + MDR ) )", "choosing": "Max( Min( Min( ( RMSe - ( ( MUC * RCSe ) + MUC ) ) ,CS ) ,MUM ),( ( RCSe / DS ) * RRSe ) )", "obj1": 0.24583333333333332, "obj2": 0.674387749598274}, {"determining": "( ( ( Min( ARS ,AMS ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ( FirstVNF_CPU_Server - AMS ) + Const ) * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( ( ( ( MUC - MUC ) - MUC ) - MLU ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + ( Min( Max( RRSe,( MLU - DS ) ) ,RRSe ) + ( RCSe / CS ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.05317588608022745}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( AMS * ( Min( FirstVNF_CPU_Server ,Min( BR ,MRS ) ) + AMS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),MUC )", "obj1": 0.3645833333333333, "obj2": 0.5392007513065127}, {"determining": "Min( Min( ( RRS * Const ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * MDR ) ) ,PN )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),( Min( ( DS - Max( ( RMSe - DS ),( Max( RMSe,RRSe ) + MUR ) ) ) ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.3770833333333333, "obj2": 0.5212509158456783}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) )", "choosing": "( ( MUR * DS ) - ( ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) - MLU ) )", "obj1": 0.7833333333333333, "obj2": 0.0963954796548212}, {"determining": "Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ),( MUR - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( FirstVNF_Mem / ACS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7125, "obj2": 0.12065141457472828}, {"determining": "Min( ( ARS / AMS ) ,Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( Min( PN ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( MUR ,( MUR / MUM ) ) / ( DS / Max( ( MUC / MUC ),( MLU * MUM ) ) ) ),( CS + MUC ) )", "obj1": 0.5645833333333333, "obj2": 0.3578569635715304}, {"determining": "( ( ( ( FirstVNF_Mem * AMS ) - CRS ) - ACS ) * ( ( FirstVNF_RAM * PN ) - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( Min( RCSe ,MUM ) - Max( ( RMSe / RRSe ),Max( Max( CS,MUR ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10381093238531752}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 0.39375, "obj2": 0.5074637666124856}, {"determining": "( ( ( ( MDR / ARS ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - PN ) ) )", "choosing": "( ( Min( Min( Max( RRSe,MUM ) ,( MLU / MUM ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + Max( ( DS - ( MUC * RCSe ) ),MUC ) )", "obj1": 0.44166666666666665, "obj2": 0.4550678342519501}, {"determining": "Min( ( FirstVNF_CPU_Server - MRS ) ,Max( ( ( MRS / ( ACS * AMS ) ) - ( ACS + MDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) - ( MUC * DS ) )", "obj1": 0.24375, "obj2": 0.6803090138966704}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * Min( ACS ,MRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( RCSe + Max( MUC,Max( RCSe,( ( DS - DS ) - ( CS - RMSe ) ) ) ) ),MLU ) * MUR ) * RCSe )", "obj1": 0.9541666666666667, "obj2": 0.023095088338030936}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5711853199464417}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MUR * ( MUR - ( ( ( MUC * ( CS + RRSe ) ) * ( MLU / ( MUC + RRSe ) ) ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.94375, "obj2": 0.05309821659642642}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( ( DDR / FirstVNF_RAM ) / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( MRS - Const ) ) ) )", "choosing": "( ( ( MUM - MUR ) * Max( MUR,MUC ) ) + ( MUR - RRSe ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "Min( Min( ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ,( FirstVNF_RAM * MDR ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( ( MLU + ( DS / Min( MUC ,MUM ) ) ) / MLU ) ),( CS + MUC ) )", "obj1": 0.26875, "obj2": 0.6249095077392974}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Const + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( ( MLU + MUC ) * CS ) ) * MUR ) * ( Min( MUC ,MLU ) / MLU ) ) + ( Min( DS ,Max( RCSe,RCSe ) ) + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.95, "obj2": 0.03977698456142185}, {"determining": "Min( ( ( Max( FirstVNF_CPU,( Max( ACS,FirstVNF_RAM_Server ) * ACS ) ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( ( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) / Const ),Min( Max( Max( Const,( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * ( ( Min( MLU ,RRSe ) * MLU ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) ) + ( ( RRSe / MUC ) - ( DS + RRSe ) ) )", "obj1": 0.63125, "obj2": 0.2991162292800712}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ACS ) ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( MUC + RRSe ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05974630914577588}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( Max( ( MRS - DDR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( ( MUM / Min( DS ,RRSe ) ) ,MUC ) ) / ( MLU + MUC ) )", "obj1": 0.21875, "obj2": 0.7161043454493858}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) + ( ACS - ( Min( BR ,ACS ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - RRSe ) ) ) * MLU ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.48870184326750565}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.75625, "obj2": 0.09772425203004681}, {"determining": "( CRS / ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUR - ( MUM / ( RCSe * Min( DS ,CS ) ) ) ) + ( MLU + RMSe ) ) - ( RMSe - MLU ) )", "obj1": 0.975, "obj2": 0.021879858330834036}, {"determining": "Min( ( ( Max( ( ( Min( MDR ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) / ACS ),FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( BR,CRS ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - Max( MUC,( MUR - Max( CS,Max( MUR,RRSe ) ) ) ) ) ) / ( Max( RMSe,MUC ) + ( MUC - RMSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( RMSe / CS ) - MLU ) ) )", "obj1": 0.6583333333333333, "obj2": 0.28114447032062573}, {"determining": "( ( ( MDR / ARS ) / Min( ARS ,MDR ) ) + ( Max( ( MDR + FirstVNF_Mem ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( CS * MUC ) + Min( ( MUR + ( Min( ( RRSe + ( MUC - MUC ) ) ,( MUM / ( RMSe + RMSe ) ) ) * CS ) ) ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( ( ACS / ( MRS * FirstVNF_CPU ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RRSe,RMSe ) / CS ) ) )", "obj1": 0.6645833333333333, "obj2": 0.2732920289505784}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.3125, "obj2": 0.5749981421265641}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4847904213708252}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.48038617854084614}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( CRS ,BR ) + ( PN / MDR ) ),Min( Max( MRS,BR ) ,( Const + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC * MUC ) ) ) + ( MLU / ( ( RMSe / CS ) - MLU ) ) )", "obj1": 0.6375, "obj2": 0.29689841528686234}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ACS + MRS ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * Max( CS,Min( MUM ,MUM ) ) ) ) + RMSe )", "obj1": 0.69375, "obj2": 0.25244050447168}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * RMSe ) ) + RMSe )", "obj1": 0.7, "obj2": 0.24460171091689306}, {"determining": "( FirstVNF_Mem + ( ( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe / MUC ) ) ),( MLU * CS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,ACS )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - Max( RRSe,RRSe ) ) ) / ( ( RMSe / CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.6458333333333334, "obj2": 0.2893379660303983}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.36663022694728914}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( MDR / DDR ),Min( Max( MRS,BR ) ,( Min( PN ,AMS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( MLU + Max( ( ( Max( MUR,MLU ) / ( MUM / CS ) ) / MUR ),( CS - RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "Min( Max( PN,( Min( BR ,( FirstVNF_RAM / ( ( ( DDR - AMS ) - ( MRS + MDR ) ) * Min( FirstVNF_CPU ,PN ) ) ) ) * ( ( Max( ( MRS + DDR ),PN ) - AMS ) + RRS ) ) ) ,Max( ( Const - FirstVNF_CPU ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / ( Max( ACS,MDR ) + PN ) ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( Min( ( MUM * RCSe ) ,DS ) - ( RMSe + ( MUM + RCSe ) ) ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( RCSe + RRSe ) + Min( ( MUR + MUM ) ,( MLU * ( MUC * DS ) ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.65, "obj2": 0.2872847137605447}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) ) ) * MUR ) * ( Min( MUC ,MLU ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.9979166666666667, "obj2": 0.0017348727611808084}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( Min( RRS ,Min( Const ,( ( Const * CRS ) + FirstVNF_RAM ) ) ),BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Max( MUR,RRSe ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / Max( ( RMSe / MLU ),MLU ) ) )", "obj1": 0.22708333333333333, "obj2": 0.7144511232723637}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,Max( Min( ARS ,ARS ),MDR ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),( Min( MUR ,( ( Min( ( MUM + ( MUC - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.325, "obj2": 0.5722814180884382}, {"determining": "Min( ( Min( FirstVNF_Mem ,( ARS - PN ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM + ( CS - RCSe ) ) ,( MUR * ( MUR - ( ( RMSe - MLU ) / MLU ) ) ) ) / ( ( CS * MUR ) - DS ) )", "obj1": 0.9458333333333333, "obj2": 0.04786358846323328}, {"determining": "( ( ( Min( Const ,( FirstVNF_CPU_Server / ARS ) ) - ( MDR + MRS ) ) / ( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) - ( DDR - MRS ) ) * CRS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( FirstVNF_RAM / ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Const ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - Min( ( DS / ( MLU / CS ) ) ,CS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.0058569316991067145}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Const - FirstVNF_CPU ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( RCSe + RRSe ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.26237651811890816}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( MDR - ACS ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( Max( RRSe,Max( DS,MLU ) ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6875, "obj2": 0.25616719573200913}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Const + ( AMS / ( ARS * ( FirstVNF_CPU - DDR ) ) ) ) + ( ( BR * FirstVNF_CPU ) / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( CS * CS ) ) * MUR ) * ( ( MUR * MUR ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.9791666666666666, "obj2": 0.01805005958283629}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( MDR - ACS ),Min( Max( ( CRS - ( Min( RRS ,BR ) + ( MRS * Const ) ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6791666666666667, "obj2": 0.26657717449771123}, {"determining": "( FirstVNF_Mem + ( ( ( AMS / FirstVNF_CPU ) * AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * RCSe ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( ( DDR / FirstVNF_RAM ) / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( MRS - Const ) ) ) )", "choosing": "( ( ( MUM - MUR ) * Max( MUR,MUC ) ) + ( MUR - RRSe ) )", "obj1": 0.23541666666666666, "obj2": 0.7121738864759349}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( Min( RRS ,BR ) + FirstVNF_Mem_Server ),Min( Max( MRS,( FirstVNF_Mem_Server / MDR ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * RCSe ) / ( ( RCSe * CS ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) )", "obj1": 0.5625, "obj2": 0.36254329739313457}, {"determining": "( FirstVNF_Mem + ( ( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe / MUC ) ) ),( MLU * CS ) ) )", "obj1": 0.43333333333333335, "obj2": 0.47467623620470234}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / Min( Max( Max( Const,( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( ( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( Min( ( RRSe + ( ( ( MUC + CS ) * ( MUR * RMSe ) ) + ( ( RRSe / MUC ) - ( DS + RRSe ) ) ) ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.98125, "obj2": 0.010313527396432896}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.007169930460764901}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MUR * RMSe ) + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09834947828275035}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ACS ) ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( MUC + RRSe ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06126484351397196}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,Const ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RMSe * MUM ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10283824538485876}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - Max( RRSe,RRSe ) ) ) - ( Min( RRSe ,MUM ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10197467959095262}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( ( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.98125, "obj2": 0.010313527396432896}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( MUC / MUC ) ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ACS ) / Max( ACS,Max( BR,( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Max( MUR,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( ( RCSe - Max( MUR,MUM ) ),RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / BR ) * ( ( ACS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( MLU - RRSe ) * ( RCSe + ( ( Max( MLU,Max( MLU,RRSe ) ) * Min( ( RRSe - MUC ) ,MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( BR ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) )", "choosing": "Min( Min( CS ,DS ) ,( ( Max( RMSe,( CS + ( MUC * MUR ) ) ) * Min( MLU ,DS ) ) / ( RMSe - Max( MUC,( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * ( ( Min( MUR ,CS ) + Max( RCSe,Max( ( MUM + RMSe ),MLU ) ) ) * MLU ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( MDR,FirstVNF_CPU_Server ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( RCSe,RRSe ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( PN + MDR ) ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,( DS * ( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( ( AMS - ( Max( Max( AMS,RRS ),BR ) / AMS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + ( MUM - Max( ( ( ( MLU + RCSe ) - RMSe ) - ( ( ( ( RCSe + MUR ) + Max( MUC,MUR ) ) - MUC ) / RRSe ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + MDR ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,FirstVNF_CPU ) / MDR ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( ( ARS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) / ( Max( ARS,FirstVNF_RAM ) / Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( RMSe - Min( ( MUM / DS ) ,CS ) ) + Min( ( DS / ( RMSe - MUC ) ) ,RMSe ) ) / CS ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / ( FirstVNF_RAM + PN ) ) ) )", "choosing": "Max( ( MUC / ( RCSe * MLU ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - Min( ( FirstVNF_CPU_Server * ( ARS + AMS ) ) ,ACS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( Max( ( FirstVNF_CPU / Max( ( AMS * ( MRS * RRS ) ),BR ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - Const ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( Max( MUR,( RRSe / RCSe ) ) / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( BR - RRS ) - Min( ARS ,( ( CRS + ( MDR * FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) ) ) - Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( MUM / MUC ) ) ) ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( DS * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * RMSe ) ) + RMSe )", "obj1": 0.7, "obj2": 0.24460171091689306}, {"determining": "Min( ( ( ( ( ( ( ( ACS - Const ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( FirstVNF_Mem_Server * Min( CRS ,RRS ) ) )", "choosing": "Max( ( ( MUR * MUM ) / ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ),Min( MLU ,MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server + ACS ) + AMS ) )", "choosing": "( ( MUR * DS ) - ( ( ( MUR * DS ) + MUM ) - Min( DS ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08674034759488777}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( RCSe / ( CS / MUC ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5375, "obj2": 0.33461492198717324}, {"determining": "Min( Min( ( RRS * Const ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * MDR ) ) ,PN )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),( Min( ( DS - Max( ( RMSe - DS ),( Max( RMSe,RRSe ) + MUR ) ) ) ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.3770833333333333, "obj2": 0.5212509158456783}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.50625, "obj2": 0.3663145061835673}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( ( FirstVNF_RAM_Server - Const ) * DDR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - ( MUR / RCSe ) ) + ( Min( DS ,Max( Max( Max( MUR,RCSe ),Min( Max( RMSe,CS ) ,( MUR - MUM ) ) ),RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( ( MUM / ( RCSe * Min( DS ,CS ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + Min( Min( ( MUM * MLU ) ,( Max( ( Min( MUM ,RRSe ) + MUC ),RRSe ) * Max( MUR,MUM ) ) ) ,( RRSe + RRSe ) ) ) )", "obj1": 0.475, "obj2": 0.38614253956015715}, {"determining": "( ( ( Min( ARS ,AMS ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ( FirstVNF_CPU_Server - AMS ) + Const ) * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( ( ( ( MUC - MUC ) - MUC ) - MLU ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + ( Min( Max( RRSe,( MLU - DS ) ) ,RRSe ) + ( RCSe / CS ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.05317588608022745}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.5770833333333333, "obj2": 0.31112318310334836}, {"determining": "Min( ( ( Max( FirstVNF_CPU,( Max( ACS,FirstVNF_RAM_Server ) * ACS ) ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( ( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) / Const ),Min( Max( Max( Const,( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * ( ( Min( MLU ,RRSe ) * MLU ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) ) + ( ( RRSe / MUC ) - ( DS + RRSe ) ) )", "obj1": 0.63125, "obj2": 0.2991162292800712}, {"determining": "( ( ( Max( Max( RRS,( CRS / Min( Min( Const ,RRS ) ,( DDR / CRS ) ) ) ),MDR ) + FirstVNF_RAM ) + ( FirstVNF_Mem - AMS ) ) * ( Const + MDR ) )", "choosing": "Max( Min( Min( ( RMSe - ( ( MUC * RCSe ) + MUC ) ) ,CS ) ,MUM ),( ( RCSe / DS ) * RRSe ) )", "obj1": 0.24583333333333332, "obj2": 0.674387749598274}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.56875, "obj2": 0.32005559174405196}, {"determining": "( ( FirstVNF_RAM_Server - ( ( CRS - RRS ) + MDR ) ) * ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS - DS ) ) * MUC ) + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * RCSe )", "obj1": 0.9416666666666667, "obj2": 0.03086869322958476}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,CS ) / DS ) ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.6059579191323801}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / RRSe ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.78125, "obj2": 0.09154896196080903}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.3125, "obj2": 0.5749981421265641}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( Max( ( MDR - ACS ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - ( ( Max( RRSe,Max( DS,MLU ) ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6974524475874526}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3849237902585424}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( ACS + MRS ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( Min( CS ,DS ) ,RCSe ),( MLU * CS ) ) / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( RMSe / RCSe ) ,( MLU + MUR ) ) ) ) - ( ( CS - MUR ) * Max( ( MUM * MLU ),( MLU + DS ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5794414774952182}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 0.39375, "obj2": 0.5074637666124856}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - MUR ) + MUC ) ,MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.6191684481445595}, {"determining": "( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Max( MUR,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - MUM ) ) + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10876555827314162}, {"determining": "( ( ( ( MDR / ARS ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - PN ) ) )", "choosing": "( ( Min( Min( Max( RRSe,MUM ) ,( MLU / MUM ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + Max( ( DS - ( MUC * RCSe ) ),MUC ) )", "obj1": 0.44166666666666665, "obj2": 0.4550678342519501}, {"determining": "Min( ( FirstVNF_CPU_Server - MRS ) ,Max( ( ( MRS / ( ACS * AMS ) ) - ( ACS + MDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) - ( MUC * DS ) )", "obj1": 0.24375, "obj2": 0.6803090138966704}, {"determining": "Min( Min( ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ,( FirstVNF_RAM * MDR ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( ( MLU + ( DS / Min( MUC ,MUM ) ) ) / MLU ) ),( CS + MUC ) )", "obj1": 0.26875, "obj2": 0.6249095077392974}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * Min( ACS ,MRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( RCSe + Max( MUC,Max( RCSe,( ( DS - DS ) - ( CS - RMSe ) ) ) ) ),MLU ) * MUR ) * RCSe )", "obj1": 0.9541666666666667, "obj2": 0.023095088338030936}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( ( MUM + RCSe ) ,RMSe ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4641483261329416}, {"determining": "( ( ( ( FirstVNF_Mem / ACS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7125, "obj2": 0.12065141457472828}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.75625, "obj2": 0.09772425203004681}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * Max( ( MLU + ( DS / MUM ) ),CS ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05818825006848151}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( Max( ( MRS - DDR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( ( MUM / Min( DS ,RRSe ) ) ,MUC ) ) / ( MLU + MUC ) )", "obj1": 0.21875, "obj2": 0.7161043454493858}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) + ( ACS - ( Min( BR ,ACS ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - RRSe ) ) ) * MLU ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.48870184326750565}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( Min( RRS ,Min( Const ,( ( Const * CRS ) + FirstVNF_RAM ) ) ),BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( ( ( BR - Const ) / ( Min( ACS ,FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Max( MUR,RRSe ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / Max( ( RMSe / MLU ),MLU ) ) )", "obj1": 0.22708333333333333, "obj2": 0.7144511232723637}, {"determining": "( CRS / ( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUR - ( MUM / ( RCSe * Min( DS ,CS ) ) ) ) + ( MLU + RMSe ) ) - ( RMSe - MLU ) )", "obj1": 0.975, "obj2": 0.021879858330834036}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.48038617854084614}, {"determining": "Min( Max( PN,( Min( BR ,( FirstVNF_RAM / ( ( ( DDR - AMS ) - ( MRS + MDR ) ) * Min( FirstVNF_CPU ,PN ) ) ) ) * ( ( Max( ( MRS + DDR ),PN ) - AMS ) + RRS ) ) ) ,Max( ( Const - FirstVNF_CPU ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / ( Max( ACS,MDR ) + PN ) ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( Min( ( MUM * RCSe ) ,DS ) - ( RMSe + ( MUM + RCSe ) ) ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( RCSe + RRSe ) + Min( ( MUR + MUM ) ,( MLU * ( MUC * DS ) ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.65, "obj2": 0.2872847137605447}, {"determining": "Min( ( ( Max( ( ( Min( MDR ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) / ACS ),FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( BR,CRS ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - Max( MUC,( MUR - Max( CS,Max( MUR,RRSe ) ) ) ) ) ) / ( Max( RMSe,MUC ) + ( MUC - RMSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( RMSe / CS ) - MLU ) ) )", "obj1": 0.6583333333333333, "obj2": 0.28114447032062573}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4847904213708252}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ACS + MRS ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * Max( CS,Min( MUM ,MUM ) ) ) ) + RMSe )", "obj1": 0.69375, "obj2": 0.25244050447168}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( MDR - ACS ),Min( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( Max( RRSe,Max( DS,MLU ) ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6875, "obj2": 0.25616719573200913}, {"determining": "( FirstVNF_Mem + ( ( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe / MUC ) ) ),( MLU * CS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * DDR ) ,Max( ( ( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) / Const ),Min( Max( Max( Const,( Max( Min( ACS ,BR ),Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * ( ( ( RMSe / CS ) - ( MLU / RCSe ) ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) ) + ( ( RRSe / MUC ) - ( DS + RRSe ) ) )", "obj1": 0.6395833333333333, "obj2": 0.2886198552454938}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( MDR - ACS ),Min( Max( ( MDR - PN ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( RMSe / ( MUC / MUC ) ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.27020337039391307}, {"determining": "Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ),( MUR - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Const + ( AMS / ( ARS * ( FirstVNF_CPU - DDR ) ) ) ) + ( ( BR * FirstVNF_CPU ) / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( CS * CS ) ) * MUR ) * ( ( MUR * MUR ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.9791666666666666, "obj2": 0.01805005958283629}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( FirstVNF_CPU + ( BR / CRS ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( DS * MUM ) ) )", "obj1": 0.9458333333333333, "obj2": 0.030693889570603827}, {"determining": "( ( ( Min( Const ,( FirstVNF_CPU_Server / ARS ) ) - ( MDR + MRS ) ) / ( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) - ( DDR - MRS ) ) * CRS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( FirstVNF_RAM / ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Const ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - Min( ( DS / ( MLU / CS ) ) ,CS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.0058569316991067145}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( CRS ,BR ) + ( PN / MDR ) ),Min( Max( MRS,BR ) ,( Const + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC * MUC ) ) ) + ( MLU / ( ( RMSe / CS ) - MLU ) ) )", "obj1": 0.6375, "obj2": 0.29689841528686234}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ACS + Max( FirstVNF_RAM,BR ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * Max( CS,( ( ( RCSe + MUR ) + MUC ) - MUC ) ) ) ) + RMSe )", "obj1": 0.6791666666666667, "obj2": 0.2617917940365149}, {"determining": "( FirstVNF_Mem + Max( ( CRS - FirstVNF_RAM_Server ),( ( ( MDR - CRS ) + CRS ) * Const ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * MUM ) ) ) ) ),Min( RRSe ,MUC ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( ACS ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( Max( MUC,( RRSe - RMSe ) ) ,MLU ) - ( Max( ( MLU + ( CS / MUM ) ),CS ) * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.98125, "obj2": 0.007985700805741664}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Min( Min( PN ,PN ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU + Min( ( ( ( RRSe + ( RCSe + DS ) ) - MUM ) - ( MUC + CS ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + MUM )", "obj1": 0.6625, "obj2": 0.27181169878526423}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) ,Max( ( MDR - ACS ),Min( Max( ( CRS - ( Min( Max( MRS,BR ) ,BR ) + ( MRS * Const ) ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) ) )", "obj1": 0.675, "obj2": 0.26273927053412743}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) ) ) * MUR ) * ( Min( MUC ,MLU ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( RMSe - MLU ) )", "obj1": 0.9979166666666667, "obj2": 0.0017348727611808084}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( ( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) / Const ),Min( Max( Max( Const,( Max( BR,Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ),BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC + CS ) * ( MUR * ( Min( MUR ,MUM ) - ( Max( Min( DS ,MLU ),( MLU * CS ) ) / RMSe ) ) ) ) + ( ( ( ( MUM * MUR ) * RCSe ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) - ( DS + RRSe ) ) )", "obj1": 0.6604166666666667, "obj2": 0.2730432641389111}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( AMS,Max( BR,Max( RRS,( CRS / FirstVNF_CPU_Server ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( Max( DS,DS ) - MLU ) / Max( ( RRSe - RRSe ),RMSe ) ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7395833333333334, "obj2": 0.1051611824620811}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU_Server ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - ( RMSe - RRSe ) ) ) + MLU ) )", "obj1": 0.70625, "obj2": 0.12310254568520605}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ACS ) ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( MUC + RRSe ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06126484351397196}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( ( ( MRS / ( ACS * AMS ) ) - ( ( CRS / FirstVNF_Mem_Server ) + Max( ARS,PN ) ) ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - RRSe ) ) ) * MUC ) ) ,Max( ( Max( MLU,MUC ) - ( MUC * DS ) ),( RRSe * Min( ( ( MUC / MUM ) / ( RMSe * MUR ) ) ,DS ) ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.48038617854084614}, {"determining": "( ( ( ( FirstVNF_Mem * AMS ) - CRS ) - ACS ) * ( ( FirstVNF_RAM * PN ) - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( Min( RCSe ,MUM ) - Max( ( RMSe / RRSe ),Max( Max( CS,MUR ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10381093238531752}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( BR * ( ( Min( ARS ,ARS ) - ( AMS + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem / PN ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( DS * ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) ) ) * MUR ) * ( Min( MUC ,MLU ) / MLU ) ) + ( MLU + ( DS / Max( MUR,MLU ) ) ) ) - ( MUR + ( Min( ( RRSe + ( MUC - MUC ) ) ,( MUM / ( RMSe + RMSe ) ) ) * CS ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0017348727611808084}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.007169930460764901}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( AMS + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09940512380242851}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * AMS ) - Max( RRS,CRS ) ) / Max( Min( ARS ,AMS ),Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7104166666666667, "obj2": 0.12117182748919311}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - Max( RRSe,RRSe ) ) ) - ( Min( RRSe ,MUM ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10197467959095262}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( MUC / MUC ) ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - CRS ) - ( BR * MDR ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( Max( MUM,MUR ) ,Max( RCSe,RCSe ) ) - ( MUR * ( Max( MUM,Min( ( MLU + RCSe ) ,DS ) ) * MLU ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( MUC / RRSe ),Max( ( ( MUR * RMSe ) + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09834947828275035}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( MRS - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( BR,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ) * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10283824538485876}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( ( RRSe / MUM ) ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - FirstVNF_Mem_Server ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( ( MUC / MUC ),( RMSe * MUM ) ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.1010718364747465}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,Const ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RMSe * MUM ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10283824538485876}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MUR * RMSe ) + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09834947828275035}, {"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,( ( ( ( Min( ( PN + MRS ) ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) * ( ( RCSe + RRSe ) / ( Min( DS ,( Min( CS ,RRSe ) / MUC ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( ( RCSe - Max( MUR,MUM ) ),RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / BR ) * ( ( ACS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( MLU - RRSe ) * ( RCSe + ( ( Max( MLU,Max( MLU,RRSe ) ) * Min( ( RRSe - MUC ) ,MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( BR ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) )", "choosing": "Min( Min( CS ,DS ) ,( ( Max( RMSe,( CS + ( MUC * MUR ) ) ) * Min( MLU ,DS ) ) / ( RMSe - Max( MUC,( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * ( ( Min( MUR ,CS ) + Max( RCSe,Max( ( MUM + RMSe ),MLU ) ) ) * MLU ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( MDR,FirstVNF_CPU_Server ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( RCSe,RRSe ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( PN + MDR ) ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,( DS * ( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( ( AMS - ( Max( Max( AMS,RRS ),BR ) / AMS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + ( MUM - Max( ( ( ( MLU + RCSe ) - RMSe ) - ( ( ( ( RCSe + MUR ) + Max( MUC,MUR ) ) - MUC ) / RRSe ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + MDR ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,FirstVNF_CPU ) / MDR ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( ( ARS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) / ( Max( ARS,FirstVNF_RAM ) / Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( RMSe - Min( ( MUM / DS ) ,CS ) ) + Min( ( DS / ( RMSe - MUC ) ) ,RMSe ) ) / CS ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / ( FirstVNF_RAM + PN ) ) ) )", "choosing": "Max( ( MUC / ( RCSe * MLU ) ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - Min( ( FirstVNF_CPU_Server * ( ARS + AMS ) ) ,ACS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,Max( MUC,( MUR - Max( CS,Max( MUR,RRSe ) ) ) ) ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,( ( CRS + ( MDR * FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) ) ) - Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( MUM / MUC ) ) ) ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.6166666666666667, "obj2": 0.2611562060540032}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( RCSe / ( CS / MUC ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5375, "obj2": 0.33461492198717324}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.50625, "obj2": 0.3663145061835673}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,Max( ARS,PN ) ) ) ) - CRS ) - Max( ACS,Max( BR,( ACS - BR ) ) ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( MUR / Min( RMSe ,MUM ) ) )", "obj1": 0.59375, "obj2": 0.2935374656028603}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( ( FirstVNF_RAM_Server - Const ) * DDR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - ( MUR / RCSe ) ) + ( Min( DS ,Max( Max( Max( MUR,RCSe ),Min( Max( RMSe,CS ) ,( MUR - MUM ) ) ),RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( ( MUM / ( RCSe * Min( DS ,CS ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + Min( Min( ( MUM * MLU ) ,( Max( ( Min( MUM ,RRSe ) + MUC ),RRSe ) * Max( MUR,MUM ) ) ) ,( RRSe + RRSe ) ) ) )", "obj1": 0.475, "obj2": 0.38614253956015715}, {"determining": "( ( ( Max( Max( RRS,( CRS / Min( Min( Const ,RRS ) ,( DDR / CRS ) ) ) ),MDR ) + FirstVNF_RAM ) + ( FirstVNF_Mem - AMS ) ) * ( Const + MDR ) )", "choosing": "Max( Min( Min( ( RMSe - ( ( MUC * RCSe ) + MUC ) ) ,CS ) ,MUM ),( ( RCSe / DS ) * RRSe ) )", "obj1": 0.24583333333333332, "obj2": 0.674387749598274}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,( DS / MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4625, "obj2": 0.4390081779897065}, {"determining": "Min( Min( ( RRS * Const ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * MDR ) ) ,PN )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),( Min( ( DS - Max( ( RMSe - DS ),( Max( RMSe,RRSe ) + MUR ) ) ) ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.3770833333333333, "obj2": 0.5212509158456783}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.56875, "obj2": 0.32005559174405196}, {"determining": "( ( ( Min( ARS ,AMS ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ( FirstVNF_CPU_Server - AMS ) + Const ) * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( ( ( ( MUC - MUC ) - MUC ) - MLU ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + ( Min( Max( RRSe,( MLU - DS ) ) ,RRSe ) + ( RCSe / CS ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.05317588608022745}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,CS ) / DS ) ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.6059579191323801}, {"determining": "( ( Min( Max( ACS,Max( BR,( ACS + BR ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - Max( ( RRS + BR ),FirstVNF_CPU_Server ) ) ) ) - Min( PN ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RMSe,CS ) / MUM ) ),CS ) ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.679406917440175}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.3125, "obj2": 0.5749981421265641}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( ( BR * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) * RCSe )", "obj1": 0.9291666666666667, "obj2": 0.04052016821875921}, {"determining": "Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ),( MUR - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.5770833333333333, "obj2": 0.31112318310334836}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3849237902585424}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( ACS + MRS ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( Max( Min( Min( CS ,DS ) ,RCSe ),( MLU * CS ) ) / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( RMSe / RCSe ) ,( MLU + MUR ) ) ) ) - ( ( CS - MUR ) * Max( ( MUM * MLU ),( MLU + DS ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5794414774952182}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 0.39375, "obj2": 0.5074637666124856}, {"determining": "( ( FirstVNF_CPU + ( Max( Max( ( FirstVNF_RAM - Min( DDR ,AMS ) ),CRS ),( ( Max( FirstVNF_CPU_Server,ARS ) + AMS ) + Const ) ) - ACS ) ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( MRS / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MUR * Max( CS,Min( MUM ,MUM ) ) ) )", "obj1": 0.225, "obj2": 0.7097818097745012}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - MUR ) + MUC ) ,MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.6191684481445595}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) ,( FirstVNF_Mem_Server * Min( CRS ,RRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ),Min( MLU ,( MLU + ( ( ( MUC - MLU ) * MUR ) / MUM ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server + ACS ) + AMS ) )", "choosing": "( ( MUR * DS ) - ( ( ( MUR * DS ) + MUM ) - Min( DS ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08674034759488777}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * Min( ACS ,MRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( RCSe + Max( MUC,Max( RCSe,( ( DS - DS ) - ( CS - RMSe ) ) ) ) ),MLU ) * MUR ) * RCSe )", "obj1": 0.9541666666666667, "obj2": 0.023095088338030936}, {"determining": "( ( ( ( MDR / ARS ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - PN ) ) )", "choosing": "( ( Min( Min( Max( RRSe,MUM ) ,( MLU / MUM ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + Max( ( DS - ( MUC * RCSe ) ),MUC ) )", "obj1": 0.44166666666666665, "obj2": 0.4550678342519501}, {"determining": "Min( ( ( ( ( ( ( ( ACS - Const ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( FirstVNF_Mem_Server * Min( CRS ,RRS ) ) )", "choosing": "Max( ( ( MUR * MUM ) / ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ),Min( MLU ,MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "Min( Min( ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ,( FirstVNF_RAM * MDR ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( ( MLU + ( DS / Min( MUC ,MUM ) ) ) / MLU ) ),( CS + MUC ) )", "obj1": 0.26875, "obj2": 0.6249095077392974}, {"determining": "( ( Min( BR ,( ( ( MRS / ( ACS * AMS ) ) - ( ACS + Max( ARS,PN ) ) ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) + ( Max( Const,Max( MRS,CRS ) ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( ( CS / MUC ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * MUC ) ),CS ) )", "obj1": 0.9729166666666667, "obj2": 0.0135738220438954}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( ( MUM + RCSe ) ,RMSe ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4641483261329416}, {"determining": "Min( ( FirstVNF_CPU_Server * AMS ) ,PN )", "choosing": "Max( ( Min( MUR ,MUR ) / ( Min( MUM ,( RRSe - RMSe ) ) / MLU ) ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.3770833333333333, "obj2": 0.5212509158456783}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( Max( ( MRS - DDR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( ( MUM / Min( DS ,RRSe ) ) ,MUC ) ) / ( MLU + MUC ) )", "obj1": 0.21875, "obj2": 0.7161043454493858}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / RRSe ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.78125, "obj2": 0.09154896196080903}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( Min( ARS ,AMS ),( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + ( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - DS ) ) ) )", "obj1": 0.725, "obj2": 0.11712976399188191}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * Max( ( MLU + ( DS / MUM ) ),CS ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05818825006848151}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,MDR ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7770833333333333, "obj2": 0.0931085779785628}, {"determining": "( ( ( ( ( ( Min( ( RRS + MRS ) ,DDR ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) / Max( ACS,Max( BR,( ACS + ARS ) ) ) ) - CRS ) - ACS ) * ( MDR - Max( ( Const + Const ),( MRS / FirstVNF_Mem_Server ) ) ) ) + ( ( BR * ( ( MRS * CRS ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR / Max( ( ( MLU + MLU ) * MUR ),RMSe ) ),DS ) / Max( MUC,Min( RMSe ,Min( RRSe ,( CS * MLU ) ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9395833333333333, "obj2": 0.02904009821448979}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.75625, "obj2": 0.09772425203004681}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Max( MUR,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - MUM ) ) + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10876555827314162}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( CRS * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( ( RRSe / MUR ) / RCSe ) ) ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41041666666666665, "obj2": 0.4936886837335697}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4847904213708252}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe )", "obj1": 0.94375, "obj2": 0.027489889407065274}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.48038617854084614}, {"determining": "( ( ( ( FirstVNF_Mem / ACS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7125, "obj2": 0.12065141457472828}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ) + ( ACS - ( Min( BR ,ACS ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - RRSe ) ) ) * MLU ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.48870184326750565}, {"determining": "( FirstVNF_Mem + ( ( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe / MUC ) ) ),( MLU * CS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( ( MDR - PN ) ,( FirstVNF_Mem + MDR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( ( ( Max( Min( RRSe ,MUC ),RRSe ) + CS ) + MUR ) - ( RRSe + ( RCSe / ( MUM * MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4823567632989461}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU_Server ) ) ) ) - CRS ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( ( CS * ( ( RRSe + RCSe ) - MUM ) ) + RCSe ) - ( RMSe - RRSe ) ) ) + MLU ) )", "obj1": 0.9958333333333333, "obj2": 0.0018820759597722157}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( Min( FirstVNF_Mem_Server ,AMS ) + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( RRS,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( Min( Max( MUC,( RRSe - RMSe ) ) ,( Max( Min( RMSe ,MUC ),MLU ) + MUM ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),Min( MUM ,( RRSe / RCSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.9875, "obj2": 0.00531823299807846}, {"determining": "( ( ( Min( ARS ,AMS ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ( FirstVNF_CPU_Server - AMS ) + Const ) * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( ( ( ( MUC - MUC ) - MUC ) - MLU ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + ( Min( Max( RRSe,( MLU - DS ) ) ,RRSe ) + ( RCSe / CS ) ) ) )", "obj1": 0.9791666666666666, "obj2": 0.01030423241210789}, {"determining": "( FirstVNF_Mem + Max( ( CRS - FirstVNF_RAM_Server ),( ( ( MDR - CRS ) + CRS ) * Const ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * MUM ) ) ) ) ),Min( RRSe ,MUC ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU_Server ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - ( RMSe - RRSe ) ) ) + MLU ) )", "obj1": 0.70625, "obj2": 0.12310254568520605}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( ( RRSe + MUR ) / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7375, "obj2": 0.10518069359239139}, {"determining": "( ( ( ARS - PN ) - ACS ) * ( MDR - ( ( BR + Min( ( FirstVNF_CPU + Max( AMS,( ARS * RRS ) ) ) ,PN ) ) * ( MRS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + Min( MUM ,( RRSe + ( ( DS * MLU ) * Max( MLU,DS ) ) ) ) ) - ( ( CS * ( MUC + CS ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06098502167071707}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( ACS ,PN ) ) * ( DDR * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( Max( MUC,( RRSe - RMSe ) ) ,MLU ) - ( Max( ( MLU + ( CS / MUM ) ),CS ) * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.98125, "obj2": 0.007985700805741664}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( ( ( FirstVNF_Mem * AMS ) - CRS ) - ACS ) * ( ( FirstVNF_RAM * PN ) - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( Min( RCSe ,MUM ) - Max( ( RMSe / RRSe ),Max( Max( CS,MUR ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10381093238531752}, {"determining": "( ( ( Min( Const ,BR ) - ( MDR + MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.007169930460764901}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( Const,( ( FirstVNF_RAM / MDR ) - CRS ) ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( MUR * DS ) - ( ( RRSe + RCSe ) * DS ) )", "obj1": 0.9979166666666667, "obj2": 0.0005339903194279065}, {"determining": "( ( ( Min( Const ,( FirstVNF_CPU_Server / ARS ) ) - ( MDR + MRS ) ) / ( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) - ( DDR - MRS ) ) * CRS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( FirstVNF_RAM / ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Const ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - Min( ( DS / ( MLU / CS ) ) ,CS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.0058569316991067145}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( AMS + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09940512380242851}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * AMS ) - Max( RRS,CRS ) ) / Max( Min( ARS ,AMS ),Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7104166666666667, "obj2": 0.12117182748919311}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.10085522327558054}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( AMS,Max( BR,Max( RRS,( CRS / FirstVNF_CPU_Server ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( Max( DS,DS ) - MLU ) / Max( ( RRSe - RRSe ),RMSe ) ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7395833333333334, "obj2": 0.1051611824620811}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( ( ( MRS / ( ACS * AMS ) ) - ( ( CRS / FirstVNF_Mem_Server ) + Max( ARS,PN ) ) ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - RRSe ) ) ) * MUC ) ) ,Max( ( Max( MLU,MUC ) - ( MUC * DS ) ),( RRSe * Min( ( ( MUC / MUM ) / ( RMSe * MUR ) ) ,DS ) ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.48038617854084614}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( MUC / MUC ) ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) - FirstVNF_RAM ) / ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( Min( MUC ,MUM ) + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10172826980432259}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( MRS - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( BR,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ) * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10283824538485876}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MUR * RMSe ) + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09834947828275035}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,Const ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RMSe * MUM ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10283824538485876}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,Const ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RMSe * MUM ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10172826980432259}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - CRS ) - ( BR * MDR ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( Max( MUM,MUR ) ,Max( RCSe,RCSe ) ) - ( MUR * ( Max( MUM,Min( ( MLU + RCSe ) ,DS ) ) * MLU ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( MUC / RRSe ),Max( ( ( MUR * RMSe ) + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09834947828275035}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( DS * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,( ( ( ( Min( ( PN + MRS ) ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) * ( ( RCSe + RRSe ) / ( Min( DS ,( Min( CS ,RRSe ) / MUC ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( ( RCSe - Max( MUR,MUM ) ),RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / BR ) * ( ( ACS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( MLU - RRSe ) * ( RCSe + ( ( Max( MLU,Max( MLU,RRSe ) ) * Min( ( RRSe - MUC ) ,MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( BR ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) )", "choosing": "Min( Min( CS ,DS ) ,( ( Max( RMSe,( CS + ( MUC * MUR ) ) ) * Min( MLU ,DS ) ) / ( RMSe - Max( MUC,( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS * ( ( Min( MUR ,CS ) + Max( RCSe,Max( ( MUM + RMSe ),MLU ) ) ) * MLU ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( MDR,FirstVNF_CPU_Server ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( RCSe,RRSe ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( PN + MDR ) ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,( DS * ( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( ( Max( Min( Const ,FirstVNF_CPU_Server ),MDR ) / MDR ) / DDR ),( ( FirstVNF_Mem + CRS ) * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( ( Max( ( ( ( DS + MUM ) * MUM ) + ( MUC * RMSe ) ),RRSe ) * ( ( RRSe - RMSe ) / ( CS * ( RCSe * Max( RCSe,RCSe ) ) ) ) ) * ( MUC * ( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( ( AMS - ( Max( Max( AMS,RRS ),BR ) / AMS ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + ( MUM - Max( ( ( ( MLU + RCSe ) - RMSe ) - ( ( ( ( RCSe + MUR ) + Max( MUC,MUR ) ) - MUC ) / RRSe ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + MDR ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,FirstVNF_CPU ) / MDR ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( ( ARS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) / ( Max( ARS,FirstVNF_RAM ) / Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( RMSe - Min( ( MUM / DS ) ,CS ) ) + Min( ( DS / ( RMSe - MUC ) ) ,RMSe ) ) / CS ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( ( Max( ( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - CRS ),MRS ) ),FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( ( ( MUC * CS ) - Max( DS,CS ) ) * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + Max( RCSe,( ( MUM / ( ( CS - RMSe ) + RCSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Min( ( Max( ( ( FirstVNF_Mem * Const ) * CRS ),DDR ) + Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,PN ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( Max( MUR,Max( RCSe,MUM ) ) * DS ) - ( ( ( MUM / MLU ) * ( ( ( RMSe * CS ) + Min( ( MUM * MUC ) ,MUR ) ) - ( MLU / MUC ) ) ) * ( Min( DS ,Max( MUC,( MUR - Max( CS,Max( MUR,RRSe ) ) ) ) ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( ( FirstVNF_RAM_Server - Const ) * DDR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - ( MUR / RCSe ) ) + ( Min( DS ,Max( Max( Max( MUR,RCSe ),Min( Max( RMSe,CS ) ,( MUR - MUM ) ) ),RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( ( MUM / ( RCSe * Min( DS ,CS ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + Min( Min( ( MUM * MLU ) ,( Max( ( Min( MUM ,RRSe ) + MUC ),RRSe ) * Max( MUR,MUM ) ) ) ,( RRSe + RRSe ) ) ) )", "obj1": 0.475, "obj2": 0.38614253956015715}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( Max( Const,( ( FirstVNF_RAM / MDR ) - CRS ) ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + ( RRSe + RCSe ) ) - ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.375, "obj2": 0.508612011811643}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3596672482409414}, {"determining": "Min( ( FirstVNF_CPU_Server * AMS ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.6166666666666667, "obj2": 0.2611562060540032}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,( DS / MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4625, "obj2": 0.4390081779897065}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( BR * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8145833333333333, "obj2": 0.07836018018567022}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.3354430670804885}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.33239319904231335}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.56875, "obj2": 0.32005559174405196}, {"determining": "( ( ( Min( ARS ,AMS ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ( FirstVNF_CPU_Server - AMS ) + Const ) * ACS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( ( ( ( MUC - MUC ) - MUC ) - MLU ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + ( Min( Max( RRSe,( MLU - DS ) ) ,RRSe ) + ( RCSe / CS ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.05317588608022745}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,Max( ARS,PN ) ) ) ) - CRS ) - Max( ACS,Max( BR,( ACS - BR ) ) ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( MUR / Min( RMSe ,MUM ) ) )", "obj1": 0.59375, "obj2": 0.2935374656028603}, {"determining": "( ( Min( Max( ACS,Max( BR,( ACS + BR ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - Max( ( RRS + BR ),FirstVNF_CPU_Server ) ) ) ) - Min( PN ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RMSe,CS ) / MUM ) ),CS ) ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.679406917440175}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5737352742422385}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / ( RMSe / RRSe ) ) ) + MUM ) - ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5726090220888348}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.5770833333333333, "obj2": 0.31112318310334836}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),( DS + RRSe ) ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.6, "obj2": 0.27491023838338496}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,CS ) / DS ) ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.6059579191323801}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server + ACS ) + AMS ) )", "choosing": "( ( MUR * DS ) - ( ( ( MUR * DS ) + MUM ) - Min( DS ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08674034759488777}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( CRS * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe * RMSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "( ( ( ( MDR / ARS ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - PN ) ) )", "choosing": "( ( Min( Min( Max( RRSe,MUM ) ,( MLU / MUM ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + Max( ( DS - ( MUC * RCSe ) ),MUC ) )", "obj1": 0.44166666666666665, "obj2": 0.4550678342519501}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - MUR ) + MUC ) ,MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.6191684481445595}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( ( BR * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) * RCSe )", "obj1": 0.9291666666666667, "obj2": 0.04052016821875921}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( Min( BR ,( ( ( MRS / ( ACS * AMS ) ) - ( ACS + Max( ARS,PN ) ) ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) + ( Max( Const,Max( MRS,CRS ) ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( ( CS / MUC ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * MUC ) ),CS ) )", "obj1": 0.9729166666666667, "obj2": 0.0135738220438954}, {"determining": "Min( Min( ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ,( FirstVNF_RAM * MDR ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( ( MLU + ( DS / Min( MUC ,MUM ) ) ) / MLU ) ),( CS + MUC ) )", "obj1": 0.26875, "obj2": 0.6249095077392974}, {"determining": "( ( FirstVNF_CPU + ( Max( Max( ( FirstVNF_RAM - Min( DDR ,AMS ) ),CRS ),( ( Max( FirstVNF_CPU_Server,ARS ) + AMS ) + Const ) ) - ACS ) ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( MRS / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MUR * Max( CS,Min( MUM ,MUM ) ) ) )", "obj1": 0.225, "obj2": 0.7097818097745012}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) ,( FirstVNF_Mem_Server * Min( CRS ,RRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ),Min( MLU ,( MLU + ( ( ( MUC - MLU ) * MUR ) / MUM ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) )", "choosing": "( MLU - ( ( ( MLU + RMSe ) / DS ) + MLU ) )", "obj1": 0.39375, "obj2": 0.5074637666124856}, {"determining": "Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ),( MUR - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( Max( ( MRS - DDR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( ( MUM / Min( DS ,RRSe ) ) ,MUC ) ) / ( MLU + MUC ) )", "obj1": 0.21875, "obj2": 0.7161043454493858}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * Min( ACS ,MRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( RCSe + Max( MUC,Max( RCSe,( ( DS - DS ) - ( CS - RMSe ) ) ) ) ),MLU ) * MUR ) * RCSe )", "obj1": 0.9541666666666667, "obj2": 0.023095088338030936}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / RRSe ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.78125, "obj2": 0.09154896196080903}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( Min( ARS ,AMS ),( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + ( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - DS ) ) ) )", "obj1": 0.725, "obj2": 0.11712976399188191}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * Max( ( MLU + ( DS / MUM ) ),CS ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05818825006848151}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( ( MUM + RCSe ) ,RMSe ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4641483261329416}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( ( MLU + RMSe ) / DS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.6104166666666667, "obj2": 0.26423607842244645}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.425, "obj2": 0.4691609527429015}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,MDR ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / CS ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.775, "obj2": 0.09405202807360438}, {"determining": "( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Max( MUR,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - MUM ) ) + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10876555827314162}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.75625, "obj2": 0.09772425203004681}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( MLU + ( ( DS / MUM ) / MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * MUC ) ) ,Max( ( Max( MLU,MUC ) - ( MUC * DS ) ),( RRSe * Min( ( ( MUC / MUM ) / ( RMSe * MUR ) ) ,DS ) ) ) ),( MLU * CS ) ) )", "obj1": 0.42083333333333334, "obj2": 0.47882871945599237}, {"determining": "( ( FirstVNF_CPU + ( Max( Max( ( FirstVNF_RAM - Min( DDR ,AMS ) ),CRS ),( ( Max( FirstVNF_CPU_Server,ARS ) + AMS ) + Const ) ) - ACS ) ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( MRS / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MUR * Max( CS,Min( MUM ,MUM ) ) ) )", "obj1": 0.2916666666666667, "obj2": 0.6064755206426647}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( FirstVNF_Mem / ACS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7125, "obj2": 0.12065141457472828}, {"determining": "( FirstVNF_Mem + Max( ( CRS - FirstVNF_RAM_Server ),Min( BR ,( CRS * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,( RRSe / MUR ) ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.48790131380005713}, {"determining": "( FirstVNF_Mem + ( ( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe / MUC ) ) ),( MLU * CS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "( Max( ACS,Max( BR,FirstVNF_RAM ) ) * ( ( BR * ( ( ( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ARS ) ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( DS + RRSe ) + ( ( Min( MUM ,CS ) - Min( MLU ,MUR ) ) + MUR ) ) * RCSe )", "obj1": 0.9333333333333333, "obj2": 0.03692531815418085}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4847904213708252}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU_Server ) ) ) ) - CRS ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( ( CS * ( ( RRSe + RCSe ) - MUM ) ) + RCSe ) - ( RMSe - RRSe ) ) ) + MLU ) )", "obj1": 0.9958333333333333, "obj2": 0.0018820759597722157}, {"determining": "( ( AMS + CRS ) * ( ( BR * ( ( ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * ( Min( DS ,Max( RCSe,( RCSe / RRSe ) ) ) - MLU ) )", "obj1": 0.9520833333333333, "obj2": 0.02574624255620754}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( ( MLU / CS ),Min( MLU ,MLU ) ) ) * RCSe )", "obj1": 0.9354166666666667, "obj2": 0.03141943070915731}, {"determining": "( FirstVNF_Mem + Max( ( CRS - FirstVNF_RAM_Server ),( ( ( MDR - CRS ) + CRS ) * Const ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,RCSe ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * MUM ) ) ) ) ),Min( RRSe ,MUC ) ) )", "obj1": 0.4041666666666667, "obj2": 0.5003952144725147}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( CRS * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( ( RRSe / MUR ) / RCSe ) ) ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41041666666666665, "obj2": 0.4936886837335697}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( Min( Const ,( FirstVNF_CPU_Server / ARS ) ) - ( MDR + MRS ) ) / ( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) - ( DDR - MRS ) ) * CRS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( FirstVNF_RAM / ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Const ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - Min( ( DS / ( MLU / CS ) ) ,CS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.0058569316991067145}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( MDR - PN ) ) - MDR ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( ( RRSe / RRSe ) / RCSe ) ) ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41041666666666665, "obj2": 0.4936886837335697}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( ( RRSe + MUR ) / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7375, "obj2": 0.10518069359239139}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) * RCSe )", "obj1": 0.94375, "obj2": 0.027489889407065274}, {"determining": "( ( ( ( FirstVNF_Mem / ACS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7041666666666667, "obj2": 0.12719185054665758}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU_Server ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - ( RMSe - RRSe ) ) ) + MLU ) )", "obj1": 0.70625, "obj2": 0.12310254568520605}, {"determining": "( ( ( MRS / DDR ) * ( ACS + Const ) ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( MRS / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( DS + ( MUM * CS ) ) ) ) / ( MUR * Max( CS,Min( MUM ,MUM ) ) ) )", "obj1": 0.225, "obj2": 0.7097818097745012}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,MDR ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7770833333333333, "obj2": 0.0931085779785628}, {"determining": "( ( ( ( BR + Min( MRS ,PN ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( RRS,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( DS / MUM ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9875, "obj2": 0.00531823299807846}, {"determining": "( ( ( ARS - PN ) - ACS ) * ( MDR - ( ( BR + Min( ( FirstVNF_CPU + Max( AMS,( ARS * RRS ) ) ) ,PN ) ) * ( MRS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + Min( MUM ,( RRSe + ( ( DS * MLU ) * Max( MLU,DS ) ) ) ) ) - ( ( CS * ( MUC + CS ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06098502167071707}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9395833333333333, "obj2": 0.02904009821448979}, {"determining": "( ( ( ( FirstVNF_Mem * AMS ) - CRS ) - ACS ) * ( ( FirstVNF_RAM * PN ) - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( Min( RCSe ,MUM ) - Max( ( RMSe / RRSe ),Max( Max( CS,MUR ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10381093238531752}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( Const,( ( FirstVNF_RAM / MDR ) - CRS ) ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( MUR * DS ) - ( ( RRSe + RCSe ) * DS ) )", "obj1": 0.9979166666666667, "obj2": 0.0005339903194279065}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09918819828849168}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * AMS ) - Max( RRS,CRS ) ) / Max( Min( ARS ,AMS ),Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7104166666666667, "obj2": 0.12117182748919311}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe )", "obj1": 0.94375, "obj2": 0.027489889407065274}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.10085522327558054}, {"determining": "( ( ( ( ( ( Min( ( RRS + MRS ) ,DDR ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) / Max( ACS,Max( BR,( ACS + ARS ) ) ) ) - CRS ) - ACS ) * ( MDR - Max( ( Const + Const ),( MRS / FirstVNF_Mem_Server ) ) ) ) + ( ( BR * ( ( MRS * CRS ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR / Max( ( ( MLU + MLU ) * MUR ),RMSe ) ),DS ) / Max( MUC,Min( RMSe ,Min( RRSe ,( CS * MLU ) ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9395833333333333, "obj2": 0.02904009821448979}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( Min( FirstVNF_Mem_Server ,AMS ) + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( RRS,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( Min( Max( MUC,( RRSe - RMSe ) ) ,( Max( Min( RMSe ,MUC ),MLU ) + MUM ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),Min( MUM ,( RRSe / RCSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.9875, "obj2": 0.00531823299807846}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( AMS,Max( BR,Max( RRS,( CRS / FirstVNF_CPU_Server ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( Max( DS,DS ) - MLU ) / Max( ( RRSe - RRSe ),RMSe ) ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7395833333333334, "obj2": 0.1051611824620811}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( MUC / MUC ) ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ACS ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10172826980432259}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( MRS - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( BR,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ) * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10283824538485876}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) - FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,Const ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RMSe * MUM ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.10283824538485876}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) - FirstVNF_RAM ) / ( ( AMS / DDR ) + Min( BR ,( Const / Const ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( Min( MUC ,MUM ) + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10172826980432259}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - CRS ) - ( BR * MDR ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( Max( MUM,MUR ) ,Max( RCSe,RCSe ) ) - ( MUR * ( Max( MUM,Min( ( MLU + RCSe ) ,DS ) ) * MLU ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( MUC / RRSe ),Max( ( ( MUR * RMSe ) + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09834947828275035}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MUR * RMSe ) + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09834947828275035}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,( ( CRS + ( MDR * FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) ) ) - Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( MUM / MUC ) ) ) ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( DS * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,( ( ( ( Min( ( PN + MRS ) ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) * ( ( RCSe + RRSe ) / ( Min( DS ,( Min( CS ,RRSe ) / MUC ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( ( MDR / PN ) + FirstVNF_CPU_Server ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( MLU + ( CS / MUM ) ) * ( ( RCSe + ( RRSe + ( ( MLU * MUC ) * MUM ) ) ) / ( Min( DS ,( Min( CS ,RRSe ) / MUC ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - CRS ),MRS ) ),FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,( Const - ( AMS / AMS ) ) )", "choosing": "( ( ( MLU + Min( ( MUR - ( ( ( MUC * CS ) - Max( DS,CS ) ) * MUC ) ) ,( MLU * RMSe ) ) ) * ( MUR * RMSe ) ) + Max( RCSe,( ( MUM / ( ( CS - RMSe ) + RCSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ACS ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27723745977273145}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,ACS )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * CS ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5336130463406401}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5333333333333333, "obj2": 0.33239319904231335}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3596672482409414}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( BR * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8145833333333333, "obj2": 0.07836018018567022}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.6166666666666667, "obj2": 0.2611562060540032}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( PN / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( ( RRSe / RRSe ) / RCSe ) ) ) ) ,Max( MLU,CS ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem * AMS ) - FirstVNF_RAM ) / Max( ( ( PN + FirstVNF_RAM ) / AMS ),Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - Max( MLU,MUC ) )", "obj1": 0.5958333333333333, "obj2": 0.2690610093822145}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.3354430670804885}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( Max( Const,( ( FirstVNF_RAM / MDR ) - CRS ) ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + ( RRSe + RCSe ) ) - ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.375, "obj2": 0.508612011811643}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MUR + MLU ),CS ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.46875, "obj2": 0.40183776311189345}, {"determining": "Min( ( ARS / Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6419864883235447}, {"determining": "( ( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) - ( MDR + DDR ) ) * BR ) * ( ( ( FirstVNF_RAM_Server - DDR ) + Max( Const,Max( CRS,RRS ) ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( RMSe / ( ( ( MUR * Max( Max( CS,MUR ),RMSe ) ) - ( Min( RCSe ,Max( RMSe,RRSe ) ) - RCSe ) ) / ( ( Min( MLU ,DS ) * ( RCSe + MLU ) ) - MUR ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.48790877867421223}, {"determining": "Min( ( ( Max( ( MRS - DDR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * AMS ) ,PN )", "choosing": "Max( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.21875, "obj2": 0.688508430229077}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( BR * FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( MLU * MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5618750235295895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,( DS / MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4625, "obj2": 0.4390081779897065}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( FirstVNF_RAM + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( DS / CS ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9229166666666667, "obj2": 0.03796878926013219}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.21458333333333332, "obj2": 0.7219949756913742}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5737352742422385}, {"determining": "Min( ( ARS / AMS ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / Max( ( MUR + RCSe ),( ( RRSe / MUR ) / RCSe ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3772851393288774}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( ( FirstVNF_CPU_Server * AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022652796293164936}, {"determining": "( ( ( ( MDR / ARS ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - PN ) ) )", "choosing": "( ( Min( Min( Max( RRSe,MUM ) ,( MLU / MUM ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + Max( ( DS - ( MUC * RCSe ) ),MUC ) )", "obj1": 0.44166666666666665, "obj2": 0.4550678342519501}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - MUR ) + MUC ) ,MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.6191684481445595}, {"determining": "( ( Min( Max( ACS,Max( BR,( ACS + BR ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - Max( ( RRS + BR ),FirstVNF_CPU_Server ) ) ) ) - Min( PN ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RMSe,CS ) / MUM ) ),CS ) ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.679406917440175}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / MUM ) ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5967368644617684}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6229868166197302}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( ( FirstVNF_RAM_Server - Const ) * DDR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - ( MUR / RCSe ) ) + ( Min( DS ,Max( Max( Max( MUR,RCSe ),Min( Max( RMSe,CS ) ,( MUR - MUM ) ) ),RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( ( MUM / ( RCSe * Min( DS ,CS ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + Min( Min( ( MUM * MLU ) ,( Max( ( Min( MUM ,RRSe ) + MUC ),RRSe ) * Max( MUR,MUM ) ) ) ,( RRSe + RRSe ) ) ) )", "obj1": 0.475, "obj2": 0.38614253956015715}, {"determining": "( ( ( PN - ACS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / Max( MUR,( DS / RMSe ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7229166666666667, "obj2": 0.11563316341532416}, {"determining": "( FirstVNF_Mem + Max( ( CRS - FirstVNF_RAM_Server ),Min( BR ,( CRS * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,( RRSe / MUR ) ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.48790131380005713}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( ( MUM + RCSe ) ,RMSe ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4641483261329416}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( CRS * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe * RMSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) ,( FirstVNF_Mem_Server * Min( CRS ,RRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ),Min( MLU ,( MLU + ( ( ( MUC - MLU ) * MUR ) / MUM ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( ( MLU + RMSe ) / DS ) ) ) ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),CS ) )", "obj1": 0.7958333333333333, "obj2": 0.0855706900117351}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - FirstVNF_RAM ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),( DS + RRSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.2613221969081809}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.425, "obj2": 0.4691609527429015}, {"determining": "( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Max( MUR,RMSe ) - ( ( CS * ( ( RRSe + RCSe ) - MUM ) ) + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10876555827314162}, {"determining": "Min( ( FirstVNF_CPU_Server * AMS ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9729166666666667, "obj2": 0.009503830542077516}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / RRSe ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.78125, "obj2": 0.09154896196080903}, {"determining": "( ( ( ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8020833333333334, "obj2": 0.08231978357586581}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( MLU + ( ( DS / MUM ) / MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * MUC ) ) ,Max( ( Max( MLU,MUC ) - ( MUC * DS ) ),( RRSe * Min( ( ( MUC / MUM ) / ( RMSe * MUR ) ) ,DS ) ) ) ),( MLU * CS ) ) )", "obj1": 0.42083333333333334, "obj2": 0.47882871945599237}, {"determining": "( ( FirstVNF_CPU + ( Max( Max( ( FirstVNF_RAM - Min( DDR ,AMS ) ),CRS ),( ( Max( FirstVNF_CPU_Server,ARS ) + AMS ) + Const ) ) - ACS ) ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( MRS / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MUR * Max( CS,Min( MUM ,MUM ) ) ) )", "obj1": 0.2916666666666667, "obj2": 0.6064755206426647}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) ) ) - Max( MLU,CS ) )", "obj1": 0.7104166666666667, "obj2": 0.11917224694166646}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05433093232713139}, {"determining": "( FirstVNF_Mem + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( MUR,MLU ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,MDR ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / CS ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.775, "obj2": 0.09405202807360438}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( FirstVNF_RAM_Server - BR ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / DS ) ),CS ) ) ),Min( ( MUR / MLU ) ,MLU ) ) ) * ( ( DS / RRSe ) + MUC ) )", "obj1": 0.9291666666666667, "obj2": 0.03427038282391059}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_Mem / ACS ) - CRS ) / PN ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( ( CS / MUM ) / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9729166666666667, "obj2": 0.009503830542077516}, {"determining": "Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ),( MUR - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,CS ) / DS ) ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.29583333333333334, "obj2": 0.6059579191323801}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4847904213708252}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( ( MLU / CS ),Min( MLU ,MLU ) ) ) * RCSe )", "obj1": 0.9354166666666667, "obj2": 0.03141943070915731}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + ( Min( CS ,CS ) / DS ) ) ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.46041666666666664, "obj2": 0.4429204670567673}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( ( RRSe - DS ) * ( MLU + DS ) ) - MUR ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9458333333333333, "obj2": 0.024403563544578483}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_Mem_Server * MRS ),FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.6166666666666667, "obj2": 0.2611562060540032}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) + ( Max( Const,Min( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ,Min( ( MDR + DDR ) ,Max( ( ACS - FirstVNF_CPU ),( ( Const + FirstVNF_CPU_Server ) - ( Const * ARS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( RMSe * RCSe ),( MUR - CS ) ) ,( RCSe - ( RRSe + Max( ( MLU / CS ),( DS / MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.4474761969610202}, {"determining": "( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( ( RRSe + MUR ) / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7375, "obj2": 0.10518069359239139}, {"determining": "( ( ( ( BR + Min( MRS ,PN ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( RRS,( CRS / ARS ) ),MDR ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS / MUM ) - ( ( CS * Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),( DS + RRSe ) ) ) ) + MLU ) )", "obj1": 0.9916666666666667, "obj2": 0.0034370384096414105}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + RCSe ) - ( ( RRSe - DS ) * ( RRSe - MUC ) ) ) ) + MLU ) )", "obj1": 0.7041666666666667, "obj2": 0.12615484791732118}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ARS ) ) + FirstVNF_RAM_Server ) - MDR ) * ( MDR - Max( ( Const + Const ),( MRS / FirstVNF_Mem_Server ) ) ) ) + ( ( BR * ( ( MRS * CRS ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + ( ( ( MLU - Min( RMSe ,RRSe ) ) + Min( MUM ,RMSe ) ) * ( Min( RCSe ,( RCSe / RRSe ) ) - MUC ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,MUC ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.99375, "obj2": 0.0018559284813807484}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ( DDR * MDR ) ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( ( Max( ( Min( MUC ,RMSe ) / ( RRSe / RMSe ) ),( RRSe / MUC ) ) + RCSe ) ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * Max( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( DS / MUM ) ),CS ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.006691625236620232}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.75625, "obj2": 0.09772425203004681}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - FirstVNF_CPU_Server ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - ( RMSe - RRSe ) ) ) + MLU ) )", "obj1": 0.70625, "obj2": 0.12310254568520605}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( ( RRSe - DS ) * ( RRSe - MUC ) ) - MUR ) ) ) ) * RCSe )", "obj1": 0.94375, "obj2": 0.027489889407065274}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "( ( ( ( ( ( Min( ( RRS + MRS ) ,DDR ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) / Max( ACS,Max( BR,( ACS + ARS ) ) ) ) - CRS ) - ACS ) * ( MDR - Max( ( Const + Const ),( MRS / FirstVNF_Mem_Server ) ) ) ) + ( ( BR * ( ( MRS * CRS ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR / Max( ( ( MLU + MLU ) * MUR ),RMSe ) ),DS ) / Max( MUC,Min( RMSe ,Min( RRSe ,( CS * MLU ) ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9395833333333333, "obj2": 0.02904009821448979}, {"determining": "( ( ( ( FirstVNF_Mem * AMS ) - CRS ) - ACS ) * ( ( FirstVNF_RAM * PN ) - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( Min( RCSe ,MUM ) - Max( ( RMSe / RRSe ),Max( Max( CS,MUR ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10381093238531752}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09918819828849168}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.10085522327558054}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * AMS ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,MDR ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( ( DS / MUM ) * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / CS ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7791666666666667, "obj2": 0.09261135425383915}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9395833333333333, "obj2": 0.02904009821448979}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,MDR ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7770833333333333, "obj2": 0.0931085779785628}, {"determining": "( ( ( Min( Const ,( FirstVNF_CPU_Server / ARS ) ) - ( MDR + MRS ) ) / ( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) - ( DDR - MRS ) ) * CRS ) ) ) / Min( ( ( BR * DDR ) + Const ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( FirstVNF_RAM / ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Const ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) / ( Min( ( MUC + MUM ) ,RCSe ) - Min( ( DS / ( MLU / CS ) ) ,CS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.0058569316991067145}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( AMS,Max( BR,Max( RRS,( CRS / FirstVNF_CPU_Server ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( Max( DS,DS ) - MLU ) / Max( ( RRSe - RRSe ),RMSe ) ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7395833333333334, "obj2": 0.1051611824620811}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( MUC / MUC ) ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ARS - PN ) - ACS ) * ( MDR - ( ( BR + Min( ( FirstVNF_CPU + Max( AMS,( ARS * RRS ) ) ) ,PN ) ) * ( MRS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + Min( MUM ,( RRSe + ( ( DS * MLU ) * Max( MLU,DS ) ) ) ) ) - ( ( CS * ( MUC + CS ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06098502167071707}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( Min( FirstVNF_Mem_Server ,AMS ) + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( RRS,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( Min( Max( MUC,( RRSe - RMSe ) ) ,( Max( Min( RMSe ,MUC ),MLU ) + MUM ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),Min( MUM ,( RRSe / RCSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.9875, "obj2": 0.00531823299807846}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + Min( Max( Const,( ( FirstVNF_RAM / MDR ) - CRS ) ) ,( ( MRS / DDR ) * ( ACS + Const ) ) ) ) - ACS ) ,FirstVNF_CPU_Server ) / ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( MUR * DS ) - ( ( RRSe + RCSe ) * DS ) )", "obj1": 0.9979166666666667, "obj2": 0.0005339903194279065}, {"determining": "( ( ( ( BR + Min( MRS ,PN ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( RRS,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( DS / MUM ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9875, "obj2": 0.00531823299807846}, {"determining": "( ( FirstVNF_RAM_Server - Max( RRS,CRS ) ) * ( ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( RRSe + RCSe ) - MUR ) ) ) ) * RCSe )", "obj1": 0.94375, "obj2": 0.027489889407065274}, {"determining": "( ( Max( Const,( Max( BR,Max( ARS,MRS ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,Min( MRS ,PN ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) * DS ) ) ) ) - ( ( CS * ( MUC + CS ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06098502167071707}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0005339903194279065}, {"determining": "( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Const ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + ( RCSe * MUM ) ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10172826980432259}], "10": [{"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,( ( ( RRS / Max( Min( FirstVNF_RAM ,RRS ),( PN + BR ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( ( MDR / PN ) + FirstVNF_CPU_Server ) * ( AMS / Const ) ) ) ) * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( MLU + ( CS / MUM ) ) * ( ( RCSe + ( RRSe + ( ( MLU * MUC ) * MUM ) ) ) / ( Min( DS ,( Min( CS ,RRSe ) / MUC ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,( MDR - AMS ) ) ) ) * MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( MUC / MUR ) ) - ( ( Max( ( MLU + ( MLU / MUM ) ),CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.7307122439444811}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.3354430670804885}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MUR + MLU ),CS ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.45, "obj2": 0.41774092573734145}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,( ( RCSe / DS ) * RRSe ) ),( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( ( MLU + RMSe ) / DS ) ) ) ) )", "obj1": 0.6208333333333333, "obj2": 0.23709869605429168}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3596672482409414}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * AMS ) ,PN )", "choosing": "Max( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUM * CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.2125, "obj2": 0.687481652916761}, {"determining": "( ( FirstVNF_Mem - Max( FirstVNF_RAM_Server,Max( Min( CRS ,( ( BR + ( PN * RRS ) ) / DDR ) ),MRS ) ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * RRSe ) - Max( ( ( MUR * MUR ) * Max( MLU,( ( RMSe + ( ( MUC * MLU ) + RRSe ) ) + ( ( MUM * Max( MLU,MUM ) ) + ( ( RRSe + RRSe ) * ( RRSe * MUR ) ) ) ) ) ),CS ) )", "obj1": 0.4354166666666667, "obj2": 0.43982438625691156}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server / DDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + ( RRSe / CS ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6625, "obj2": 0.16964249998225547}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "Min( ( ARS / Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6381618472644113}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ACS ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27723745977273145}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MUR + MLU ),CS ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.46875, "obj2": 0.40183776311189345}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - FirstVNF_RAM ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),( DS + RRSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.2613221969081809}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,ACS )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * CS ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5336130463406401}, {"determining": "( ( ( ( Min( MRS ,FirstVNF_RAM ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,( PN * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( Min( RCSe ,RRSe ) * RRSe ) ) ) - ( Min( RMSe ,CS ) + ( ( Min( DS ,RCSe ) * MUR ) / ( MLU * ( DS / RRSe ) ) ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.5041666666666667, "obj2": 0.3369341629250268}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( MRS - ( ( ARS - ACS ) + FirstVNF_CPU_Server ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( RRSe ,( ( CS / ( ( MUR * RRSe ) + MLU ) ) * MUM ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,MUR ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.2875, "obj2": 0.609042999666812}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5350533025411779}, {"determining": "( ( ( BR * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8145833333333333, "obj2": 0.07836018018567022}, {"determining": "Min( ( Max( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,RCSe ) + ( Min( CS ,CS ) / DS ) ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21041666666666667, "obj2": 0.7262568073498856}, {"determining": "( ( Min( Max( ACS,Max( BR,( ACS + BR ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - Max( ( RRS + BR ),FirstVNF_CPU_Server ) ) ) ) - Min( PN ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RMSe,CS ) / MUM ) ),CS ) ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.679406917440175}, {"determining": "Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( FirstVNF_CPU_Server,ARS ) + AMS ) )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / Max( ( MUR + RCSe ),( ( RRSe / MUR ) / RCSe ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3772851393288774}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( ( FirstVNF_CPU_Server * AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022652796293164936}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( DDR ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * Max( ( CRS / ( MRS / FirstVNF_CPU ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( ( Max( ( MUM + RCSe ),( MLU - MLU ) ) * CS ) * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),( DS + ( ( MLU - ( RCSe - RCSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5618750235295895}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( AMS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MUR * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.6166666666666667, "obj2": 0.2611562060540032}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( ( MUM + RCSe ) ,RMSe ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4641483261329416}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + ( FirstVNF_RAM * RRS ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Min( ( RCSe / DS ) ,RRSe ) ) * RCSe )", "obj1": 0.9145833333333333, "obj2": 0.04632052328859914}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( PN / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( ( RRSe / RRSe ) / RCSe ) ) ) ) ,Max( MLU,CS ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6229868166197302}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( Min( ( ACS / FirstVNF_RAM ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,MDR ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + ( ( Max( Min( Max( MLU,Max( MUR,MUC ) ) ,Min( MUM ,MLU ) ),( RCSe / ( CS + MUR ) ) ) + MLU ) - CS ) ) - ( ( ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.2791666666666667, "obj2": 0.6149219625845533}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( ( FirstVNF_RAM_Server - Const ) * DDR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - ( MUR / RCSe ) ) + ( Min( DS ,Max( Max( Max( MUR,RCSe ),Min( Max( RMSe,CS ) ,( MUR - MUM ) ) ),RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( ( MUM / ( RCSe * Min( DS ,CS ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + Min( Min( ( MUM * MLU ) ,( Max( ( Min( MUM ,RRSe ) + MUC ),RRSe ) * Max( MUR,MUM ) ) ) ,( RRSe + RRSe ) ) ) )", "obj1": 0.475, "obj2": 0.38614253956015715}, {"determining": "( ( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) - ( MDR + DDR ) ) * BR ) * ( ( ( FirstVNF_RAM_Server - DDR ) + Max( Const,Max( CRS,RRS ) ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( RMSe / ( ( ( MUR * Max( Max( CS,MUR ),RMSe ) ) - ( Min( RCSe ,Max( RMSe,RRSe ) ) - RCSe ) ) / ( ( Min( MLU ,DS ) * ( RCSe + MLU ) ) - MUR ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.48790877867421223}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( CRS * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe * RMSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) ,( FirstVNF_Mem_Server * Min( CRS ,RRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ),Min( MLU ,( MLU + ( ( ( MUC - MLU ) * MUR ) / MUM ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "Min( ( ARS / AMS ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.425, "obj2": 0.4691609527429015}, {"determining": "( FirstVNF_Mem + Max( ( CRS - FirstVNF_RAM_Server ),Min( BR ,( CRS * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( Max( ( Max( RCSe,( RRSe / MUR ) ) * ( Max( RMSe,MUR ) / ( ( MUR - RCSe ) / ( CS * CS ) ) ) ),( MUR - CS ) ) ,( RCSe - ( RRSe + ( RCSe / ( DS * MUM ) ) ) ) ),( MLU * CS ) ) )", "obj1": 0.41458333333333336, "obj2": 0.48790131380005713}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( FirstVNF_RAM + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( DS / CS ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9229166666666667, "obj2": 0.03796878926013219}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "( ( ( PN - ACS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / Max( MUR,( DS / RMSe ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7229166666666667, "obj2": 0.11563316341532416}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.10683065385373654}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9729166666666667, "obj2": 0.009503830542077516}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ACS - ( Min( BR ,( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( MLU + ( ( DS / MUM ) / MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * MUC ) ) ,Max( ( Max( MLU,MUC ) - ( MUC * DS ) ),( RRSe * Min( ( ( MUC / MUM ) / ( RMSe * MUR ) ) ,DS ) ) ) ),( MLU * CS ) ) )", "obj1": 0.42083333333333334, "obj2": 0.47882871945599237}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05433093232713139}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,( ARS + RRS ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * ( Max( MUR,MUR ) - MUM ) ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),Min( MRS ,PN ) ) ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.30625, "obj2": 0.5669709505533685}, {"determining": "( ( ( BR * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.79375, "obj2": 0.0862115633258392}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUM * Min( CS ,DS ) ) / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.489506501286593}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( FirstVNF_RAM_Server - BR ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / DS ) ),CS ) ) ),Min( ( MUR / MLU ) ,MLU ) ) ) * ( ( DS / RRSe ) + MUC ) )", "obj1": 0.9291666666666667, "obj2": 0.03427038282391059}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / MUM ) ) ) - MLU ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9729166666666667, "obj2": 0.009503830542077516}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( ( MLU / CS ),Min( MLU ,MLU ) ) ) * RCSe )", "obj1": 0.9354166666666667, "obj2": 0.03141943070915731}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5737352742422385}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( BR * FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( MLU * MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * AMS ) - Max( RRS,CRS ) ) / Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( CS / MUM ) ) / Max( MUR,( DS / MUM ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.71875, "obj2": 0.11730720092854131}, {"determining": "( ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - CRS ),AMS ) / ARS ) + ( ACS - ( Min( BR ,( ( Min( ( ACS * PN ) ,BR ) * BR ) * ( ( ( DDR + PN ) - MDR ) * CRS ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe / ( Max( ( MUM / ( MUM * Min( CS ,DS ) ) ),RMSe ) * MUC ) ) + ( MUM - MUM ) ) - Max( Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RRSe - CS ) ) ) * MUC ) ) ,Max( MLU,CS ) ),( MLU * CS ) ) )", "obj1": 0.41875, "obj2": 0.4847904213708252}, {"determining": "( ( ( ARS - PN ) - ( ( ( ARS / RRS ) - PN ) * FirstVNF_RAM_Server ) ) * ( MDR - ( ( BR + Min( ( FirstVNF_CPU + Max( AMS,( ARS * RRS ) ) ) ,PN ) ) * Min( CRS ,Max( ( FirstVNF_RAM * DDR ),BR ) ) ) ) )", "choosing": "( ( RMSe + ( RMSe / MUR ) ) - ( ( CS * ( MUC + CS ) ) + MLU ) )", "obj1": 0.3645833333333333, "obj2": 0.5343706009171414}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) ) ) - Max( MLU,CS ) )", "obj1": 0.7104166666666667, "obj2": 0.11917224694166646}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08151992854777639}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( ( RRSe - Max( MUR,RMSe ) ) * ( MLU + DS ) ) - MUR ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9395833333333333, "obj2": 0.02741639410004404}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( MLU / RRSe ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.78125, "obj2": 0.09154896196080903}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8020833333333334, "obj2": 0.08231978357586581}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( ( MLU + RMSe ) / DS ) ) ) ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),CS ) )", "obj1": 0.7958333333333333, "obj2": 0.0855706900117351}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ( DDR + FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU / FirstVNF_RAM ) / AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( Min( MUC ,MLU ) / ( MUR * ( ( CS * RMSe ) / DS ) ) ) * ( DS * DS ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7770833333333333, "obj2": 0.09310857797856277}, {"determining": "Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ),( MUR - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + RCSe ) - ( ( RRSe - DS ) * ( RRSe - MUC ) ) ) ) + MLU ) )", "obj1": 0.7041666666666667, "obj2": 0.12615484791732118}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - FirstVNF_RAM ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( RRSe + ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),( DS + RRSe ) ) ) ) )", "obj1": 0.9916666666666667, "obj2": 0.002135859071174245}, {"determining": "( ( ( ( FirstVNF_Mem * AMS ) - CRS ) - ACS ) * ( ( FirstVNF_RAM * PN ) - PN ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) - ( ( CS * ( Min( RCSe ,MUM ) - Max( ( RMSe / RRSe ),Max( Max( CS,MUR ),CS ) ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10381093238531752}, {"determining": "Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5737352742422385}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ( ( PN + FirstVNF_RAM ) / AMS ),Max( BR,FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( Max( MLU,MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10168202967922542}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ( DDR * MDR ) ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( ( Max( ( Min( MUC ,RMSe ) / ( RRSe / RMSe ) ),( RRSe / MUC ) ) + RCSe ) ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * Max( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( DS / MUM ) ),CS ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.006691625236620232}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / AMS ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.75625, "obj2": 0.09772425203004681}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / Max( FirstVNF_CPU,FirstVNF_Mem ) ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ( BR / CRS ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( Min( DS ,Max( RRSe,( Max( ( RRSe / DS ),MUR ) - MUM ) ) ) + ( MUM * CS ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.70625, "obj2": 0.12246715784283613}, {"determining": "( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( ( RRSe + MUR ) / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7375, "obj2": 0.10518069359239139}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,( RCSe / RRSe ) ) ) - MLU ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.78125, "obj2": 0.09154896196080903}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( MUC / MUC ) ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,MRS ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( Min( MUR ,( MUC + CS ) ) * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.060694449444891295}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09918819828849168}, {"determining": "( ( ( ( ( BR - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( RRSe,Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.8791666666666667, "obj2": 0.061975199935607655}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( ( RRSe - DS ) * ( MLU + DS ) ) - MUR ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9458333333333333, "obj2": 0.024403563544578483}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}], "11": [{"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,( MDR - AMS ) ) ) ) * MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( MUC / MUR ) ) - ( ( Max( ( MLU + ( MLU / MUM ) ),CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.7307122439444811}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.23357671734784732}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.4395833333333333, "obj2": 0.39366510389047543}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ARS / FirstVNF_Mem_Server ) ,Max( ( ( AMS + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * ( ( Max( MUR,RRSe ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MLU * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5240765809014596}, {"determining": "( ( FirstVNF_Mem - Max( FirstVNF_RAM_Server,Max( Min( CRS ,( ( BR + ( PN * RRS ) ) / DDR ) ),MRS ) ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( CS * RRSe ) - Max( ( ( MUR * MUR ) * Max( MLU,( ( RMSe + ( ( MUC * MLU ) + RRSe ) ) + ( ( MUM * Max( MLU,MUM ) ) + ( ( RRSe + RRSe ) * ( RRSe * MUR ) ) ) ) ) ),CS ) )", "obj1": 0.4354166666666667, "obj2": 0.43982438625691156}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,PN ) - ( DDR + PN ) ) - ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU ) ) / Max( ACS,Max( FirstVNF_RAM,CRS ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,( ( Max( MRS,ARS ) - ( FirstVNF_CPU_Server - ( ( Const - ARS ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) / ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM / ( ( MDR - MRS ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / Min( MLU ,RCSe ) ) ) + Min( Min( CS ,( DS + RCSe ) ) ,( MLU * ( MUM + RRSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( ( ( ( DS / MUC ) / RMSe ) + ( CS / DS ) ) / Min( Min( RMSe ,MUC ) ,CS ) ) )", "obj1": 0.50625, "obj2": 0.31609311520792793}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,( ( RCSe / DS ) * RRSe ) ),( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( ( MLU + Min( RRSe ,RCSe ) ) / DS ) ) ) ) )", "obj1": 0.625, "obj2": 0.21068756773735456}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3596672482409414}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * AMS ) ,PN )", "choosing": "Max( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUM * CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.2125, "obj2": 0.687481652916761}, {"determining": "( ( ( ( Min( MRS ,FirstVNF_RAM ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,( PN * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( Min( RCSe ,RRSe ) * RRSe ) ) ) - ( Min( RMSe ,CS ) + ( ( Min( DS ,RCSe ) * MUR ) / ( MLU * ( DS / RRSe ) ) ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.5041666666666667, "obj2": 0.3369341629250268}, {"determining": "Min( ( PN / FirstVNF_Mem_Server ) ,ACS )", "choosing": "( ( MLU - RCSe ) - Min( RMSe ,RRSe ) )", "obj1": 0.36666666666666664, "obj2": 0.4932073209218948}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ACS ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27723745977273145}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS * MDR ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( ( FirstVNF_CPU_Server * DDR ),FirstVNF_Mem ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( MLU ,DS ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.4787043048487767}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( ( FirstVNF_RAM_Server - Const ) * DDR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - ( MUR / RCSe ) ) + ( Min( DS ,Max( Max( Max( MUR,RCSe ),Min( Max( RMSe,CS ) ,( MUR - MUM ) ) ),RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( ( MUM / ( RCSe * Min( DS ,CS ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + Min( Min( ( MUM * MLU ) ,( Max( ( Min( MUM ,RRSe ) + MUC ),RRSe ) * Max( MUR,MUM ) ) ) ,( RRSe + RRSe ) ) ) )", "obj1": 0.475, "obj2": 0.38614253956015715}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * ( FirstVNF_Mem * PN ) ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( Max( Max( ( ( CS / MUR ) / DS ),( ( MLU / CS ) - MUC ) ),( MUC - MUM ) ) / RRSe ) ) + MUM ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( RMSe,( RRSe - CS ) ) ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5581525229126142}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "Min( ( Max( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,RCSe ) + ( Min( CS ,CS ) / DS ) ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21041666666666667, "obj2": 0.7262568073498856}, {"determining": "( ( Min( Max( ACS,Max( BR,( ACS + BR ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - Max( ( RRS + BR ),FirstVNF_CPU_Server ) ) ) ) - Min( PN ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC - ( RCSe / RRSe ) ) ,( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RMSe,CS ) / MUM ) ),CS ) ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.679406917440175}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / Max( ( MUR + RCSe ),( ( RRSe / MUR ) / RCSe ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3772851393288774}, {"determining": "( ( ( ( PN + ACS ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( ( RCSe * RCSe ) + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5376056643333236}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( PN / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( ( RRSe / RRSe ) / RCSe ) ) ) ) ,Max( MLU,CS ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( ( MUM + RCSe ) ,RMSe ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4641483261329416}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( MRS - ( ( ARS - ACS ) + FirstVNF_CPU_Server ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( RRSe ,( ( CS / ( ( MUR * RRSe ) + MLU ) ) * MUM ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,MUR ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( FirstVNF_RAM - PN ) + ( MRS * Min( Max( ( ARS / DDR ),( ARS - FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe * MLU ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6148939286253464}, {"determining": "Min( ( ARS / ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / CRS ) ) ) ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( MLU + DS ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6007862315846766}, {"determining": "( ( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) - ( MDR + DDR ) ) * BR ) * ( ( ( FirstVNF_RAM_Server - DDR ) + Max( Const,Max( CRS,RRS ) ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( RMSe / ( ( ( MUR * Max( Max( CS,MUR ),RMSe ) ) - ( Min( RCSe ,Max( RMSe,RRSe ) ) - RCSe ) ) / ( ( Min( MLU ,DS ) * ( RCSe + MLU ) ) - MUR ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.48790877867421223}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.425, "obj2": 0.4691609527429015}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( DDR ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * Max( ( CRS / ( MRS / FirstVNF_CPU ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( ( Max( ( MUM + RCSe ),( MLU - MLU ) ) * CS ) * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),( DS + ( ( MLU - ( RCSe - RCSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( RCSe * ( CS + ( MUM * CS ) ) ) * CS ) ) )", "obj1": 0.3, "obj2": 0.5699264921295516}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + Min( ( ARS / AMS ) ,PN ) ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( MLU - MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9625, "obj2": 0.015403644922649914}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5942807435115958}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( CRS * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe * RMSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( FirstVNF_CPU_Server,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) ,( FirstVNF_Mem_Server * Min( CRS ,RRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ),Min( MLU ,( MLU + ( ( ( MUC - MLU ) * MUR ) / MUM ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12822651660326462}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( FirstVNF_RAM + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( DS / CS ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9229166666666667, "obj2": 0.03796878926013219}, {"determining": "Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( FirstVNF_CPU_Server,ARS ) + AMS ) )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( DS ,MUM ) ) / ( MUC + CS ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( ( FirstVNF_CPU_Server * AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022652796293164936}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6229868166197302}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.10683065385373654}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MUR + MLU ),CS ) ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9104166666666667, "obj2": 0.04744722782067519}, {"determining": "( ( ACS - PN ) * ( ( ( ( FirstVNF_CPU_Server * ( BR - FirstVNF_Mem_Server ) ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - Min( FirstVNF_CPU_Server ,DDR ) ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( RCSe / MUM ) - MUR ) ) ) ) * ( Min( RMSe ,( RRSe + ( MUR - ( RMSe * MUR ) ) ) ) - ( MLU / RMSe ) ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + ( FirstVNF_RAM * RRS ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Min( ( RCSe / DS ) ,RRSe ) ) * RCSe )", "obj1": 0.9145833333333333, "obj2": 0.04632052328859914}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05433093232713139}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUM * Min( CS ,DS ) ) / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.489506501286593}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( ( CS + MUM ) ,DS ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( DS - ( MUC * RRSe ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08982880257536022}, {"determining": "Min( ( ARS / Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6381618472644113}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU * ( CS + MUC ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9354166666666667, "obj2": 0.026497560600107106}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( BR * FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( MLU * MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - FirstVNF_RAM ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( RRSe + ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),( DS + RRSe ) ) ) ) )", "obj1": 0.9916666666666667, "obj2": 0.002135859071174245}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) ) ) - Max( MLU,CS ) )", "obj1": 0.7104166666666667, "obj2": 0.11917224694166646}, {"determining": "( ( ( BR * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.79375, "obj2": 0.0862115633258392}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,( ARS + RRS ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * ( Max( MUR,MUR ) - MUM ) ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU_Server * AMS ) * Max( FirstVNF_CPU,FirstVNF_Mem ) ) + PN ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( DS / Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9333333333333333, "obj2": 0.03353080609132435}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08151992854777639}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * AMS ) - Max( RRS,CRS ) ) / Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( CS / MUM ) ) / Max( MUR,( DS / MUM ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.71875, "obj2": 0.11730720092854131}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.0065515027965425245}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ( DDR + FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU / FirstVNF_RAM ) / AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( Min( MUC ,MLU ) / ( MUR * ( ( CS * RMSe ) / DS ) ) ) * ( DS * DS ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( MLU / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7770833333333333, "obj2": 0.09310857797856277}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( ( ACS - PN ) - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( DDR + MDR ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / MUM ) * RRSe ) ) ) - RRSe ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.9895833333333334, "obj2": 0.005392866666609843}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( Max( ACS,Max( BR,FirstVNF_RAM ) ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( ( RCSe * RCSe ),DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,CS ) / DS ) ) )", "obj1": 0.7958333333333333, "obj2": 0.08528162046639899}, {"determining": "( ( ( ( MDR - Max( ( AMS / ARS ),Min( CRS ,RRS ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8020833333333334, "obj2": 0.08231978357586581}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( CRS - AMS ) ) ) ) ) * ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( RMSe / RRSe ) ),CS ) ) ) ) ) - ( CS + MLU ) )", "obj1": 0.7791666666666667, "obj2": 0.0903722135803132}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7458333333333333, "obj2": 0.1012921403542799}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,Max( Max( DDR,( ARS + RRS ) ),DDR ) ) ) ) * MRS ) + ( Max( ( Min( AMS ,( ( BR / FirstVNF_CPU_Server ) * BR ) ) / ( AMS / FirstVNF_RAM ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - Min( CS ,MLU ) ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.20833333333333334, "obj2": 0.726550636013774}, {"determining": "( ( ( PN - ACS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / Max( MUR,( DS / RMSe ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7229166666666667, "obj2": 0.11563316341532416}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( ( ACS - ( Const - FirstVNF_Mem_Server ) ) - Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RRSe * Min( Min( DS ,RMSe ) ,( DS + RMSe ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7229166666666667, "obj2": 0.11563316341532416}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + RCSe ) - ( ( RRSe - DS ) * ( RRSe - MUC ) ) ) ) + MLU ) )", "obj1": 0.7041666666666667, "obj2": 0.12615484791732118}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server / DDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + ( RRSe / CS ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6625, "obj2": 0.16964249998225547}, {"determining": "( ( ( ( PN - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) ) ) - Max( MLU,Max( ( MLU + ( RRSe + MUR ) ),CS ) ) )", "obj1": 0.7416666666666667, "obj2": 0.1033619227883759}, {"determining": "( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( ( RRSe + MUR ) / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7375, "obj2": 0.10518069359239139}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09918819828849168}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001283863797049}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / Max( FirstVNF_CPU,FirstVNF_Mem ) ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ( BR / CRS ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( Min( DS ,Max( RRSe,( Max( ( RRSe / DS ),MUR ) - MUM ) ) ) + ( MUM * CS ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.70625, "obj2": 0.12246715784283613}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( ( RRS * CRS ) * ( ( ( ( ( FirstVNF_CPU_Server * AMS ) * Max( FirstVNF_CPU,BR ) ) + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( ( Min( MUR ,MUR ) / ( DS / Min( RMSe ,RMSe ) ) ),Min( RMSe ,MLU ) ) ) * RCSe )", "obj1": 0.9291666666666667, "obj2": 0.03427038282391059}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( ACS,Max( BR,( ACS - BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( MUC / MUC ) ),Max( ( MLU + ( CS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7083333333333334, "obj2": 0.12242969749186629}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( FirstVNF_RAM_Server - BR ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / DS ) ),CS ) ) ),Min( ( MUR / MLU ) ,MLU ) ) ) * ( ( DS / RRSe ) + MUC ) )", "obj1": 0.9291666666666667, "obj2": 0.03427038282391059}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,Min( FirstVNF_RAM_Server ,CRS ) ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07707165720928312}, {"determining": "( ( ( ( ( ( ( ( PN + ACS ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Max( MUC,Max( MUR,RMSe ) ) + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7395833333333334, "obj2": 0.10434651918281859}], "12": [{"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,( DS / Max( ( MUC / MUC ),( RMSe * MUM ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,( MDR - AMS ) ) ) ) * MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( MUC / MUR ) ) - ( ( Max( ( MLU + ( MLU / MUM ) ),CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.7307122439444811}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( MUM / MUR ) ) + MUM ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.425, "obj2": 0.4691609527429015}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.23357671734784732}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20833333333333334, "obj2": 0.677033490428892}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( MDR * Min( BR ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MLU + MLU ) + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.46875, "obj2": 0.36853664025424443}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,PN ) - ( DDR + PN ) ) - ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU ) ) / Max( ACS,Max( FirstVNF_RAM,CRS ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,( ( Max( MRS,ARS ) - ( FirstVNF_CPU_Server - ( ( Const - ARS ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) / ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM / ( ( MDR - MRS ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / Min( MLU ,RCSe ) ) ) + Min( Min( CS ,( DS + RCSe ) ) ,( MLU * ( MUM + RRSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( ( ( ( DS / MUC ) / RMSe ) + ( CS / DS ) ) / Min( Min( RMSe ,MUC ) ,CS ) ) )", "obj1": 0.50625, "obj2": 0.31609311520792793}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,( ( RCSe / DS ) * RRSe ) ),( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( ( MLU + Min( RRSe ,RCSe ) ) / DS ) ) ) ) )", "obj1": 0.625, "obj2": 0.21068756773735456}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3596672482409414}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "( ( ( ( Min( MRS ,FirstVNF_RAM ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,( PN * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( Min( RCSe ,RRSe ) * RRSe ) ) ) - ( Min( RMSe ,CS ) + ( ( Min( DS ,RCSe ) * MUR ) / ( MLU * ( DS / RRSe ) ) ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.5041666666666667, "obj2": 0.3369341629250268}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ACS ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.27723745977273145}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( ( FirstVNF_CPU_Server * DDR ),FirstVNF_Mem ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( MLU ,DS ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.4787043048487767}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "Min( Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( ( ( MLU + ( DS / DS ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.35, "obj2": 0.5201438902260063}, {"determining": "Min( ( PN / FirstVNF_Mem_Server ) ,ACS )", "choosing": "( ( MLU - RCSe ) - Min( RMSe ,RRSe ) )", "obj1": 0.36666666666666664, "obj2": 0.4932073209218948}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * ( FirstVNF_Mem * PN ) ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( Max( Max( ( ( CS / MUR ) / DS ),( ( MLU / CS ) - MUC ) ),( MUC - MUM ) ) / RRSe ) ) + MUM ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( RMSe,( RRSe - CS ) ) ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5581525229126142}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( ( ( RRS / ( ACS / MDR ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,PN ) ) )", "choosing": "( ( RMSe / ( MLU * MUR ) ) - Max( Min( Max( MUM,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.14881371136691052}, {"determining": "Min( ( ARS / ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / CRS ) ) ) ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( MLU - MUR ) ) ,RCSe ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( MLU + DS ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( FirstVNF_RAM - PN ) + ( MRS * Min( Max( ( ARS / DDR ),( ARS - FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe * MLU ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6148939286253464}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.18312004176466823}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6007862315846766}, {"determining": "( ( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) - ( MDR + DDR ) ) * BR ) * ( ( ( FirstVNF_RAM_Server - DDR ) + Max( Const,Max( CRS,RRS ) ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( RMSe / ( ( ( MUR * Max( Max( CS,MUR ),RMSe ) ) - ( Min( RCSe ,Max( RMSe,RRSe ) ) - RCSe ) ) / ( ( Min( MLU ,DS ) * ( RCSe + MLU ) ) - MUR ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.48790877867421223}, {"determining": "Min( ( ARS / ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / Min( ACS ,( DDR * ACS ) ) ) ) ) ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( RCSe / MUM ) ) ,RCSe ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( MLU + DS ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6618842844995102}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3, "obj2": 0.568108008353304}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,Const ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + MDR ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( Min( ( RRSe - Min( DS ,MUC ) ) ,RCSe ) + RMSe ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.7, "obj2": 0.13658010065783818}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( DDR ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * Max( ( CRS / ( MRS / FirstVNF_CPU ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( ( Max( ( MUM + RCSe ),( MLU - MLU ) ) * CS ) * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),( DS + ( ( MLU - ( RCSe - RCSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5942807435115958}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( Max( AMS,FirstVNF_CPU_Server ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU * Max( RMSe,RMSe ) ) ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - ( RMSe / RRSe ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.10677690785742985}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MUR + MLU ),CS ) ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9104166666666667, "obj2": 0.04744722782067519}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( Max( ACS,Max( BR,FirstVNF_RAM ) ),Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( FirstVNF_RAM + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( DS / CS ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9229166666666667, "obj2": 0.03796878926013219}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6520833333333333, "obj2": 0.17609719381638791}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( AMS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),RCSe ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.0454335211431983}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) + ( ( Const - RRS ) + DDR ) ) ) ,ACS )", "choosing": "( ( ( Min( RCSe ,( RRSe - ( Max( ( MUR / CS ),MUM ) + MUR ) ) ) * ( MLU * RRSe ) ) * DS ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( ( PN + ACS ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( ( RCSe * RCSe ) + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5376056643333236}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUM * Min( CS ,DS ) ) / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.489506501286593}, {"determining": "( ( ( ( ( Max( ACS,Max( BR,FirstVNF_RAM ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + Max( AMS,MRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Max( ( DS + MUC ),RCSe ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9583333333333334, "obj2": 0.018519534247021647}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / ( BR / ACS ) ) ) * ( Max( Min( Min( CRS ,ACS ) ,( RRS + PN ) ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,ACS )", "choosing": "( ( MLU - RCSe ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * RCSe ) ) ) )", "obj1": 0.33125, "obj2": 0.530815133748929}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ARS / FirstVNF_Mem_Server ) ,Max( ( ( AMS + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * ( ( Max( MUR,RRSe ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MLU * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5240765809014596}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( ( CS + MUM ) ,DS ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( DS - ( MUC * RRSe ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08982880257536022}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( MRS - ( ( ARS - ACS ) + FirstVNF_CPU_Server ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( RRSe ,( ( CS / ( ( MUR * RRSe ) + MLU ) ) * MUM ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,MUR ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS / ( RMSe + CS ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9333333333333333, "obj2": 0.03273281483157581}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - FirstVNF_Mem_Server ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,CS ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU * ( CS + MUC ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9354166666666667, "obj2": 0.026497560600107106}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),Max( BR,PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05433093232713139}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.925, "obj2": 0.03302215016855544}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "( ( ( ( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( RRSe - MUC ) ) ) ) + MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12778332566096132}, {"determining": "( ( ( BR * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.79375, "obj2": 0.0862115633258392}, {"determining": "( ( ACS - PN ) * ( ( ( ( FirstVNF_CPU_Server * ( BR - FirstVNF_Mem_Server ) ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - Min( FirstVNF_CPU_Server ,DDR ) ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( RCSe / MUM ) - MUR ) ) ) ) * ( Min( RMSe ,( RRSe + ( MUR - ( RMSe * MUR ) ) ) ) - ( MLU / RMSe ) ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( BR * FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( MLU * MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( PN / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( ( RRSe / RRSe ) / RCSe ) ) ) ) ,Max( MLU,CS ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09918819828849168}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08151992854777639}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( CRS - AMS ) ) ) ) ) * ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( RMSe / RRSe ) ),CS ) ) ) ) ) - ( CS + MLU ) )", "obj1": 0.7791666666666667, "obj2": 0.0903722135803132}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.0065515027965425245}, {"determining": "( ( ( PN - ACS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( DS / MUM ) ) / Max( MUR,( DS / RMSe ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7229166666666667, "obj2": 0.11563316341532416}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( ( ACS - PN ) - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( DDR + MDR ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / MUM ) * RRSe ) ) ) - RRSe ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.9895833333333334, "obj2": 0.005392866666609843}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * AMS ) - Max( RRS,CRS ) ) / Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MLU + ( CS / MUM ) ) / Max( MUR,( DS / MUM ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.71875, "obj2": 0.11730720092854131}, {"determining": "( ( ( ACS - ( Const - FirstVNF_Mem_Server ) ) - Min( RRS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( DS * MUM ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RRSe * Min( Min( DS ,RMSe ) ,( DS + RMSe ) ) ),Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7229166666666667, "obj2": 0.11563316341532416}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + Min( ( ARS / AMS ) ,PN ) ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( MLU - MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9625, "obj2": 0.015403644922649914}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( CS + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.99375, "obj2": 0.0015635766400132229}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server / DDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + ( RRSe / CS ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6625, "obj2": 0.16964249998225547}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( ( RRSe + Min( ( RCSe / DS ) ,RRSe ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7125, "obj2": 0.1177744063625228}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + RCSe ) - ( ( RRSe - DS ) * ( RRSe - MUC ) ) ) ) + MLU ) )", "obj1": 0.7041666666666667, "obj2": 0.12615484791732118}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + FirstVNF_CPU_Server ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + Min( ( ARS / AMS ) ,PN ) ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( MLU - ( RCSe / MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.9625, "obj2": 0.015403644922649914}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( ( MDR - PN ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,CS ) / DS ) ) )", "obj1": 0.8, "obj2": 0.08479151801745789}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS * ACS ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUR + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,Min( FirstVNF_RAM_Server ,CRS ) ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07707165720928312}, {"determining": "( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( ( RRSe + MUR ) / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7375, "obj2": 0.10518069359239139}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( Min( Min( CRS ,ACS ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) ) ) - Max( MLU,CS ) )", "obj1": 0.7104166666666667, "obj2": 0.11917224694166646}, {"determining": "( ( ACS - PN ) * ( ( ( ( FirstVNF_CPU_Server * ( BR - FirstVNF_Mem_Server ) ) - FirstVNF_RAM ) / ( ( ( AMS / ( MRS - Min( FirstVNF_CPU_Server ,DDR ) ) ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( RMSe,( DS * ( ( RCSe / MUM ) - MUR ) ) ) ) * ( Min( RMSe ,( RRSe + ( MUR - ( RMSe * MUR ) ) ) ) - ( MLU / RMSe ) ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / Max( FirstVNF_CPU,FirstVNF_Mem ) ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ( BR / CRS ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( Min( DS ,Max( RRSe,( Max( ( RRSe / DS ),MUR ) - MUM ) ) ) + ( MUM * CS ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.70625, "obj2": 0.12246715784283613}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - FirstVNF_RAM ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( RMSe - DS ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( RRSe + ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( CS / MUM ) ) + ( Max( RRSe,MUC ) / MUM ) ),( DS + RRSe ) ) ) ) )", "obj1": 0.9916666666666667, "obj2": 0.002135859071174245}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS * MDR ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "Min( ( ( AMS / Min( ( Min( ( FirstVNF_RAM_Server * BR ) ,PN ) / ( AMS / MRS ) ) ,( ARS - Max( ARS,ACS ) ) ) ) * ( Max( CRS,( FirstVNF_CPU - MRS ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( ( MLU - RCSe ) * CS ) ) ) )", "obj1": 0.37083333333333335, "obj2": 0.4924275857901669}], "13": [{"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,( MDR - AMS ) ) ) ) * MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( MUC / MUR ) ) - ( ( Max( ( MLU + ( MLU / MUM ) ),CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.7307122439444811}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.23357671734784732}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20833333333333334, "obj2": 0.677033490428892}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "Min( ( Max( BR,FirstVNF_RAM ) / ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / Min( ACS ,( ( FirstVNF_CPU * RRS ) * ACS ) ) ) ) ) ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.660849306927689}, {"determining": "( ( ( ( Min( RRS ,RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( CS - RCSe ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.41875, "obj2": 0.41896209021637604}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,PN ) - ( DDR + PN ) ) - ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU ) ) / Max( ACS,Max( FirstVNF_RAM,CRS ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,( ( Max( MRS,ARS ) - ( FirstVNF_CPU_Server - ( ( Const - ARS ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) / ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM / ( ( MDR - MRS ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / Min( MLU ,RCSe ) ) ) + Min( Min( CS ,( DS + RCSe ) ) ,( MLU * ( MUM + RRSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( ( ( ( DS / MUC ) / RMSe ) + ( CS / DS ) ) / Min( Min( RMSe ,MUC ) ,CS ) ) )", "obj1": 0.50625, "obj2": 0.31609311520792793}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4125, "obj2": 0.4392663906102301}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( AMS + Min( RRS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS * ( DS * DS ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,( ( RCSe / DS ) * RRSe ) ),( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( ( MLU + Min( RRSe ,RCSe ) ) / DS ) ) ) ) )", "obj1": 0.625, "obj2": 0.21068756773735456}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "( ( ( ( PN - CRS ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,Min( ( RRSe - ( ( MLU + DS ) + Max( Max( DS,( MUR - RMSe ) ),MLU ) ) ) ,MLU ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3447449795817775}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( ( FirstVNF_CPU_Server * DDR ),FirstVNF_Mem ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( DS + RRSe ) ,( MLU / ( Min( MLU ,DS ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.4787043048487767}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,RRSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.5375, "obj2": 0.26732425344086996}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( MDR * Min( BR ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MLU + MLU ) + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RMSe - MUR ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.46875, "obj2": 0.36853664025424443}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( Min( FirstVNF_RAM ,CRS ),FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * MLU ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.37357563237764946}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( Min( MRS ,FirstVNF_RAM ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,( PN * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( Min( RCSe ,RRSe ) * RRSe ) ) ) - ( Min( RMSe ,CS ) + ( ( Min( DS ,RCSe ) * MUR ) / ( MLU * ( DS / RRSe ) ) ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.5041666666666667, "obj2": 0.3369341629250268}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * ( FirstVNF_Mem * PN ) ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( Max( Max( ( ( CS / MUR ) / DS ),( ( MLU / CS ) - MUC ) ),( MUC - MUM ) ) / RRSe ) ) + MUM ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( RMSe,( RRSe - CS ) ) ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5581525229126142}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( FirstVNF_RAM - PN ) + ( MRS * Min( Max( ( ARS / DDR ),( ARS - FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe * MLU ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6148939286253464}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( ( ( RRS / ( ACS / MDR ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,PN ) ) )", "choosing": "( ( RMSe / ( MLU * MUR ) ) - Max( Min( Max( MUM,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.14881371136691052}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3625, "obj2": 0.5032935861081073}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "Min( Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( ( ( MLU + ( DS / DS ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.35, "obj2": 0.5201438902260063}, {"determining": "( ( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) - ( MDR + DDR ) ) * BR ) * ( ( ( FirstVNF_RAM_Server - DDR ) + Max( Const,Max( CRS,RRS ) ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( RMSe / ( ( ( MUR * Max( Max( CS,MUR ),RMSe ) ) - ( Min( RCSe ,Max( RMSe,RRSe ) ) - RCSe ) ) / ( ( Min( MLU ,DS ) * ( RCSe + MLU ) ) - MUR ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.48790877867421223}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,Const ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + MDR ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( Min( ( RRSe - Min( DS ,MUC ) ) ,RCSe ) + RMSe ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.7, "obj2": 0.13658010065783818}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( Max( ACS,Max( BR,FirstVNF_RAM ) ),Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( Min( CS ,RRSe ) / MUC ) ) ) ) ,Max( MLU,CS ) ) ) )", "obj1": 0.6458333333333334, "obj2": 0.18880520886070667}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) + ( ( Const - RRS ) + DDR ) ) ) ,ACS )", "choosing": "( ( ( Min( RCSe ,( RRSe - ( Max( ( MUR / CS ),MUM ) + MUR ) ) ) * ( MLU * RRSe ) ) * DS ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MUR + MLU ),CS ) ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9104166666666667, "obj2": 0.04744722782067519}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6520833333333333, "obj2": 0.17609719381638791}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),Max( BR,PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05433093232713139}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( DDR - ( FirstVNF_Mem_Server / ACS ) ) / ACS ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUM - RRSe ) / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / CS ) ),( MUM / ( MUC + MUM ) ) ) ) ) ) + MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.09918819828849168}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( Max( Const,( FirstVNF_CPU_Server / DDR ) ) - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( ( MUM * Min( CS ,DS ) ) / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.489506501286593}, {"determining": "( ( ( ( ( Max( ACS,Max( BR,FirstVNF_RAM ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + Max( AMS,MRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Max( ( DS + MUC ),RCSe ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9583333333333334, "obj2": 0.018519534247021647}, {"determining": "Min( ( PN / FirstVNF_Mem_Server ) ,ACS )", "choosing": "( ( MLU - RCSe ) - Min( RMSe ,RRSe ) )", "obj1": 0.36666666666666664, "obj2": 0.4932073209218948}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.18312004176466823}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ARS / FirstVNF_Mem_Server ) ,Max( ( ( AMS + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * ( ( Max( MUR,RRSe ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MLU * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5240765809014596}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3, "obj2": 0.568108008353304}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( Max( AMS,FirstVNF_CPU_Server ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU * Max( RMSe,RMSe ) ) ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - ( RMSe / RRSe ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.10677690785742985}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( FirstVNF_RAM + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( DS / CS ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9229166666666667, "obj2": 0.03796878926013219}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( BR * FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( MLU * MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( ( AMS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + ACS ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),RCSe ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.91875, "obj2": 0.04365520720305614}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU * ( CS + MUC ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9354166666666667, "obj2": 0.026497560600107106}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ACS ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3, "obj2": 0.568108008353304}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "( ( ( ( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( MDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12683830753305192}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( RRSe * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10254944697112314}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - FirstVNF_Mem_Server ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,CS ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.05175986456413751}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( DDR ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * Max( ( CRS / ( MRS / FirstVNF_CPU ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( ( Max( ( MUM + RCSe ),( MLU - MLU ) ) * CS ) * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),( DS + ( ( MLU - ( RCSe - RCSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),Max( ( ( MLU * ( CS + MUC ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9291666666666667, "obj2": 0.02811230401735133}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.0065515027965425245}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( CRS - AMS ) ) ) ) ) * ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( RMSe / RRSe ) ),CS ) ) ) ) ) - ( CS + MLU ) )", "obj1": 0.7791666666666667, "obj2": 0.0903722135803132}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( ( CS + MUM ) ,DS ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( DS - ( MUC * RRSe ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08982880257536022}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( ( ACS - PN ) - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( MDR - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( ( ( MLU / MUC ) - Max( MUM,( RRSe * Max( DS,MUR ) ) ) ) - Max( MLU,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9895833333333334, "obj2": 0.0052684449961146575}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( MRS + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + Min( ( ARS / AMS ) ,PN ) ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9645833333333333, "obj2": 0.014824061516912238}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + RMSe ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7166666666666667, "obj2": 0.11519221895930741}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( ( MRS - ( ( ARS - ACS ) + FirstVNF_CPU_Server ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( RRSe ,( ( CS / ( ( MUR * RRSe ) + MLU ) ) * MUM ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,MUR ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( FirstVNF_Mem + Min( ( ( ( ARS / AMS ) + ARS ) * DDR ) ,FirstVNF_Mem ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( RRSe + RMSe ) / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUR * Max( Max( CS,MUR ),RMSe ) ) - ( Min( RCSe ,Max( RMSe,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.8, "obj2": 0.08471241639416424}, {"determining": "( ( AMS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),RCSe ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.0454335211431983}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / RRSe ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08772240076805751}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( ACS,FirstVNF_Mem ) ) ) / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( ( ( MLU * CS ) + RRSe ) ,( MLU / ( ( ( MLU - MLU ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) ) ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.41041666666666665, "obj2": 0.4787043048487767}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) ) - ( ( CS * ( Min( DS ,Max( ( ( RCSe - RMSe ) + ( RRSe + MLU ) ),MUM ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.8833333333333333, "obj2": 0.06017135557982921}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + ( MLU + ( DS / MUC ) ) ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10353925866524187}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( ( BR * ( ( ( ( ( ACS * AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - ( ( BR * FirstVNF_CPU ) + ( FirstVNF_Mem_Server + DDR ) ) ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Min( DS ,Max( MUR,RCSe ) ) + ( RRSe / RRSe ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.925, "obj2": 0.03302215016855544}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server / DDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + ( RRSe / CS ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6625, "obj2": 0.16964249998225547}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / Max( FirstVNF_CPU,FirstVNF_Mem ) ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ( BR / CRS ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( Min( DS ,Max( RRSe,( Max( ( RRSe / DS ),MUR ) - MUM ) ) ) + ( MUM * CS ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.70625, "obj2": 0.12246715784283613}, {"determining": "( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( RCSe / ( ( RRSe + MUR ) / MUC ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ) + MLU ) )", "obj1": 0.7375, "obj2": 0.10518069359239139}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( CRS - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( RRSe,MUR ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9270833333333334, "obj2": 0.032170854515565894}, {"determining": "( ( FirstVNF_CPU_Server / MRS ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * RMSe ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,Min( FirstVNF_RAM_Server ,CRS ) ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe / DS ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07707165720928312}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( RRS,CRS ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + RCSe ) - ( ( RRSe - DS ) * ( RRSe - MUC ) ) ) ) + MLU ) )", "obj1": 0.7041666666666667, "obj2": 0.12615484791732118}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( PN + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.06136686453828919}], "14": [{"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( RCSe,MUC ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,( MDR - AMS ) ) ) ) * MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( MUC / MUR ) ) - ( ( Max( ( MLU + ( MLU / MUM ) ),CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.7307122439444811}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * ( ( PN - FirstVNF_Mem_Server ) + Max( ( ( MRS - FirstVNF_Mem_Server ) * BR ),MRS ) ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RCSe * ( DS - RCSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.36126806979496856}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.23357671734784732}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20833333333333334, "obj2": 0.677033490428892}, {"determining": "( ( ( ( Min( RRS ,RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( CS - RCSe ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.41875, "obj2": 0.41896209021637604}, {"determining": "( ( ( ( PN - CRS ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,Min( ( RRSe - ( ( MLU + DS ) + Max( Max( DS,( MUR - RMSe ) ),MLU ) ) ) ,MLU ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3447449795817775}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ARS,BR ) / Min( DDR ,MDR ) ) )", "choosing": "( ( Max( RMSe,( ( MUC + RMSe ) + RMSe ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( Min( MUR ,MUR ) * RMSe ) ) ),( ( ( ( RCSe - DS ) + ( MUR - MLU ) ) * MUC ) - RRSe ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.43477312171230076}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "( ( ( ( PN - CRS ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * PN ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( MLU + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,Min( ( RRSe - ( ( MLU + DS ) + Max( Max( DS,( MUR - RMSe ) ),MLU ) ) ) ,MLU ) ) )", "obj1": 0.5791666666666667, "obj2": 0.26011432610359964}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "( ( ( ( Min( MRS ,FirstVNF_RAM ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( AMS + Min( RRS ,( PN * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( Min( RCSe ,RRSe ) * RRSe ) ) ) - ( Min( RMSe ,CS ) + ( ( Min( DS ,RCSe ) * MUR ) / ( MLU * ( DS / RRSe ) ) ) ) ) ) + MLU ) - Max( MLU,CS ) )", "obj1": 0.5041666666666667, "obj2": 0.3369341629250268}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,PN ) - ( DDR + PN ) ) - ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU ) ) / Max( ACS,Max( FirstVNF_RAM,CRS ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,( ( Max( MRS,ARS ) - ( FirstVNF_CPU_Server - ( ( Const - ARS ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) / ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM / ( ( MDR - MRS ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / Min( MLU ,RCSe ) ) ) + Min( Min( CS ,( DS + RCSe ) ) ,( MLU * ( MUM + RRSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( ( ( ( DS / MUC ) / RMSe ) + ( CS / DS ) ) / Min( Min( RMSe ,MUC ) ,CS ) ) )", "obj1": 0.50625, "obj2": 0.31609311520792793}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU / MUR ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2952731116213137}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( FirstVNF_RAM - PN ) + ( MRS * Min( Max( ( ARS / DDR ),( ARS - FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe * MLU ) + MUM ) - ( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6148939286253464}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,RRSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "Min( ( Max( BR,FirstVNF_RAM ) / ( BR * ( ( ( FirstVNF_RAM_Server + ( MDR + DDR ) ) - MDR ) + ( BR / Min( ACS ,( ( FirstVNF_CPU * RRS ) * ACS ) ) ) ) ) ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( ( CS / ( MUR + CS ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6588295933218893}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6622472098703912}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( MUR,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5490675947686885}, {"determining": "( ( ( Max( MDR,FirstVNF_Mem_Server ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ACS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Max( CS,( RRSe + MLU ) ) - ( DS * ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.875, "obj2": 0.06687857964603729}, {"determining": "Min( Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( ( ( MLU + ( DS / DS ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.35, "obj2": 0.5201438902260063}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ACS ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( ( ( BR + ( ( ( MDR - FirstVNF_Mem ) * BR ) + AMS ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( ( RMSe / RRSe ) / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.5045467154305694}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( Min( CS ,RRSe ) / MUC ) ) ) ) ,Max( MLU,CS ) ) ) )", "obj1": 0.6458333333333334, "obj2": 0.18880520886070667}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * ( FirstVNF_Mem * PN ) ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( Max( Max( ( ( CS / MUR ) / DS ),( ( MLU / CS ) - MUC ) ),( MUC - MUM ) ) / RRSe ) ) + MUM ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( RMSe,( RRSe - CS ) ) ) ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5581525229126142}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( Max( ACS,Max( BR,FirstVNF_RAM ) ),Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,Const ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + MDR ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( Min( ( RRSe - Min( DS ,MUC ) ) ,RCSe ) + RMSe ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.7, "obj2": 0.13658010065783818}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) + ( ( Const - RRS ) + DDR ) ) ) ,ACS )", "choosing": "( ( ( Min( RCSe ,( RRSe - ( Max( ( MUR / CS ),MUM ) + MUR ) ) ) * ( MLU * RRSe ) ) * DS ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16755719322495885}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + ( MDR - PN ) ),FirstVNF_RAM ) ) ) - CRS ) - FirstVNF_Mem_Server ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,CS ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.051736042168179674}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "Min( ( PN / FirstVNF_Mem_Server ) ,ACS )", "choosing": "( ( MLU - RCSe ) - Min( RMSe ,RRSe ) )", "obj1": 0.36666666666666664, "obj2": 0.4932073209218948}, {"determining": "( ( ACS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - MRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MUR + MLU ),CS ) ) ) ) ) * ( RMSe - CS ) )", "obj1": 0.9104166666666667, "obj2": 0.04744722782067519}, {"determining": "( ( ( ( ( Max( ACS,Max( BR,FirstVNF_RAM ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + Max( AMS,MRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Max( ( DS + MUC ),RCSe ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9583333333333334, "obj2": 0.018519534247021647}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3625, "obj2": 0.5032935861081073}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( BR + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + Min( ( ARS / FirstVNF_RAM ) ,PN ) ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * ( CS + Max( Max( RMSe,RMSe ),RMSe ) ) ) ) ) ) - ( Min( MUR ,( ( Min( ( MUM + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( MLU + DS ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.9625, "obj2": 0.014764439933222743}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.18312004176466823}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( FirstVNF_RAM + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU + ( DS / CS ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - Max( MLU,CS ) )", "obj1": 0.9229166666666667, "obj2": 0.03796878926013219}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ARS / FirstVNF_Mem_Server ) ,Max( ( ( AMS + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * ( ( Max( MUR,RRSe ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MLU * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5240765809014596}, {"determining": "( ( Max( AMS,FirstVNF_CPU_Server ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MLU * Max( RMSe,RMSe ) ) ),CS ) ) ) ) - Max( Min( Max( CS,( MUR - ( RMSe / RRSe ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.10677690785742985}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3, "obj2": 0.568108008353304}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( Const + ( AMS - ( CRS + FirstVNF_Mem ) ) ) - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe + Max( DS,RRSe ) ) )", "obj1": 0.6958333333333333, "obj2": 0.1467394911981063}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( DDR ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * Max( ( CRS / ( MRS / FirstVNF_CPU ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( ( Max( ( MUM + RCSe ),( MLU - MLU ) ) * CS ) * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),( DS + ( ( MLU - ( RCSe - RCSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6854166666666667, "obj2": 0.15178746751671146}, {"determining": "( ( ( FirstVNF_Mem + Min( ( ( ( ARS / AMS ) + ARS ) * DDR ) ,FirstVNF_Mem ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( RRSe + RMSe ) / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUR * Max( Max( CS,MUR ),RMSe ) ) - ( Min( RCSe ,Max( RMSe,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.8, "obj2": 0.08471241639416424}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( ( ACS - PN ) - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( MDR - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( ( ( MLU / MUC ) - Max( MUM,( RRSe * Max( DS,MUR ) ) ) ) - Max( MLU,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9895833333333334, "obj2": 0.0052684449961146575}, {"determining": "( ( FirstVNF_CPU_Server / MRS ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * RMSe ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_RAM_Server,( CRS / ARS ) ),Max( BR,PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( ( RMSe / RRSe ) / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MUC ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}, {"determining": "( ( AMS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - PN ) + ACS ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ) ) ) * ( RMSe - CS ) )", "obj1": 0.9166666666666666, "obj2": 0.04346551369681724}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + RMSe ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7166666666666667, "obj2": 0.11519221895930741}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( Min( Min( FirstVNF_CPU_Server ,( DDR * DDR ) ) ,RRS ) + Min( RRS ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR / ( CRS / Max( Const,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( ( RCSe * RCSe ),RCSe ) ) - ( DS * ( ( RCSe / RCSe ) * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * Min( RRSe ,RCSe ) ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( MLU * MUC ) ) ) ) ) + MLU ) )", "obj1": 0.9958333333333333, "obj2": 0.0018244108735866057}, {"determining": "( ( ( ( PN + ( Min( Const ,Min( ( MRS + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,ARS ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - ( MUR - Max( Max( RCSe,( Min( ( MUC / Min( DS ,RMSe ) ) ,DS ) * MLU ) ),( RCSe * ( MUC + DS ) ) ) ) )", "obj1": 0.3, "obj2": 0.568108008353304}, {"determining": "( ( ( ( ( ( ( PN - Min( FirstVNF_RAM_Server ,CRS ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( ( FirstVNF_CPU_Server * BR ) - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( RCSe * MUR ) + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * DS ),( MUR - CS ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6770833333333334, "obj2": 0.15217654731937352}, {"determining": "( ( ( ( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( MDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12683830753305192}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / RRSe ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08772240076805751}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ARS - MRS ) - CRS ) - ACS ) * ( MDR - PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),( MLU * CS ) ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11980534633043033}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.0065515027965425245}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU * ( CS + MUC ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9354166666666667, "obj2": 0.026497560600107106}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6520833333333333, "obj2": 0.17609719381638791}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( BR * ( ( ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),RRS ) + FirstVNF_RAM_Server ) - ( ( MDR * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + ACS ) ) - ( FirstVNF_CPU_Server - ARS ) ) * ( MDR - PN ) )", "choosing": "( ( MUR * ( MUC * RRSe ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( MLU + ( ( MLU + RMSe ) + MUR ) ) ) ) + ( ( ( ( RCSe * MUR ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0851124177447314}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( ( CS + MUM ) ,DS ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( DS - ( MUC * RRSe ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08982880257536022}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - Max( BR,( ACS + ( ACS * FirstVNF_RAM ) ) ) ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ( ( CRS / DDR ) + FirstVNF_Mem ) ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RRSe ) ) - ( MUR + Min( RRSe ,MUR ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( DS + ( CS - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8916666666666667, "obj2": 0.053903305348428125}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( ( ( RRS / ( ACS / MDR ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,PN ) ) )", "choosing": "( ( RMSe / ( MLU * MUR ) ) - Max( Min( Max( MUM,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.14881371136691052}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "Min( ( Max( BR,FirstVNF_RAM ) / ( BR * ( ( ( MDR + PN ) - MDR ) + ( BR / Min( ACS ,( ( FirstVNF_CPU * RRS ) * ACS ) ) ) ) ) ) ,PN )", "choosing": "Max( ( ( ( MLU + RMSe ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( MUM + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.660849306927689}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),Max( BR,PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MUC ) ) ) ) ) + MLU ) )", "obj1": 0.8854166666666666, "obj2": 0.05433093232713139}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( RRSe * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10254944697112314}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( ( AMS / Max( FirstVNF_CPU,FirstVNF_Mem ) ) + ( ( MDR * Const ) + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) - CRS ) - ( BR / CRS ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + ( Min( DS ,Max( RCSe,RCSe ) ) - MLU ) ) - ( ( Min( DS ,Max( RRSe,( Max( ( RRSe / DS ),MUR ) - MUM ) ) ) + ( MUM * CS ) ) + ( Min( Min( ( CS + ( CS + ( CS - MLU ) ) ) ,RRSe ) ,RRSe ) + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12157264013625042}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM_Server - DDR ) + ( Min( RRS ,Min( Const ,Max( ACS,FirstVNF_Mem ) ) ) / FirstVNF_CPU_Server ) ) + Min( ( CRS * Max( CRS,Min( RRS ,DDR ) ) ) ,ACS ) ) ) * ( ( BR * ( ( ( ( ( FirstVNF_CPU_Server * AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) + PN ) - ( ( BR * FirstVNF_CPU ) + ( FirstVNF_Mem_Server + DDR ) ) ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( MUC,Min( ( RRSe * CS ) ,RRSe ) ) / Max( MUC,Max( ( MUR + MLU ),MUM ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.925, "obj2": 0.03302215016855544}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,CRS ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( RRSe * ( DS * DS ) ) ) ) - ( ( MLU * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.1001948278183831}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server / DDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + ( RRSe / CS ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6625, "obj2": 0.16964249998225547}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}], "15": [{"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( CRS * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( ( ACS - PN ) - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) + ( MDR - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( RCSe,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( MLU,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( RCSe,MUC ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Min( CRS ,( MDR - AMS ) ) ) ) * MRS ) + ( Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * BR ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + ( MUC / MUR ) ) - ( ( Max( ( MLU + ( MLU / MUM ) ),CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) / ( ( MUR + Max( CS,RCSe ) ) + MUC ) )", "obj1": 0.19791666666666666, "obj2": 0.7307122439444811}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * ( ( PN - FirstVNF_Mem_Server ) + Max( ( ( MRS - FirstVNF_Mem_Server ) * BR ),MRS ) ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RCSe * ( DS - RCSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.36126806979496856}, {"determining": "( ( ( ( PN - CRS ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,Min( ( RRSe - ( ( MLU + DS ) + Max( Max( DS,( MUR - RMSe ) ),MLU ) ) ) ,MLU ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3447449795817775}, {"determining": "( ( ( ( Min( RRS ,RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( CS - RCSe ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.41875, "obj2": 0.41896209021637604}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.23357671734784732}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ARS,BR ) / Min( DDR ,MDR ) ) )", "choosing": "( ( Max( RMSe,( ( MUC + RMSe ) + RMSe ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( Min( MUR ,MUR ) * RMSe ) ) ),( ( ( ( RCSe - DS ) + ( MUR - MLU ) ) * MUC ) - RRSe ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.43477312171230076}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6981969675161355}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MLU + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.575, "obj2": 0.25964852880008527}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20833333333333334, "obj2": 0.677033490428892}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( MUC / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6104166666666667, "obj2": 0.21112947622193254}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) ,PN )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6567316724736292}, {"determining": "( ( ( ( ( ( ( MDR + PN ) - MDR ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( MLU + RMSe ) / DS ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3248893436958687}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU / MUR ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2952731116213137}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * MUC ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6072670831848572}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,PN ) - ( DDR + PN ) ) - ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU ) ) / Max( ACS,Max( FirstVNF_RAM,CRS ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,( ( Max( MRS,ARS ) - ( FirstVNF_CPU_Server - ( ( Const - ARS ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) / ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM / ( ( MDR - MRS ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / Min( MLU ,RCSe ) ) ) + Min( Min( CS ,( DS + RCSe ) ) ,( MLU * ( MUM + RRSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( ( ( ( DS / MUC ) / RMSe ) + ( CS / DS ) ) / Min( Min( RMSe ,MUC ) ,CS ) ) )", "obj1": 0.50625, "obj2": 0.31609311520792793}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6622472098703912}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "( ( ( BR - ( FirstVNF_RAM_Server * MDR ) ) / FirstVNF_Mem_Server ) + ( ( AMS - PN ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - ( RCSe * RMSe ) ) ) / ( MUM / Max( MUR,( ( MUC / RCSe ) - MUC ) ) ) ) + MUC ) - ( ( ( MUM / ( MUR - CS ) ) * Min( RRSe ,MUM ) ) * ( ( ( MUR + ( DS - ( CS - MUM ) ) ) * ( MUR * RMSe ) ) + RMSe ) ) ) / ( MLU + ( DS / ( Max( RCSe,Max( RCSe,RCSe ) ) * DS ) ) ) )", "obj1": 0.2, "obj2": 0.7275457172882902}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.8458333333333333, "obj2": 0.07072905403724113}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( Max( ACS,Max( BR,FirstVNF_RAM ) ),Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( MLU + ( DS / MUM ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5787692463201055}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,RRSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "( ( ( Max( MDR,FirstVNF_Mem_Server ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ACS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Max( CS,( RRSe + MLU ) ) - ( DS * ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.875, "obj2": 0.06687857964603729}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( BR - Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - ( CS + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10607952488073132}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + ( MDR - PN ) ),FirstVNF_RAM ) ) ) - CRS ) - FirstVNF_Mem_Server ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,CS ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.051736042168179674}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + Min( FirstVNF_RAM ,CRS ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),Max( BR,PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( CS / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MUC ) ) ) ) ) + MLU ) )", "obj1": 0.9104166666666667, "obj2": 0.04493750160969483}, {"determining": "Min( Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( ( ( MLU + ( DS / DS ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.35, "obj2": 0.5201438902260063}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,Const ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + MDR ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( Min( ( RRSe - Min( DS ,MUC ) ) ,RCSe ) + RMSe ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( RRSe + RCSe ) - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.7, "obj2": 0.13658010065783818}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) + ( ( Const - RRS ) + DDR ) ) ) ,ACS )", "choosing": "( ( ( Min( RCSe ,( RRSe - ( Max( ( MUR / CS ),MUM ) + MUR ) ) ) * ( MLU * RRSe ) ) * DS ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( MUR,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5490675947686885}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "( ( ( ( PN + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( AMS + FirstVNF_RAM ) ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( ( RRSe + ( RMSe + RCSe ) ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( ( MUM + RCSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.35625, "obj2": 0.507052999089892}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + BR )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( MUR / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16431840352411364}, {"determining": "( ( ( ( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( MDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + ARS ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + MLU ) )", "obj1": 0.7020833333333333, "obj2": 0.12683830753305192}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( PN - Max( ACS,Max( BR,( ACS + BR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * PN ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( MLU + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,MUM ) )", "obj1": 0.6520833333333333, "obj2": 0.17544877681330137}, {"determining": "Min( ( PN / FirstVNF_Mem_Server ) ,ACS )", "choosing": "( ( MLU - RCSe ) - Min( RMSe ,RRSe ) )", "obj1": 0.36666666666666664, "obj2": 0.4932073209218948}, {"determining": "( ( ( ( ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( MLU + ( RRSe + MUR ) ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10196272275528241}, {"determining": "( ( AMS - PN ) * ( ( BR * ( ( ( ( FirstVNF_CPU - PN ) + ACS ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( CS * Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ) ) ) * ( RMSe - CS ) )", "obj1": 0.9166666666666666, "obj2": 0.04346551369681724}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MUM / MUM ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1901972240364622}, {"determining": "( ( ( ( ( ( Const + ( AMS - ( CRS + FirstVNF_Mem ) ) ) - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe + Max( DS,RRSe ) ) )", "obj1": 0.6958333333333333, "obj2": 0.1467394911981063}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( PN,( BR + ( MRS + ARS ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + Min( ( ARS / FirstVNF_RAM ) ,PN ) ) ) ) ) )", "choosing": "( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) - ( Min( MUR ,( ( Min( ( ( MUC + RRSe ) + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( MLU + DS ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.95625, "obj2": 0.01732845650993499}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.18312004176466823}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3625, "obj2": 0.5032935861081073}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( ( CS + MUM ) ,DS ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( DS - ( MUC * RRSe ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08982880257536022}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) ) - Min( Min( MUC ,( ( ( Max( ( RRSe * DS ),DS ) / ( Max( CS,DS ) - ( MUM + RRSe ) ) ) / ( RMSe + RRSe ) ) - ( MUM - ( ( MUM * RRSe ) / RMSe ) ) ) ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9208333333333333, "obj2": 0.03385919406195666}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ARS / FirstVNF_Mem_Server ) ,Max( ( ( AMS + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * ( ( Max( MUR,RRSe ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MLU * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5240765809014596}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( FirstVNF_CPU_Server / MRS ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * RMSe ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6854166666666667, "obj2": 0.15178746751671146}, {"determining": "( ( ( ( ( Max( ( PN - CRS ),RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ARS - MDR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * ( MUM * MUC ) ) + MLU ) )", "obj1": 0.7979166666666667, "obj2": 0.08356640375706512}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Min( ( MUM / ( ( ( RMSe + MLU ) + Max( RMSe,( RMSe - CS ) ) ) * Max( ( MUR + RCSe ),( Min( CS ,RRSe ) / MUC ) ) ) ) ,Max( MLU,CS ) ) ) )", "obj1": 0.6458333333333334, "obj2": 0.18880520886070667}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( MLU * ( CS + MUC ) ) + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9354166666666667, "obj2": 0.026497560600107106}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.93125, "obj2": 0.03146739900969144}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( PN + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_RAM_Server,( CRS / ARS ) ),Max( BR,PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( ( RMSe / RRSe ) / MUC ),( ( RCSe / DS ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MUC ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + RMSe ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7166666666666667, "obj2": 0.11519221895930741}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( ( ( RRS / ( ACS / MDR ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,PN ) ) )", "choosing": "( ( RMSe / ( MLU * MUR ) ) - Max( Min( Max( MUM,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.14881371136691052}, {"determining": "( ( ( ( ( ( ( PN - Min( FirstVNF_RAM_Server ,CRS ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( ( FirstVNF_CPU_Server * BR ) - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( RCSe * MUR ) + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * DS ),( MUR - CS ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6770833333333334, "obj2": 0.15217654731937352}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3, "obj2": 0.568108008353304}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.0065515027965425245}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( Min( Min( FirstVNF_Mem ,MRS ) ,BR ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) - CS ) ) ,MLU ),( MUC / Min( ( CS * MUM ) ,RRSe ) ) ) )", "obj1": 0.6625, "obj2": 0.1681079097308906}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3, "obj2": 0.568108008353304}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( Max( BR,ARS ) / ( ( ( CRS * ARS ) + ( FirstVNF_Mem + ACS ) ) - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Max( Min( RRS ,FirstVNF_CPU ),ACS ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( MUM - ( ( ( MUR + ( ( MUR + MUM ) / Min( MUC ,RCSe ) ) ) + ( ( MLU - RCSe ) * ( RMSe + ( RCSe * MLU ) ) ) ) / ( CS * ( Min( DS ,RMSe ) / Max( Min( CS ,MUM ),( RMSe - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8875, "obj2": 0.053405413932754116}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.925, "obj2": 0.03302215016855544}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( Max( BR,MDR ),( BR + ( BR + MDR ) ) ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_Mem_Server,( CRS / ARS ) ),MDR ) + Min( ( ARS / FirstVNF_RAM ) ,PN ) ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * ( CS + Max( Max( RMSe,RMSe ),RMSe ) ) ) ) ) ) - ( Min( MUR ,( ( Min( ( MUM + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( MLU + DS ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.9625, "obj2": 0.014764439933222743}, {"determining": "( ( ( PN - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( Max( ( MLU + ( DS / MUM ) ),CS ) * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7125, "obj2": 0.118366805139215}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_RAM_Server,( RRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ) - ACS ) * ( ( Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU ) ) - PN ) ) + ( Max( ( MDR * Const ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MLU / Min( DS ,RCSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( RMSe ,MUR ) * MUM ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.63125, "obj2": 0.19850177030830965}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + ( Min( Min( FirstVNF_CPU_Server ,( DDR * DDR ) ) ,RRS ) + Min( RRS ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR / ( CRS / Max( Const,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( ( RCSe * RCSe ),RCSe ) ) - ( DS * ( ( RCSe / RCSe ) * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * Min( RRSe ,RCSe ) ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,( MLU * MUC ) ) ) ) ) + MLU ) )", "obj1": 0.9958333333333333, "obj2": 0.0018244108735866057}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / RRSe ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08772240076805751}, {"determining": "( ( ( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - Max( RCSe,MUR ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.75625, "obj2": 0.09775852389035954}], "16": [{"determining": "Min( ( MDR - Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( ( DDR + CRS ),FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( DS / ( RCSe - MLU ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( CRS * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR + BR ) ) ) ) - CRS ) - ACS ) * ( ( ACS - PN ) - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) + ( MDR - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( RCSe,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( MLU,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RRSe ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.19791666666666666, "obj2": 0.7071467138268643}, {"determining": "( ( ( ( Min( RRS ,RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( CS - RCSe ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.41875, "obj2": 0.41896209021637604}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * ( ( PN - FirstVNF_Mem_Server ) + Max( ( ( MRS - FirstVNF_Mem_Server ) * BR ),MRS ) ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RCSe * ( DS - RCSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.36126806979496856}, {"determining": "( ( ( ( MDR - Max( ( FirstVNF_CPU_Server - CRS ),Min( DDR ,ARS ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( ( MLU * ( DS * ( RCSe + MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.22674347164322275}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ARS,BR ) / Min( DDR ,MDR ) ) )", "choosing": "( ( Max( RMSe,( ( MUC + RMSe ) + RMSe ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( Min( MUR ,MUR ) * RMSe ) ) ),( ( ( ( RCSe - DS ) + ( MUR - MLU ) ) * MUC ) - RRSe ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.43477312171230076}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( DDR,FirstVNF_Mem ) ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MLU + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( MUC / MUC ),( MLU * MUM ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.575, "obj2": 0.25964852880008527}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3103039655166372}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.46875, "obj2": 0.33585965271893203}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU / MUR ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2952731116213137}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.48125, "obj2": 0.3254692377634431}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * MUC ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.26875, "obj2": 0.6072670831848572}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( MUC / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6104166666666667, "obj2": 0.21112947622193254}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) ,PN )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.23125, "obj2": 0.6567316724736292}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20833333333333334, "obj2": 0.677033490428892}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03939386625352822}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.8458333333333333, "obj2": 0.07072905403724113}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,RRSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + RRSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( DDR - RRS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( ( ( RRS / ( ACS / MDR ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,PN ) ) )", "choosing": "( ( RMSe / ( MLU * MUR ) ) - Max( Min( Max( MUM,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.14881371136691052}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( ( ( ( ARS - PN ) - Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( RRSe - CS ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.27830851769100784}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( Max( MDR,FirstVNF_Mem_Server ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ACS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Max( CS,( RRSe + MLU ) ) - ( DS * ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.875, "obj2": 0.06687857964603729}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( BR - Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - ( CS + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10607952488073132}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) + ( ( Const - RRS ) + DDR ) ) ) ,ACS )", "choosing": "( ( ( Min( RCSe ,( RRSe - ( Max( ( MUR / CS ),MUM ) + MUR ) ) ) * ( MLU * RRSe ) ) * DS ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5625654605886145}, {"determining": "Min( Max( ACS,Max( Min( MDR ,BR ),FirstVNF_RAM ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( ( ( ( ( MLU + ( DS / DS ) ) / MLU ) * Min( RRSe ,MUM ) ) * ( CS + ( MUM * CS ) ) ) * MUR ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.35, "obj2": 0.5201438902260063}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21875, "obj2": 0.6648061843604793}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20625, "obj2": 0.6909174344978308}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) ) - Min( Min( MUC ,( ( ( Max( ( RRSe * DS ),DS ) / ( Max( CS,DS ) - ( MUM + RRSe ) ) ) / ( RMSe + RRSe ) ) - ( MUM - ( ( MUM * RRSe ) / RMSe ) ) ) ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9208333333333333, "obj2": 0.03385919406195666}, {"determining": "( ( ( ( ( Max( ( PN - CRS ),RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ARS - MDR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * ( MUM * MUC ) ) + MLU ) )", "obj1": 0.7979166666666667, "obj2": 0.08356640375706512}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( MUR,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5490675947686885}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( ( ( ( ( DDR - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( CS / MUM ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6958333333333333, "obj2": 0.1349974847192425}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6981969675161355}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "( ( ( ( ( ( Const + ( AMS - ( CRS + FirstVNF_Mem ) ) ) - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( ( AMS + ( ( FirstVNF_CPU * ACS ) * BR ) ) ,PN ) ) )", "choosing": "( ( ( ( Max( RRSe,MUC ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe + Max( DS,RRSe ) ) )", "obj1": 0.5479166666666667, "obj2": 0.2651680351610899}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3625, "obj2": 0.5032935861081073}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Const * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( RRSe / RRSe ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6645833333333333, "obj2": 0.16277590038089065}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ( ( DDR + PN ) - MDR ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Min( DS ,CS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( Max( MUC,Min( RCSe ,Min( RCSe ,Max( MUR,RMSe ) ) ) ) * RMSe ) ) )", "obj1": 0.4708333333333333, "obj2": 0.33461906153211934}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "Min( ( PN / FirstVNF_Mem_Server ) ,ACS )", "choosing": "( ( MLU - RCSe ) - Min( RMSe ,RRSe ) )", "obj1": 0.36666666666666664, "obj2": 0.4932073209218948}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MUM / MUM ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1901972240364622}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( Max( BR,FirstVNF_RAM ) ,PN ) ) * ( DDR * ( Max( Max( FirstVNF_RAM_Server,( CRS / ARS ) ),Max( BR,PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + Max( ( ( RMSe / RRSe ) / MUC ),( ( RCSe / RRSe ) * RRSe ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MUC ) ) ) ) ) + MLU ) )", "obj1": 0.9, "obj2": 0.050519013702848566}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.64375, "obj2": 0.18675370012755735}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6770833333333334, "obj2": 0.15128778707157506}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "( ( ( ( ( ARS - ( AMS / FirstVNF_CPU ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * ( ( RRS + DDR ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MLU * RCSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( RMSe - MUC ),( MLU * CS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.18050706616988932}, {"determining": "( ( ( ( PN + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( AMS + FirstVNF_RAM ) ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( ( RRSe + ( RMSe + RCSe ) ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( ( MUM + RCSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.35625, "obj2": 0.507052999089892}, {"determining": "( ( ( ( PN - Max( ACS,Max( BR,( ACS + BR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * PN ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( MLU + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,MUM ) )", "obj1": 0.6520833333333333, "obj2": 0.17544877681330137}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,Max( RCSe,RCSe ) ) - ( ( ( RCSe / ( DS * MUM ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( ( CS + MUM ) ,DS ) ) + ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( DS - ( MUC * RRSe ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08982880257536022}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ARS / FirstVNF_Mem_Server ) ,Max( ( ( AMS + ( ( FirstVNF_CPU * ACS ) * BR ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( CS * ( ( Max( MUR,RRSe ) + RCSe ) - Max( ( RMSe / RRSe ),Max( ( ( CS + ( MLU * RMSe ) ) + ( Max( RRSe,MUC ) / MUM ) ),CS ) ) ) ) - ( ( ( ( MLU + ( DS / ( CS + ( MUM * CS ) ) ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5240765809014596}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / RRSe ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08772240076805751}, {"determining": "( ( ( ( ( Max( BR,ARS ) / ( ( ( CRS * ARS ) + ( FirstVNF_Mem + ACS ) ) - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Max( Min( RRS ,FirstVNF_CPU ),ACS ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( MUM - ( ( ( MUR + ( ( MUR + MUM ) / Min( MUC ,RCSe ) ) ) + ( ( MLU - RCSe ) * ( RMSe + ( RCSe * MLU ) ) ) ) / ( CS * ( Min( DS ,RMSe ) / Max( Min( CS ,MUM ),( RMSe - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8875, "obj2": 0.053405413932754116}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + Max( Max( FirstVNF_CPU_Server,ACS ),ARS ) ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,( MLU * RCSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.9895833333333334, "obj2": 0.004670169644082478}, {"determining": "( ( FirstVNF_CPU_Server / MRS ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * RMSe ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6622472098703912}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( ( ( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - Max( RCSe,MUR ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.75625, "obj2": 0.09775852389035954}, {"determining": "( ( ( ( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( MDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + Max( ACS,BR ) ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( RMSe ,( Min( RMSe ,RRSe ) + ( MUR - ( RMSe * MUR ) ) ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12671146475424155}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + RMSe ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7166666666666667, "obj2": 0.11519221895930741}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,Min( Const ,Const ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + RMSe ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.74375, "obj2": 0.1026311129205287}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6579084269341616}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,ACS )", "choosing": "( Max( Max( RCSe,MUR ),( ( MLU + ( CS * CS ) ) + Min( Max( CS,Max( CS,Max( MUC,CS ) ) ) ,( RRSe / ( ( MLU / ( MUR - RRSe ) ) / ( ( DS + MUR ) - ( MUM - CS ) ) ) ) ) ) ) - ( ( MUR * MUR ) * ( ( CS / ( ( MUR + RCSe ) * ( ( MUM + MUC ) / MUR ) ) ) + ( MUM * Max( ( MUC / MUC ),( MLU - MLU ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( PN - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( Max( ( MLU + ( DS / MUM ) ),CS ) * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7125, "obj2": 0.118366805139215}, {"determining": "( ( Min( Min( FirstVNF_Mem ,MRS ) ,BR ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) - CS ) ) ,MLU ),( MUC / Min( ( CS * MUM ) ,RRSe ) ) ) )", "obj1": 0.6625, "obj2": 0.1681079097308906}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + ( MDR - PN ) ),FirstVNF_RAM ) ) ) - CRS ) - FirstVNF_Mem_Server ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( MLU * CS ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,CS ) ) ) ) ) + MLU ) )", "obj1": 0.8958333333333334, "obj2": 0.051736042168179674}, {"determining": "( ( ( ( MDR * ACS ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe * MUR ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9958333333333333, "obj2": 0.001042384426675482}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ( ( ( ( ( ( MRS - CRS ) - AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / RRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + PN )", "choosing": "( ( ( ( RMSe + CS ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( MUR ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.6979166666666666, "obj2": 0.13071827163882085}, {"determining": "( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem * MDR ) ) ) ) - Min( ( ( Min( FirstVNF_RAM ,Const ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + MDR ) ,PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( RMSe + RMSe ) )", "obj1": 0.7479166666666667, "obj2": 0.10104400282304982}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.0065515027965425245}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.93125, "obj2": 0.03146739900969144}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( FirstVNF_RAM_Server / DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUM * CS ) ) + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + ( MUM / ( ( MUC * MUM ) * ( MUC / DS ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MLU ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}], "17": [{"determining": "( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - Min( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Const * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( RCSe ,Min( ( Max( MUR,Min( RMSe ,DS ) ) - ( RRSe * ( ( DS / RCSe ) - RRSe ) ) ) ,RRSe ) ),( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( Max( FirstVNF_CPU,( MRS + Const ) ),( ARS * Max( ( DDR + CRS ),FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( DS / ( RCSe - MLU ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RRSe ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.19791666666666666, "obj2": 0.7071467138268643}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RRSe ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4, "obj2": 0.3952508877918575}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ARS,BR ) / Min( DDR ,MDR ) ) )", "choosing": "( ( Max( RMSe,( ( MUC + RMSe ) + RMSe ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( Min( MUR ,MUR ) * RMSe ) ) ),( ( ( ( RCSe - DS ) + ( MUR - MLU ) ) * MUC ) - RRSe ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.43477312171230076}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ACS * FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( CS * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.575, "obj2": 0.2521611915071021}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * ( ( PN - FirstVNF_Mem_Server ) + Max( ( ( MRS - FirstVNF_Mem_Server ) * BR ),MRS ) ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RCSe * ( DS - RCSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.36126806979496856}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3103039655166372}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ( Max( Min( AMS ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( CS * DS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.45625, "obj2": 0.34494905934071873}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU / MUR ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2952731116213137}, {"determining": "( ( ( ( MDR - Max( ( FirstVNF_CPU_Server - CRS ),Min( DDR ,ARS ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( ( MLU * ( DS * ( RCSe + MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.22674347164322275}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( ( MDR - PN ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( Min( CRS ,MDR ) - PN ) ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( ( CS * CS ) - ( MUR / RCSe ) ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( BR / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,( MRS + PN ) ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RCSe ) - MUM ) ) ) + ( MUM * Max( RMSe,DS ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.2, "obj2": 0.7036920101600157}, {"determining": "( Max( CRS,( MRS * RRS ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,CS ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * ( ( ( CS / MLU ) * MLU ) + ( MUR - Max( DS,CS ) ) ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3729166666666667, "obj2": 0.4915575504969619}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.48125, "obj2": 0.3254692377634431}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + RCSe ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM * MDR ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5958333333333333, "obj2": 0.2242715982174573}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.8458333333333333, "obj2": 0.07072905403724113}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( MUC / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6104166666666667, "obj2": 0.21112947622193254}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + RRSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "( ( ( ( Min( RRS ,RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "( ( ( ( CS - RCSe ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) )", "obj1": 0.6895833333333333, "obj2": 0.14862179276815232}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,ACS )", "choosing": "( Max( Max( RCSe,MUR ),( ( MLU + ( CS * CS ) ) + Min( Max( CS,Max( CS,Max( MUC,CS ) ) ) ,( RRSe / ( ( MLU / ( MUR - RRSe ) ) / ( ( DS + MUR ) - ( MUM - CS ) ) ) ) ) ) ) - ( ( MUR * MUR ) * ( ( CS / ( ( MUR + RCSe ) * ( ( MUM + MUC ) / MUR ) ) ) + ( MUM * Max( ( MUC / MUC ),( MLU - MLU ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) ) - Min( Min( MUC ,( ( ( Max( ( RRSe * DS ),DS ) / ( Max( CS,DS ) - ( MUM + RRSe ) ) ) / ( RMSe + RRSe ) ) - ( MUM - ( ( MUM * RRSe ) / RMSe ) ) ) ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9208333333333333, "obj2": 0.03385919406195666}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "Min( ( ( RRS / CRS ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.2375, "obj2": 0.6525699212742987}, {"determining": "( ( ( Max( MDR,FirstVNF_Mem_Server ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( ACS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) + ( Max( CS,( RRSe + MLU ) ) - ( DS * ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.875, "obj2": 0.06687857964603729}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( ACS ,MDR ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( BR * FirstVNF_CPU ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RMSe ) ) ,Min( Min( DS ,MUR ) ,( RRSe / DS ) ) ) ) + MLU ) )", "obj1": 0.9541666666666667, "obj2": 0.02063571490548493}, {"determining": "Min( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_RAM_Server - ( Const + MDR ) ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) ,( ( AMS / ( MRS - FirstVNF_RAM_Server ) ) + ( AMS + CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( Min( ( RRSe + RCSe ) ,RMSe ) / MUM ) ),CS ) ) ),Min( ( ( RRSe + Max( RMSe,( RMSe - CS ) ) ) * RCSe ) ,MLU ) )", "obj1": 0.8479166666666667, "obj2": 0.06760942264056387}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03939386625352822}, {"determining": "( ( ( ( PN + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( AMS + FirstVNF_RAM ) ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( ( RRSe + ( RMSe + RCSe ) ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( ( MUM + RCSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.35625, "obj2": 0.507052999089892}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.93125, "obj2": 0.03146739900969144}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) + ( ( Const - RRS ) + DDR ) ) ) ,ACS )", "choosing": "( ( ( Min( RCSe ,( RRSe - ( Max( ( MUR / CS ),MUM ) + MUR ) ) ) * ( MLU * RRSe ) ) * DS ) - ( ( MUR * MUR ) * ( ( CS / MUM ) + ( MUM * Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ) ) ) ) )", "obj1": 0.29375, "obj2": 0.5625654605886145}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( ( Max( ( PN - CRS ),RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ARS - MDR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * ( MUM * MUC ) ) + MLU ) )", "obj1": 0.7979166666666667, "obj2": 0.08356640375706512}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( Max( BR,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5479052244438672}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.46875, "obj2": 0.33585965271893203}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Max( RMSe,MLU ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( RMSe,RRSe ) / Max( MLU,CS ) ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3625, "obj2": 0.5032935861081073}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( BR - Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - ( CS + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10607952488073132}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Const * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( RRSe / RRSe ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6645833333333333, "obj2": 0.16277590038089065}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "Min( ( PN / FirstVNF_Mem_Server ) ,ACS )", "choosing": "( ( MLU - RCSe ) - Min( RMSe ,RRSe ) )", "obj1": 0.36666666666666664, "obj2": 0.4932073209218948}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( FirstVNF_CPU,MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RMSe * ( CS + MUR ) ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( MLU,CS ) / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.89375, "obj2": 0.047477999821765385}, {"determining": "( ( ( ( ( ARS - PN ) - Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( RRSe - CS ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.27830851769100784}, {"determining": "( ( ( ( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( MDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) / Max( Min( FirstVNF_Mem_Server ,( AMS + Max( ACS,BR ) ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( RMSe ,( Min( RMSe ,RRSe ) + ( MUR - ( RMSe * MUR ) ) ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12671146475424155}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MUM / MUM ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1901972240364622}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( Max( BR,ARS ) / ( ( ( CRS * ARS ) + ( FirstVNF_Mem + ACS ) ) - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Max( Min( RRS ,FirstVNF_CPU ),ACS ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( MUM - ( ( ( MUR + ( ( MUR + MUM ) / Min( MUC ,RCSe ) ) ) + ( ( MLU - RCSe ) * ( RMSe + ( RCSe * MLU ) ) ) ) / ( CS * ( Min( DS ,RMSe ) / Max( Min( CS ,MUM ),( RMSe - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8875, "obj2": 0.053405413932754116}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.64375, "obj2": 0.18675370012755735}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ACS * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( Min( CS ,DS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.3327113732599988}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( FirstVNF_RAM_Server / DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUM * CS ) ) + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + ( MUM / ( ( MUC * MUM ) * ( MUC / DS ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MLU ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MUC / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648949883690695}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5270833333333333, "obj2": 0.2783844845122421}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( ( RRS / MDR ) ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( BR - Max( ( CRS - FirstVNF_Mem ),( ARS / FirstVNF_RAM_Server ) ) ) / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - Max( ( MUC * Min( ( Min( MUR ,DS ) / ( ( DS * CS ) / RCSe ) ) ,RRSe ) ),( RMSe + DS ) ) )", "obj1": 0.7104166666666667, "obj2": 0.12178342271022072}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( MUC / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8979166666666667, "obj2": 0.04189741121448979}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + Max( Max( FirstVNF_CPU_Server,ACS ),ARS ) ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,( MLU * RCSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.9895833333333334, "obj2": 0.004670169644082478}, {"determining": "( ( FirstVNF_CPU_Server / MRS ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * RMSe ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6770833333333334, "obj2": 0.15128778707157506}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / MUC ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08926205124201604}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6622472098703912}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( ( DDR - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ( RRS + PN ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( CS / MUM ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6958333333333333, "obj2": 0.1349974847192425}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( ( ( ARS - ( AMS / FirstVNF_CPU ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * ( ( RRS + DDR ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MLU * RCSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( RMSe - MUC ),( MLU * CS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.18050706616988932}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6579084269341616}, {"determining": "( ( Min( Min( FirstVNF_Mem ,MRS ) ,BR ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) - CS ) ) ,MLU ),( MUC / Min( ( CS * MUM ) ,RRSe ) ) ) )", "obj1": 0.6625, "obj2": 0.1681079097308906}, {"determining": "( ( ( ( MDR * ACS ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( RMSe * MUR ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9958333333333333, "obj2": 0.001042384426675482}, {"determining": "( ( ( ( ( ( ( ( MRS - CRS ) - AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / RRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + PN )", "choosing": "( ( ( ( RMSe + CS ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( MUR ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.6979166666666666, "obj2": 0.13071827163882085}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21875, "obj2": 0.6648061843604793}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / RRSe ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08772240076805751}, {"determining": "( ( ( ( PN - Max( ACS,Max( BR,( ACS + BR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * PN ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( MLU + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,MUM ) )", "obj1": 0.6520833333333333, "obj2": 0.17544877681330137}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / ( ( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) + PN ) ) * AMS ) ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( MLU * DS ) ) ) + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) + MLU ) )", "obj1": 0.9833333333333333, "obj2": 0.0065515027965425245}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Min( DDR ,MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR - MLU ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7395833333333334, "obj2": 0.10444210178144797}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ( ( DDR + PN ) - MDR ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Min( DS ,CS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( Max( MUC,Min( RCSe ,Min( RCSe ,Max( MUR,RMSe ) ) ) ) * RMSe ) ) )", "obj1": 0.4708333333333333, "obj2": 0.33461906153211934}], "18": [{"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( FirstVNF_RAM_Server * DDR ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( RMSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUR - DS ) * DS ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - Min( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Const * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( RCSe ,Min( ( Max( MUR,Min( RMSe ,DS ) ) - ( RRSe * ( ( DS / RCSe ) - RRSe ) ) ) ,RRSe ) ),( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS / CRS ) + ( ( ( FirstVNF_CPU_Server * BR ) - PN ) / Const ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( Min( ( ARS / ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,( CS * RMSe ) ) ,( MUR / MLU ) ) ) + Min( ( CS + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.19166666666666668, "obj2": 0.6894637283599404}, {"determining": "( ( RRS * ARS ) + ( Max( Const,( ( PN / PN ) - ( MDR - ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,BR ) ) - ( RRS - RRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( ( ( RMSe / MUR ) + ( MUM * RRSe ) ) + RMSe ) ) * ( Min( DS ,CS ) + ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,Max( ( CS - Min( Max( MLU,MUC ) ,MLU ) ),RRSe ) ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.4864986278670767}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ARS,BR ) / Min( DDR ,MDR ) ) )", "choosing": "( ( Max( RMSe,( ( MUC + RMSe ) + RMSe ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * Min( CS ,( Min( MUR ,MUR ) * RMSe ) ) ),( ( ( ( RCSe - DS ) + ( MUR - MLU ) ) * MUC ) - RRSe ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.43477312171230076}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,RRSe ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4, "obj2": 0.3952508877918575}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3103039655166372}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( MDR - PN ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU / MUR ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2952731116213137}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( Min( CRS ,MDR ) - PN ) ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( ( CS * CS ) - ( MUR / RCSe ) ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_RAM ,ARS ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( Min( MLU ,RCSe ) * RRSe ) ) ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24714224169186008}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ( Max( Min( AMS ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( CS * DS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.45625, "obj2": 0.34494905934071873}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM * MDR ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5958333333333333, "obj2": 0.2242715982174573}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( ( MDR - PN ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + ( FirstVNF_CPU + Const ) ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / ( ( ( ( MDR - FirstVNF_Mem_Server ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RRSe / RRSe ) ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / ( CS - Max( ( MUC * Max( CS,RCSe ) ),MLU ) ) ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.5770833333333333, "obj2": 0.2330813883166986}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "Min( ( ( RRS / CRS ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.23125, "obj2": 0.6479324374539457}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.48125, "obj2": 0.3254692377634431}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * ( ( PN - FirstVNF_Mem_Server ) + Max( ( ( MRS - FirstVNF_Mem_Server ) * BR ),MRS ) ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RCSe * ( DS - RCSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.36126806979496856}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( MUM + ( MUR - MUR ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.06328003752867005}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6104166666666667, "obj2": 0.20680420500154983}, {"determining": "( ( ( ( Min( RRS ,RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "( ( ( ( CS - RCSe ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) )", "obj1": 0.6895833333333333, "obj2": 0.14862179276815232}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + RCSe ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,ACS )", "choosing": "( Max( Max( RCSe,MUR ),( ( MLU + ( CS * CS ) ) + Min( Max( CS,Max( CS,Max( MUC,CS ) ) ) ,( RRSe / ( ( MLU / ( MUR - RRSe ) ) / ( ( DS + MUR ) - ( MUM - CS ) ) ) ) ) ) ) - ( ( MUR * MUR ) * ( ( CS / ( ( MUR + RCSe ) * ( ( MUM + MUC ) / MUR ) ) ) + ( MUM * Max( ( MUC / MUC ),( MLU - MLU ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) ) - Min( Min( MUC ,( ( ( Max( ( RRSe * DS ),DS ) / ( Max( CS,DS ) - ( MUM + RRSe ) ) ) / ( RMSe + RRSe ) ) - ( MUM - ( ( MUM * RRSe ) / RMSe ) ) ) ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9208333333333333, "obj2": 0.03385919406195666}, {"determining": "( ( ( ( MDR - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * ( RRS - FirstVNF_CPU ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,CS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( ( RCSe + Min( RRSe ,RCSe ) ) - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.44375, "obj2": 0.3584679465713113}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ACS ) + ( Min( ARS ,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( ( MUM * ( MUC * MUR ) ) + RMSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,( ( RRSe * ( MUC - DS ) ) / CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.5270833333333333, "obj2": 0.2739367843133512}, {"determining": "( ( ( ( ( ( ( ( BR * BR ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6625, "obj2": 0.15984301747869828}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Max( RMSe,MLU ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( RMSe,RRSe ) / Max( MLU,CS ) ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03939386625352822}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ACS * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * MDR ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( Min( CS ,DS ) * Min( RCSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7520833333333333, "obj2": 0.10022266474698953}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( ( ( DDR - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ( RRS + PN ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( CS / MUM ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6958333333333333, "obj2": 0.1349974847192425}, {"determining": "( ( FirstVNF_CPU_Server / MRS ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * RMSe ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6583333333333333, "obj2": 0.1713522168146492}, {"determining": "( ( ( ( ( ( MRS - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM / MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - ( ( Max( RCSe,CS ) - MLU ) - RRSe ) )", "obj1": 0.9583333333333334, "obj2": 0.01658453827700479}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( Max( BR,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5479052244438672}, {"determining": "( ( ( ( ( Max( ( PN - CRS ),RRS ) - FirstVNF_RAM ) / Max( ( ( AMS / FirstVNF_CPU ) * AMS ),Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - ( ARS - MDR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * ( MUM * MUC ) ) + MLU ) )", "obj1": 0.7979166666666667, "obj2": 0.08356640375706512}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( ( MUC - CS ) - CS ) ),CS ) ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.93125, "obj2": 0.03146739900969144}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.2875, "obj2": 0.5625409697763396}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.46875, "obj2": 0.33585965271893203}, {"determining": "( ( ( ( FirstVNF_CPU_Server / RRS ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + ( Const / PN ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( MUM,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + ( ( Max( MUC,MLU ) * RRSe ) - ( ( MUM * DS ) * ( ( DS / MUM ) / Min( DS ,MUM ) ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.28228012816156867}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( Max( DDR,FirstVNF_CPU_Server ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( MUR / CS ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.19749883682945987}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ) / ACS ) - CRS ) - ACS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * ( MUC * ( MUC / ( ( ( MUR * RMSe ) + RRSe ) * RRSe ) ) ) ) + MLU ) )", "obj1": 0.7604166666666666, "obj2": 0.09623781843093807}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( MUC - MUR ) - Min( Min( Min( DS ,Max( ( MUR / Max( CS,MUC ) ),RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6770833333333334, "obj2": 0.15128778707157506}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MUM / MUM ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1901972240364622}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( BR - Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - ( CS + MLU ) )", "obj1": 0.7333333333333333, "obj2": 0.10607952488073132}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( Max( BR,ARS ) / ( ( ( CRS * ARS ) + ( FirstVNF_Mem + ACS ) ) - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Max( Min( RRS ,FirstVNF_CPU ),ACS ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( MUM - ( ( ( MUR + ( ( MUR + MUM ) / Min( MUC ,RCSe ) ) ) + ( ( MLU - RCSe ) * ( RMSe + ( RCSe * MLU ) ) ) ) / ( CS * ( Min( DS ,RMSe ) / Max( Min( CS ,MUM ),( RMSe - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8875, "obj2": 0.053405413932754116}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.64375, "obj2": 0.18675370012755735}, {"determining": "( ( ( ( ( ARS - ( AMS / FirstVNF_CPU ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * ( ( RRS + DDR ) - ACS ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MLU * RCSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( RMSe - MUC ),( MLU * CS ) ) )", "obj1": 0.6479166666666667, "obj2": 0.18050706616988932}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( ( PN - Max( ACS,Max( BR,( ACS + BR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Min( ( BR * Max( ( FirstVNF_Mem * PN ),FirstVNF_Mem ) ) ,MDR ) / DDR ) )", "choosing": "( ( ( CS * ( ( ( ( MLU + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + MUC ) - Max( ( RMSe / RRSe ),Max( ( MUM * CS ),CS ) ) ) ) + MLU ) - Max( MLU,MUM ) )", "obj1": 0.6520833333333333, "obj2": 0.17544877681330137}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ACS * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( Min( CS ,DS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.3327113732599988}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( FirstVNF_RAM_Server / DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUM * CS ) ) + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + ( MUM / ( ( MUC * MUM ) * ( MUC / DS ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MLU ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Max( ACS,( RRS + Const ) ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MLU / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( ( ( Min( Max( CS,( MLU - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648949883690695}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * Min( DDR ,MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( MUR - MLU ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7395833333333334, "obj2": 0.10444210178144797}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + RRSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.51875, "obj2": 0.2812403471707742}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( BR - Max( ( DDR / FirstVNF_RAM_Server ),( ARS / FirstVNF_RAM_Server ) ) ) / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( ( RCSe * Min( CS ,( MUR / CS ) ) ) + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11899712890360058}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6579084269341616}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / ( ARS / FirstVNF_RAM_Server ) ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( RMSe / RMSe ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9395833333333333, "obj2": 0.026573349282406924}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "( ( ( ( MDR - Max( ( FirstVNF_CPU_Server - CRS ),Min( DDR ,ARS ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( ( MLU * ( DS * ( RCSe + MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.22674347164322275}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( Min( ( ( BR + AMS ) - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) / CRS ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / DS ) - Max( Min( Max( ( RCSe * ( ( Min( DS ,DS ) / MUR ) / ( MUC + RCSe ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.22916895611246213}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RRSe ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4, "obj2": 0.3952508877918575}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / RRSe ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08772240076805751}, {"determining": "( ( ( ( ( ( ( ( MRS - CRS ) - AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / RRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + PN )", "choosing": "( ( ( ( RMSe + CS ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( MUR ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.6979166666666666, "obj2": 0.13071827163882085}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( ACS ,MDR ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( BR * FirstVNF_CPU ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RMSe ) ) ,Min( Min( DS ,MUR ) ,( RRSe / DS ) ) ) ) + MLU ) )", "obj1": 0.9541666666666667, "obj2": 0.02063571490548493}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ( ( DDR + PN ) - MDR ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Min( DS ,CS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( Max( MUC,Min( RCSe ,Min( RCSe ,Max( MUR,RMSe ) ) ) ) * RMSe ) ) )", "obj1": 0.4708333333333333, "obj2": 0.33461906153211934}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.6610338887882932}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21875, "obj2": 0.6648061843604793}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / MUC ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08926205124201604}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6622472098703912}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( ( Min( DDR ,ARS ) + FirstVNF_CPU ) - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM * MUC ) * MUC ) / ( CS - RMSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( FirstVNF_CPU,MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RMSe * ( CS + MUR ) ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( MLU,CS ) / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.89375, "obj2": 0.047477999821765385}, {"determining": "( ( ( ( Max( ( Max( Min( FirstVNF_CPU ,MDR ),( MDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( CRS / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) ) / Max( Min( MDR ,( AMS + Max( ACS,BR ) ) ),FirstVNF_CPU ) ) - ( MDR + PN ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( MUR / DS ) - ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( RMSe ,( ( ( MUM + RRSe ) - MUC ) + ( MUR - ( RMSe * MUR ) ) ) ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12671146475424155}], "19": [{"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( Min( ( MUR + MUM ) ,( MLU * RCSe ) ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / RRSe ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( FirstVNF_RAM_Server * DDR ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( RMSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUR - DS ) * DS ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS / CRS ) + ( ( ( FirstVNF_CPU_Server * BR ) - PN ) / Const ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( Min( ( ARS / ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,( CS * RMSe ) ) ,( MUR / MLU ) ) ) + Min( ( CS + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.19166666666666668, "obj2": 0.6894637283599404}, {"determining": "( ( RRS * ARS ) + ( Max( Const,( ( PN / PN ) - ( MDR - ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,BR ) ) - ( RRS - RRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( ( ( RMSe / MUR ) + ( MUM * RRSe ) ) + RMSe ) ) * ( Min( DS ,CS ) + ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,Max( ( CS - Min( Max( MLU,MUC ) ,MLU ) ),RRSe ) ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.4864986278670767}, {"determining": "( ( ( ( MDR - Max( ( CRS - FirstVNF_Mem ),( AMS - MDR ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( MUR / ( DS / ( MUC + MUM ) ) ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + DS ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.39375, "obj2": 0.4189903758802673}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,MUC ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( ( ( RCSe / MLU ) / Min( RMSe ,( RMSe - MUC ) ) ) + ( ( RMSe * ( MLU * MUM ) ) - Min( MUC ,( DS - CS ) ) ) ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3103039655166372}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( MDR - PN ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU / MUR ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2952731116213137}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_RAM ,ARS ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( Min( MLU ,RCSe ) * RRSe ) ) ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24714224169186008}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ( Max( Min( AMS ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( CS * DS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.45625, "obj2": 0.34494905934071873}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6458333333333334, "obj2": 0.16988912159315392}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM * MDR ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5958333333333333, "obj2": 0.2242715982174573}, {"determining": "( ( ( ( ( ( ( ( BR * BR ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6625, "obj2": 0.15984301747869828}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( PN / ( ( FirstVNF_CPU_Server - DDR ) - ( FirstVNF_RAM / MDR ) ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( RRSe + RCSe ) ) * ( Min( DS ,RRSe ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MUM * ( MUM * ( MUR + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.3902800162381471}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03939386625352822}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.48125, "obj2": 0.3254692377634431}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),RRS ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3596519222707565}, {"determining": "( ( ( ( MDR - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * ( RRS - FirstVNF_CPU ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( CS,CS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( ( RCSe + Min( RRSe ,RCSe ) ) - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.44375, "obj2": 0.3584679465713113}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( MUM + ( MUR - MUR ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.06328003752867005}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6104166666666667, "obj2": 0.20680420500154983}, {"determining": "( ( ( ( Min( RRS ,RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "( ( ( ( CS - RCSe ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) )", "obj1": 0.6895833333333333, "obj2": 0.14862179276815232}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) ) - Min( Min( MUC ,( ( ( Max( ( RRSe * DS ),DS ) / ( Max( CS,DS ) - ( MUM + RRSe ) ) ) / ( RMSe + RRSe ) ) - ( MUM - ( ( MUM * RRSe ) / RMSe ) ) ) ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9208333333333333, "obj2": 0.03385919406195666}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + RCSe ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,ACS )", "choosing": "( Max( Max( RCSe,MUR ),( ( MLU + ( CS * CS ) ) + Min( Max( CS,Max( CS,Max( MUC,CS ) ) ) ,( RRSe / ( ( MLU / ( MUR - RRSe ) ) / ( ( DS + MUR ) - ( MUM - CS ) ) ) ) ) ) ) - ( ( MUR * MUR ) * ( ( CS / ( ( MUR + RCSe ) * ( ( MUM + MUC ) / MUR ) ) ) + ( MUM * Max( ( MUC / MUC ),( MLU - MLU ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( FirstVNF_CPU,MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RMSe * ( CS + MUR ) ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( MLU,CS ) / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.89375, "obj2": 0.047477999821765385}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( Max( ( Max( Min( MLU ,DS ),( MUC + ( MUM / RCSe ) ) ) - MUC ),RCSe ) + MUC ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( ( MUR * MUR ) * CS ) ) )", "obj1": 0.64375, "obj2": 0.18675370012755735}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( BR + Min( MRS ,PN ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - ( Max( ( AMS + RRS ),CRS ) / ( FirstVNF_CPU * MDR ) ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server * ( CRS * MRS ) ) * DDR ) - ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( MLU + ( Min( DS ,Max( MUR,RCSe ) ) - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( Max( MUM,RCSe ),RCSe ) ) ) ) ) + ( MUM * CS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.062494661385990136}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.2875, "obj2": 0.5625409697763396}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Max( RMSe,MLU ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( RMSe,RRSe ) / Max( MLU,CS ) ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * CRS ) ) / Max( BR,PN ) ) / ( MDR - PN ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / ( ( MLU / ( DS * RRSe ) ) / RMSe ) ),Max( ( Min( DS ,CS ) + ( Max( MUR,CS ) / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9979166666666667, "obj2": 0.001026432996765424}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RRSe ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4, "obj2": 0.3952508877918575}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ( ( Max( MDR,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( MUC + CS ) + ( RRSe / RRSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.644615366934688}, {"determining": "( ( ( ( ( ( ( DDR - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ( RRS + PN ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( CS / MUM ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6958333333333333, "obj2": 0.1349974847192425}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( Min( CRS ,MDR ) - PN ) ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( ( CS * CS ) - ( MUR / RCSe ) ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( ( MRS - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM / MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - ( ( Max( RCSe,CS ) - MLU ) - RRSe ) )", "obj1": 0.9583333333333334, "obj2": 0.01658453827700479}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( Max( BR,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5479052244438672}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / PN ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUR + MUM ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9291666666666667, "obj2": 0.02866579028420254}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.46875, "obj2": 0.33585965271893203}, {"determining": "( ( ( ( FirstVNF_CPU_Server / RRS ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + ( Const / PN ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( MUM,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + ( ( Max( MUC,MLU ) * RRSe ) - ( ( MUM * DS ) * ( ( DS / MUM ) / Min( DS ,MUM ) ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.28228012816156867}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,MLU ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.1918608753977186}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( MUC - MUR ) - Min( Min( Min( DS ,Max( ( MUR / Max( CS,MUC ) ),RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( Min( CRS ,MDR ) - PN ) ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( ( CS * CS ) - ( MUR / RCSe ) ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( ( MDR - PN ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,BR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / ( ( ( ( MDR - FirstVNF_Mem_Server ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RRSe / RRSe ) ,Max( RRSe,( Max( CS,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.5770833333333333, "obj2": 0.2330813883166986}, {"determining": "Min( ( CRS + MRS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUC,MUR ) - ( DS + MUC ) ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "Min( ( ARS / ( Min( Const ,( Const - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / Max( ( MUC / MUC ),( Min( Max( MUR,MUR ) ,( CS / ( MUR + RCSe ) ) ) * MUM ) ) ) ),( RCSe - ( MLU / MUC ) ) )", "obj1": 0.2604166666666667, "obj2": 0.6313388360893132}, {"determining": "( ( ( ( ( Max( BR,ARS ) / ( ( ( CRS * ARS ) + ( FirstVNF_Mem + ACS ) ) - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Max( Min( RRS ,FirstVNF_CPU ),ACS ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( MUM - ( ( ( MUR + ( ( MUR + MUM ) / Min( MUC ,RCSe ) ) ) + ( ( MLU - RCSe ) * ( RMSe + ( RCSe * MLU ) ) ) ) / ( CS * ( Min( DS ,RMSe ) / Max( Min( CS ,MUM ),( RMSe - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8875, "obj2": 0.053405413932754116}, {"determining": "Min( ( ( RRS / CRS ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.23125, "obj2": 0.6479324374539457}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + ( FirstVNF_CPU + Const ) ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / ( ( ( ( MDR - FirstVNF_Mem_Server ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RRSe / RRSe ) ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / ( CS - Max( ( MUC * Max( CS,RCSe ) ),MLU ) ) ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.5770833333333333, "obj2": 0.2330813883166986}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ACS ) + ( Min( ARS ,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( ( MUM * ( MUC * MUR ) ) + RMSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,( ( RRSe * ( MUC - DS ) ) / CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.5270833333333333, "obj2": 0.2739367843133512}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( MRS,( ACS * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( Min( CS ,DS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.3327113732599988}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( FirstVNF_RAM_Server / DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUM * CS ) ) + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + ( MUM / ( ( MUC * MUM ) * ( MUC / DS ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MLU ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( MDR ,( AMS + Max( ACS,BR ) ) ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MLU / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648949883690695}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6770833333333334, "obj2": 0.15128778707157506}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + RRSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "Min( Max( ( CRS - ( CRS + RRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ARS ) )", "choosing": "Max( ( Min( MUR ,( MUC + CS ) ) / ( DS / Max( ( MUC / ( RCSe - DS ) ),( MLU * ( MUM * CS ) ) ) ) ),( CS + MUC ) )", "obj1": 0.25833333333333336, "obj2": 0.6365350421103333}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( CS ,RMSe ) + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5354166666666667, "obj2": 0.2712010289769662}, {"determining": "( ( ( ( MDR - Max( ( FirstVNF_CPU_Server - CRS ),Min( DDR ,ARS ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( ( MLU * ( DS * ( RCSe + MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.22674347164322275}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( Min( ( ( BR + AMS ) - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) / CRS ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / DS ) - Max( Min( Max( ( RCSe * ( ( Min( DS ,DS ) / MUR ) / ( MUC + RCSe ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.22916895611246213}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + Max( BR,( RRS + FirstVNF_Mem_Server ) ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RCSe * Max( RRSe,RMSe ) ) - MUM ) - ( ( CS * Min( Max( ( CS / CS ),Max( MUC,( MUR / ( RCSe * DS ) ) ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.73125, "obj2": 0.10745744889024367}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / ( ARS / FirstVNF_RAM_Server ) ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( RMSe / RMSe ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9395833333333333, "obj2": 0.026573349282406924}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6579084269341616}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ACS ) + ( Min( ARS ,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( ( MUM * ( MUC * MUR ) ) + RMSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,( ( RRSe * ( MUC - DS ) ) / CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.5208333333333334, "obj2": 0.27684112681017636}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MUM / MUM ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1901972240364622}, {"determining": "( ( ( ( ( ( ( ( MRS - CRS ) - AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / RRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + PN )", "choosing": "( ( ( ( RMSe + CS ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( MUR ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.6979166666666666, "obj2": 0.13071827163882085}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,Min( RRS ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( MUM / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7208333333333333, "obj2": 0.11439339728025785}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21875, "obj2": 0.6648061843604793}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( ACS ,MDR ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( BR * FirstVNF_CPU ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RMSe ) ) ,Min( Min( DS ,MUR ) ,( RRSe / DS ) ) ) ) + MLU ) )", "obj1": 0.9541666666666667, "obj2": 0.02063571490548493}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( BR - Max( ( DDR / FirstVNF_RAM_Server ),( ARS / FirstVNF_RAM_Server ) ) ) / CRS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( ( RCSe * Min( CS ,( MUR / CS ) ) ) + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11899712890360058}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6622472098703912}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) )", "choosing": "( ( CS * ( ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / MUC ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.79375, "obj2": 0.08587543095530817}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + CS ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7791666666666667, "obj2": 0.0897727467103888}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( RRS / RRS ) - ( FirstVNF_CPU_Server + ( RRS - MRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / RRSe ) ),CS ) ) ) ) ) - Max( Max( MUR,( Min( ( RRSe + MUR ) ,MUM ) / RRSe ) ),( MLU * CS ) ) )", "obj1": 0.8, "obj2": 0.082702706583234}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ( ( DDR + PN ) - MDR ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Min( DS ,CS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( Max( MUC,Min( RCSe ,Min( RCSe ,Max( MUR,RMSe ) ) ) ) * RMSe ) ) )", "obj1": 0.4708333333333333, "obj2": 0.33461906153211934}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.76875, "obj2": 0.09339028020435716}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( PN + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,( RRSe + RCSe ) ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.6589071403789952}], "20": [{"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( FirstVNF_RAM_Server * DDR ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( RMSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUR - DS ) * DS ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( Min( ( MUR + MUM ) ,( MLU * RCSe ) ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / RRSe ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,FirstVNF_Mem ) - ( RRS + PN ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( CRS ,ARS ) ,( RRS + PN ) ) ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( MUC - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.1875, "obj2": 0.701859041285645}, {"determining": "( ( RRS * ARS ) + ( Max( Const,( ( PN / PN ) - ( MDR - ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,BR ) ) - ( RRS - RRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( ( ( RMSe / MUR ) + ( MUM * RRSe ) ) + RMSe ) ) * ( Min( DS ,CS ) + ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,Max( ( CS - Min( Max( MLU,MUC ) ,MLU ) ),RRSe ) ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.4864986278670767}, {"determining": "( ( ( ( MDR - Max( ( CRS - FirstVNF_Mem ),( AMS - MDR ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( MUR / ( DS / ( MUC + MUM ) ) ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + DS ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.39375, "obj2": 0.4189903758802673}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) - FirstVNF_RAM ) / Max( ACS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MLU - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUR - ( RMSe - MLU ) ) + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.49583333333333335, "obj2": 0.2976797504112192}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( ( BR - MRS ) * Max( Min( Min( CRS ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( RRS / BR ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( RMSe + MLU ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - MUC ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.48125, "obj2": 0.3254489549802004}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - ( ( ( BR / FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( MUR,MLU ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.8520833333333333, "obj2": 0.05991315616977994}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_RAM ,ARS ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( Min( MLU ,RCSe ) * RRSe ) ) ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24714224169186008}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),RRS ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3596519222707565}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6458333333333334, "obj2": 0.16988912159315392}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - Min( ( FirstVNF_CPU_Server * AMS ) ,PN ) ) / ( Const * FirstVNF_CPU ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( ( ( MLU / ( DS * RRSe ) ) / RMSe ),( MLU * ( CS + MUC ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.2621243352360927}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / Max( Min( ( FirstVNF_CPU * MRS ) ,ACS ),Const ) ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( RMSe,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,MLU ) ) ) - Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.21807202585260568}, {"determining": "( ( ( ( ( ( ( ( BR * BR ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6625, "obj2": 0.15984301747869828}, {"determining": "( ( ( BR * ( ( ( ( AMS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.81875, "obj2": 0.07578004210131252}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( FirstVNF_RAM_Server / DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUM * CS ) ) + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + ( MUM / ( ( MUC * MUM ) * ( MUC / DS ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MLU ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03939386625352822}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) / PN ) ,( ( ( RRS + FirstVNF_CPU ) - Const ) * ACS ) )", "choosing": "( ( ( Max( RRSe,( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) ) + ( RRSe / RRSe ) ) + MUM ) - Max( ( MLU + CS ),RMSe ) )", "obj1": 0.2625, "obj2": 0.6210517469495178}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( ( ( ( Min( ARS ,FirstVNF_Mem_Server ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( RRSe / RRSe ) + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.44166666666666665, "obj2": 0.35079305818370715}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU / MUR ) ) - Max( Min( Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2952731116213137}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) ) - Min( Min( MUC ,( ( ( Max( ( RRSe * DS ),DS ) / ( Max( CS,DS ) - ( MUM + RRSe ) ) ) / ( RMSe + RRSe ) ) - ( MUM - ( ( MUM * RRSe ) / RMSe ) ) ) ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9208333333333333, "obj2": 0.03385919406195666}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( PN / ( ( FirstVNF_CPU_Server - DDR ) - ( CRS / MDR ) ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( MUM * CS ) ) * ( Min( DS ,RRSe ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MUM * ( MUM * ( MUR + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.4041666666666667, "obj2": 0.38829713507944214}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + RCSe ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,ACS )", "choosing": "( Max( Max( RCSe,MUR ),( ( MLU + ( CS * CS ) ) + Min( Max( CS,Max( CS,Max( MUC,CS ) ) ) ,( RRSe / ( ( MLU / ( MUR - RRSe ) ) / ( ( DS + MUR ) - ( MUM - CS ) ) ) ) ) ) ) - ( ( MUR * MUR ) * ( ( CS / ( ( MUR + RCSe ) * ( ( MUM + MUC ) / MUR ) ) ) + ( MUM * Max( ( MUC / MUC ),( MLU - MLU ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + Min( DS ,CS ) ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7416666666666667, "obj2": 0.10340007747436106}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - ACS ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) - DS )", "obj1": 0.6854166666666667, "obj2": 0.14469290139026}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( RCSe,Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7625, "obj2": 0.09672263177874182}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) + ACS ) ,( ( FirstVNF_RAM / AMS ) + Min( Min( CRS ,ACS ) ,Max( ( ( PN + ACS ) - MDR ),ACS ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,MUM ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.25416666666666665, "obj2": 0.6257828561540506}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Max( RMSe,MLU ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( RMSe,RRSe ) / Max( MLU,CS ) ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,BR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( Max( ( AMS - FirstVNF_CPU_Server ),DDR ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / Max( DS,MLU ) ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.575, "obj2": 0.23452561647555473}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( FirstVNF_CPU,MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RMSe * ( CS + MUR ) ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( MLU,CS ) / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.89375, "obj2": 0.047477999821765385}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + RRSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,( MRS - FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( MUM,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( MUC + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.64375, "obj2": 0.18483069454801687}, {"determining": "( ( ( ( FirstVNF_CPU_Server / RRS ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + ( Const / PN ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( MUM,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + ( ( Max( MUC,MLU ) * RRSe ) - ( ( MUM * DS ) * ( ( DS / MUM ) / Min( DS ,MUM ) ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.28228012816156867}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.2875, "obj2": 0.5625409697763396}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6104166666666667, "obj2": 0.20680420500154983}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( MDR ,( AMS + ( MDR - FirstVNF_Mem_Server ) ) ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( Min( CS ,RRSe ) / MUM ) ) * ( ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.2, "obj2": 0.6877085233595918}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( MDR - PN ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( Max( AMS,BR ) - ( MDR - PN ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUC ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( Min( Min( Max( DS,CS ) ,( RMSe - RCSe ) ) ,RRSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4, "obj2": 0.3952508877918575}, {"determining": "Min( ( ( RRS / CRS ) + ( ( ( FirstVNF_CPU_Server * BR ) - PN ) / Const ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( Min( ( ARS / ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,( CS * RMSe ) ) ,( MUR / MLU ) ) ) + Min( ( CS + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.19166666666666668, "obj2": 0.6894637283599404}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( Min( CRS ,MDR ) - PN ) ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( ( CS * CS ) - ( MUR / RCSe ) ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( ( MRS - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM / MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - ( ( Max( RCSe,CS ) - MLU ) - RRSe ) )", "obj1": 0.9583333333333334, "obj2": 0.01658453827700479}, {"determining": "( ( ( ( ( ( ( ( MRS - CRS ) - AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / RRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + PN )", "choosing": "( ( ( ( RMSe + CS ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( MUR ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.6979166666666666, "obj2": 0.13071827163882085}, {"determining": "( ( ( BR * ( ( ( ( RRS / FirstVNF_CPU ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( RRSe ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( MUR * MLU ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.9895833333333334, "obj2": 0.002985879624461036}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ( Max( Min( AMS ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( CS * DS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.45625, "obj2": 0.34494905934071873}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( MDR ,( AMS + Max( ACS,BR ) ) ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MLU / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648949883690695}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,MLU ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.1918608753977186}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( MUC - MUR ) - Min( Min( Min( DS ,Max( ( MUR / Max( CS,MUC ) ),RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6770833333333334, "obj2": 0.15128778707157506}, {"determining": "( ( ( ( ( ( MRS - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( BR * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - ( MLU + ( ( RMSe * ( MLU * MUM ) ) - RMSe ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12204610636669003}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( PN,Max( Const,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( MUM - MUM ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "( ( ( ( ( Max( BR,ARS ) / ( ( ( CRS * ARS ) + ( FirstVNF_Mem + ACS ) ) - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Max( Min( RRS ,FirstVNF_CPU ),ACS ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( MUM - ( ( ( MUR + ( ( MUR + MUM ) / Min( MUC ,RCSe ) ) ) + ( ( MLU - RCSe ) * ( RMSe + ( RCSe * MLU ) ) ) ) / ( CS * ( Min( DS ,RMSe ) / Max( Min( CS ,MUM ),( RMSe - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8875, "obj2": 0.053405413932754116}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "( ( ( ( ( ( ( DDR - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ( RRS + PN ),FirstVNF_CPU ) * Min( Min( ARS ,FirstVNF_Mem_Server ) ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( CS / MUM ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) )", "obj1": 0.69375, "obj2": 0.13548882637616488}, {"determining": "Min( ( ( RRS / CRS ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.23125, "obj2": 0.6479324374539457}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( RRS / RRS ) - ( FirstVNF_CPU_Server + ( RRS - MRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / RRSe ) ),CS ) ) ) ) ) - Max( Max( MUR,( Min( ( RRSe + MUR ) ,MUM ) / RRSe ) ),( MLU * CS ) ) )", "obj1": 0.8, "obj2": 0.082702706583234}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( MDR - FirstVNF_RAM_Server ) ) ) ) - ( ( AMS * ACS ) - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( ( ( ( RMSe - MUR ) + DS ) * MLU ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( ( Min( DS ,CS ) + ( Max( MLU,CS ) / RMSe ) ),CS ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ACS ) + ( Min( ARS ,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( ( MUM * ( MUC * MUR ) ) + RMSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,( ( RRSe * ( MUC - DS ) ) / CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.5270833333333333, "obj2": 0.2739367843133512}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( ( MDR * ACS ),( ACS * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( Min( CS ,DS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( RRSe * CS ) ) )", "obj1": 0.475, "obj2": 0.3305382672921355}, {"determining": "Min( ( ( BR - CRS ) * ( Max( Max( ( ( ( RRS + DDR ) - Const ) - MDR ),ACS ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ( ( Max( MDR,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( Max( ( RMSe * MUR ),Min( ( ( CS * RRSe ) / ( Max( ( MUC + MUC ),RCSe ) / MUM ) ) ,MUM ) ) - Max( RMSe,RMSe ) ) - ( ( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) + ( RRSe / RRSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.644615366934688}, {"determining": "( ( ( ( ( ( ( DDR - ( ACS * AMS ) ) / PN ) / Max( ACS,Max( BR,( ACS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUR + MUM ) ) ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9291666666666667, "obj2": 0.02866579028420254}, {"determining": "Min( ( CRS + MRS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUC,MUR ) - ( DS + MUC ) ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ACS ) + ( Min( ARS ,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( ( MUM * ( MUC * MUR ) ) + RMSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,( ( RRSe * ( MUC - DS ) ) / CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.5208333333333334, "obj2": 0.27684112681017636}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + Max( BR,( RRS + FirstVNF_Mem_Server ) ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RCSe * Max( RRSe,RMSe ) ) - MUM ) - ( ( CS * Min( Max( ( CS / CS ),Max( MUC,( MUR / ( RCSe * DS ) ) ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.73125, "obj2": 0.10745744889024367}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MUM / MUM ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1901972240364622}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( CS ,RMSe ) + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5354166666666667, "obj2": 0.2712010289769662}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + CS ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7791666666666667, "obj2": 0.0897727467103888}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Max( ( MRS + Const ),FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) - ( Min( MUM ,MUR ) / ( DS / Max( ( MLU + ( MLU / MUC ) ),CS ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.79375, "obj2": 0.08587082839602096}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( Max( ( MRS + Min( MRS ,PN ) ),CRS ) + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / CS ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6629549120666728}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( ACS ,MDR ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( BR * FirstVNF_CPU ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RMSe ) ) ,Min( Min( DS ,MUR ) ,( RRSe / DS ) ) ) ) + MLU ) )", "obj1": 0.9541666666666667, "obj2": 0.02063571490548493}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( Min( MUC ,MLU ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.8125, "obj2": 0.0786092001499451}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( MDR / PN ) * ( RRS - Max( ( FirstVNF_Mem_Server / AMS ),( DDR / CRS ) ) ) ) ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Min( RMSe ,RRSe ) ,RCSe ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22083333333333333, "obj2": 0.6622472098703912}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( ( MDR - PN ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( Max( BR,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5479052244438672}, {"determining": "( ( ( ( MDR - Max( ( FirstVNF_CPU_Server - CRS ),Min( DDR ,ARS ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( ( MLU * ( DS * ( RCSe + MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.22674347164322275}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( Max( ( MRS + Min( MRS ,PN ) ),FirstVNF_RAM ) + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6579084269341616}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ),( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( Max( RRSe,( Max( MUR,CS ) - MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4625, "obj2": 0.33784567923209524}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( PN + Min( BR ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,( RRSe + RCSe ) ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.22708333333333333, "obj2": 0.6589071403789952}, {"determining": "Min( Max( Const,( ( CRS / ARS ) * AMS ) ) ,( ( ( Max( BR,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) * Max( ( DS / MUR ),Max( ( ( RCSe - Max( MUR,DS ) ) * Min( ( MUM + MUC ) ,Min( CS ,MUR ) ) ),RCSe ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5479052244438672}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( ( FirstVNF_CPU_Server * BR ) - PN ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MDR - ( FirstVNF_RAM_Server - AMS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( Min( MLU ,MUC ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( MLU / RRSe ) ),( DS / MUC ) ) ) ) ) ) - Max( Min( Max( CS,( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.7875, "obj2": 0.08832663504519399}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,Min( MDR ,AMS ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * Max( Max( Max( DS,Min( MUM ,CS ) ),( Min( RCSe ,( Max( DS,RMSe ) / Min( CS ,RRSe ) ) ) * MUM ) ),( RRSe / RMSe ) ) ) - Min( CS ,CS ) )", "obj1": 0.9333333333333333, "obj2": 0.027290565894817664}], "21": [{"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * FirstVNF_CPU ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( Max( RRSe,CS ) / RMSe ) ) * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( FirstVNF_RAM_Server * DDR ) ) + ( Min( RRS ,ARS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( RMSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUR - DS ) * DS ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,FirstVNF_Mem ) - ( RRS + PN ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( CRS ,ARS ) ,( RRS + PN ) ) ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( MUC - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.1875, "obj2": 0.701859041285645}, {"determining": "( ( RRS * ARS ) + ( Max( Const,( ( PN / PN ) - ( MDR - ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,BR ) ) - ( RRS - RRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( ( ( RMSe / MUR ) + ( MUM * RRSe ) ) + RMSe ) ) * ( Min( DS ,CS ) + ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,Max( ( CS - Min( Max( MLU,MUC ) ,MLU ) ),RRSe ) ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.4864986278670767}, {"determining": "( ( ( ( MDR - Max( ( CRS - FirstVNF_Mem ),( AMS - MDR ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( MUR / ( DS / ( MUC + MUM ) ) ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + DS ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.39375, "obj2": 0.4189903758802673}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) - FirstVNF_RAM ) / Max( ACS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MLU - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUR - ( RMSe - MLU ) ) + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.49583333333333335, "obj2": 0.2976797504112192}, {"determining": "( ( ( ( ( ( BR - MRS ) * Max( Min( MDR ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / DS ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( MUM - CS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.32533389141913704}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_RAM ,ARS ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( Min( MLU ,RCSe ) * RRSe ) ) ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24714224169186008}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - ( ( ( BR / FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( MUR,MLU ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.8520833333333333, "obj2": 0.05991315616977994}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),RRS ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3596519222707565}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) )", "obj1": 0.5416666666666666, "obj2": 0.2597831219342382}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / Max( Min( ( FirstVNF_CPU * MRS ) ,ACS ),Const ) ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( RMSe,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,MLU ) ) ) - Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.21807202585260568}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( Max( AMS,BR ) - ( MDR - PN ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUC ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( Min( Min( Max( DS,CS ) ,( RMSe - RCSe ) ) ,RRSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4, "obj2": 0.3952508877918575}, {"determining": "( ( ( ( ( ( ( ( BR * BR ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6625, "obj2": 0.15984301747869828}, {"determining": "( ( ( ( ( ( ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - ( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM * MDR ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( Min( MLU ,( RRSe + RCSe ) ) + ( RCSe - MUM ) ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.8145833333333333, "obj2": 0.07505288658110341}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6458333333333334, "obj2": 0.16988912159315392}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ACS ) ) / Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Min( ( FirstVNF_RAM_Server / DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUM * CS ) ) + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( CS * ( ( RRSe + ( MUM / ( ( MUC * MUM ) * ( MUC / DS ) ) ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( DS / MUM ) ),( Min( CS ,RRSe ) / MLU ) ) ) ) ) + MLU ) )", "obj1": 0.88125, "obj2": 0.0557712396911678}, {"determining": "( Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) * ( Max( ACS,Max( BR,( Min( FirstVNF_CPU_Server ,MRS ) / ( ( BR + ( FirstVNF_CPU / ARS ) ) * ( Max( BR,BR ) + CRS ) ) ) ) ) - ( ( Max( AMS,FirstVNF_RAM_Server ) * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - RCSe ) * RMSe ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( CS * ( ( ( MLU + ( RMSe - MUM ) ) + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.2625, "obj2": 0.6200761325518156}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( ( ( ( Min( ARS ,FirstVNF_Mem_Server ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( RRSe / RRSe ) + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.44166666666666665, "obj2": 0.35079305818370715}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ( ( Min( FirstVNF_RAM_Server ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * ( MLU * CS ) ) ) ) ) - ( RMSe + RCSe ) )", "obj1": 0.5083333333333333, "obj2": 0.2828670360085126}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + RCSe ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,ACS )", "choosing": "( Max( Max( RCSe,MUR ),( ( MLU + ( CS * CS ) ) + Min( Max( CS,Max( CS,Max( MUC,CS ) ) ) ,( RRSe / ( ( MLU / ( MUR - RRSe ) ) / ( ( DS + MUR ) - ( MUM - CS ) ) ) ) ) ) ) - ( ( MUR * MUR ) * ( ( CS / ( ( MUR + RCSe ) * ( ( MUM + MUC ) / MUR ) ) ) + ( MUM * Max( ( MUC / MUC ),( MLU - MLU ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ( Max( Min( AMS ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( CS * DS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.45625, "obj2": 0.34494905934071873}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,BR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( Max( ( AMS - FirstVNF_CPU_Server ),DDR ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / Max( DS,MLU ) ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.575, "obj2": 0.23452561647555473}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( MDR - PN ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) + ACS ) ,( ( FirstVNF_RAM / AMS ) + Min( Min( CRS ,ACS ) ,Max( ( ( PN + ACS ) - MDR ),ACS ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,MUM ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.25416666666666665, "obj2": 0.6257828561540506}, {"determining": "( ( ( ( MDR - Max( ( FirstVNF_CPU_Server - CRS ),Min( DDR ,ARS ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( ( MLU * ( DS * ( RCSe + MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.22674347164322275}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03939386625352822}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Max( RMSe,MLU ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( RMSe,RRSe ) / Max( MLU,CS ) ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( Max( FirstVNF_CPU,MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RMSe * ( CS + MUR ) ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( Max( MLU,CS ) / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.89375, "obj2": 0.047477999821765385}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( MRS,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RCSe ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4125, "obj2": 0.38527069057081087}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ),Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) - DS )", "obj1": 0.6395833333333333, "obj2": 0.17738582627873936}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.2875, "obj2": 0.5625409697763396}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6104166666666667, "obj2": 0.20680420500154983}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( PN / ( ( ( CRS / FirstVNF_RAM_Server ) * DDR ) / ( MDR - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUC / MUM ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( MUM + ( MUM * CS ) ) ) )", "obj1": 0.21875, "obj2": 0.6528255232808344}, {"determining": "Min( ( ( BR - CRS ) * ( Max( Max( ( ( ( RRS + DDR ) - Const ) - MDR ),ACS ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ( ( Max( MDR,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( Max( ( RMSe * MUR ),Min( ( ( CS * RRSe ) / ( Max( ( MUC + MUC ),RCSe ) / MUM ) ) ,MUM ) ) - Max( RMSe,RMSe ) ) - ( ( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) + ( RRSe / RRSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.644615366934688}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( Min( CRS ,MDR ) - PN ) ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( ( CS * CS ) - ( MUR / RCSe ) ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( ( ( DDR - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ( RRS + PN ),FirstVNF_CPU ) * Min( Min( ARS ,FirstVNF_Mem_Server ) ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( CS / MUM ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) )", "obj1": 0.69375, "obj2": 0.13548882637616488}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( MDR ,( AMS + Max( ACS,BR ) ) ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MLU / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648949883690695}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - ACS ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) - DS )", "obj1": 0.6854166666666667, "obj2": 0.14469290139026}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( CRS * AMS ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe - Max( ( RMSe / ( DS - RCSe ) ),RRSe ) ) ) * MLU ) ,MUM ) - ( RRSe * Max( ( DS / MUM ),Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ) ) )", "obj1": 0.6270833333333333, "obj2": 0.2024449059510355}, {"determining": "Min( ( ( RRS / CRS ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.23125, "obj2": 0.6479324374539457}, {"determining": "Min( ( ( RRS / CRS ) + ( ( ( FirstVNF_CPU_Server * BR ) - PN ) / Const ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( Min( ( ARS / ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,( CS * RMSe ) ) ,( MUR / MLU ) ) ) + Min( ( CS + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.19166666666666668, "obj2": 0.6894637283599404}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( PN + Min( AMS ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,( RRSe + RCSe ) ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,MUC ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6609277528228056}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( MUC - MUR ) - Min( Min( Min( DS ,Max( ( MUR / Max( CS,MUC ) ),RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( PN / ( ( FirstVNF_CPU_Server - DDR ) - ( CRS / MDR ) ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( MUM * CS ) ) * ( Min( DS ,RRSe ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MUM * ( MUM * ( MUR + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.4041666666666667, "obj2": 0.38829713507944214}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( Max( ( CRS - FirstVNF_Mem ),Min( Const ,( FirstVNF_Mem + RRS ) ) ) - ( ( ( FirstVNF_Mem - CRS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( Min( MUR ,RRSe ),MLU ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03859781639980558}, {"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( MUM / MUM ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 0.6375, "obj2": 0.1901972240364622}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( BR + FirstVNF_Mem ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( RMSe + MLU ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( RCSe + RRSe ) - MUC ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4666666666666667, "obj2": 0.3349935062164468}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - Max( AMS,PN ) ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - CS ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09858223673088572}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( PN,Max( ( MDR - PN ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( MUM - MUM ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( DS ,CS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( Max( BR,ARS ) / ( ( ( CRS * ARS ) + ( FirstVNF_Mem + ACS ) ) - ACS ) ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - CRS ) - ACS ) * Max( Min( RRS ,FirstVNF_CPU ),ACS ) )", "choosing": "( ( MLU + ( DS - ( DS * ( DS * DS ) ) ) ) - ( ( MUM - ( ( ( MUR + ( ( MUR + MUM ) / Min( MUC ,RCSe ) ) ) + ( ( MLU - RCSe ) * ( RMSe + ( RCSe * MLU ) ) ) ) / ( CS * ( Min( DS ,RMSe ) / Max( Min( CS ,MUM ),( RMSe - RMSe ) ) ) ) ) ) + MLU ) )", "obj1": 0.8875, "obj2": 0.053405413932754116}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ),( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( Max( RRSe,( Max( MUR,CS ) - MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4625, "obj2": 0.33784567923209524}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + Max( BR,( RRS + FirstVNF_Mem_Server ) ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RCSe * Max( RRSe,RMSe ) ) - MUM ) - ( ( CS * Min( Max( ( CS / CS ),Max( MUC,( MUR / ( RCSe * DS ) ) ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.73125, "obj2": 0.10745744889024367}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,BR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / ( ( ( ( MDR - FirstVNF_Mem_Server ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( MLU * RCSe ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.5770833333333333, "obj2": 0.23067272164312083}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_RAM ,ARS ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( Min( MLU ,RCSe ) * RRSe ) ) ) ) ) )", "obj1": 0.525, "obj2": 0.27301518075771}, {"determining": "( Max( ( MRS / Const ),MDR ) + ( ( ( BR * ( FirstVNF_Mem_Server + Const ) ) - ACS ) * ( MDR - PN ) ) )", "choosing": "( ( ( ( ( ( Min( ( DS + MUM ) ,CS ) + RRSe ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - ( MLU + ( ( RMSe * ( MLU * MUM ) ) - RMSe ) ) )", "obj1": 0.7416666666666667, "obj2": 0.1033619227883759}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( Max( BR,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( ( Const + MDR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,MUM ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5390125726050913}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( PN - PN ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( CS / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + RRSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( ( MDR - PN ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( MDR ,( AMS + ( MDR - FirstVNF_Mem_Server ) ) ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( Min( CS ,RRSe ) / MUM ) ) * ( ( ( CS * ( ( RRSe + MUR ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.2, "obj2": 0.6877085233595918}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( FirstVNF_CPU_Server / RRS ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + ( Const / PN ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( MUM,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + ( ( Max( MUC,MLU ) * RRSe ) - ( ( MUM * DS ) * ( ( DS / MUM ) / Min( DS ,MUM ) ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.28228012816156867}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5375, "obj2": 0.2671053746973784}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( CS ,RMSe ) + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5354166666666667, "obj2": 0.2712010289769662}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ACS ) + ( Min( ARS ,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( ( MUM * ( MUC * MUR ) ) + RMSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,( ( RRSe * ( MUC - DS ) ) / CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.5208333333333334, "obj2": 0.27684112681017636}, {"determining": "( ( ( ( ( FirstVNF_RAM * MDR ) - ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ),( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,( ARS + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( Max( RRSe,( Max( MUR,CS ) - MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,RCSe ) - DS ) ) * RCSe ),( MUR - ( ( MUC * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.1971222910541364}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) ) - Min( Min( MUC ,( ( ( Max( ( RRSe * DS ),DS ) / ( Max( CS,DS ) - ( MUM + RRSe ) ) ) / ( RMSe + RRSe ) ) - ( MUM - ( ( MUM * RRSe ) / RMSe ) ) ) ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9208333333333333, "obj2": 0.03385919406195666}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( DS + RRSe ) + ( Min( DS ,( ( Max( MLU,DS ) - Min( RRSe ,RCSe ) ) * Max( MUC,Max( MUR,MUM ) ) ) ) - ( ( MUM + ( RRSe - MUR ) ) + MUM ) ) ) - ( ( CS * Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.7458333333333333, "obj2": 0.10202916419396056}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( ACS,Max( ( ( BR * BR ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + CS ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7791666666666667, "obj2": 0.0897727467103888}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - Max( RCSe,Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7625, "obj2": 0.09672263177874182}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( BR * ( FirstVNF_CPU * Min( Max( DDR,ARS ) ,CRS ) ) ) - ACS ) * ( ( Min( Max( AMS,PN ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( Max( ( Min( ( ( ( RCSe / RCSe ) * Max( MUM,RCSe ) ) * RCSe ) ,( ( ( RCSe + RCSe ) + MLU ) - ( RCSe - Max( MLU,MUR ) ) ) ) + MUC ),DS ) + MUC ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.98125, "obj2": 0.006571451209947628}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( Min( CRS ,FirstVNF_Mem_Server ),Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( ( RCSe / RMSe ) * ( ( RRSe + RCSe ) - Max( RCSe,Max( ( MLU + ( RCSe * MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.7666666666666667, "obj2": 0.09414313318283966}, {"determining": "( ( ( ( ( ( ( ( BR * BR ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,( MDR - PN ) ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - RCSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.71875, "obj2": 0.11783053347684343}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,MLU ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.1918608753977186}, {"determining": "( ( ( ( ( ( ( CRS * AMS ) - FirstVNF_RAM ) / ( ARS / ( AMS + FirstVNF_RAM_Server ) ) ) - ( PN + PN ) ) - Min( FirstVNF_RAM ,( ( ( ( DDR + PN ) - ( BR - FirstVNF_RAM_Server ) ) + ( Min( CRS ,MDR ) / CRS ) ) / FirstVNF_RAM_Server ) ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( ( MUM - CS ) + ( RMSe + RCSe ) ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * ( RMSe - Min( Min( CS ,MUR ) ,MUC ) ) ),( ( ( ( MUM + MUM ) + MLU ) - RMSe ) - CS ) ) ,MLU ),MUM ) )", "obj1": 0.6770833333333334, "obj2": 0.15128778707157506}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( Min( PN ,BR ) + DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / ( CS - DS ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.7041666666666667, "obj2": 0.12799536870452277}, {"determining": "( ( ( ( Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - Max( ( PN / ( ( FirstVNF_CPU_Server - DDR ) - ( CRS / MDR ) ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MUR - ( ( ( MUM / MLU ) * ( MUM * CS ) ) * ( Min( DS ,RRSe ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MUM * ( MUM * ( MUR + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.14957365443950846}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( RRS / RRS ) - ( FirstVNF_CPU_Server + ( RRS - MRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / RRSe ) ),CS ) ) ) ) ) - Max( Max( MUR,( Min( ( RRSe + MUR ) ,MUM ) / RRSe ) ),( MLU * CS ) ) )", "obj1": 0.8, "obj2": 0.082702706583234}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( ACS ,MDR ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( BR * FirstVNF_CPU ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( MLU + RMSe ) + CS ) ),Max( MUC,RMSe ) ) ,Min( Min( DS ,MUR ) ,( RRSe / DS ) ) ) ) + MLU ) )", "obj1": 0.9541666666666667, "obj2": 0.02063571490548493}, {"determining": "( ( ( ( ( ( MRS - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) )", "obj1": 0.9583333333333334, "obj2": 0.01658453827700479}, {"determining": "Min( ( CRS + MRS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUC,MUR ) - ( DS + MUC ) ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}], "22": [{"determining": "( ( ( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - ( RRS - CRS ) ) ) - ACS ) * ( ( ( ( DDR - ( FirstVNF_RAM_Server * MRS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) )", "choosing": "( ( Max( CS,DS ) / ( MLU + MUC ) ) - Max( Min( Max( ( Min( Min( MUR ,MLU ) ,Min( Max( DS,DS ) ,RMSe ) ) * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * Max( ( RCSe * Min( CS ,( MUR / CS ) ) ),( MUR - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * FirstVNF_CPU ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( Max( RRSe,CS ) / RMSe ) ) * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + MRS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUC,MUR ) - ( DS + MUC ) ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.1875, "obj2": 0.6958133744258646}, {"determining": "( ( RRS * ARS ) + ( Max( Const,( ( PN / PN ) - ( MDR - ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,BR ) ) - ( RRS - RRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( ( ( RMSe / MUR ) + ( MUM * RRSe ) ) + RMSe ) ) * ( Min( DS ,CS ) + ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,Max( ( CS - Min( Max( MLU,MUC ) ,MLU ) ),RRSe ) ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.4864986278670767}, {"determining": "( ( ( ( ( ( BR - MRS ) * Max( Min( MDR ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / DS ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( MUM - CS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.32533389141913704}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) - FirstVNF_RAM ) / Max( ACS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MLU - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUR - ( RMSe - MLU ) ) + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.49583333333333335, "obj2": 0.2976797504112192}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( FirstVNF_Mem_Server - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.38958333333333334, "obj2": 0.46379362820329945}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM / CRS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( CS - Max( ( Max( RRSe,RRSe ) * ( RRSe * RRSe ) ),( MUC + RCSe ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3770833333333333, "obj2": 0.4638389077410939}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) - FirstVNF_RAM ) / Max( ACS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MLU - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUR - ( RMSe - MLU ) ) + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.39166666666666666, "obj2": 0.41946600770518855}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_RAM ,ARS ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( CS,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( Min( MLU ,RCSe ) * RRSe ) ) ) ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24714224169186008}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + Min( FirstVNF_Mem_Server ,DDR ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( CS / CS ) ) ),( MLU * MUM ) ) ) - Max( ( ( MUC * MUM ) - MUR ),( MLU * CS ) ) )", "obj1": 0.8729166666666667, "obj2": 0.052543514628435754}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( MUR - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( ( ( RRSe * MUC ) / Max( MUR,( CS * CS ) ) ),( MLU * CS ) ) )", "obj1": 0.43125, "obj2": 0.3836093620097498}, {"determining": "( ( ( ( ( ( ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - ( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM * MDR ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( Min( MLU ,( RRSe + RCSe ) ) + ( RCSe - MUM ) ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.8145833333333333, "obj2": 0.07505288658110341}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),RRS ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.43333333333333335, "obj2": 0.3596519222707565}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - ( ( ( BR / FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / Max( MLU,MUC ) ) ) + ( CS + MUM ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( MUR,MLU ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.8520833333333333, "obj2": 0.05991315616977994}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + Max( BR,FirstVNF_RAM ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( Max( MUM,( MLU / RRSe ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( CS / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8895833333333333, "obj2": 0.04592214196752925}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( Min( FirstVNF_Mem_Server ,PN ),Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ),Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) - DS )", "obj1": 0.6770833333333334, "obj2": 0.14450795908456054}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),( PN - Min( DDR ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( MUC + MUM ) ) ) - Max( Min( Max( ( RCSe * ( CS + ( MUM * CS ) ) ),( MUR - CS ) ) ,MLU ),( ( MUC * MUR ) * Min( ( MLU / RMSe ) ,( Max( ( Max( RRSe,RCSe ) * ( MUR - MUM ) ),( MUR * Min( RMSe ,RRSe ) ) ) * ( ( RMSe / RCSe ) - Min( MUR ,Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6406721120783023}, {"determining": "( ( ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) + ( ( BR + Min( MRS ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * ( MUR / CS ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5503679609191621}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / Max( Min( ( FirstVNF_CPU * MRS ) ,ACS ),Const ) ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( RMSe,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,MLU ) ) ) - Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.21807202585260568}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / PN ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,( ( MUC + CS ) + RCSe ) ) ) ) - Min( Min( Min( DS ,Max( MUR,RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,ACS )", "choosing": "( Max( Max( RCSe,MUR ),( ( MLU + ( CS * CS ) ) + Min( Max( CS,Max( CS,Max( MUC,CS ) ) ) ,( RRSe / ( ( MLU / ( MUR - RRSe ) ) / ( ( DS + MUR ) - ( MUM - CS ) ) ) ) ) ) ) - ( ( MUR * MUR ) * ( ( CS / ( ( MUR + RCSe ) * ( ( MUM + MUC ) / MUR ) ) ) + ( MUM * Max( ( MUC / MUC ),( MLU - MLU ) ) ) ) ) )", "obj1": 0.33541666666666664, "obj2": 0.524830954008582}, {"determining": "( ( ( ( ( ( ( DDR - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( ( RRS + PN ),FirstVNF_CPU ) * Min( Min( ARS ,FirstVNF_Mem_Server ) ,PN ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( CS / MUM ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) )", "obj1": 0.69375, "obj2": 0.13548882637616488}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),MDR ) ) - ( MDR - PN ) ) - ( Max( Min( AMS ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( RCSe ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( CS * DS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( Max( ( MUC / MUC ),( MLU * ( ( MUM + RRSe ) - ( RCSe - DS ) ) ) ),Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.45625, "obj2": 0.34494905934071873}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,CS ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03939386625352822}, {"determining": "( Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) * ( Max( ACS,Max( BR,( Min( FirstVNF_CPU_Server ,MRS ) / ( ( BR + ( FirstVNF_CPU / ARS ) ) * ( Max( BR,BR ) + CRS ) ) ) ) ) - ( ( Max( AMS,FirstVNF_RAM_Server ) * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - RCSe ) * RMSe ) ,( RRSe + DS ) ) + ( Min( MUR ,MUM ) - ( CS * ( ( ( MLU + ( RMSe - MUM ) ) + RCSe ) - Max( ( RMSe / RRSe ),Min( DS ,Max( MUR,RCSe ) ) ) ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.2625, "obj2": 0.6200761325518156}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( Max( AMS,BR ) - ( MDR - PN ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUC ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( Min( Min( Max( DS,CS ) ,( RMSe - RCSe ) ) ,RRSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.3952648677715323}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( MDR - PN ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "( ( ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.5479166666666667, "obj2": 0.25848581878777116}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( AMS + CRS ) ) / FirstVNF_Mem ),Max( MRS,CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Max( RMSe,MLU ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Max( RMSe,RRSe ) / Max( MLU,CS ) ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2708333333333333, "obj2": 0.5829706170434039}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( Min( FirstVNF_CPU_Server ,Min( ( RRS / RRS ) ,( MRS - Const ) ) ),Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * ( ( ( DS + MUR ) / Max( RMSe,( RRSe + ( RMSe / MLU ) ) ) ) / ( Max( Min( ( MUM / DS ) ,( MUR * MUM ) ),( ( MLU / RRSe ) / RRSe ) ) * DS ) ) ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),( RRSe - ( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.325, "obj2": 0.5301567128399739}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( MRS,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,RCSe ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4125, "obj2": 0.38527069057081087}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Const ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1546755649685951}, {"determining": "( ( ( ( MDR - Max( ( CRS - FirstVNF_Mem ),( AMS - MDR ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( MUR / ( DS / ( MUC + MUM ) ) ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,CS ) - MUM ) ) ) + DS ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.39375, "obj2": 0.4189903758802673}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ( ( Min( FirstVNF_RAM_Server ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * ( MLU * CS ) ) ) ) ) - ( RMSe + RCSe ) )", "obj1": 0.5291666666666667, "obj2": 0.26639937047061263}, {"determining": "( ( ( ( PN + ( ( BR + Min( Min( FirstVNF_Mem_Server ,PN ) ,PN ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ),CRS ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + RRSe ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5729651521580975}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.2875, "obj2": 0.5625409697763396}, {"determining": "( ( ( ( PN + ( ( ( ( ARS * DDR ) - ARS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( ( FirstVNF_Mem + FirstVNF_Mem ) * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / DS ) - DS ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( MUR,RMSe ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5622321118892885}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( MDR ,( ( FirstVNF_Mem - MDR ) + Max( ACS,BR ) ) ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( RCSe / RMSe ) )", "obj1": 0.19791666666666666, "obj2": 0.6869499392027987}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( PN + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ),Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) - DS )", "obj1": 0.50625, "obj2": 0.2956888960583285}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( PN / ( ( ( CRS / FirstVNF_RAM_Server ) * DDR ) / ( MDR - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUC / MUM ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( MUM + ( MUM * CS ) ) ) )", "obj1": 0.21875, "obj2": 0.6528255232808344}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + Max( BR,( RRS + FirstVNF_Mem_Server ) ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( ( RCSe * Max( RRSe,RMSe ) ) - MUM ) - ( ( CS * Min( Max( ( CS / CS ),Max( MUC,( MUR / ( RCSe * DS ) ) ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.73125, "obj2": 0.10745744889024367}, {"determining": "Min( ( ( BR - CRS ) * ( Max( Max( ( ( ( RRS + DDR ) - Const ) - MDR ),ACS ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( ( ( ( Max( MDR,FirstVNF_Mem ) - ( RRS + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( Max( ( RMSe * MUR ),Min( ( ( CS * RRSe ) / ( Max( ( MUC + MUC ),RCSe ) / MUM ) ) ,MUM ) ) - Max( RMSe,RMSe ) ) - ( ( CS + Min( RCSe ,Max( MUM,( MLU / RRSe ) ) ) ) + ( RRSe / RRSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.644615366934688}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_RAM ,ARS ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),DS ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9333333333333333, "obj2": 0.030041012514079393}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( Min( CRS ,MDR ) - PN ) ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( ( CS * CS ) - ( MUR / RCSe ) ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( MUR ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( ( MDR - ( ARS * AMS ) ) - Max( ( CRS - FirstVNF_Mem ),( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUM ) - MUM ) ) ) + DS ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6604166666666667, "obj2": 0.16683224537812086}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ( DDR - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( Min( CS ,RRSe ) / MLU ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( Max( RRSe,CS ) / RMSe ) ),CS ) ) ) ) )", "obj1": 0.5416666666666666, "obj2": 0.2597831219342382}, {"determining": "Min( Max( Const,( FirstVNF_CPU_Server / DDR ) ) ,( ( ( Max( BR,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( ( Const + MDR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) ) + Min( Min( CRS ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( RCSe * MUM ) ) - ( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) * MUR ) * ( CS + ( MUM * Max( ( MLU + ( Max( RRSe,MUM ) / RMSe ) ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5390125726050913}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6458333333333334, "obj2": 0.16988912159315392}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( FirstVNF_CPU - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( ( MUR - CS ) - MUR ) ) + MUM ) ,MLU ) ) ) - Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) )", "obj1": 0.6083333333333333, "obj2": 0.2119551694489785}, {"determining": "( ( ( ( ( ( ( ( BR * BR ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.6625, "obj2": 0.15984301747869828}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / ( DDR - ( FirstVNF_RAM_Server * MRS ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ( ( Min( FirstVNF_RAM_Server ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( RRSe + RCSe ) - Max( MLU,( RMSe - DS ) ) ) - ( RMSe + RCSe ) )", "obj1": 0.6270833333333333, "obj2": 0.199776596137081}, {"determining": "Min( ( ( RRS / CRS ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.23125, "obj2": 0.6479324374539457}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ( ( Min( FirstVNF_RAM_Server ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * ( MLU * CS ) ) ) ) ) - ( RMSe + RCSe ) )", "obj1": 0.5083333333333333, "obj2": 0.2828670360085126}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) + ACS ) ,( ( FirstVNF_RAM / AMS ) + Min( Min( CRS ,ACS ) ,Max( ( ( PN + ACS ) - MDR ),ACS ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,MUM ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.25416666666666665, "obj2": 0.6257828561540506}, {"determining": "( ( ( ( ( ( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( RRS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( ACS - Const ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( CS - Max( Max( ( MLU * DS ),( Max( ( RCSe / RMSe ),MUC ) - Max( ( RMSe + RMSe ),MUR ) ) ),Max( ( RMSe - RMSe ),RMSe ) ) ) ,CS ) - ( Min( CS ,RRSe ) / MUC ) )", "obj1": 0.9416666666666667, "obj2": 0.024601422176394817}, {"determining": "( ( ( ( ( ( ( Min( ARS ,FirstVNF_Mem_Server ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( CRS,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( RRSe / RRSe ) + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.44166666666666665, "obj2": 0.35079305818370715}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( CRS - FirstVNF_CPU_Server ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( Min( DS ,Max( MUR,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,( MUR / ( MUC - DS ) ) ) + ( MUM * CS ) ) ) ) / ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Max( MUC,Max( MUR,RMSe ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.6125, "obj2": 0.20563236754308611}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) / Max( ACS,Max( ( MRS - ARS ),( ACS + BR ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( FirstVNF_RAM / Min( Max( DDR,FirstVNF_Mem_Server ) ,BR ) ) * Min( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( ( FirstVNF_Mem - MDR ),ACS ) ) ,PN ) ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Max( MLU,( ( MUR - ( RMSe - MLU ) ) + RCSe ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11240765584356494}, {"determining": "Min( ( ( ( ( PN + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( PN + Min( AMS ,FirstVNF_Mem ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,( RRSe + RCSe ) ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,MUC ) ) + ( MUM * ( CS * Min( ( CS + MUM ) ,DS ) ) ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6609277528228056}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ACS ) * ( MDR - PN ) ) + Const )", "choosing": "( ( MUC - MUR ) - Min( Min( Min( DS ,Max( ( MUR / Max( CS,MUC ) ),RCSe ) ) ,CS ) ,( Max( ( MUC * Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5128871744292742}, {"determining": "( ( ( FirstVNF_CPU_Server * AMS ) / Min( AMS ,RRS ) ) * Max( Const,Max( ( Min( PN ,BR ) + DDR ),ACS ) ) )", "choosing": "( ( ( MLU * ( ( MUR - RCSe ) * RCSe ) ) + ( ( MLU - ( MUR * ( ( MUC / DS ) * ( MLU * MLU ) ) ) ) + Min( MUR ,Max( DS,RCSe ) ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / Min( ( MUM * RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.275, "obj2": 0.5792628090019232}, {"determining": "( ( ( BR * ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + FirstVNF_RAM_Server ) - MDR ) + ( BR / CRS ) ) ) - ACS ) * ( ( Min( Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ,Const ) + AMS ) / Max( BR,BR ) ) )", "choosing": "( ( ( MLU + ( DS / MUC ) ) + ( Min( RRSe ,( Max( RCSe,RRSe ) + MUM ) ) - ( ( ( RCSe / ( DS * ( RRSe + RCSe ) ) ) / MLU ) * ( DS * DS ) ) ) ) - ( ( CS * Min( Max( ( CS / ( MUR + CS ) ),Max( MUC,RCSe ) ) ,( RRSe + DS ) ) ) + MLU ) )", "obj1": 0.9854166666666667, "obj2": 0.005236421592914927}, {"determining": "( ( ( ( MDR - Max( ( FirstVNF_CPU_Server - CRS ),Min( DDR ,ARS ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( ( MLU * ( DS * ( RCSe + MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.5875, "obj2": 0.22674347164322275}, {"determining": "( ( ( ( ( ( ( CRS * ( FirstVNF_Mem_Server - MDR ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( ( ( PN + ACS ) - MDR ) - DDR ) - FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + Max( Max( RMSe,Min( DS ,DS ) ),RMSe ) ) - Max( ( RMSe / RRSe ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) - Max( Min( Max( Min( RCSe ,MUM ),( MUC - RMSe ) ) ,MLU ),( RCSe - Max( ( ( MUR * MUR ) * ( CS + ( MUM * CS ) ) ),Max( ( MLU + ( RRSe + MUR ) ),CS ) ) ) ) )", "obj1": 0.7625, "obj2": 0.09339616008011542}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) - Max( PN,( MRS - AMS ) ) ) - ACS ) * ( MDR - PN ) )", "choosing": "( ( Max( DS,MUC ) * ( DS * ( RRSe - MUC ) ) ) - ( ( Max( RRSe,DS ) + ( ( MUC / ( ( RRSe - MUR ) + ( RRSe - DS ) ) ) - RRSe ) ) + ( Min( CS ,Min( ( Min( DS ,MUR ) / ( MUC * Max( MUC,MUR ) ) ) ,( ( MUC + ( MUC - MUR ) ) * MUM ) ) ) / DS ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07986093501359144}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( PN / ( ( FirstVNF_CPU_Server - DDR ) - ( CRS / MDR ) ) ),( FirstVNF_CPU_Server / DDR ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( MUM * CS ) ) * ( Min( DS ,RRSe ) + ( MUM * CS ) ) ) ) - Max( ( RMSe - MUM ),( MUM * ( MUM * ( MUR + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.6354166666666666, "obj2": 0.18371449769020307}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_CPU_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( Max( ( CRS - FirstVNF_Mem ),Min( Const ,( FirstVNF_Mem + RRS ) ) ) - ( ( ( FirstVNF_Mem - CRS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( Min( MUR ,RRSe ),MLU ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03859781639980558}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( PN / ( ( FirstVNF_CPU_Server - DDR ) - ( CRS / MDR ) ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( MUM * CS ) ) * ( Min( DS ,RRSe ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),( MUM * ( MUM * ( MUR + Min( MUM ,RMSe ) ) ) ) ) )", "obj1": 0.4041666666666667, "obj2": 0.38829713507944214}, {"determining": "( ( Max( ( ACS * ACS ),ACS ) * ( MDR - PN ) ) + Max( FirstVNF_RAM_Server,Max( MRS,( ( FirstVNF_CPU_Server * AMS ) * Max( PN,Max( ( MDR - PN ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( MUR + RRSe ) ) + Min( ( MUR + MUM ) ,RCSe ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Max( MUC,Max( ( RRSe + ( MUM - MUM ) ),RMSe ) ) ) ) - Min( ( RCSe * RCSe ) ,( Max( ( MUC * Min( ( Min( DS ,CS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.26875, "obj2": 0.6024529583349036}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ),( ( FirstVNF_CPU_Server * AMS ) * Max( AMS,FirstVNF_Mem ) ) ) - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( BR,Max( ARS,MRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - ( Max( RRSe,( Max( MUR,CS ) - MUM ) ) * ( Min( ( RMSe / Min( RMSe ,RCSe ) ) ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - Max( Min( Max( ( ( RRSe / ( Min( RMSe ,DS ) - DS ) ) * RCSe ),( MUR - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.4625, "obj2": 0.33784567923209524}, {"determining": "( ( ( ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) * ( MDR - PN ) ) + ( Max( Const,( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( Max( MLU,MLU ) + ( MLU - MUR ) ) + ( ( MUM - DS ) * ( RRSe - RCSe ) ) ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + Min( ( ( Max( ( RRSe - RRSe ),MLU ) + ( MLU - MUR ) ) + MUM ) ,MLU ) ) ) - ( Min( Max( RCSe,MUM ) ,RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.1918608753977186}, {"determining": "Min( ( ( ( ( ( Max( FirstVNF_RAM_Server,RRS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) ) - ACS ) * ( MDR - PN ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) ) + Min( Min( ( FirstVNF_RAM_Server * MDR ) ,ACS ) ,( ( BR * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( ( MUR * MUR ) * ( CS + ( MUM * Max( MUC,Max( MUR,MUM ) ) ) ) ) )", "obj1": 0.7416666666666667, "obj2": 0.10312422091896027}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * ( ( ( DDR + FirstVNF_RAM_Server ) - MDR ) + ( ( MRS * MDR ) / MDR ) ) ) - ( FirstVNF_CPU + Const ) ) * ( MDR - PN ) )", "choosing": "( MLU - ( ( CS * Min( Max( ( CS / ( ( DS - CS ) + CS ) ),Max( MUC,RCSe ) ) ,Max( ( Min( MUC ,DS ) - Max( RCSe,( RMSe * RRSe ) ) ),MLU ) ) ) + MLU ) )", "obj1": 0.7729166666666667, "obj2": 0.09120273156633785}, {"determining": "Min( ( ( RRS / CRS ) + ( ( ( FirstVNF_CPU_Server * BR ) - PN ) / Const ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( Min( ( ARS / ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server * MRS ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,( CS * RMSe ) ) ,( MUR / MLU ) ) ) + Min( ( CS + MUM ) ,( MLU * RCSe ) ) ) - ( MUC + MUC ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.19166666666666668, "obj2": 0.6894637283599404}, {"determining": "Min( ( Max( Min( Const ,Const ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + MUM ) - ( Min( DS ,( ( CS + ( Min( MLU ,RRSe ) * ( ( RRSe + DS ) * ( RMSe * RRSe ) ) ) ) * RRSe ) ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.31875, "obj2": 0.538920750177003}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * CS ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.9979166666666667, "obj2": 0.0005339903194279065}, {"determining": "( ( ( ( ( ( MRS - FirstVNF_RAM ) / Max( ACS,( FirstVNF_RAM_Server + ( PN - PN ) ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( CS / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06634833545694493}, {"determining": "( ( ACS - PN ) * ( ( ( ( ( PN - ( FirstVNF_RAM_Server / ( BR * FirstVNF_CPU ) ) ) * ( BR - Max( ( CRS - FirstVNF_Mem ),Max( ACS,BR ) ) ) ) - FirstVNF_RAM ) / ( ( Min( ARS ,FirstVNF_RAM_Server ) + ( AMS + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) )", "choosing": "( ( RRSe + Max( MUC,( DS * ( ( RCSe / MUM ) - ( ( ( MUM - CS ) - CS ) - MUM ) ) ) ) ) * ( Min( RMSe ,( RCSe * Max( Min( Max( ( MUC - MUC ),( MUC / MLU ) ) ,MLU ),CS ) ) ) - CS ) )", "obj1": 0.96875, "obj2": 0.009162664503388979}, {"determining": "( ( ( ( FirstVNF_CPU_Server / RRS ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + ( Const / PN ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( MUM,( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + ( ( Max( MUC,MLU ) * RRSe ) - ( ( MUM * DS ) * ( ( DS / MUM ) / Min( DS ,MUM ) ) ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - ( RRSe - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.28228012816156867}, {"determining": "Min( ( Max( Max( PN,FirstVNF_Mem_Server ),Const ) - ( RRS + PN ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( ( RRSe / RRSe ) ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUC,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,( ( BR * FirstVNF_CPU ) / PN ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( Min( PN ,BR ) + DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / ( CS - DS ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + Max( RRSe,CS ) ) ) ) - DS )", "obj1": 0.6979166666666666, "obj2": 0.13091954716584464}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ACS ) + ( Min( ARS ,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( ( MUM * ( MUC * MUR ) ) + RMSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * Max( MUR,( ( RRSe * ( MUC - DS ) ) / CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.5208333333333334, "obj2": 0.27684112681017636}, {"determining": "( ( ( ( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( ( MUC + CS ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - RRSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * RCSe ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - Max( Min( Max( ( ( ( MLU + ( DS / MUM ) ) / MLU ) * Min( RRSe ,MUM ) ),( MUR - CS ) ) ,MLU ),( MLU * CS ) ) )", "obj1": 0.9666666666666667, "obj2": 0.015181697863739666}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,BR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( Max( ( AMS - FirstVNF_CPU_Server ),DDR ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / Max( DS,MLU ) ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.575, "obj2": 0.23452561647555473}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Max( ( Min( PN ,BR ) + DDR ),ACS ) ) ) ,PN ) ) ,Max( ( FirstVNF_RAM + CRS ),( MDR - PN ) ) )", "choosing": "Max( ( ( Max( Min( CS ,RMSe ),MLU ) / DS ) + MLU ),( Min( MUR ,( ( Min( ( CS + ( RCSe / MUM ) ) ,( MLU + ( RRSe + MUR ) ) ) + Min( Max( ( MLU / MUC ),( MLU * MUM ) ) ,MUM ) ) / ( ( RRSe - DS ) * ( ( MUM / MLU ) - ( CS + CS ) ) ) ) ) * ( ( ( CS * ( ( RRSe + MLU ) - ( ( RRSe - DS ) * ( DS - MUC ) ) ) ) + Min( ( ( MUM + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) + RCSe ) ) )", "obj1": 0.20833333333333334, "obj2": 0.6648949883690695}, {"determining": "( ( ( ( ( ( MRS - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_RAM ) ) / Max( ACS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( MDR - PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) * ( MDR - PN ) ) + ( ( ( CRS - ARS ) * DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) + ( RRSe / RRSe ) ) + Min( ( ( ( RRSe + MUR ) + ( MLU - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / Max( ( ( RMSe * RCSe ) / ( RRSe + ( MLU / CS ) ) ),( MLU * MUM ) ) ) - ( MLU + Max( MUC,( ( MUC + CS ) + ( RRSe / RRSe ) ) ) ) )", "obj1": 0.9583333333333334, "obj2": 0.01658453827700479}, {"determining": "( ( ( ( ( ( ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ACS,Max( BR,( PN + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - ( ( ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM * MDR ) ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_RAM ,PN ) ) / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RCSe * ( ( RCSe / RMSe ) - ( DS + RRSe ) ) ) + RRSe ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.79375, "obj2": 0.0870899425878834}, {"determining": "( ( ( ( ( ( ( ( BR * BR ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,Max( BR,( ACS + BR ) ) ) * Min( FirstVNF_Mem_Server ,( MDR - PN ) ) ) )", "choosing": "( ( ( ( MLU + Min( ( ( MUM + ( RRSe - RCSe ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + MUC ) ) - DS )", "obj1": 0.71875, "obj2": 0.11783053347684343}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU_Server * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_RAM ) ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,PN ) ) - Min( ARS ,FirstVNF_Mem_Server ) ) * ( MDR - PN ) ) + ( Max( ( FirstVNF_RAM_Server - ACS ),Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( RRS / RRS ) - ( FirstVNF_CPU_Server + ( RRS - MRS ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - ( Min( MUR ,MUR ) / ( DS / Max( ( MLU + ( DS / RRSe ) ),CS ) ) ) ) ) - Max( Max( MUR,( Min( ( RRSe + MUR ) ,MUM ) / RRSe ) ),( MLU * CS ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08892383492634104}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( Max( Max( Max( PN,( ( AMS - CRS ) - DDR ) ),Const ),RRS ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( ( Max( Max( ( RCSe / MLU ),Min( CS ,Min( RRSe ,MLU ) ) ),DS ) + ( RRSe / ( CS - MUM ) ) ) + ( Min( CS ,CS ) / DS ) ) ) * RCSe )", "obj1": 0.95, "obj2": 0.022598156226101687}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( DDR + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) - ( MDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( ( Min( PN ,BR ) + DDR ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( Max( ( MUM * RCSe ),( MUR - CS ) ) ,MLU ) + ( RRSe / RRSe ) ) + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( RRSe / ( CS - DS ) ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( MLU + ( ( MUC / MUR ) + ( MUR * RMSe ) ) ) ) - DS )", "obj1": 0.7041666666666667, "obj2": 0.12799536870452277}, {"determining": "( ( ( ( ( ( ( DDR - ( FirstVNF_RAM_Server * AMS ) ) / Max( BR,PN ) ) / Max( ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ),Max( BR,( ARS + FirstVNF_CPU ) ) ) ) - CRS ) - ACS ) * ( MDR - PN ) ) + ( ( BR * ( ( ( DDR + PN ) - MDR ) + ( BR / CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( CS * ( ( RRSe + RCSe ) - Max( ( RMSe / RRSe ),Max( ( Min( DS ,MUM ) + ( MUR / RMSe ) ),CS ) ) ) ) - Min( Min( MUC ,CS ) ,( Max( ( MUC * Min( ( Min( RMSe ,DS ) / MUM ) ,RRSe ) ),( RMSe + DS ) ) / MLU ) ) )", "obj1": 0.9229166666666667, "obj2": 0.03338168721964651}, {"determining": "( ( ( ( ( ( ( Max( CRS,FirstVNF_Mem ) - ( FirstVNF_Mem + PN ) ) - FirstVNF_RAM ) / Max( ACS,Max( BR,FirstVNF_Mem ) ) ) - ( DDR - PN ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ( ( ( ( CRS - ( RRS - CRS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) / PN ) - ( MDR - PN ) ),Max( BR,Max( ACS,Max( ( MRS + Const ),FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( MUR + Min( ( ( MUM + ( RRSe - MUR ) ) + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( ( ( MUC * MUM ) - MUR ) + MUM ) * RRSe ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) ) / ( ( MUC + CS ) + ( RRSe / RRSe ) ) ) - DS )", "obj1": 0.6395833333333333, "obj2": 0.17738582627873936}, {"determining": "Min( ( Max( ( CRS - FirstVNF_Mem ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( ( MDR - PN ),MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,Max( ( ( DDR + Min( RRS ,FirstVNF_Mem_Server ) ) - MDR ),ACS ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( Max( ( CS / ( RMSe + CS ) ),Max( MUC,RCSe ) ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUR ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - ( ( ( ( MLU + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.20416666666666666, "obj2": 0.6739568170280675}, {"determining": "Min( ( ( ( ( ( Min( MRS ,AMS ) + FirstVNF_RAM_Server ) - MRS ) + FirstVNF_CPU_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / ( ( ( ( MDR - FirstVNF_Mem_Server ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( Min( Min( ( MUR + RCSe ) ,Max( RRSe,MUR ) ) ,DS ) ,( MUR / MLU ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( DS / MUC ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.575, "obj2": 0.23452561647555473}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( ( CRS - ( MDR - PN ) ),( FirstVNF_CPU_Server / ( ACS * ACS ) ) ) ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,Max( RRSe,( Max( MUR,MUC ) - MUM ) ) ) + ( MUM * CS ) ) ) ) - Max( Min( Max( ( RCSe * RCSe ),( MUR - CS ) ) ,MLU ),Max( ( RRSe + ( ( CS * CS ) - MUM ) ),RMSe ) ) )", "obj1": 0.4, "obj2": 0.3942921215276284}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( ( ARS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,PN ) ) + ( Max( Const,BR ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) + FirstVNF_RAM_Server ) - MDR ) + ACS ) ,( ( ( FirstVNF_CPU_Server / ( ( ( ( MDR - FirstVNF_Mem_Server ) - ACS ) * ( MDR - PN ) ) + ( Max( ACS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - PN ) + Min( Min( CRS ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - Min( Min( CS ,DS ) ,( MUR / MLU ) ) ) - ( ( ( ( Min( ( Min( CS ,RRSe ) / MUM ) ,RRSe ) + ( MLU * RCSe ) ) / MLU ) * MUC ) * ( CS + ( MUM * CS ) ) ) )", "obj1": 0.5770833333333333, "obj2": 0.23067272164312083}, {"determining": "( ( ( ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MDR ) * AMS ) - FirstVNF_RAM ) / Max( ACS,Max( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS + PN ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - Max( AMS,PN ) ) * ( MDR - PN ) )", "choosing": "( ( DS / MUC ) - ( ( CS * ( ( RRSe + RCSe ) - CS ) ) + MLU ) )", "obj1": 0.7541666666666667, "obj2": 0.09858223673088572}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_RAM ) / ( ( Max( CRS,Min( RRS ,ARS ) ) + ( ( Const - CRS ) + CRS ) ) / FirstVNF_Mem ) ) - Min( ACS ,( DDR * ACS ) ) ) - ACS ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - PN ) + Min( Min( CRS ,ACS ) ,( ( Min( CRS ,Const ) * FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( MLU + ( ( MUR * RCSe ) / RCSe ) ) - ( ( CS * ( ( ( DS * RRSe ) + RCSe ) - Max( ( RMSe / ( RMSe / RRSe ) ),Max( ( MLU + ( RCSe / MUM ) ),CS ) ) ) ) + MLU ) )", "obj1": 0.9770833333333333, "obj2": 0.006752961184621983}]}