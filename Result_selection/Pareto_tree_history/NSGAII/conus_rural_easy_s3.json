{"1": [{"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + MUC ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.192, "obj2": 0.620460879551363}, {"determining": "( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,MUC ) ) - Max( RMSe,MUM ) )", "obj1": 0.63, "obj2": 0.32769407505306947}, {"determining": "( Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + Min( DDR ,RRS ) )", "choosing": "Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,CS ) * ( ( ( CS + RRSe ) - RMSe ) + CS ) ) )", "obj1": 0.47, "obj2": 0.41149378851504437}, {"determining": "Min( Min( CRS ,ACS ) ,( PN * Const ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * Max( ( MUM * DS ),CS ) )", "obj1": 0.53, "obj2": 0.3982016478041923}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.258, "obj2": 0.5412255953554009}, {"determining": "( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * Max( ( PN - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - RCSe ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( ( ( ( ( RRSe * RCSe ) * MUR ) - MUR ) / Max( RRSe,RMSe ) ) * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + ACS ) / Max( Max( ( PN / FirstVNF_Mem ),( AMS - Const ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "( Min( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) ,Min( ( MRS - CRS ) ,Max( PN,ARS ) ) ) * Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( MRS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( Max( MRS,MDR ) / ( MDR + ACS ) ) ) )", "choosing": "( ( RCSe / CS ) + ( ( RMSe + RMSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ARS ) ),( ( FirstVNF_Mem - ACS ) * ( CRS * ARS ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( ACS ,CRS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( Max( ( DS / DS ),RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / MUM ) ) ) ,( RMSe / MUM ) )", "obj1": 0.57, "obj2": 0.3295970622912557}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / MDR ) / ( Min( MRS ,BR ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,Max( MUC,( MUM + Max( MLU,MUM ) ) ) )", "obj1": 0.16, "obj2": 0.6922366378019378}], "2": [{"determining": "( Max( ( ACS * ( ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) / RRS ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / PN ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( DS - MUM ) ) * RMSe ) ) ,( RCSe * MUR ) ),( Max( MUC,( CS / RRSe ) ) + ( Max( Max( ( RMSe / MUM ),Min( DS ,RRSe ) ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) ) ) ,Max( ( MUR * MUM ),( RMSe * RRSe ) ) ) ,Max( ( ( DS + MUM ) - Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.1, "obj2": 0.7196775224733843}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM + DS ) - ( MLU + MUC ) )", "obj1": 0.728, "obj2": 0.1994871030179817}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( ( DS + MUC ) / RCSe )", "obj1": 0.992, "obj2": 0.0027380021636952646}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + ( Const + FirstVNF_CPU_Server ) ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.896, "obj2": 0.08418553546669584}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - Min( RRS ,( RRS / FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( MUR / ( MUC * Max( ( RCSe / MUC ),( Min( ( MUR - RRSe ) ,( Max( RRSe,CS ) - MLU ) ) / RMSe ) ) ) ) )", "obj1": 0.632, "obj2": 0.30628074325110294}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.894, "obj2": 0.08562474570689893}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.47, "obj2": 0.37973391085401836}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.894, "obj2": 0.08562474570689893}, {"determining": "Min( ( Const / ( FirstVNF_CPU + Min( ( MRS / CRS ) ,DDR ) ) ) ,( MDR * RRS ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.528, "obj2": 0.34806390671039134}, {"determining": "( Max( MDR,Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,Min( MUR ,MUC ) ) * ( MLU / CS ) ) )", "obj1": 0.384, "obj2": 0.47942380671517393}, {"determining": "( Max( MDR,Max( FirstVNF_CPU,MRS ) ) + ( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,CS ) * ( MLU / CS ) ) )", "obj1": 0.464, "obj2": 0.41995322715366745}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + MUC ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( ( FirstVNF_Mem + ACS ) / Max( Max( ( PN / FirstVNF_Mem ),( AMS - Const ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "Max( Max( PN,( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUM + MUM ) / Max( MLU,MLU ) )", "obj1": 0.166, "obj2": 0.6769006900027695}, {"determining": "Max( ( MRS + BR ),( ( ( Min( ( FirstVNF_CPU_Server / ( DDR - Max( Const,MDR ) ) ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) ) * ARS ) )", "choosing": "( ( RCSe + MUM ) - Max( ( DS - RCSe ),( MUC * RCSe ) ) )", "obj1": 0.18, "obj2": 0.6369678244507978}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,MUC ) ) - Max( RMSe,MUM ) )", "obj1": 0.63, "obj2": 0.32769407505306947}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ARS ) ),( ( FirstVNF_Mem - ACS ) * ( CRS * ARS ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( ACS ,CRS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( Max( ( DS / DS ),RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / MUM ) ) ) ,( RMSe / MUM ) )", "obj1": 0.57, "obj2": 0.3295970622912557}, {"determining": "Max( ( Const * RRS ),( ( ( RRS + BR ) - ( ARS - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - CS ) / Min( ( CS * RCSe ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.29, "obj2": 0.5340926563578073}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + MUC ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.33, "obj2": 0.4863407239495476}, {"determining": "( Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) ) )", "obj1": 0.106, "obj2": 0.7124458044007308}, {"determining": "( ( BR / PN ) + Min( ( FirstVNF_Mem_Server / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_Mem - MRS ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe * CS ) * MUM ) ) ) - ( Max( MUR,RRSe ) + DS ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.188, "obj2": 0.6245252460768259}, {"determining": "( ( CRS / ARS ) / Max( Max( ( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.192, "obj2": 0.5913664387406236}, {"determining": "Min( FirstVNF_RAM ,( PN * Const ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * Max( ( MUM * DS ),MUC ) )", "obj1": 0.56, "obj2": 0.3401558246037528}, {"determining": "( ( MRS * AMS ) * Max( ( CRS + PN ),FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / Max( RMSe,MLU ) ) )", "obj1": 0.144, "obj2": 0.6996125159065408}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS - MUM ) / ( MUM + MLU ) ) + ( ( MUM + DS ) / ( RCSe + RRSe ) ) )", "obj1": 0.708, "obj2": 0.21414036114693066}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.2, "obj2": 0.5789864688996162}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.258, "obj2": 0.5412255953554009}, {"determining": "Max( Max( ACS,ACS ),( ( ARS / ACS ) + BR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.258, "obj2": 0.5412255953554009}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( BR ,ACS ) ) / Const ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.152, "obj2": 0.690550201322863}, {"determining": "Max( ( Const * RRS ),( Min( RRS ,( ( Const + BR ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( RMSe,MUC ) + ( MUM - DS ) ) - CS ) / Min( ( Min( ( Max( RRSe,MUM ) - RMSe ) ,CS ) * RCSe ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.274, "obj2": 0.5362478504854541}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / FirstVNF_Mem )", "choosing": "( ( MUM - CS ) + ( MUM - CS ) )", "obj1": 0.324, "obj2": 0.4916863425156703}, {"determining": "( ( CRS * MRS ) * ( DDR / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RMSe * ( MLU - ( CS - ( DS + MUR ) ) ) ) - ( MUM / CS ) )", "obj1": 0.148, "obj2": 0.6966742472832965}, {"determining": "( ( RRS * Min( ACS ,CRS ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * Min( ( FirstVNF_RAM_Server * Min( FirstVNF_CPU_Server ,PN ) ) ,Const ) ) ) )", "choosing": "( Min( RMSe ,Min( Min( ( Max( MUM,MUR ) + MLU ) ,( Max( MLU,Max( ( MUM - RRSe ),( MLU * CS ) ) ) - RRSe ) ) ,MUC ) ) - Max( RMSe,MUM ) )", "obj1": 0.63, "obj2": 0.32769407505306947}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * Max( ( PN - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - RCSe ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( ( ( ( ( RRSe * RCSe ) * MUR ) - MUR ) / Max( RRSe,RMSe ) ) * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) ,Min( ( MRS - CRS ) ,Max( PN,ARS ) ) ) * Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( MRS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( Max( MRS,MDR ) / ( MDR + ACS ) ) ) )", "choosing": "( ( RCSe / CS ) + ( ( RMSe + RMSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - FirstVNF_CPU )", "choosing": "( Min( RMSe ,Min( MUR ,MUC ) ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) ) ,Min( Max( PN,ARS ) ,( MRS - FirstVNF_Mem ) ) ) * ( BR - ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( ( ( RRSe + RCSe ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MLU ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( ( ( ( ( DS / MUC ) + Min( MUM ,MLU ) ) + MUR ) - ( CS / RRSe ) ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) ,Min( ( MRS - CRS ) ,Max( PN,ARS ) ) ) * Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * BR ) * Min( DDR ,DDR ) ) + ( ( FirstVNF_CPU / ( MDR * ( Max( MDR,ARS ) - PN ) ) ) - ( ACS - CRS ) ) )", "choosing": "( ( ( CS / MUM ) * Min( ( ( RCSe * ( RRSe / CS ) ) / ( MUR + Max( MUC,CS ) ) ) ,MLU ) ) / Min( RCSe ,Max( Min( RCSe ,Max( ( MLU / MUR ),RRSe ) ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * BR ) * Min( DDR ,DDR ) ) + ( ( FirstVNF_CPU / ( MDR * ( Max( MDR,ARS ) - PN ) ) ) - ( ACS - CRS ) ) )", "choosing": "( ( ( CS / MUM ) * Min( ( ( RCSe * ( RRSe / CS ) ) / ( MUR + Max( MUC,CS ) ) ) ,MLU ) ) / Min( RCSe ,Max( Min( RCSe ,Max( ( MLU / MUR ),RRSe ) ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * BR ) * Min( DDR ,DDR ) ) + ( ( FirstVNF_CPU / ( MDR * ( Max( MDR,ARS ) - PN ) ) ) - ( ACS - CRS ) ) )", "choosing": "( ( ( CS / MUM ) * Min( ( ( RCSe * ( RRSe / CS ) ) / ( MUR + Max( MUC,CS ) ) ) ,MLU ) ) / Min( RCSe ,Max( Min( RCSe ,Max( ( MLU / MUR ),RRSe ) ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * BR ) * Min( DDR ,DDR ) ) + ( ( FirstVNF_CPU / ( MDR * ( MRS - PN ) ) ) - ( ACS - CRS ) ) )", "choosing": "( ( ( CS / MUM ) * Min( RMSe ,MLU ) ) / Min( RCSe ,( Min( RCSe ,Max( ( MLU / MUR ),RRSe ) ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( FirstVNF_RAM ,( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( DS + MUC ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) / RRS ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / PN ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( DS - MUM ) ) * RMSe ) ) ,( RCSe * MUR ) ),( Max( MUC,( CS / RRSe ) ) + ( Max( Max( ( RMSe / MUM ),Min( DS ,RRSe ) ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) ) ) ,Max( ( MUR * MUM ),( RMSe * RRSe ) ) ) ,Max( ( ( DS + MUM ) - Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( ( ( RRS / AMS ) * Max( ( PN * Const ),ARS ) ) - BR ) )", "choosing": "( RRSe / ( ( ( RRSe + Max( ( ( RRSe - ( MUM * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.064, "obj2": 0.7846695466645993}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RMSe ,Min( MUR ,MUC ) ) / CS ) + Max( DS,MUC ) )", "obj1": 0.86, "obj2": 0.1042309100743456}, {"determining": "Min( ( AMS * ( ( DDR * ( FirstVNF_Mem_Server / MDR ) ) * Max( DDR,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - Const ) )", "choosing": "( Max( Max( Max( MLU,Min( RMSe ,RRSe ) ),DS ),MUR ) - ( MLU + MUC ) )", "obj1": 0.74, "obj2": 0.19354597739454674}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.658, "obj2": 0.2356823780707773}, {"determining": "Max( Max( ACS,ACS ),( ( ARS / ACS ) + BR ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.1, "obj2": 0.713063116917818}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( ARS / ACS ) / ( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Min( RRSe ,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( ( Max( RMSe,RMSe ) / RRSe ) + ( ( RRSe + CS ) / Min( DS ,CS ) ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.38, "obj2": 0.4611920198942533}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe * CS ) * DS ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.158, "obj2": 0.6434854723599231}, {"determining": "Max( Max( ACS,ACS ),( ( ARS / ACS ) + BR ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.454, "obj2": 0.3872947312360512}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( CRS - BR ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.638, "obj2": 0.280780981753886}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - Min( RRS ,( RRS / FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( MUR / ( MUC * Max( ( RCSe / MUC ),( Min( ( MUR - RRSe ) ,( Max( RRSe,CS ) - MLU ) ) / RMSe ) ) ) ) )", "obj1": 0.632, "obj2": 0.30628074325110294}, {"determining": "Min( FirstVNF_RAM ,( PN * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) * DS ) * Max( ( MUM * DS ),MUC ) )", "obj1": 0.934, "obj2": 0.055301753735315325}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) ) )", "obj1": 0.966, "obj2": 0.018635031495701143}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( BR ,ACS ) ) / Const ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.152, "obj2": 0.690550201322863}, {"determining": "Min( ( Const / ( DDR + Min( ( MRS / CRS ) ,DDR ) ) ) ,( Max( ( PN * Const ),ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( RRSe - ( MUM * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.526, "obj2": 0.3588328389054423}, {"determining": "( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.558, "obj2": 0.3144537713828637}, {"determining": "Min( ( ( FirstVNF_Mem + ACS ) / Max( Max( ( PN / FirstVNF_Mem ),( AMS - Const ) ),( AMS + FirstVNF_CPU ) ) ) ,( AMS * ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( MLU + MUC ) )", "obj1": 0.168, "obj2": 0.6092207136607563}, {"determining": "Max( ( Const * RRS ),Max( MDR,Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( ( ( ( Max( RMSe,Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,CS ) * ( MLU / CS ) ) ) ) + ( MUM - CS ) ) - CS ) / Min( ( CS * RCSe ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.338, "obj2": 0.4824740842692356}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Min( FirstVNF_RAM ,( PN * Const ) ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( RRSe + MUR ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.274, "obj2": 0.5130211114831206}, {"determining": "Min( FirstVNF_RAM ,( ( MDR * PN ) * Const ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.556, "obj2": 0.3192853287134191}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ( DDR / MDR ) ) / ( RRS * MDR ) ) ) / Min( ACS ,CRS ) )", "choosing": "( ( ( Min( MUR ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Max( Max( ( RMSe * ( RMSe + DS ) ),RMSe ),CS ) )", "obj1": 0.232, "obj2": 0.558441327904551}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( PN,RRS ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / Min( PN ,FirstVNF_CPU ) ),( DDR / PN ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.918, "obj2": 0.06400021452723897}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,FirstVNF_CPU ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.894, "obj2": 0.0855059011971555}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe + ( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) ) ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.118, "obj2": 0.6940974425614876}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.47, "obj2": 0.37973391085401836}, {"determining": "Max( ( RRS * Const ),( ( CRS * FirstVNF_RAM ) + MRS ) )", "choosing": "( ( MUR / ( Max( ( ( RCSe - Max( RRSe,RMSe ) ) / MUM ),( DS * ( CS * MUR ) ) ) - RMSe ) ) + ( MUM * CS ) )", "obj1": 0.256, "obj2": 0.5303824998938115}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + MUC ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ,( MDR * ( Max( FirstVNF_CPU_Server,CRS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe + DS ) * ( MLU * MUR ) ),( Min( RMSe ,Min( MUR ,MUC ) ) * ( MLU / CS ) ) ) - ( ( ( RRSe + MUC ) + MLU ) + MUC ) )", "obj1": 0.296, "obj2": 0.504531130702027}, {"determining": "( Min( ( AMS + ( PN * Const ) ) ,( Const + FirstVNF_CPU_Server ) ) + ( Max( CRS,MRS ) - ( ( ( BR - MDR ) + Const ) / ( PN * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe - RRSe ) / MUC ) / ( ( DS * ( RRSe + MUR ) ) * Max( ( MUM * DS ),MUC ) ) )", "obj1": 0.98, "obj2": 0.009718645381908989}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,Min( MUR ,MUC ) ) * ( MLU / CS ) ) )", "obj1": 0.72, "obj2": 0.19873220358806815}, {"determining": "Min( ( Const / CRS ) ,( Max( ( PN * Const ),ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( RRSe + MUR ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.528, "obj2": 0.34806390671039134}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.9, "obj2": 0.07952862874184148}, {"determining": "( ( CRS - ARS ) / ( ( Max( ACS,FirstVNF_RAM_Server ) * ( PN - CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,Min( ( Max( Min( ( MLU / ( MUM / MLU ) ) ,MUR ),( DS / MUM ) ) * CS ) ,Min( ( MUR - MUR ) ,Max( MUC,CS ) ) ) ) )", "obj1": 0.248, "obj2": 0.5403163162289968}, {"determining": "( Max( MDR,Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.214, "obj2": 0.5645568214651547}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.324, "obj2": 0.4910549118604844}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS - MUM ) / ( MUM + MLU ) ) + ( ( MUM + DS ) / ( RCSe + RRSe ) ) )", "obj1": 0.708, "obj2": 0.21414036114693066}, {"determining": "Min( ( Const / ( FirstVNF_CPU + Min( ( MRS / CRS ) ,DDR ) ) ) ,( MDR * RRS ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.528, "obj2": 0.34806390671039134}, {"determining": "( Max( Max( ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( DS + MUC ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) ) )", "obj1": 0.112, "obj2": 0.7072012412290597}, {"determining": "( ( FirstVNF_Mem + ACS ) / Max( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( PN,RRS ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / Min( PN ,FirstVNF_CPU ) ),( DDR / PN ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),RMSe ) )", "obj1": 0.186, "obj2": 0.5885183581326705}, {"determining": "( ( BR / PN ) + Min( ( FirstVNF_Mem_Server / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_Mem - MRS ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe * CS ) * MUM ) ) ) - ( Max( MUR,RRSe ) + DS ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.184, "obj2": 0.6014067476726147}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS + ( BR / RRS ) ) )", "choosing": "( ( CS * RRSe ) - ( MLU + MUC ) )", "obj1": 0.716, "obj2": 0.20766901653939987}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.47, "obj2": 0.37973391085401836}, {"determining": "Max( ( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ),( ( ARS / ACS ) + BR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( Min( MUC ,RRSe ) + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.194, "obj2": 0.5815520070776276}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + MUC ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + Min( ACS ,FirstVNF_RAM ) ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),Max( RMSe,MUM ) ) )", "obj1": 0.458, "obj2": 0.3862144880438287}, {"determining": "( ( FirstVNF_Mem + ACS ) / Max( Max( ( PN / FirstVNF_Mem ),( AMS - Const ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.208, "obj2": 0.5713627262933081}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.2, "obj2": 0.5789864688996162}], "4": [{"determining": "Min( FirstVNF_RAM ,( Max( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_RAM ) ),MRS ) - ( ( Const + FirstVNF_CPU ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Max( Max( ( RMSe * ( RMSe + Max( ( ( MUM * DS ) - Max( MUR,MUR ) ),( Min( DS ,RMSe ) + ( RCSe + RCSe ) ) ) ) ),RMSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM ,( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( DS + MUC ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( BR - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * Max( CRS,FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( RRSe / ( ( ( Max( ( ( RRSe - ( MUM * MLU ) ) + MUR ),MUR ) + RRSe ) * DS ) / ( MUR + DS ) ) )", "obj1": 0.056, "obj2": 0.7884167306443135}, {"determining": "( Max( ( ACS * ( ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) / RRS ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / PN ) / ( ACS - MDR ) ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.1, "obj2": 0.6826933242617786}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( BR ,ACS ) ) / Const ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.072, "obj2": 0.6976468497315049}, {"determining": "Min( ( BR - FirstVNF_Mem ) ,( MDR * RRS ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / Max( RCSe,MUR ) ) - MUR ),MUR ) ) * DS ) * ( CS + MLU ) ) )", "obj1": 0.518, "obj2": 0.3273766504275717}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / RRS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( ( MUM * MLU ) / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe * CS ) * DS ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.156, "obj2": 0.6313010974771812}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( ( MDR * Max( ( PN * Const ),ARS ) ) - BR ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( ( ( RRSe + Max( ( ( RRSe - ( MUM * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.06, "obj2": 0.7819536219620062}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( RRSe + MUR ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.79, "obj2": 0.14931867352621606}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) ) )", "obj1": 0.966, "obj2": 0.018635031495701143}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + Min( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ,FirstVNF_RAM ) ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),Max( RMSe,MLU ) ) )", "obj1": 0.442, "obj2": 0.40186021026570373}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RMSe ,Min( MUR ,MUC ) ) / CS ) + Max( DS,MUC ) )", "obj1": 0.86, "obj2": 0.10109303768402543}, {"determining": "Min( FirstVNF_RAM ,( PN * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) * DS ) * Max( ( MUM * DS ),MUC ) )", "obj1": 0.934, "obj2": 0.055301753735315325}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( AMS * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.47, "obj2": 0.37973391085401836}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.694, "obj2": 0.2122815461001242}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( ARS / ACS ) / ( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Min( RRSe ,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( ( Max( RMSe,RMSe ) / RRSe ) + ( ( RRSe + CS ) / Min( DS ,CS ) ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.38, "obj2": 0.4611920198942533}, {"determining": "Min( ( Const / ( DDR + Min( Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ,DDR ) ) ) ,( Max( ( PN * Const ),ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + ( Min( MLU ,MLU ) + RCSe ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.582, "obj2": 0.301602474259139}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,FirstVNF_CPU ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.894, "obj2": 0.0855059011971555}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.844, "obj2": 0.1139089557875056}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.778, "obj2": 0.1816796746812513}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),RMSe ) )", "obj1": 0.65, "obj2": 0.24915835616188695}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Min( FirstVNF_RAM ,( PN * Const ) ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( RRSe + MUR ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.274, "obj2": 0.5130211114831206}, {"determining": "Min( ( Const / CRS ) ,( Max( ( PN * Const ),ARS ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( RMSe,Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,CS ) * ( MLU / CS ) ) ) ) + ( MUM - CS ) ) - CS ) / Min( ( CS * RCSe ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.368, "obj2": 0.465400776445735}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.47, "obj2": 0.37973391085401836}, {"determining": "Min( ( AMS * ( ( DDR * ( FirstVNF_Mem_Server / MDR ) ) * Max( DDR,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - Const ) )", "choosing": "( Max( Max( Max( MLU,Min( RMSe ,RRSe ) ),DS ),MUR ) - ( MLU + MUC ) )", "obj1": 0.74, "obj2": 0.19354597739454674}, {"determining": "( Max( ( ACS * ( RRS / ( Min( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Const ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,MRS ) ) ) ) ) ),( ( FirstVNF_CPU_Server - CRS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( CS / RCSe ) ) * RMSe ) ) ,( RCSe * MUR ) ),( ( Max( Min( MUC ,MUC ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) + Max( MUC,( CS / RRSe ) ) ) ) ,Max( ( MUR * MUM ),( RMSe + RRSe ) ) ) ,RRSe )", "obj1": 0.606, "obj2": 0.29274872998792184}, {"determining": "Min( ( AMS * ( ( ( ( DDR + PN ) / ( Const / ACS ) ) / Min( Min( FirstVNF_RAM ,( PN * Const ) ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) ) ) ,( FirstVNF_RAM - Max( RRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + DS ) - ( Min( ( ( ( Max( RMSe,DS ) + DS ) * MUR ) - Min( Min( ( ( MUM + CS ) + RMSe ) ,MLU ) ,MUR ) ) ,CS ) + DS ) )", "obj1": 0.758, "obj2": 0.18614637605218748}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.658, "obj2": 0.2356823780707773}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Max( ( Const * RRS ),( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RMSe,Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,CS ) * ( MLU / CS ) ) ) ) + ( MUM - CS ) ) - CS ) / Min( ( CS * RCSe ) ,MLU ) ) + ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * RCSe ) )", "obj1": 0.342, "obj2": 0.4757781735553267}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * ( Max( ( Max( RRSe,CS ) * RMSe ),RMSe ) + Min( Min( MUM ,RCSe ) ,( ( RCSe + RMSe ) + Max( RRSe,MLU ) ) ) ) ) + ( ( MUM + DS ) / ( RCSe + RRSe ) ) )", "obj1": 0.642, "obj2": 0.27137485334891415}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) + RRS ) * ( RRS / FirstVNF_Mem ) ) - Const ) ,( AMS * MDR ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Min( MUC ,RRSe ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUM ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.824, "obj2": 0.12520701408849352}, {"determining": "Min( ( Const / ( DDR + Min( ( MRS / ACS ) ,DDR ) ) ) ,( Max( ( PN * Const ),ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( RRSe - ( MUM * MLU ) ) - MUR ),( RRSe / RMSe ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.554, "obj2": 0.32621810260237777}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.824, "obj2": 0.12520701408849352}, {"determining": "Min( FirstVNF_RAM ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.558, "obj2": 0.3104695937922496}, {"determining": "Min( ( ( FirstVNF_Mem + ACS ) / Max( Max( ( ( FirstVNF_CPU + Const ) / FirstVNF_Mem ),( AMS - Const ) ),( AMS + FirstVNF_CPU ) ) ) ,( AMS * ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - DS )", "obj1": 0.174, "obj2": 0.6008822335087691}, {"determining": "Max( ( RRS * Const ),( ( CRS * FirstVNF_RAM ) + MRS ) )", "choosing": "( ( MUR / ( Max( ( ( RCSe - Max( RRSe,RMSe ) ) / MUM ),( DS * ( CS * MUR ) ) ) - RMSe ) ) + ( MUM * CS ) )", "obj1": 0.256, "obj2": 0.5303824998938115}, {"determining": "( Min( RRS ,Max( ARS,( Max( ACS,RRS ) - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( RRSe / ( RCSe * ( ( ( ( MLU * MUM ) / ( ( RMSe + DS ) / RCSe ) ) * CS ) * RRSe ) ) )", "obj1": 0.614, "obj2": 0.2845185469139076}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.9, "obj2": 0.07952862874184148}, {"determining": "Max( Max( ACS,( FirstVNF_RAM - Const ) ),( ( ARS / ACS ) + BR ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( ( DS + DS ) / MLU ) ) ) )", "obj1": 0.452, "obj2": 0.3842386070266832}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( CRS - BR ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.638, "obj2": 0.280780981753886}, {"determining": "Min( ( ( FirstVNF_Mem + ACS ) / Max( Max( ( PN / FirstVNF_Mem ),( AMS - Const ) ),( AMS + FirstVNF_CPU ) ) ) ,( AMS * ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( MLU + MUC ) )", "obj1": 0.168, "obj2": 0.6092207136607563}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.184, "obj2": 0.5834365870126984}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,Min( MUR ,MUC ) ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.166, "obj2": 0.6286355927632541}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( PN,RRS ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / Min( PN ,FirstVNF_CPU ) ),( DDR / PN ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.916, "obj2": 0.06564505526175839}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.658, "obj2": 0.2356823780707773}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.324, "obj2": 0.4910549118604844}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ,( AMS * MDR ) )", "choosing": "( Max( ( ( MLU + DS ) * Min( CS ,RRSe ) ),( Min( RMSe ,Min( MUR ,MUC ) ) * ( MLU / CS ) ) ) - ( MLU + MUC ) )", "obj1": 0.284, "obj2": 0.506520313785542}], "5": [{"determining": "Min( FirstVNF_RAM ,( Max( PN,MRS ) - ( ( FirstVNF_CPU + Const ) / ( ( PN * FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( DS + MUC ) / ( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM ,( Max( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_RAM ) ),MRS ) - ( ( Const + FirstVNF_CPU ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Max( Max( ( RMSe * ( RMSe + Max( ( ( MUM * DS ) - Max( MUR,MUR ) ),( Min( DS ,RMSe ) + ( RCSe + RCSe ) ) ) ) ),RMSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( BR - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * Max( CRS,FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( RRSe / ( ( ( Max( ( ( RRSe - ( MUM * MLU ) ) + MUR ),MUR ) + RRSe ) * DS ) / ( MUR + DS ) ) )", "obj1": 0.056, "obj2": 0.7884167306443135}, {"determining": "( Max( ( ACS * ( ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) / RRS ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / PN ) / ( ACS - MDR ) ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.1, "obj2": 0.6826933242617786}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( BR ,ACS ) ) / Const ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.072, "obj2": 0.6976468497315049}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / RRS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( ( MUM * MLU ) / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe * CS ) * DS ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.156, "obj2": 0.6313010974771812}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( ( DDR / PN ) - BR ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( ( ( RRSe + Max( ( ( RRSe - ( MUM * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.062, "obj2": 0.7771681045680707}, {"determining": "Min( Max( FirstVNF_CPU,( ACS - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( MDR + ( ( ARS * BR ) + ARS ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * Max( ( MLU - MLU ),( MLU * RRSe ) ) ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.392, "obj2": 0.43012193699754164}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe + CS ) / Min( DS ,CS ) ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.358, "obj2": 0.45863702403921297}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_Mem ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Max( MUR,( ( MUC * MUR ) * DS ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.498, "obj2": 0.35442931669789424}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( PN,RRS ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / Min( PN ,FirstVNF_CPU ) ),( DDR / PN ) ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( RRSe + MUR ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.936, "obj2": 0.05266321811416003}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.614, "obj2": 0.26671591301266717}, {"determining": "( Max( ( ACS * ( RRS / ( Min( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Const ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,MRS ) ) ) ) ) ),( ( FirstVNF_CPU_Server - CRS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( CS / RCSe ) ) * RMSe ) ) ,( RCSe * MUR ) ),( ( Max( Min( MUC ,MUC ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) + Max( MUC,( CS / RRSe ) ) ) ) ,Max( ( MUR * MUM ),( RMSe + RRSe ) ) ) ,RRSe )", "obj1": 0.606, "obj2": 0.29274872998792184}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ( FirstVNF_CPU_Server + MRS ) ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( Min( RRSe ,( CS * ( RCSe + RMSe ) ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.242, "obj2": 0.5399464838673323}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.814, "obj2": 0.12503896871125303}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.408, "obj2": 0.41676019972536477}, {"determining": "Min( PN ,( AMS * RRS ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.532, "obj2": 0.31232981037344176}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.22, "obj2": 0.5584414653049107}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,DS ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),RMSe ) )", "obj1": 0.648, "obj2": 0.26438975590954145}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.726, "obj2": 0.19186738838801348}, {"determining": "Min( FirstVNF_RAM ,( PN * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - DS )", "obj1": 0.884, "obj2": 0.09628147294558613}, {"determining": "Min( Min( PN ,( MDR * RRS ) ) ,( AMS * MDR ) )", "choosing": "( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.208, "obj2": 0.5688876329041357}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.992, "obj2": 0.0025865486254883635}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ,( AMS * MDR ) )", "choosing": "( Max( ( ( MLU + DS ) * Min( CS ,RRSe ) ),( Min( RMSe ,Min( MUR ,MUC ) ) * ( MLU / CS ) ) ) - ( MLU + MUC ) )", "obj1": 0.284, "obj2": 0.506520313785542}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Min( FirstVNF_RAM ,( PN * Const ) ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "( ( DS + Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + ( Min( MLU ,MLU ) + RCSe ) ) * DS ) / ( CS + MLU ) ) ) ) - ( MLU + DS ) )", "obj1": 0.786, "obj2": 0.1569402392761828}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.844, "obj2": 0.1139089557875056}, {"determining": "Min( PN ,( MDR * RRS ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.518, "obj2": 0.3273766504275717}, {"determining": "Max( ( RRS * Const ),( ( CRS * FirstVNF_RAM ) + MRS ) )", "choosing": "( ( MUR / ( Max( ( ( RCSe - Max( RRSe,RMSe ) ) / MUM ),( DS * ( CS * MUR ) ) ) - RMSe ) ) + ( MUM * CS ) )", "obj1": 0.256, "obj2": 0.5303824998938115}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.184, "obj2": 0.5834365870126984}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),RMSe ) )", "obj1": 0.65, "obj2": 0.24915835616188695}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.48, "obj2": 0.3679679455191442}, {"determining": "Min( Min( FirstVNF_RAM ,Const ) ,( Max( FirstVNF_Mem,Min( ARS ,AMS ) ) * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( RRSe ,RCSe ) ) ) / Max( Max( ( MUM / ( Max( DS,RCSe ) + ( Min( MUR ,( MUC * CS ) ) - ( ( CS - MUR ) + ( RRSe + RRSe ) ) ) ) ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.694, "obj2": 0.20891347724239379}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RMSe ,Min( MUR ,MUC ) ) / CS ) + Max( DS,MUC ) )", "obj1": 0.86, "obj2": 0.10109303768402543}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) / ( ( Max( ( ( Const / MDR ) * ( MDR + ( Const + ARS ) ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( Max( MUR,( ( ( MUM * MUR ) + RRSe ) / RCSe ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.334, "obj2": 0.48102993414424683}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,Min( MUR ,MUC ) ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.166, "obj2": 0.6286355927632541}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.42, "obj2": 0.40307441264429306}, {"determining": "Min( ( BR - FirstVNF_Mem ) ,( MDR * RRS ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / Max( RCSe,MUR ) ) - MUR ),MUR ) ) * DS ) * ( CS + MLU ) ) )", "obj1": 0.518, "obj2": 0.3273766504275717}, {"determining": "( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.78, "obj2": 0.1810964170264705}, {"determining": "Min( ( ( BR + Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * BR ) ) ) ) - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( ( DS * ( ( MUR - RMSe ) - MUC ) ) + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) )", "obj1": 0.668, "obj2": 0.22928672588712798}, {"determining": "Min( ( AMS * ( ( ( ( DDR + PN ) / ( Const / ACS ) ) / Min( Min( FirstVNF_RAM ,( PN * Const ) ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) ) ) ,( FirstVNF_RAM - Max( RRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + DS ) - ( Min( ( ( ( Max( RMSe,DS ) + DS ) * MUR ) - Min( Min( ( ( MUM + CS ) + RMSe ) ,MLU ) ,MUR ) ) ,CS ) + DS ) )", "obj1": 0.758, "obj2": 0.18614637605218748}, {"determining": "Min( FirstVNF_RAM ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.558, "obj2": 0.3104695937922496}, {"determining": "Min( FirstVNF_RAM ,( PN * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) * DS ) * Max( ( MUM * DS ),MUC ) )", "obj1": 0.934, "obj2": 0.055301753735315325}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.708, "obj2": 0.20507115792554836}, {"determining": "Min( ( Const / ( DDR + Min( Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ,DDR ) ) ) ,( Max( ( PN * Min( ( ( ACS / FirstVNF_Mem_Server ) * RRS ) ,FirstVNF_CPU_Server ) ),ARS ) * MRS ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + ( Min( MLU ,( MUR + RRSe ) ) + RCSe ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.582, "obj2": 0.301602474259139}, {"determining": "Min( ( Const / ( DDR + Min( Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ,DDR ) ) ) ,( Max( ( PN * Const ),ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + ( Min( MLU ,MLU ) + RCSe ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.582, "obj2": 0.301602474259139}, {"determining": "( ( ( FirstVNF_Mem - ( FirstVNF_CPU * ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( ( ( CS + CS ) * Max( RCSe,Min( RMSe ,Min( MUR ,MUC ) ) ) ),RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.344, "obj2": 0.4706353733001317}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Min( MUC ,RRSe ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUM ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.718, "obj2": 0.1996924049105403}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( RRSe + MUR ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.79, "obj2": 0.14931867352621606}], "6": [{"determining": "( ( ( ( FirstVNF_RAM - Const ) - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( RRSe + MUR ) * DS ) / ( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM ,( Max( PN,MRS ) - ( ( FirstVNF_CPU + Const ) / ( ( PN * FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( DS + MUC ) / ( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS + FirstVNF_RAM_Server ),( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( ( RRSe + RCSe ) * DS ) / Min( Min( DS ,RRSe ) ,( Max( Max( Max( ( RMSe * RMSe ),RRSe ),MUR ),( MLU + MUC ) ) + RRSe ) ) ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( Max( ( ACS * ( ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) / RRS ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / PN ) / ( ACS - MDR ) ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.102, "obj2": 0.6780635554891307}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( BR ,ACS ) ) / Const ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.072, "obj2": 0.6976468497315049}, {"determining": "Min( Const ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUR * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.46, "obj2": 0.37529328458440114}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.42, "obj2": 0.40307441264429306}, {"determining": "Min( FirstVNF_RAM ,( Max( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_RAM ) ),MRS ) - Min( PN ,( MDR * RRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Max( Max( ( RMSe * ( RMSe + Max( ( ( MUM * DS ) - Max( MUR,MUR ) ),( Min( DS ,RMSe ) + ( RCSe + RCSe ) ) ) ) ),RMSe ),Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) )", "obj1": 0.066, "obj2": 0.7554508787884113}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( Const * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) )", "obj1": 0.904, "obj2": 0.0682776227449232}, {"determining": "Min( FirstVNF_RAM ,( PN * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( DS - MUM ) ) * RMSe ) ) ,( RCSe * MUR ) ),( Max( MUC,( CS / RRSe ) ) + ( Max( Max( ( RMSe / MUM ),Min( DS ,MUM ) ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) ) ) ,Max( ( MUR * MUM ),( RMSe * RRSe ) ) ) ,DS )", "obj1": 0.942, "obj2": 0.0514293173455375}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.37, "obj2": 0.4451980083260221}, {"determining": "( ( PN * FirstVNF_Mem_Server ) / Const )", "choosing": "( ( ( Min( RRSe ,( CS * ( Min( ( MLU - MUR ) ,( RMSe / MUM ) ) * CS ) ) ) * Max( RCSe,MUC ) ) * ( ( MLU / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,Min( Max( RCSe,RCSe ) ,( MUC * MUM ) ) ) )", "obj1": 0.184, "obj2": 0.5834365870126984}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / RRS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( ( MUM * MLU ) / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe * CS ) * DS ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.156, "obj2": 0.6313010974771812}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.726, "obj2": 0.19186738838801348}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( CS * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.498, "obj2": 0.34486553983174667}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RMSe ,Min( MUR ,MUC ) ) / CS ) + Max( DS,MUC ) )", "obj1": 0.86, "obj2": 0.10109303768402543}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / RRS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( ( MUM * MLU ) / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe * CS ) * DS ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.156, "obj2": 0.6313010974771812}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe + CS ) / Min( DS ,CS ) ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.358, "obj2": 0.45863702403921297}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe + CS ) / Min( DS ,CS ) ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.752, "obj2": 0.1777927632500032}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / AMS )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.18, "obj2": 0.6208828839377943}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( PN,RRS ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / Min( PN ,FirstVNF_CPU ) ),( DDR / PN ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.888, "obj2": 0.0924387333326677}, {"determining": "Min( Max( FirstVNF_CPU,( ACS - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( MDR + ( ( ARS * BR ) + ARS ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * Max( ( MLU - MLU ),( MLU * RRSe ) ) ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.392, "obj2": 0.43012193699754164}, {"determining": "( ( ( FirstVNF_Mem - ( FirstVNF_CPU * ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( ( ( CS + CS ) * Max( RCSe,Min( RMSe ,Min( MUR ,MUC ) ) ) ),RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.344, "obj2": 0.4706353733001317}, {"determining": "( Max( ( ACS * ( RRS / ( Min( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Const ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,MRS ) ) ) ) ) ),( ( FirstVNF_CPU_Server - CRS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( CS / RCSe ) ) * RMSe ) ) ,( RCSe * MUR ) ),( ( Max( Min( MUC ,MUC ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) + Max( MUC,( CS / RRSe ) ) ) ) ,Max( ( MUR * MUM ),( RMSe + RRSe ) ) ) ,RRSe )", "obj1": 0.606, "obj2": 0.29274872998792184}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( ( ( RRSe + Max( ( ( RRSe - ( RRSe * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.052, "obj2": 0.7800539424287031}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.48, "obj2": 0.3679679455191442}, {"determining": "Min( ( ( BR + Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * BR ) ) ) ) - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( ( DS * ( ( MUR - RMSe ) - MUC ) ) + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) )", "obj1": 0.232, "obj2": 0.5468617451580673}, {"determining": "Min( Min( FirstVNF_RAM ,Const ) ,( Max( FirstVNF_Mem,Min( ARS ,AMS ) ) * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( RRSe ,RCSe ) ) ) / Max( Max( ( MUM / ( Max( DS,RCSe ) + ( Min( MUR ,( MUC * CS ) ) - ( ( CS - MUR ) + ( RRSe + RRSe ) ) ) ) ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.694, "obj2": 0.20891347724239379}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) / ( ( Max( ( ( Const / MDR ) * ( MDR + ( Const + ARS ) ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( Max( MUR,( ( ( MUM * MUR ) + RRSe ) / RCSe ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.334, "obj2": 0.48102993414424683}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.68, "obj2": 0.22043666706280654}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.086, "obj2": 0.6858513149975709}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "( ( DS + Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + ( RRSe + RCSe ) ) * DS ) / ( CS + MLU ) ) ) ) - ( MLU + DS ) )", "obj1": 0.774, "obj2": 0.16563227153635182}, {"determining": "Min( ( MRS * Const ) ,( Max( RRS,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( DS + DS ) - ( Min( ( ( ( Max( RMSe,DS ) + RCSe ) * MUR ) - Min( Min( Min( RCSe ,RRSe ) ,MLU ) ,MUR ) ) ,MLU ) + DS ) )", "obj1": 0.93, "obj2": 0.060551305115512565}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.806, "obj2": 0.13004141369748481}, {"determining": "Min( FirstVNF_CPU_Server ,( AMS * ( ARS + MDR ) ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( Min( MUM ,( ( MUC / CS ) * Max( MUM,Min( MLU ,MLU ) ) ) ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM / RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.532, "obj2": 0.31232981037344176}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ( FirstVNF_CPU_Server + MRS ) ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( Min( RRSe ,( CS * ( RCSe + RMSe ) ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.242, "obj2": 0.5399464838673323}, {"determining": "Min( Min( PN ,( MDR * RRS ) ) ,( AMS * MDR ) )", "choosing": "( ( ( Min( MUR ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Max( Max( ( RMSe * ( RMSe + Max( ( ( MUM * DS ) - Max( MUR,MUR ) ),( Min( DS ,RMSe ) + ( RCSe + RCSe ) ) ) ) ),RMSe ),CS ) )", "obj1": 0.06, "obj2": 0.7575970332046809}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.836, "obj2": 0.11510527305702672}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * ( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.272, "obj2": 0.5224545978916851}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.814, "obj2": 0.12503896871125303}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,DS ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),RMSe ) )", "obj1": 0.658, "obj2": 0.23647768422530846}, {"determining": "Min( Min( PN ,( MDR * RRS ) ) ,( AMS * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.206, "obj2": 0.5745882853796271}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.614, "obj2": 0.26671591301266717}, {"determining": "Min( FirstVNF_RAM ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.558, "obj2": 0.3104695937922496}, {"determining": "Max( ( RRS * Const ),( ( CRS * FirstVNF_RAM ) + MRS ) )", "choosing": "( ( MUR / ( Max( ( ( RCSe - Max( RRSe,RMSe ) ) / MUM ),( DS * ( CS * MUR ) ) ) - RMSe ) ) + ( MUM * CS ) )", "obj1": 0.256, "obj2": 0.5303824998938115}, {"determining": "Min( FirstVNF_RAM ,( PN * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - DS )", "obj1": 0.884, "obj2": 0.09628147294558613}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.756, "obj2": 0.16997808310332385}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( CS + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.214, "obj2": 0.5558595130089578}], "7": [{"determining": "Min( ( Max( MDR,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - Const ) - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( RRSe + MUR ) * DS ) / ( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS + FirstVNF_RAM_Server ),( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( ( RRSe + RCSe ) * DS ) / Min( Min( DS ,RRSe ) ,( Max( Max( Max( ( RMSe * RMSe ),RRSe ),MUR ),( MLU + MUC ) ) + RRSe ) ) ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( MUM * ( CS * DS ) ) )", "obj1": 0.056, "obj2": 0.7121759350187405}, {"determining": "( Max( ( ACS * ( RRS / ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,MRS ) ) ) ) ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.154, "obj2": 0.5977628562394354}, {"determining": "( Max( ( ACS * ( RRS / ( Min( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Const ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,MRS ) ) ) ) ) ),( ( FirstVNF_CPU_Server - CRS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( CS / RCSe ) ) * RMSe ) ) ,( RCSe * MUR ) ),( ( Max( Min( MUC ,MUC ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) + Max( MUC,( CS / RRSe ) ) ) ) ,Max( ( MUR * MUM ),( RMSe + RRSe ) ) ) ,RRSe )", "obj1": 0.606, "obj2": 0.29274872998792184}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( ( ( RRSe + Max( ( ( RRSe - ( RRSe * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.052, "obj2": 0.7800539424287031}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.806, "obj2": 0.13004141369748481}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( DS - MUM ) ) * RMSe ) ) ,( RCSe * MUR ) ),( Max( MUC,( CS / RRSe ) ) + ( Max( Max( ( RMSe / MUM ),Min( DS ,MUM ) ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) ) ) ,Max( ( MUR * MUM ),( RMSe * RRSe ) ) ) ,DS )", "obj1": 0.94, "obj2": 0.043900950031638956}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "Min( Min( Max( PN,RRS ) ,( MDR * PN ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.52, "obj2": 0.3349943118981149}, {"determining": "Min( Max( FirstVNF_CPU,( ACS - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( MDR + ( ( ARS * BR ) + ARS ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * Max( ( MLU - MLU ),( MLU * RRSe ) ) ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.392, "obj2": 0.43012193699754164}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.632, "obj2": 0.25776920641993584}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * ( ACS / PN ) ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) * ( MUR * MLU ) ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,MLU ) ,( CS * DS ) ) ) / Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) ) )", "obj1": 0.562, "obj2": 0.31032729986904234}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RMSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.922, "obj2": 0.04755000074030987}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( Max( ( ACS * ( ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) / RRS ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / PN ) / ( ACS - MDR ) ) )", "choosing": "( MUM / ( RCSe * ( CS * DS ) ) )", "obj1": 0.102, "obj2": 0.6780635554891307}, {"determining": "( ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( Const * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) )", "obj1": 0.904, "obj2": 0.0682776227449232}, {"determining": "( ( ( FirstVNF_Mem - ( FirstVNF_CPU * ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( DS + DS ) - ( Min( ( ( ( Max( RMSe,DS ) + RCSe ) * MUR ) - Min( Min( ( ( MUM + CS ) + RMSe ) ,MLU ) ,MUR ) ) ,CS ) + DS ) )", "obj1": 0.294, "obj2": 0.5134257179688859}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.978, "obj2": 0.009946198878152323}, {"determining": "Min( PN ,( AMS * RRS ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.532, "obj2": 0.31232981037344176}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Max( DDR,FirstVNF_Mem ) * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / ( Max( DS,RCSe ) + MUM ) ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.704, "obj2": 0.20489543795886256}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) - Max( ( ( PN / FirstVNF_CPU ) / ( FirstVNF_CPU + Const ) ),( ( ( AMS - Const ) * DDR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( RRSe + RCSe ) ) * ( ( ( MLU - ( ( MUM / MUM ) - MLU ) ) / MUC ) / RMSe ) ) )", "obj1": 0.652, "obj2": 0.23920980067909128}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.48, "obj2": 0.3679679455191442}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( RCSe + ( ( CS * RMSe ) + ( Max( DS,DS ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),RMSe ) )", "obj1": 0.658, "obj2": 0.23647768422530846}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.68, "obj2": 0.22043666706280654}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.614, "obj2": 0.26671591301266717}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.326, "obj2": 0.48734767880813584}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.766, "obj2": 0.16263391874529787}, {"determining": "Max( ( RRS * Const ),( ( CRS * FirstVNF_RAM ) + MRS ) )", "choosing": "( ( MUR / ( Max( ( ( RCSe - Max( RRSe,RMSe ) ) / MUM ),( DS * ( CS * MUR ) ) ) - RMSe ) ) + ( MUM * CS ) )", "obj1": 0.256, "obj2": 0.5303824998938115}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.42, "obj2": 0.40307441264429306}, {"determining": "Min( ( ( BR + Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * BR ) ) ) ) - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( ( ( DS * ( ( MUR - RMSe ) - MUC ) ) + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) )", "obj1": 0.232, "obj2": 0.5468617451580673}, {"determining": "Min( Const ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUR * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.46, "obj2": 0.37529328458440114}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( DS + MUC ) / ( MUM * MUM ) ) )", "obj1": 0.9, "obj2": 0.07973076730281205}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.766, "obj2": 0.16263391874529787}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.45, "obj2": 0.3957208587463537}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.726, "obj2": 0.19186738838801348}, {"determining": "Min( FirstVNF_RAM ,( ( AMS * MDR ) * ( MRS / CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.39, "obj2": 0.43725177842981433}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.726, "obj2": 0.19186738838801348}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.37, "obj2": 0.4451980083260221}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RMSe ,Min( MUR ,MUC ) ) / CS ) + Max( DS,MUC ) )", "obj1": 0.86, "obj2": 0.10109303768402543}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe + CS ) / Min( DS ,CS ) ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.752, "obj2": 0.1777927632500032}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Max( DDR,Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( Min( MUR ,MUC ) ,( RMSe * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( RCSe / RRSe ) )", "obj1": 0.884, "obj2": 0.09478891333130272}, {"determining": "Min( PN ,Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + DS ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.834, "obj2": 0.11854178063187795}, {"determining": "Min( Min( FirstVNF_RAM ,Const ) ,( Max( FirstVNF_Mem,Min( ARS ,AMS ) ) * MDR ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( RRSe ,RCSe ) ) ) / Max( Max( ( MUM / ( Max( DS,RCSe ) + ( Min( MUR ,( MUC * CS ) ) - ( ( CS - MUR ) + ( RRSe + RRSe ) ) ) ) ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.694, "obj2": 0.20891347724239379}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / RRS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( CS + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.214, "obj2": 0.5558595130089578}, {"determining": "( ( PN * FirstVNF_Mem_Server ) / Const )", "choosing": "( ( ( Min( RRSe ,( CS * ( Min( ( MLU - MUR ) ,( RMSe / MUM ) ) * CS ) ) ) * Max( RCSe,MUC ) ) * ( ( MLU / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,Min( Max( RCSe,RCSe ) ,( MUC * MUM ) ) ) )", "obj1": 0.184, "obj2": 0.5834365870126984}, {"determining": "Min( Max( ( ( RRS / RRS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( ( Min( MLU ,MLU ) + RCSe ) + Max( ( ( ( MUM + RCSe ) / ( MUR * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.49, "obj2": 0.3581487802050933}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( CS + CS ) ) ) - Min( ( Max( MUM,MUR ) * ( Max( RRSe,RRSe ) - ( ( MUM * MLU ) / RMSe ) ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.274, "obj2": 0.5204981462043491}], "8": [{"determining": "Max( ( CRS + FirstVNF_RAM_Server ),( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( ( RRSe + RCSe ) * DS ) / Min( Min( DS ,RRSe ) ,( Max( Max( Max( ( RMSe * RMSe ),RRSe ),MUR ),( MLU + MUC ) ) + RRSe ) ) ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( ( ( ( Max( CRS,DDR ) - BR ) - Max( BR,RRS ) ) - ( ( FirstVNF_Mem / DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( Min( RRS ,MRS ),MDR ) ) + ( RRS - RRS ) ) )", "choosing": "( ( Min( ( ( Max( Max( ( MLU + MUC ),MUM ),MUC ) * Max( MLU,MUC ) ) / ( CS + ( Min( CS ,Min( DS ,RCSe ) ) * Max( RRSe,RMSe ) ) ) ) ,CS ) - RRSe ) * ( ( DS * MUC ) / Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * MDR ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( ARS - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,Max( PN,Max( FirstVNF_CPU,MDR ) ) )", "choosing": "( MUC / Min( RMSe ,MUM ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( MUM * ( CS * DS ) ) )", "obj1": 0.056, "obj2": 0.7121759350187405}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( Max( MDR,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Min( ( ( BR + Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * BR ) ) ) ) - Const ) ,( AMS * MDR ) ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * ( ( ( DS * ( ( MUR - RMSe ) - MUC ) ) + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) ),( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.1, "obj2": 0.6710983495392541}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( ( ( RRSe + Max( ( ( RRSe - ( RRSe * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.052, "obj2": 0.7800539424287031}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( ( RRSe * Min( RMSe ,( MLU / MUR ) ) ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.086, "obj2": 0.6789412833805695}, {"determining": "( Max( ( ACS * ( RRS / ( Min( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Const ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,MRS ) ) ) ) ) ),( ( FirstVNF_CPU_Server - CRS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( CS / RCSe ) ) * RMSe ) ) ,( RCSe * MUR ) ),( ( Max( Min( MUC ,MUC ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) + Max( MUC,( CS / RRSe ) ) ) ) ,Max( ( MUR * MUM ),( RMSe + RRSe ) ) ) ,RRSe )", "obj1": 0.606, "obj2": 0.29274872998792184}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( Min( Max( Min( ( ( MUM - DS ) - ( ( ( MUM * RCSe ) + ( DS - MUM ) ) * RMSe ) ) ,( RCSe * MUR ) ),( Max( MUC,( CS / RRSe ) ) + ( Max( Max( ( RMSe / MUM ),Min( DS ,MUM ) ),( Max( RCSe,RRSe ) * ( MUR / RRSe ) ) ) * ( MUR / MUC ) ) ) ) ,Max( ( MUR * MUM ),( RMSe * RRSe ) ) ) ,DS )", "obj1": 0.94, "obj2": 0.043900950031638956}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( Const ,MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + MUR ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.352, "obj2": 0.45230790958299727}, {"determining": "Min( Max( FirstVNF_CPU,( ACS - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( MDR + ( ( ARS * BR ) + ARS ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * Max( ( MLU - MLU ),( MLU * RRSe ) ) ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.392, "obj2": 0.43012193699754164}, {"determining": "( Max( ( ACS * ( RRS / ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,MRS ) ) ) ) ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "Min( Min( Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.334, "obj2": 0.48102993414424683}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RMSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.922, "obj2": 0.04755000074030987}, {"determining": "Min( PN ,( AMS * Min( Min( Max( PN,RRS ) ,( MDR * PN ) ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( RMSe / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.57, "obj2": 0.30979551177131354}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Max( ( RRS * Const ),( ( CRS * FirstVNF_RAM ) + MRS ) )", "choosing": "( ( MUR / ( Max( ( ( RCSe - Max( RRSe,RMSe ) ) / MUM ),( DS * ( CS * MUR ) ) ) - RMSe ) ) + ( MUM * CS ) )", "obj1": 0.256, "obj2": 0.5303824998938115}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.42, "obj2": 0.40307441264429306}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "( ( ( FirstVNF_Mem - ( FirstVNF_CPU * ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( DS + DS ) - ( Min( ( ( ( Max( RMSe,DS ) + RCSe ) * MUR ) - Min( Min( ( ( MUM + CS ) + RMSe ) ,MLU ) ,MUR ) ) ,CS ) + DS ) )", "obj1": 0.294, "obj2": 0.5134257179688859}, {"determining": "( ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( Const * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) )", "obj1": 0.904, "obj2": 0.0682776227449232}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.364, "obj2": 0.4415389631971191}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.48, "obj2": 0.3679679455191442}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * MUR ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.796, "obj2": 0.14555386440037332}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.77, "obj2": 0.15883805700951514}, {"determining": "Min( PN ,( AMS * RRS ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.532, "obj2": 0.31232981037344176}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUC - MLU ) / MUC ) * ( Max( RRSe,RRSe ) - ( RRSe / RMSe ) ) ) + ( ( MUR - ( MUM + ( ( RRSe + CS ) / Min( DS ,CS ) ) ) ) - Max( MUM,( ( CS / CS ) + ( Min( MLU ,MLU ) + RCSe ) ) ) ) ) * MUC ) + Min( MUC ,RRSe ) )", "obj1": 0.752, "obj2": 0.1777927632500032}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.504, "obj2": 0.3410487085308154}, {"determining": "( Max( ( ACS * ( RRS / ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( RRS,MRS ) ) ) ) ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.154, "obj2": 0.5977628562394354}, {"determining": "Min( Min( Max( PN,RRS ) ,( MDR * PN ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.52, "obj2": 0.3349943118981149}, {"determining": "( Max( ( Min( Const ,MDR ) * ( AMS + Const ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( ( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( CS + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) * ( RRSe / MLU ) ) ) )", "obj1": 0.458, "obj2": 0.3752383217882646}, {"determining": "( Max( Max( Const,PN ),( ( CRS * ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + Min( ( ( Min( ( RMSe / MUM ) ,( RRSe * MUM ) ) * DS ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) ,Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.238, "obj2": 0.5428547801585939}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.45, "obj2": 0.3957208587463537}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( CS + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.854, "obj2": 0.10409034040337782}, {"determining": "Min( ( FirstVNF_RAM - ( Const - ( RRS / CRS ) ) ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( ( ( MUR + RRSe ) - ( Max( RMSe,MLU ) / RRSe ) ) * MUC ) ) )", "obj1": 0.736, "obj2": 0.18414851890119158}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( ( FirstVNF_RAM - Const ) ,Min( AMS ,MDR ) ) ) / ( ARS - BR ) ) * MDR ) )", "choosing": "( ( Min( RRSe ,( ( DS + CS ) + RCSe ) ) * DS ) - ( ( DS - CS ) + ( MLU * MLU ) ) )", "obj1": 0.646, "obj2": 0.24400567944958618}, {"determining": "Min( FirstVNF_RAM ,( ( AMS * MDR ) * ( MRS / CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.39, "obj2": 0.43725177842981433}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.86, "obj2": 0.10073216318542565}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.632, "obj2": 0.25776920641993584}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * ( ACS / PN ) ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) * ( MUR * MLU ) ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,MLU ) ,( CS * DS ) ) ) / Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) ) )", "obj1": 0.562, "obj2": 0.31032729986904234}, {"determining": "( ( ( Min( ( ( Max( AMS,ARS ) / FirstVNF_RAM ) / ARS ) ,ACS ) - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,( ( ( RMSe / RCSe ) - ( CS * MLU ) ) / MUM ) ) ) ) ) )", "obj1": 0.61, "obj2": 0.2735697280709008}, {"determining": "Min( PN ,( AMS * RRS ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.528, "obj2": 0.3231982502398093}, {"determining": "( ( BR / PN ) + Min( ( MDR / MDR ) ,Max( ( ( RRS / RRS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.168, "obj2": 0.5891550915349525}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) * MDR ) )", "choosing": "Min( Min( Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) ) ,( MUM * ( RRSe + MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.712, "obj2": 0.20244921323861217}, {"determining": "( ( Min( Max( BR,RRS ) ,( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * Max( DDR,ACS ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,Min( MUR ,MUC ) ) + ( ( RCSe + MUR ) + Max( RRSe,RCSe ) ) ) / ( ( RRSe - ( CS + DS ) ) - Min( ( Min( Max( MUR,Min( CS ,RCSe ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.836, "obj2": 0.1164728893429565}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.42, "obj2": 0.40307441264429306}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Max( DDR,Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( Min( MUR ,MUC ) ,( RMSe * RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( RCSe / RRSe ) )", "obj1": 0.884, "obj2": 0.09478891333130272}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( CRS + AMS ) ) / ( ACS - MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( ( MUM + RCSe ) * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.886, "obj2": 0.09206575260323177}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.326, "obj2": 0.48734767880813584}], "9": [{"determining": "Max( ( CRS + FirstVNF_RAM_Server ),( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( ( RRSe + RCSe ) * DS ) / Min( Min( DS ,RRSe ) ,( Max( Max( Max( ( RMSe * RMSe ),RRSe ),MUR ),( MLU + MUC ) ) + RRSe ) ) ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( ( ( Min( ( ARS / AMS ) ,ACS ) - FirstVNF_CPU ) + Min( PN ,( MDR * RRS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * ( CS * DS ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( CRS,DDR ) - BR ) - Max( BR,RRS ) ) - ( ( FirstVNF_Mem / DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( Min( RRS ,MRS ),MDR ) ) + ( RRS - RRS ) ) )", "choosing": "( ( Min( ( ( Max( Max( ( MLU + MUC ),MUM ),MUC ) * Max( MLU,MUC ) ) / ( CS + ( Min( CS ,Min( DS ,RCSe ) ) * Max( RRSe,RMSe ) ) ) ) ,CS ) - RRSe ) * ( ( DS * MUC ) / Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( ARS - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,Max( PN,Max( FirstVNF_CPU,MDR ) ) )", "choosing": "( MUC / Min( RMSe ,MUM ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.18, "obj2": 0.5744428085772644}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( ( MDR * ARS ) * PN ) ) ) ) ) ,( FirstVNF_Mem * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.236, "obj2": 0.5488944339057739}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( MUM * ( CS * DS ) ) )", "obj1": 0.056, "obj2": 0.7121759350187405}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RMSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.696, "obj2": 0.21422111300166152}, {"determining": "( ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( Const * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) )", "obj1": 0.904, "obj2": 0.0682776227449232}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( CS + MLU ) ) / ( CS / MLU ) ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.284, "obj2": 0.5108313043321442}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( Const * MDR ) ) ) / Max( AMS,ACS ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( Max( MLU,MUR ) * MLU ) ) - ( ( RRSe + ( Max( MUR,RCSe ) + RCSe ) ) * MUC ) )", "obj1": 0.65, "obj2": 0.23978481420091508}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( RRSe ,MLU ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( ( ( RRSe + Max( ( ( RRSe - ( RRSe * MLU ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.052, "obj2": 0.7800539424287031}, {"determining": "Max( ( RRS * Const ),( ( CRS * FirstVNF_RAM ) + MRS ) )", "choosing": "( ( MUR / ( Max( ( ( RCSe - Max( RRSe,RMSe ) ) / MUM ),( DS * ( CS * MUR ) ) ) - RMSe ) ) + ( MUM * CS ) )", "obj1": 0.256, "obj2": 0.5303824998938115}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.938, "obj2": 0.03727083207574554}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.118, "obj2": 0.6475705791194388}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "Min( ( FirstVNF_RAM + AMS ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.39, "obj2": 0.4329174113076335}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.364, "obj2": 0.4415389631971191}, {"determining": "( ( ( Min( ( ( Max( AMS,ARS ) / FirstVNF_RAM ) / ARS ) ,ACS ) - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,( ( ( RMSe / RCSe ) - ( CS * MLU ) ) / MUM ) ) ) ) ) )", "obj1": 0.61, "obj2": 0.2735697280709008}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( ( MUR - MUR ) * Min( CS ,RRSe ) ) )", "obj1": 0.45, "obj2": 0.3957208587463537}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.072, "obj2": 0.6866892568560311}, {"determining": "Min( FirstVNF_RAM ,( ( AMS * MDR ) * ( MRS / ( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),Max( CRS,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.822, "obj2": 0.14341609752561135}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * MUR ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.796, "obj2": 0.14555386440037332}, {"determining": "( Max( ( ACS * ( RRS / ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( RRS,MRS ) ) ) ) ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.154, "obj2": 0.5977628562394354}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,PN ) ) ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,Min( MUR ,MUC ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,( MUR * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.346, "obj2": 0.45809443095335667}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.632, "obj2": 0.25776920641993584}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ( FirstVNF_RAM - Const ) ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( DS * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.748, "obj2": 0.17539992851800762}, {"determining": "Min( PN ,( AMS * RRS ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.532, "obj2": 0.31232981037344176}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( ( RRSe * Min( RMSe ,( MLU / MUR ) ) ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.086, "obj2": 0.6789412833805695}, {"determining": "Max( BR,Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.068, "obj2": 0.7119278541398373}, {"determining": "( Max( ( Min( Const ,MDR ) * ( AMS + Const ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( ( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( CS + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) * ( RRSe / MLU ) ) ) )", "obj1": 0.458, "obj2": 0.3752383217882646}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.83, "obj2": 0.12583884786441352}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( MUR - MUR ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.732, "obj2": 0.19824631555319097}, {"determining": "Min( Min( Max( PN,RRS ) ,( MDR * PN ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.52, "obj2": 0.3349943118981149}, {"determining": "Min( ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) - Const ) - FirstVNF_RAM ) * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) - ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe / RMSe ) / MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - Max( RMSe,Max( MUC,RMSe ) ) ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.392, "obj2": 0.4125107807272517}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * Const ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) )", "choosing": "Max( ( ( RRSe + Max( ( ( RRSe - ( RRSe * MLU ) ) - MUR ),MUR ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.59, "obj2": 0.3049638311592872}, {"determining": "( Max( ( Max( MDR,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 0.488, "obj2": 0.35982666048342504}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.976, "obj2": 0.011737081124701189}, {"determining": "Min( ( Max( MDR,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Min( ( ( BR + Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * BR ) ) ) ) - Const ) ,( AMS * MDR ) ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * ( ( ( DS * ( ( MUR - RMSe ) - MUC ) ) + ( ( CS * RMSe ) + ( Max( DS,RCSe ) + MUM ) ) ) + RMSe ) ) ),( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.1, "obj2": 0.6710983495392541}, {"determining": "( Max( Max( Const,PN ),( ( CRS * ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + Min( ( ( Min( ( RMSe / MUM ) ,( RRSe * MUM ) ) * DS ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) ,Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.238, "obj2": 0.5428547801585939}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( Min( Const ,MDR ) * ( ( FirstVNF_RAM / Const ) + DDR ) ),( ( CRS - ACS ) / ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( Min( MUR ,MUR ) * Min( CS ,RRSe ) ) - Max( Min( ( MUC * MUR ) ,DS ),CS ) )", "obj1": 0.78, "obj2": 0.1536354394469101}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) + Const ) / ( PN / FirstVNF_CPU ) ),Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.762, "obj2": 0.1650031385166537}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.86, "obj2": 0.10073216318542565}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,PN ) * PN ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ,MDR ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( Max( RCSe,MUC ) * Min( RRSe ,( CS * RCSe ) ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( RRSe + ( ( MUC + ( CS + RRSe ) ) * RMSe ) ) ) )", "obj1": 0.922, "obj2": 0.04755000074030987}, {"determining": "Min( ( Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.406, "obj2": 0.408781284764645}, {"determining": "( ( ( ( Max( CRS,DDR ) - BR ) - Max( BR,RRS ) ) - ( ( FirstVNF_Mem / DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( Min( RRS ,MRS ),MDR ) ) + ( RRS - RRS ) ) )", "choosing": "( ( Min( ( ( Max( Max( ( MLU + MUC ),MUM ),MUC ) * Max( MLU,MUC ) ) / ( CS + ( Min( CS ,Min( DS ,RCSe ) ) * Max( RRSe,RMSe ) ) ) ) ,CS ) - RRSe ) * ( ( DS * MUC ) / Min( RMSe ,MUR ) ) )", "obj1": 0.63, "obj2": 0.27341840915900106}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( ( MUR * Min( DS ,MLU ) ),RCSe ) ) ,CS ) + DS ) )", "obj1": 0.428, "obj2": 0.39850847002583195}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.504, "obj2": 0.3410487085308154}], "10": [{"determining": "Max( ( CRS + FirstVNF_RAM_Server ),( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( ( RRSe + RCSe ) * DS ) / Min( Min( DS ,RRSe ) ,( Max( Max( Max( ( RMSe * RMSe ),RRSe ),MUR ),( MLU + MUC ) ) + RRSe ) ) ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( ( ( Min( ( ARS / AMS ) ,ACS ) - FirstVNF_CPU ) + Min( PN ,( MDR * RRS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * ( CS * DS ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ARS / AMS ) ,ACS ) - FirstVNF_CPU ) + Min( PN ,( MDR * RRS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * ( CS * DS ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( ARS - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,Max( PN,Max( FirstVNF_CPU,MDR ) ) )", "choosing": "( MUC / Min( RMSe ,MUM ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / ( Max( Max( FirstVNF_RAM_Server,AMS ),PN ) * ( MDR * PN ) ) ) ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( CS / RRSe ) / ( Max( ( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) - ( CS + MLU ) ),( ( CS * CS ) / ( MLU / DS ) ) ) * ( CS * DS ) ) )", "obj1": 0.052, "obj2": 0.7163950776293831}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RMSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.696, "obj2": 0.21422111300166152}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.224, "obj2": 0.5453781565691016}, {"determining": "( ( ( Min( ( ( Max( AMS,ARS ) / FirstVNF_RAM ) / ARS ) ,ACS ) - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,( ( ( RMSe / RCSe ) - ( CS * MLU ) ) / MUM ) ) ) ) ) )", "obj1": 0.61, "obj2": 0.2735697280709008}, {"determining": "Min( ( Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.57, "obj2": 0.29619292792155133}, {"determining": "( Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( ( ARS / AMS ) ,ACS ) ) / Const ) ),FirstVNF_Mem ) / MRS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.324, "obj2": 0.46922211980106593}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( ( CS + DS ) + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.118, "obj2": 0.6475705791194388}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Max( ( Min( Const ,MDR ) * ( AMS + Const ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( ( ( DS / RMSe ) - ( CS + CS ) ) / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.626, "obj2": 0.25486390714037993}, {"determining": "( Max( FirstVNF_RAM,( ( AMS * MDR ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MLU ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.258, "obj2": 0.5221699815572771}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.726, "obj2": 0.18769537137845743}, {"determining": "( Max( ( Min( Const ,MDR ) * ( AMS + Const ) ),( ( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( ( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( ( CS * CS ) + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) * ( RRSe / MLU ) ) ) )", "obj1": 0.444, "obj2": 0.3881654477251832}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.18, "obj2": 0.5744428085772644}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( ( AMS * MDR ) * FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( CS ,RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.304, "obj2": 0.49339364461445306}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + RCSe ) ) * DS ) )", "obj1": 0.65, "obj2": 0.23978481420091508}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "( ( Max( Max( BR,RRS ),( ( Max( PN,AMS ) - FirstVNF_RAM ) - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( FirstVNF_CPU_Server + MDR ) ) - FirstVNF_Mem ) + ( ( Const - FirstVNF_CPU_Server ) + Max( MDR,PN ) ) ) )", "choosing": "( ( ( ( RMSe - RCSe ) * ( RRSe * ( MLU / Min( RCSe ,( RMSe * ( MUC - MLU ) ) ) ) ) ) + ( MLU * MLU ) ) - RMSe )", "obj1": 0.882, "obj2": 0.08075630790657422}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.948, "obj2": 0.03119633513551618}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ( FirstVNF_RAM - Const ) ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS + DS ) - ( Min( ( MUM + RMSe ) ,CS ) + DS ) )", "obj1": 0.788, "obj2": 0.14267761922619654}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.072, "obj2": 0.6866892568560311}, {"determining": "Min( FirstVNF_RAM ,( DDR / FirstVNF_RAM ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.476, "obj2": 0.36739653101738157}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( ( RRSe * Min( RMSe ,( MLU / MUR ) ) ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.592, "obj2": 0.2911235162521183}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( CS + MLU ) ) / ( CS / MLU ) ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.284, "obj2": 0.5108313043321442}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( AMS * Const ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( ( RRSe * ( RRSe * MLU ) ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.11, "obj2": 0.6693329327740247}, {"determining": "( ( ( Max( MRS,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( Const,ARS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( RCSe * CS ) + ( RRSe - DS ) ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.864, "obj2": 0.09555550787714466}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.938, "obj2": 0.03727083207574554}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.83, "obj2": 0.12583884786441352}, {"determining": "Min( ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) - Const ) - FirstVNF_RAM ) * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) - ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe / RMSe ) / MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - Max( RMSe,Max( MUC,RMSe ) ) ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.392, "obj2": 0.4125107807272517}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.81, "obj2": 0.1332273431727699}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.906, "obj2": 0.058505807023913774}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) ) ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + Max( RMSe,RCSe ) ) ) * DS ) )", "obj1": 0.64, "obj2": 0.2453832710482272}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.712, "obj2": 0.20641554692740352}, {"determining": "( Max( ( ACS * ( RRS / ( RRS / ( ( FirstVNF_RAM_Server + Max( ARS,CRS ) ) + Min( FirstVNF_Mem_Server ,Max( RRS,MRS ) ) ) ) ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.154, "obj2": 0.5977628562394354}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( Const * MDR ) ) ) / Max( AMS,ACS ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( Max( MLU,MUR ) * MLU ) ) - ( ( RRSe + ( Max( MUR,RCSe ) + RCSe ) ) * MUC ) )", "obj1": 0.65, "obj2": 0.23978481420091508}, {"determining": "Max( BR,Max( PN,FirstVNF_Mem ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.068, "obj2": 0.7119278541398373}, {"determining": "( ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( Const * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.844, "obj2": 0.11423293886295485}, {"determining": "Min( PN ,Min( ( ( AMS * ( PN - ACS ) ) * FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "Max( ( ( ( ( MUM + DS ) * Min( MUR ,RCSe ) ) - ( ( DS - MUC ) - ( MUM + RMSe ) ) ) / ( RRSe / DS ) ),( Min( RCSe ,MUM ) / ( CS + MLU ) ) )", "obj1": 0.53, "obj2": 0.3129875253342529}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.18, "obj2": 0.5744428085772644}, {"determining": "( Max( Max( Const,PN ),( ( CRS * ACS ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + Min( ( ( Min( ( RMSe / MUM ) ,( RRSe * MUM ) ) * DS ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) ,Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.238, "obj2": 0.5428547801585939}, {"determining": "Min( PN ,( AMS * RRS ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.532, "obj2": 0.31232981037344176}, {"determining": "Min( Max( FirstVNF_CPU,( Min( ARS ,ARS ) / Const ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - ( MUC * RRSe ) ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.498, "obj2": 0.3462628934390229}, {"determining": "Min( Min( Max( PN,RRS ) ,( MDR * PN ) ) ,( AMS * MDR ) )", "choosing": "Max( ( ( CS * CS ) / ( Min( Max( MUR,( ( MUC * MUR ) * DS ) ) ,RMSe ) / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.52, "obj2": 0.3349943118981149}, {"determining": "Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( CS * CS ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + MUM ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.988, "obj2": 0.0035739905260791576}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( ( MUR * Min( DS ,MLU ) ),RCSe ) ) ,CS ) + DS ) )", "obj1": 0.24, "obj2": 0.5262526006212397}], "11": [{"determining": "Max( ( CRS + FirstVNF_RAM_Server ),( ( ( ( FirstVNF_Mem_Server * DDR ) - FirstVNF_Mem ) / Min( Max( PN,RRS ) ,Min( DDR ,DDR ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( ( RRSe + RCSe ) * DS ) / Min( Min( DS ,RRSe ) ,( Max( Max( Max( ( RMSe * RMSe ),RRSe ),MUR ),( MLU + MUC ) ) + RRSe ) ) ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( ( ( Max( MRS,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( Const,ARS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( RCSe * CS ) + ( RRSe - DS ) ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ARS / AMS ) ,ACS ) - FirstVNF_CPU ) + Min( PN ,( MDR * RRS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * ( CS * DS ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( ARS - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,Max( PN,Max( FirstVNF_CPU,MDR ) ) )", "choosing": "( MUC / Min( RMSe ,MUM ) )", "obj1": 0.048, "obj2": 0.7884048366526912}, {"determining": "( Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( ( ARS / AMS ) ,ACS ) ) / Const ) ),FirstVNF_Mem ) / MRS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.324, "obj2": 0.46922211980106593}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( PN,( ( CRS - ( FirstVNF_RAM - Const ) ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS * CS ) / ( MLU / DS ) ) - ( Min( ( MUM + RMSe ) ,CS ) + DS ) )", "obj1": 0.646, "obj2": 0.2383555188878923}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.05, "obj2": 0.7174759546635765}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.354, "obj2": 0.443579561690453}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( BR / ( FirstVNF_Mem_Server + ( CRS - FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) / Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - CS ) ,( MLU * MLU ) ) - ( ( ( ( CS / Min( DS ,RCSe ) ) + Max( MUC,MUR ) ) - Min( RMSe ,RCSe ) ) - RRSe ) )", "obj1": 0.436, "obj2": 0.40051278841741067}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.224, "obj2": 0.5453781565691016}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,Max( PN,RRS ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.19, "obj2": 0.5734613539380458}, {"determining": "Min( ( ( Max( ( ( FirstVNF_RAM_Server + MRS ) + RRS ),FirstVNF_RAM ) * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( MUM,RCSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MLU + MUR ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.362, "obj2": 0.43256364946186626}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RMSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.392, "obj2": 0.4125107807272517}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( RRSe / DS ) / ( DS / RCSe ) ),( ( Max( RRSe,( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.906, "obj2": 0.05606793366086347}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( Min( Max( RRS,PN ) ,( MDR * PN ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( ( Min( ( MLU - DS ) ,DS ) - RMSe ) / MUM ) ) ) ) - ( ( DS - CS ) * Max( ( RCSe * CS ),RMSe ) ) )", "obj1": 0.472, "obj2": 0.3711018793723754}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( DS - CS ) + ( MLU * MLU ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.474, "obj2": 0.3641552908121912}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RMSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.696, "obj2": 0.21422111300166152}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.928, "obj2": 0.04190436901124496}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.896, "obj2": 0.06944273947639987}, {"determining": "( ( ( Min( ( ( Max( AMS,ARS ) / FirstVNF_RAM ) / ARS ) ,ACS ) - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,( ( ( RMSe / RCSe ) - ( CS * MLU ) ) / MUM ) ) ) ) ) )", "obj1": 0.61, "obj2": 0.2735697280709008}, {"determining": "( ( ( ( ( Max( CRS,MRS ) - FirstVNF_RAM ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / ( ARS - MDR ) ) + ARS ) ) ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( ( RRSe / MLU ) * ( ( MUM - Max( MUR,RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.702, "obj2": 0.19644031708625603}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Max( ( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ),( DDR / PN ) ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + RCSe ) ) * DS ) )", "obj1": 0.746, "obj2": 0.17422237463250806}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( ( RRSe * Min( RMSe ,( MLU / MUR ) ) ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.592, "obj2": 0.2911235162521183}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) * ( FirstVNF_Mem - RRS ) ) ,( ( ACS - FirstVNF_CPU ) / BR ) )", "choosing": "( Max( ( ( DS * Max( ( Max( RCSe,MUC ) * ( MUC / ( MLU / RMSe ) ) ),Min( MUC ,RMSe ) ) ) - MUR ),MUR ) / ( RRSe * ( CS * DS ) ) )", "obj1": 0.106, "obj2": 0.6479765622145077}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe / RMSe ) / MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - Max( RMSe,Max( MUC,RMSe ) ) ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.282, "obj2": 0.5073178270629516}, {"determining": "Min( ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) - Const ) - FirstVNF_RAM ) * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) - ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe / RMSe ) / MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - Max( RMSe,Max( MUC,RMSe ) ) ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.392, "obj2": 0.4125107807272517}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + ARS ) + MDR ) ,Max( FirstVNF_CPU,( FirstVNF_RAM - ( ACS * FirstVNF_RAM_Server ) ) ) ) ,( ( MDR * PN ) * ( Max( RRS,FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + ( Max( ( RCSe * ( RRSe * MUC ) ),MLU ) / MUR ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( Min( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) ,( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.154, "obj2": 0.5977628562394354}, {"determining": "( Max( ( ( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( Const * MDR ) ) ) / Max( AMS,ACS ) ) * MDR ) * ( AMS + Const ) ),( ( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( RRSe,( ( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( ( CS * CS ) + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) * ( RRSe / MLU ) ) ) )", "obj1": 0.444, "obj2": 0.3881654477251832}, {"determining": "Max( Max( ( DDR / Min( FirstVNF_Mem_Server ,CRS ) ),Min( PN ,( RRS * MDR ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUR,( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ) ) / ( MUM * ( ( RCSe + Min( CS ,( ( ( RCSe + DS ) - Min( RCSe ,MUM ) ) + MUC ) ) ) * DS ) ) )", "obj1": 0.116, "obj2": 0.6420492051494133}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ( FirstVNF_RAM - Const ) ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS + DS ) - ( Min( ( MUM + RMSe ) ,CS ) + DS ) )", "obj1": 0.784, "obj2": 0.1472759069079488}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.176, "obj2": 0.5852950502013331}, {"determining": "( ( Max( Max( BR,RRS ),( ( Max( PN,AMS ) - FirstVNF_RAM ) - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( FirstVNF_CPU_Server + MDR ) ) - FirstVNF_Mem ) + ( ( Const - FirstVNF_CPU_Server ) + Max( MDR,PN ) ) ) )", "choosing": "( ( ( ( RMSe - RCSe ) * ( RRSe * ( MLU / Min( RCSe ,( RMSe * ( MUC - MLU ) ) ) ) ) ) + ( MLU * MLU ) ) - RMSe )", "obj1": 0.882, "obj2": 0.08075630790657422}, {"determining": "Min( ( Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server + ARS ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) ) ) ) ) + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( RRSe + Max( ( ( ( MUM + MUM ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) ) - MLU )", "obj1": 0.986, "obj2": 0.004628266586903752}, {"determining": "Min( PN ,( ( ( AMS * MDR ) * FirstVNF_RAM ) * RRS ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.548, "obj2": 0.30685531331502514}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( ( AMS * MDR ) * FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( CS ,RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.308, "obj2": 0.4855649416539582}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) ) ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + Max( RMSe,RCSe ) ) ) * DS ) )", "obj1": 0.64, "obj2": 0.2453832710482272}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.614, "obj2": 0.2653500123225729}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.726, "obj2": 0.18769537137845743}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( ( MUR * Min( DS ,MLU ) ),RCSe ) ) ,CS ) + DS ) )", "obj1": 0.24, "obj2": 0.5262526006212397}, {"determining": "Min( ( Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.566, "obj2": 0.29497791795326367}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - AMS ) ,( AMS * ( CRS / ( ( ( DDR * ACS ) * RRS ) - Const ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * ( Max( ( MLU + MUC ),( MUC + RRSe ) ) - ( MUM - RCSe ) ) ) * ( CS + MLU ) ) ) / ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.876, "obj2": 0.08711025728684177}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,BR ) ) ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.066, "obj2": 0.7046149360652468}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.768, "obj2": 0.16122539403228178}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.762, "obj2": 0.1650031385166537}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) * ( CS * DS ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * Min( Max( MUR,Min( RMSe ,MUR ) ) ,RMSe ) ) ) ) )", "obj1": 0.102, "obj2": 0.6682998281650298}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.082, "obj2": 0.6778287744519105}], "12": [{"determining": "( ( ( Min( ( ARS / AMS ) ,ACS ) - FirstVNF_CPU ) + Min( PN ,( MDR * RRS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RCSe ) * ( RRSe / ( RMSe / MLU ) ) ) + ( MLU * MLU ) ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MRS,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( Const,ARS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( RCSe * CS ) + ( RRSe - DS ) ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - FirstVNF_CPU ) ,( AMS * ( ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.816, "obj2": 0.1233308780642065}, {"determining": "Min( ( DDR / Min( ( CRS + Const ) ,( AMS * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( RRS - ARS ) ) ) ) ) ) ,Const )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( ( RCSe + MUR ) + Max( RCSe,RMSe ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + MUR ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( CS / DS ) + CS ) ) ) ,( RCSe * MUC ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * ( RCSe + MUR ) ) ) ) )", "obj1": 0.778, "obj2": 0.13611098578348704}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.486, "obj2": 0.3532117530558566}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.928, "obj2": 0.04190436901124496}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.426, "obj2": 0.39703042132326744}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,Max( CRS,MRS ) ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( ( MUR * Min( RRSe ,MLU ) ),RCSe ) ) ,CS ) + DS ) )", "obj1": 0.236, "obj2": 0.5244053601001984}, {"determining": "( Max( Max( Max( DDR,FirstVNF_RAM ),( Min( FirstVNF_RAM ,( ACS - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,PN ) ) ) ),FirstVNF_Mem ) / MRS )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) * ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( DS - MUC ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.522, "obj2": 0.32635285553731597}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,Max( PN,RRS ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.19, "obj2": 0.5734613539380458}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.678, "obj2": 0.2153682202185334}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( ( RRSe * Min( RMSe ,( MLU / MUR ) ) ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.592, "obj2": 0.2911235162521183}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( ( ( ( ( Max( CRS,MRS ) - FirstVNF_RAM ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / ( ARS - MDR ) ) + ARS ) ) ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( ( RRSe / MLU ) * ( ( MUM - Max( MUR,RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.702, "obj2": 0.19644031708625603}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.954, "obj2": 0.025567712594120516}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ) ) / Const )", "choosing": "( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.272, "obj2": 0.5215256505795531}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( RRSe / DS ) / ( DS / RCSe ) ),( ( Max( RRSe,( RCSe + RCSe ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.906, "obj2": 0.05606793366086347}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.754, "obj2": 0.15909573358037737}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - AMS ) ,( AMS * ( CRS / ( ( ( DDR * ACS ) * RRS ) - Const ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * ( Max( ( MLU + MUC ),( MUC + RRSe ) ) - ( MUM - RCSe ) ) ) * ( CS + MLU ) ) ) / ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.876, "obj2": 0.08711025728684177}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / ( ( Max( AMS,ARS ) / FirstVNF_RAM ) / ARS ) ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.648, "obj2": 0.23743267159556342}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.224, "obj2": 0.5453781565691016}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.896, "obj2": 0.06944273947639987}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( PN,RRS ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( MDR / AMS ) ,MDR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MLU + ( RMSe / RRSe ) ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( Max( RRSe,MUM ) + CS ) ) ) ),( ( ( RRSe + Max( Min( ( ( MUM + CS ) / ( MUM * MUR ) ) ,MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.374, "obj2": 0.4284695209143013}, {"determining": "Min( ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) - Const ) - FirstVNF_RAM ) * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) - ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe / RMSe ) / MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - Max( RMSe,Max( MUC,RMSe ) ) ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.392, "obj2": 0.4125107807272517}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - FirstVNF_CPU ) ,( AMS * ( FirstVNF_CPU + Max( FirstVNF_Mem,BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / ( CS + MLU ) ) ) * ( CS * DS ) ),Min( RRSe ,Min( MLU ,CS ) ) )", "obj1": 0.876, "obj2": 0.08711025728684177}, {"determining": "( Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( ( ARS / AMS ) ,ACS ) ) / Const ) ),FirstVNF_Mem ) / MRS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.324, "obj2": 0.46922211980106593}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.224, "obj2": 0.5453781565691016}, {"determining": "( Min( ( Const + FirstVNF_CPU_Server ) ,( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( CRS,MRS ) - ( ( FirstVNF_CPU + BR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( ( DS + MUM ) ,Min( MLU ,RRSe ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) / ( Max( RCSe,MUM ) * ( ( RMSe / MLU ) + ( RRSe * ( RCSe - Min( CS ,( MLU / ( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.966, "obj2": 0.018540856941631934}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) * ( FirstVNF_Mem - RRS ) ) ,( ( ACS - FirstVNF_CPU ) / BR ) )", "choosing": "( Max( ( ( DS * Max( ( Max( RCSe,MUC ) * ( MUC / ( MLU / RMSe ) ) ),Min( MUC ,RMSe ) ) ) - MUR ),MUR ) / ( RRSe * ( CS * DS ) ) )", "obj1": 0.106, "obj2": 0.6479765622145077}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( BR / ( FirstVNF_Mem_Server + ( CRS - FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) / Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - CS ) ,( MLU * MLU ) ) - ( ( ( ( CS / Min( DS ,RCSe ) ) + Max( MUC,MUR ) ) - Min( RMSe ,RCSe ) ) - RRSe ) )", "obj1": 0.566, "obj2": 0.29316699883606123}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "( ( Max( Max( BR,RRS ),( ( Max( PN,AMS ) - FirstVNF_RAM ) - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( FirstVNF_CPU_Server + MDR ) ) - FirstVNF_Mem ) + ( ( Const - FirstVNF_CPU_Server ) + Max( MDR,PN ) ) ) )", "choosing": "( ( ( ( RMSe - RCSe ) * ( RRSe * ( MLU / Min( RCSe ,( RMSe * ( MUC - MLU ) ) ) ) ) ) + ( MLU * MLU ) ) - RMSe )", "obj1": 0.882, "obj2": 0.08075630790657422}, {"determining": "( ( ( ( ( Max( CRS,MRS ) - FirstVNF_RAM ) + Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) + ARS ) ) ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.718, "obj2": 0.17912688606231997}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,( ( MDR * PN ) * ( MRS / CRS ) ) ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe / RMSe ) / MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - Max( RMSe,Max( MUC,RMSe ) ) ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.282, "obj2": 0.5073178270629516}, {"determining": "( Max( ( ( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( Const * MDR ) ) ) / Max( AMS,ACS ) ) * MDR ) * ( AMS + Const ) ),( ( Min( ( Const + FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) ) / ( RRS * FirstVNF_CPU ) ) ) / Min( CRS ,ACS ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,( MUM * DS ) ) ,Max( RRSe,( ( ( ( Min( RRSe ,( CS * RCSe ) ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( ( CS * CS ) + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) * ( RRSe / MLU ) ) ) )", "obj1": 0.444, "obj2": 0.3881654477251832}, {"determining": "( ( Min( DDR ,FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR * PN ) ) )", "choosing": "( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Max( ( RMSe - DS ),Min( ( RRSe / ( RMSe + RCSe ) ) ,MLU ) ) + Min( Max( MUR,( ( MUC * MUR ) + ( DS + CS ) ) ) ,RMSe ) ) ,Max( RMSe,RCSe ) ) / ( RRSe - ( CS + MLU ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( ( RRSe + ( Max( RCSe,MUR ) + RCSe ) ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.336, "obj2": 0.45236000918086483}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RMSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.392, "obj2": 0.4125107807272517}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ) ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.16, "obj2": 0.5910409813213697}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) / ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) + ( Max( MRS,CRS ) - ( Max( FirstVNF_RAM,MDR ) / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Max( MLU,MUM ) + DS ) )", "obj1": 0.98, "obj2": 0.008722250926485327}, {"determining": "Min( PN ,( ACS * RRS ) )", "choosing": "Max( ( ( ( ( ( ( MUM + CS ) / ( MUM * CS ) ) - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.458, "obj2": 0.3749147839150118}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( MDR + ( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) / FirstVNF_Mem_Server ) + ARS ) )", "choosing": "( ( ( Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.694, "obj2": 0.21336065965317705}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( ( AMS * MDR ) * FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( CS ,RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.308, "obj2": 0.4855649416539582}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( DS - CS ) + ( MLU * MLU ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.474, "obj2": 0.3641552908121912}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) + ARS ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,Min( RCSe ,MLU ) ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.312, "obj2": 0.4741985489829706}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.614, "obj2": 0.2653500123225729}, {"determining": "( Min( Max( ARS,( AMS + MRS ) ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( FirstVNF_Mem_Server,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( Max( MUM,Min( ( ( RRSe + RRSe ) / ( MUC / Max( RMSe,MUM ) ) ) ,Min( Max( CS,Min( RMSe ,MUR ) ) ,DS ) ) ) ,( RRSe - MLU ) ) + DS ) )", "obj1": 0.286, "obj2": 0.4996120533938256}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) ) ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + Max( RMSe,RCSe ) ) ) * DS ) )", "obj1": 0.64, "obj2": 0.2453832710482272}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( MUM * RCSe ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.736, "obj2": 0.1788759546424943}], "13": [{"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( MUM ,DS ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,MUR ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ARS / AMS ) ,ACS ) - FirstVNF_CPU ) + Min( PN ,( MDR * RRS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RCSe ) * ( RRSe / ( RMSe / MLU ) ) ) + ( MLU * MLU ) ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "Min( ( DDR / Min( ( CRS + Const ) ,( AMS * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( RRS - ARS ) ) ) ) ) ) ,Const )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( ( RCSe + MUR ) + Max( RCSe,RMSe ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + MUR ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( CS / DS ) + CS ) ) ) ,( RCSe * MUC ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * ( RCSe + MUR ) ) ) ) )", "obj1": 0.778, "obj2": 0.13611098578348704}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),( Min( ( ARS - FirstVNF_CPU ) ,FirstVNF_RAM ) - ( FirstVNF_RAM + ( DDR * FirstVNF_Mem_Server ) ) ) ),Max( ( FirstVNF_RAM - ( ( AMS * ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) ),PN ) )", "choosing": "( ( ( ( RCSe / MLU ) + MUR ) * DS ) / ( CS - MUM ) )", "obj1": 0.534, "obj2": 0.31264681727558274}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( BR / ( FirstVNF_Mem_Server + ( CRS - FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) / Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - CS ) ,( MLU * MLU ) ) - ( ( ( ( CS / Min( DS ,RCSe ) ) + Max( MUC,MUR ) ) - Min( RMSe ,RCSe ) ) - RRSe ) )", "obj1": 0.566, "obj2": 0.29316699883606123}, {"determining": "Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe - MUR ),MUR ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.062, "obj2": 0.7000472872979423}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( AMS * ( ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) - ( MRS + DDR ) ) ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( Min( RCSe ,MLU ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.1, "obj2": 0.6752687875213658}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,Max( CRS,MRS ) ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( ( MUR * Min( RRSe ,MLU ) ),RCSe ) ) ,CS ) + DS ) )", "obj1": 0.236, "obj2": 0.5244053601001984}, {"determining": "Min( Min( Max( FirstVNF_CPU,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) + MDR ) ) ,Max( PN,RRS ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.19, "obj2": 0.5734613539380458}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.754, "obj2": 0.15909573358037737}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( FirstVNF_Mem_Server,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.222, "obj2": 0.5411938607283616}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + CRS ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( FirstVNF_Mem_Server,PN ) ,( Min( Max( RRS,PN ) ,( MDR * PN ) ) * PN ) ) / ( Min( DDR ,ACS ) * AMS ) ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( ( Min( CS ,CS ) / Min( Max( ( RMSe - RMSe ),MLU ) ,Max( MUM,CS ) ) ) + DS ) )", "obj1": 0.074, "obj2": 0.6838595319280614}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / MLU ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.36, "obj2": 0.435527836973765}, {"determining": "( ( ( ( ( Max( CRS,MRS ) - FirstVNF_RAM ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / ( ARS - MDR ) ) + ARS ) ) ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( ( RRSe / MLU ) * ( ( MUM - Max( MUR,RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.702, "obj2": 0.19644031708625603}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ) ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.16, "obj2": 0.5910409813213697}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ( CRS * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MUR * MUM ) / ( CS * CS ) ),( ( ( RRSe + ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Min( RMSe ,RCSe ) ,( MUC * RMSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.512, "obj2": 0.3444391314714003}, {"determining": "( Max( Max( Max( DDR,FirstVNF_RAM ),( Min( FirstVNF_RAM ,( ACS - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,PN ) ) ) ),FirstVNF_Mem ) / MRS )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) * ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( DS - MUC ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.522, "obj2": 0.32635285553731597}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) * ( FirstVNF_Mem - RRS ) ) ,( ( ACS - FirstVNF_CPU ) / BR ) )", "choosing": "( Max( ( ( DS * Max( ( Max( RCSe,MUC ) * ( MUC / ( MLU / RMSe ) ) ),Min( MUC ,RMSe ) ) ) - MUR ),MUR ) / ( RRSe * ( CS * DS ) ) )", "obj1": 0.106, "obj2": 0.6479765622145077}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( Const + FirstVNF_RAM ) ,( AMS * ( FirstVNF_CPU - ( ( FirstVNF_RAM - ( FirstVNF_CPU * RRS ) ) + ( BR - MRS ) ) ) ) ) ) )", "choosing": "( ( Min( CS ,Max( RMSe,( MUM + RRSe ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( MUM * RCSe ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS + MUC ) ,( MLU + DS ) ),( Max( RCSe,MUR ) * ( CS + CS ) ) ) ) )", "obj1": 0.852, "obj2": 0.11366552099867015}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.442, "obj2": 0.38607900784644306}, {"determining": "Min( PN ,( DDR / Min( ( Const + FirstVNF_RAM ) ,( AMS * ( FirstVNF_CPU - ( MRS + ( ( ARS / ARS ) - MDR ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS - RMSe ) + MUC ) + MUM ),( CS + RCSe ) ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( CS / MLU ) / ( RRSe * MUR ) ) ) ) ,( MUC * RCSe ) ) ) + Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.614, "obj2": 0.2653500123225729}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / DS ) / ( CS * CS ) ),( ( ( RRSe + ( ( RRSe * Min( RMSe ,( MLU / MUR ) ) ) + MUR ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.592, "obj2": 0.2911235162521183}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( FirstVNF_Mem_Server,PN ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / Min( ( ARS - FirstVNF_CPU ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) ) ) ) )", "choosing": "( Min( DS ,DS ) - ( ( CS * CS ) + DS ) )", "obj1": 0.266, "obj2": 0.5144149887433104}, {"determining": "( Min( ( AMS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ( ( FirstVNF_Mem + FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) + ( Max( CRS,MRS ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( CS - CS ) ) + Min( ( ( RMSe / RRSe ) + MLU ) ,Min( RMSe ,RCSe ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( RRSe + CS ) ) ) ),Min( MUC ,MUM ) )", "obj1": 0.662, "obj2": 0.22777280664088223}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( ( RRSe + ( Max( RCSe,MUR ) + RCSe ) ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.336, "obj2": 0.45236000918086483}, {"determining": "( ( ( ( ( Max( CRS,MRS ) - FirstVNF_RAM ) + Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) + ARS ) ) ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.718, "obj2": 0.17912688606231997}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) / FirstVNF_RAM ) / ARS ) ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( Max( RRSe,MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.854, "obj2": 0.104878514512126}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - FirstVNF_CPU ) ,( AMS * ( ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.816, "obj2": 0.1233308780642065}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.954, "obj2": 0.025567712594120516}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( ( RRS - RRS ),RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( RRSe,MUM ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.47, "obj2": 0.3635050776487946}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + ( BR / FirstVNF_CPU ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( Max( DS,RCSe ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.42, "obj2": 0.4047279903415155}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - FirstVNF_CPU ) ,( AMS * ( ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.816, "obj2": 0.1233308780642065}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.614, "obj2": 0.2653500123225729}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.934, "obj2": 0.03813603758594817}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - ( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) ) ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( ( ( RRSe + ( RCSe + RCSe ) ) * MLU ) + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.874, "obj2": 0.08910872779802353}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.426, "obj2": 0.39703042132326744}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.312, "obj2": 0.4729950351854969}, {"determining": "( ( ( ( Max( AMS,Min( MRS ,DDR ) ) * ( Const / RRS ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * FirstVNF_Mem ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( MUM / ( Max( ( ( CS * MLU ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RCSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.124, "obj2": 0.6461262891832614}, {"determining": "Max( Max( ( DDR / FirstVNF_RAM ),Min( PN ,( MDR * RRS ) ) ),Max( PN,( FirstVNF_RAM - ( ( AMS * ( Min( Max( RRS,PN ) ,( MDR * PN ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) ,MLU ) + MUR ) * DS ) / ( MUM * ( CS * DS ) ) )", "obj1": 0.212, "obj2": 0.5611972647274487}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.896, "obj2": 0.06944273947639987}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( PN,RRS ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( MDR / AMS ) ,MDR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MLU + ( RMSe / RRSe ) ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( Max( RRSe,MUM ) + CS ) ) ) ),( ( ( RRSe + Max( Min( ( ( MUM + CS ) / ( MUM * MUR ) ) ,MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.374, "obj2": 0.4284695209143013}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( ( ( FirstVNF_RAM_Server - RRS ) - FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - MRS ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ) ) / FirstVNF_CPU )", "choosing": "( ( ( ( Min( ( CS - MUR ) ,Min( MUR ,CS ) ) / RMSe ) - DS ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.144, "obj2": 0.6072110585066861}, {"determining": "( ( ( FirstVNF_CPU + ( Max( BR,MRS ) / FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( RCSe,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * ( Min( MUC ,RRSe ) - RCSe ) ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.91, "obj2": 0.05012592441389981}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.928, "obj2": 0.04190436901124496}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.272, "obj2": 0.5063726703312073}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( ( AMS * MDR ) * FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( CS ,RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.308, "obj2": 0.4855649416539582}], "14": [{"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "( ( ( AMS * ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MUM,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( MUM ,DS ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,MUR ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( BR - PN ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( MUR + Min( CS ,Max( MLU,RCSe ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ( ( Min( Min( RRS ,AMS ) ,FirstVNF_RAM ) * DDR ) / FirstVNF_Mem ) / ARS ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,( ( ( ( ( ACS - PN ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,MUM ) + ( RCSe + MUR ) ) + Min( ( ( Max( RCSe,( MUR * DS ) ) + RCSe ) + RRSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( MUR - MUR ) )", "obj1": 0.51, "obj2": 0.2995112161413919}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( FirstVNF_Mem_Server,PN ) ,( Min( Max( RRS,PN ) ,( MDR * PN ) ) * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / ( RRSe / DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.5, "obj2": 0.346038775397284}, {"determining": "( ( ( FirstVNF_CPU_Server / ACS ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( MUM + DS ) * Min( MUR ,RCSe ) ) - ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) ) + Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( Min( RMSe ,RMSe ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.612, "obj2": 0.2449202670732285}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.572, "obj2": 0.2830030541608315}, {"determining": "Min( ( DDR / Min( ( CRS + Const ) ,( AMS * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( RRS - ARS ) ) ) ) ) ) ,Const )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( ( RCSe + MUR ) + Max( RCSe,RMSe ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + MUR ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( CS / DS ) + CS ) ) ) ,( RCSe * MUC ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * ( RCSe + MUR ) ) ) ) )", "obj1": 0.778, "obj2": 0.13611098578348704}, {"determining": "( ( ( ( ( Max( CRS,MRS ) - FirstVNF_RAM ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / ( ARS - MDR ) ) + ARS ) ) ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( ( RRSe / MLU ) * ( ( MUM - Max( MUR,RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.702, "obj2": 0.19644031708625603}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / ( ( RCSe * MUR ) * DS ) ) ) ) ) )", "obj1": 0.668, "obj2": 0.21357295276529029}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - ( ( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) ) - ( FirstVNF_RAM + Const ) ) ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.874, "obj2": 0.08832474455228387}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) / Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - CS ) ,( MLU * MLU ) ) - ( ( ( ( CS / Min( DS ,RCSe ) ) + Max( MUC,MUR ) ) - Min( RMSe ,MUR ) ) - RRSe ) )", "obj1": 0.562, "obj2": 0.29725017999719755}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.628, "obj2": 0.23769977426000455}, {"determining": "( ( ( FirstVNF_CPU + ( Max( BR,MRS ) / FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( RCSe,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * ( Min( MUC ,RRSe ) - RCSe ) ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.91, "obj2": 0.05012592441389981}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( ( RRS - RRS ),RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( RRSe,MUM ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.47, "obj2": 0.3635050776487946}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( AMS * ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ) ) )", "obj1": 0.968, "obj2": 0.014496324566627156}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( Max( RRSe,MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.296, "obj2": 0.49311082568566866}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.744, "obj2": 0.1637250063138163}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) * ( FirstVNF_Mem - RRS ) ) ,( ( ACS - FirstVNF_CPU ) / BR ) )", "choosing": "( Max( ( ( DS * Max( ( Max( RCSe,MUC ) * ( MUC / ( MLU / RMSe ) ) ),Min( MUC ,RMSe ) ) ) - MUR ),MUR ) / ( RRSe * ( CS * DS ) ) )", "obj1": 0.106, "obj2": 0.6479765622145077}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( ACS / Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) / FirstVNF_RAM ) / ARS ) ) * Min( ( Const + FirstVNF_CPU_Server ) ,( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( Max( RRSe,MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.854, "obj2": 0.104878514512126}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( Max( MDR,Min( RRS ,MRS ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.762, "obj2": 0.15245647071406396}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( MUR * MUM ) / ( CS * CS ) ),( ( ( RRSe + ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Min( RMSe ,RCSe ) ,( MUC * RMSe ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) ) * MLU ) / ( CS + MLU ) ) )", "obj1": 0.4, "obj2": 0.4173372893032451}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - FirstVNF_CPU ) ,( AMS * ( ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.816, "obj2": 0.1233308780642065}, {"determining": "( Min( ( AMS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ( ( FirstVNF_Mem + FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) + ( Max( CRS,MRS ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( CS - CS ) ) + Min( ( ( RMSe / RRSe ) + MLU ) ,Min( RMSe ,RCSe ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( RRSe + CS ) ) ) ),Min( MUC ,MUM ) )", "obj1": 0.662, "obj2": 0.22777280664088223}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_Mem ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( ( MLU * MLU ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / ( MUM * MUR ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.326, "obj2": 0.4643486705678823}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - FirstVNF_CPU ) ,( AMS * ( ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.816, "obj2": 0.1233308780642065}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.896, "obj2": 0.06944273947639987}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.934, "obj2": 0.03813603758594817}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( Const + FirstVNF_RAM ) ,( AMS * ( FirstVNF_CPU - ( ( FirstVNF_RAM - ( FirstVNF_CPU * RRS ) ) + ( BR - MRS ) ) ) ) ) ) )", "choosing": "( ( Min( CS ,Max( RMSe,( MUM + RRSe ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( MUM * RCSe ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS + MUC ) ,( MLU + DS ) ),( Max( RCSe,MUR ) * ( CS + CS ) ) ) ) )", "obj1": 0.852, "obj2": 0.11366552099867015}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( ( DDR / FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.164, "obj2": 0.5852160569382681}, {"determining": "( ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( Const * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.892, "obj2": 0.07358183413903066}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.426, "obj2": 0.39703042132326744}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( ( PN * RRS ) ,( FirstVNF_CPU_Server / CRS ) ) / DDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( ( RCSe + RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RMSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( RCSe + Max( ( Max( MUR,RMSe ) - ( MUM - CS ) ),Min( CS ,( MLU + DS ) ) ) ) ) ) / Max( Min( ( CS * MUC ) ,Max( MLU,DS ) ),( ( CS + CS ) * ( Min( ( DS / ( MLU * RRSe ) ) ,RMSe ) - RMSe ) ) ) ) )", "obj1": 0.994, "obj2": 0.0026007361107829147}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( FirstVNF_Mem_Server,PN ) ,( Min( Max( RRS,PN ) ,( MDR * PN ) ) * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( ( Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) / ( RRSe / DS ) ) + DS ) )", "obj1": 0.054, "obj2": 0.7128861742943227}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( ( RRS - RRS ),RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( RRSe,MUM ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / MUM ) ) ) ) )", "obj1": 0.466, "obj2": 0.3702350135315171}, {"determining": "Min( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + MUR ) ) * DS ) )", "obj1": 0.262, "obj2": 0.5107261209207554}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.954, "obj2": 0.02492545630085891}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ),( ( ( AMS * MDR ) * FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) / Const )", "choosing": "( ( ( DS - CS ) + ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( CS ,RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.308, "obj2": 0.4855649416539582}, {"determining": "( Max( Max( ( DDR / FirstVNF_RAM ),( ( BR / Min( ( ARS / AMS ) ,ACS ) ) / Const ) ),FirstVNF_Mem ) / MRS )", "choosing": "( Min( DS ,DS ) - ( ( ( CS * CS ) / ( RRSe / DS ) ) + DS ) )", "obj1": 0.102, "obj2": 0.6724026442489569}, {"determining": "( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.188, "obj2": 0.5766484221967615}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.442, "obj2": 0.38607900784644306}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / ( MUM * MUR ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.388, "obj2": 0.4216758867278081}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,Max( CRS,MRS ) ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.222, "obj2": 0.5411938607283616}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.928, "obj2": 0.04190436901124496}, {"determining": "( ( ( ( ( Max( CRS,MRS ) - FirstVNF_RAM ) + Min( ( Const + FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) + ARS ) ) ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.714, "obj2": 0.1817199565573589}, {"determining": "( ( ( ( Max( AMS,Min( MRS ,DDR ) ) * ( Const / RRS ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * FirstVNF_Mem ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( MUM / ( Max( ( ( CS * MLU ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RCSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.124, "obj2": 0.6461262891832614}], "15": [{"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "( ( ( AMS * ( Max( Max( BR,RRS ),( ACS - BR ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MUM,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.342, "obj2": 0.4259440175785739}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.292, "obj2": 0.4783461395373501}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.3971114069344486}, {"determining": "( ( Max( ( BR / RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - Min( ( DS / DS ) ,MUR ) ) / ( Min( CS ,RMSe ) + RRSe ) ) + ( DS - CS ) ) - ( Min( CS ,MUC ) * ( MUR - MUR ) ) )", "obj1": 0.472, "obj2": 0.3390451903942494}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( Max( RCSe,MUR ),MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.452, "obj2": 0.3589043032622119}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * Min( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) ,( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_Mem * Const ) + Max( MDR,Min( PN ,( Const / FirstVNF_Mem_Server ) ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,MUR ) + ( RCSe + MUR ) ) + Min( ( RRSe + ( Max( RCSe,( RRSe * MUM ) ) + RCSe ) ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( RCSe * ( DS - RRSe ) ) * ( RMSe / CS ) ) )", "obj1": 0.492, "obj2": 0.312892104338356}, {"determining": "( ( Max( Max( BR,RRS ),( Min( RRS ,MRS ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / ( ( CS * CS ) / ( RRSe / DS ) ) ) )", "obj1": 0.436, "obj2": 0.3841464001669036}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,Max( CRS,MRS ) ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.222, "obj2": 0.5411938607283616}, {"determining": "( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * ( MUR * MUR ) ) ) ) + ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) ) / Max( Max( MUR,MUM ),DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.844, "obj2": 0.09216234421001514}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.628, "obj2": 0.23769977426000455}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( ( RRSe + ( Max( RCSe,( RRSe * MUM ) ) + RCSe ) ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( RRSe + Max( ( ( ( MUM + CS ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.404, "obj2": 0.3898736587545699}, {"determining": "( ( Max( Max( ( AMS * MDR ),RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Max( ( ( MUM / RMSe ) + ( RRSe * MUM ) ),RMSe ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.55, "obj2": 0.29580118773434744}, {"determining": "( MDR / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + MLU ) ) ) * ( ( RRSe + ( RMSe * RMSe ) ) * DS ) ) )", "obj1": 0.086, "obj2": 0.6834937961001258}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * RRS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * Min( ARS ,BR ) )", "choosing": "( MLU / ( Max( ( ( CS * MLU ) / ( DS / MLU ) ),( ( ( Min( CS ,Max( MUR,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.264, "obj2": 0.5045151979256639}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.648, "obj2": 0.2153050011380673}, {"determining": "( ( ( ( Max( AMS,Min( MRS ,DDR ) ) * ( Const / RRS ) ) - Max( AMS,Min( MRS ,DDR ) ) ) / Min( Max( RRS,PN ) ,( DDR * FirstVNF_Mem ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( MUM / ( Max( ( MUR / ( MLU / DS ) ),( ( ( Min( CS ,Max( RCSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.064, "obj2": 0.7105426998147856}, {"determining": "( ( ( FirstVNF_CPU_Server / ACS ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( MUM + DS ) * Min( MUR ,RCSe ) ) - ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) ) + Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( Min( RMSe ,RMSe ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.612, "obj2": 0.2449202670732285}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( MDR + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.334, "obj2": 0.45173307879750024}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.742, "obj2": 0.16306251911017455}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( ( PN * RRS ) ,( FirstVNF_CPU_Server / CRS ) ) / DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( Max( RRSe,MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.216, "obj2": 0.5611234128188987}, {"determining": "Min( ( DDR / Min( ( CRS + Const ) ,( AMS * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( RRS - ARS ) ) ) ) ) ) ,Const )", "choosing": "Max( ( ( RRSe + ( RMSe * RMSe ) ) * DS ),( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + MUR ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( CS / DS ) + CS ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.152, "obj2": 0.6116288042695963}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.592, "obj2": 0.2636800578595416}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / ( ( RCSe * MUR ) * DS ) ) ) ) ) )", "obj1": 0.668, "obj2": 0.21357295276529029}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MRS * FirstVNF_Mem_Server ) ) + Min( DDR ,( FirstVNF_RAM + ACS ) ) ) - Min( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) ,( AMS - FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Min( RMSe ,RCSe ) ,( ( ( ( MUC / RMSe ) * MUR ) * DS ) / RRSe ) ) ) ) )", "obj1": 0.686, "obj2": 0.1998422582881625}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( MRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( ( RRSe + ( Max( RCSe,( RRSe * MUM ) ) + RCSe ) ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( ( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.51, "obj2": 0.2995112161413919}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.954, "obj2": 0.02492545630085891}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ) ,( AMS * ( ( ( ( MDR + ACS ) / FirstVNF_Mem_Server ) + ARS ) - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RCSe * MUR ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.834, "obj2": 0.11981038176774621}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.722, "obj2": 0.1756951525455804}, {"determining": "Min( ( ( FirstVNF_CPU_Server * AMS ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,ARS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - ( ( MUM * DS ) * Min( MUR ,RCSe ) ) ) / ( Min( CS ,RMSe ) + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR - ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) ) )", "obj1": 0.324, "obj2": 0.46684912362490155}, {"determining": "( ( ( Max( AMS,Min( MRS ,DDR ) ) * ( Const / RRS ) ) - FirstVNF_Mem ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( MUM / ( Max( ( ( CS * MLU ) / ( MLU / RCSe ) ),( ( ( Min( CS ,Max( RCSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.094, "obj2": 0.6557576550783594}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.2, "obj2": 0.5732597085577847}, {"determining": "( ( DDR / FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.16, "obj2": 0.588023738440294}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - ( ( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,MRS ) - FirstVNF_RAM ) ) - ( FirstVNF_RAM + Const ) ) ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.874, "obj2": 0.08832474455228387}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.586, "obj2": 0.2712176435763609}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.122, "obj2": 0.6458674292216385}, {"determining": "( ( ( ( Max( AMS,Min( MRS ,DDR ) ) * ( Const / RRS ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * FirstVNF_Mem ) ) ) / ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) )", "choosing": "( MUM / ( Max( ( ( CS + CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RCSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.09, "obj2": 0.6740706684846012}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) + ( ( ( RRSe * MUR ) / ( CS / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.758, "obj2": 0.15268952317691756}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.762, "obj2": 0.1445600817453684}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * FirstVNF_Mem ) + DDR ) ) ) ) ) )", "choosing": "Max( ( ( ( Max( RMSe,MUM ) + ( RCSe + MUR ) ) + Min( ( ( Max( RCSe,( RRSe * MUM ) ) + RCSe ) + RRSe ) ,( ( RMSe / RRSe ) + MLU ) ) ) / Max( Max( RRSe,MUM ),( Max( RCSe,RRSe ) * ( CS + CS ) ) ) ),( MUR - MUR ) )", "obj1": 0.988, "obj2": 0.007129840999728113}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) * ( FirstVNF_Mem - RRS ) ) ,( ( ACS - FirstVNF_CPU ) / BR ) )", "choosing": "( Max( ( ( DS * Max( ( Max( RCSe,MUC ) * ( MUC / ( MLU / RMSe ) ) ),Min( MUC ,RMSe ) ) ) - MUR ),MUR ) / ( RRSe * ( CS * DS ) ) )", "obj1": 0.106, "obj2": 0.6479765622145077}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.796, "obj2": 0.12709571407317455}, {"determining": "( Min( ( ARS - FirstVNF_CPU ) ,FirstVNF_RAM ) - Max( ( MDR + ARS ),MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( CS,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( RMSe + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.934, "obj2": 0.03804016336113985}, {"determining": "Min( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + MUR ) ) * DS ) )", "obj1": 0.262, "obj2": 0.5107261209207554}], "16": [{"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.042, "obj2": 0.7199281977201899}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( Min( Max( RRS,PN ) ,( MDR * PN ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ,Max( ( FirstVNF_CPU_Server / MRS ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( ( MUR - ( RRSe / MUC ) ) + DS ) ) ) )", "obj1": 0.51, "obj2": 0.28919161731706644}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.796, "obj2": 0.12709571407317455}, {"determining": "( ( Max( ( BR / RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * CS ) / ( RRSe / DS ) ) - Min( ( DS / DS ) ,MUR ) ) / ( Min( CS ,RMSe ) + RRSe ) ) + ( DS - CS ) ) - ( Min( CS ,MUC ) * ( MUR - MUR ) ) )", "obj1": 0.472, "obj2": 0.3390451903942494}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + Min( DDR ,Min( FirstVNF_CPU ,AMS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( ( RMSe * ( MLU - Max( RMSe,Min( MUM ,( MUM - ( RCSe * RRSe ) ) ) ) ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.714, "obj2": 0.1703962122686029}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.758, "obj2": 0.14420172339400222}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.886, "obj2": 0.06284247197258964}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_CPU - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * DS ) * Max( RCSe,MUR ) ) ) + ( ( ( RRSe * MUR ) / ( CS / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.818, "obj2": 0.1011135655660603}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.586, "obj2": 0.2712176435763609}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,Max( CRS,MRS ) ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.222, "obj2": 0.5411938607283616}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.954, "obj2": 0.02492545630085891}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * ( MUR * MUR ) ) ) ) + ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) ) / Max( Max( MUR,MUM ),DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.922, "obj2": 0.04948083545636104}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.742, "obj2": 0.16306251911017455}, {"determining": "( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - Max( MDR,Min( RRS ,FirstVNF_RAM ) ) ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) / Max( ( RRS - FirstVNF_CPU_Server ),( DDR / PN ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.06, "obj2": 0.6972134825841112}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS / FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( ( Max( ( DS - MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) + CS ) ) ) * ( CS * DS ) ) )", "obj1": 0.298, "obj2": 0.46665542164500445}, {"determining": "( ( DDR / FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.16, "obj2": 0.588023738440294}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.364, "obj2": 0.412235348720756}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,BR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.414, "obj2": 0.37332373282542286}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( ( AMS / RRS ) - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( MRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( Max( RRSe,RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / Max( Min( CS ,RMSe ),MUC ) )", "obj1": 0.422, "obj2": 0.3562110820908713}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( ( PN * RRS ) ,( FirstVNF_CPU_Server / CRS ) ) / DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( Max( RRSe,MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.216, "obj2": 0.5611234128188987}, {"determining": "( Min( ( ARS - FirstVNF_CPU ) ,FirstVNF_RAM ) - Max( ( MDR + ARS ),MDR ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( CS,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),( ( ( RRSe + Max( ( ( ( RMSe + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.934, "obj2": 0.03804016336113985}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.318, "obj2": 0.4409440524148737}, {"determining": "Min( ( DDR / Min( ( CRS + Const ) ,( AMS * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( RRS - ARS ) ) ) ) ) ) ,Const )", "choosing": "Max( ( ( RRSe + ( RMSe * RMSe ) ) * DS ),( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + MUR ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( CS / DS ) + CS ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.152, "obj2": 0.6116288042695963}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( Min( ( FirstVNF_RAM + Const ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * FirstVNF_Mem ) + DDR ) ) ) ) ,( AMS * ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) * DS ) * ( ( ( ( ( CS * CS ) / ( MLU / DS ) ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.984, "obj2": 0.013587849522121666}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem - ( ACS / MRS ) ) ) ) ) ) ) / Const )", "choosing": "( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( ( MUR * RMSe ) + ( Min( RCSe ,Max( RMSe,MUC ) ) - Min( RCSe ,RRSe ) ) ) ) ) * ( CS * RMSe ) ) / MUM )", "obj1": 0.086, "obj2": 0.6768499443461967}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.628, "obj2": 0.23769977426000455}, {"determining": "Min( FirstVNF_RAM ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MLU ) / ( MUR * ( CS * DS ) ) )", "obj1": 0.49, "obj2": 0.32514731942028746}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "( ( Max( Max( BR,RRS ),( Min( RRS ,MRS ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.39, "obj2": 0.38780725097598684}, {"determining": "( ( Min( ARS ,( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + ( ( ( MRS + FirstVNF_RAM_Server ) - FirstVNF_CPU ) / FirstVNF_Mem ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( ( RCSe / MLU ) / MLU ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * Min( CS ,MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.282, "obj2": 0.4898253778920809}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.638, "obj2": 0.22234070217441104}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Min( ( ARS - ( ( Min( ( AMS + ARS ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( CRS,( ACS - BR ) ) - FirstVNF_RAM ) ) - ( FirstVNF_RAM + Const ) ) ) ,( AMS * ( FirstVNF_CPU - ( MRS + DDR ) ) ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.876, "obj2": 0.08654591821082538}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MRS * FirstVNF_Mem_Server ) ) + Min( DDR ,( FirstVNF_RAM + ACS ) ) ) - Min( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) ,( AMS - FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Min( RMSe ,RCSe ) ,( ( ( ( MUC / RMSe ) * MUR ) * DS ) / RRSe ) ) ) ) )", "obj1": 0.686, "obj2": 0.1998422582881625}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + Max( Max( MDR,Min( CRS ,MRS ) ),ARS ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) * Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * ( Max( RMSe,RCSe ) + ( RCSe / MUR ) ) ) ) * DS ) * Min( MUC ,CS ) )", "obj1": 0.598, "obj2": 0.25996879767330766}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.122, "obj2": 0.6458674292216385}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) * ( FirstVNF_Mem - RRS ) ) ,( ( ACS - FirstVNF_CPU ) / BR ) )", "choosing": "( Max( ( ( DS * Max( ( Max( RCSe,MUC ) * ( MUC / ( MLU / RMSe ) ) ),Min( MUC ,RMSe ) ) ) - MUR ),MUR ) / ( RRSe * ( CS * DS ) ) )", "obj1": 0.106, "obj2": 0.6479765622145077}, {"determining": "Min( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + MUR ) ) * DS ) )", "obj1": 0.262, "obj2": 0.5107261209207554}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUR ) * DS ) ) ) ) ) )", "obj1": 0.686, "obj2": 0.1998422582881625}, {"determining": "( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( Max( MDR,MRS ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.87, "obj2": 0.08681349882322995}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( MDR + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.396573198063123}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - Max( FirstVNF_Mem_Server,AMS ) ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( CS * RCSe ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( Max( RMSe,RMSe ),RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUM ) * DS ) ) ) ) ) )", "obj1": 0.668, "obj2": 0.2120815400365354}, {"determining": "( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.844, "obj2": 0.09216234421001514}, {"determining": "Min( ( RRS + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.27, "obj2": 0.5012135961372987}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ARS - FirstVNF_CPU ) * PN ) ) ) / Const )", "choosing": "( MUM / ( Max( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) - DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.052, "obj2": 0.7103483999361417}], "17": [{"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( AMS ,AMS ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * Max( MUC,MLU ) )", "obj1": 0.83, "obj2": 0.08407538961825402}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.886, "obj2": 0.06284247197258964}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( CS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.45, "obj2": 0.3361921894806948}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( ( AMS / RRS ) - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( MRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( Max( RRSe,RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / Max( Min( CS ,RMSe ),MUC ) )", "obj1": 0.422, "obj2": 0.3562110820908713}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "( ( ( Min( ( PN * RRS ) ,( FirstVNF_CPU_Server / CRS ) ) / DDR ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Max( Max( RRSe,MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.298, "obj2": 0.4633360815947901}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( Min( Max( RRS,PN ) ,( MDR * PN ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ,Max( ( FirstVNF_CPU_Server / MRS ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ),Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( ( MUR - ( RRSe / MUC ) ) + DS ) ) ) )", "obj1": 0.51, "obj2": 0.28919161731706644}, {"determining": "( ( Max( Max( BR,RRS ),( Min( RRS ,CRS ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( Max( AMS,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUR * MUC ) * DS ) ) ) ) / ( Min( ( RRSe / DS ) ,RMSe ) / MUR ) ),MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.34, "obj2": 0.42817436950286225}, {"determining": "Min( ( ( Max( Max( BR,RRS ),Min( ( Const + FirstVNF_Mem_Server ) ,ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( RRS * FirstVNF_RAM ) + ( RRS - RRS ) ) * ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * MDR ) )", "choosing": "( ( RRSe - Min( MUM ,MUR ) ) - ( DS + Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) ) )", "obj1": 0.502, "obj2": 0.30064585848523867}, {"determining": "( ( Max( Max( BR,RRS ),( Min( RRS ,MRS ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.39, "obj2": 0.38780725097598684}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( ( PN * RRS ) ,( FirstVNF_CPU_Server / CRS ) ) / DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( Max( RRSe,MUM ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.216, "obj2": 0.5611234128188987}, {"determining": "Min( FirstVNF_RAM ,( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * Min( Max( RMSe,RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUR ) * DS ) ) ) )", "obj1": 0.78, "obj2": 0.1431358430489361}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( Max( MUR,( ( RCSe * MUR ) * DS ) ) / ( Max( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) - DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.092, "obj2": 0.6626729790157682}, {"determining": "( ( DDR / ( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.556, "obj2": 0.2884393513923976}, {"determining": "( ( DDR / FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.144, "obj2": 0.604071735745253}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( ( ( DDR * FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem - CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( ( RRSe + ( ( ( MUR - CS ) + ( RMSe - CS ) ) + MUM ) ) / ( ( ( ( MUM + MUC ) / RMSe ) * ( RRSe - ( CS - RRSe ) ) ) / MUC ) ) ,RMSe ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) * ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.622, "obj2": 0.22991861939110433}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( MDR + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.39655802121040695}, {"determining": "Min( FirstVNF_RAM ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,Const ) ) )", "choosing": "( Max( ( ( ( ( RCSe * MUR ) + RRSe ) / ( MUM * CS ) ) - MUR ),MLU ) / ( MUR * ( CS * DS ) ) )", "obj1": 0.488, "obj2": 0.3266848772578948}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( MDR * PN ) ) ) ) ) ) + Const ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * ( MLU / DS ) ) ) )", "obj1": 0.92, "obj2": 0.062469960372800844}, {"determining": "( ( Max( Max( BR,RRS ),( ( FirstVNF_Mem_Server + ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) * ARS ) ) - ( PN / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * MDR ) + Max( MDR,MRS ) ) + ( ( FirstVNF_CPU_Server + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( CS - MLU ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( ( RRSe / MUM ) * MUC ) ,( MLU + DS ) ),( ( CS + MLU ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.564, "obj2": 0.2835719162883604}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - Max( FirstVNF_Mem_Server,AMS ) ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( CS * RCSe ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( Max( RMSe,RMSe ),RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUM ) * DS ) ) ) ) ) )", "obj1": 0.668, "obj2": 0.2120815400365354}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.318, "obj2": 0.4409440524148737}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.364, "obj2": 0.412235348720756}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.718, "obj2": 0.15792303147644468}, {"determining": "Min( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + MUR ) ) * DS ) )", "obj1": 0.262, "obj2": 0.5107261209207554}, {"determining": "Min( FirstVNF_RAM ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MLU ) / ( MUR * ( CS * DS ) ) )", "obj1": 0.49, "obj2": 0.32514731942028746}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,Max( CRS,MRS ) ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.222, "obj2": 0.5411938607283616}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.294, "obj2": 0.47792549369113074}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,BR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.414, "obj2": 0.37332373282542286}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + ( FirstVNF_CPU_Server * Const ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( ARS - ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( MUM + MUC ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * RCSe ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.612, "obj2": 0.24777022592717626}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.744, "obj2": 0.15463768856118912}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + Max( ARS,CRS ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RRSe + ( Max( RCSe,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) * DS ) )", "obj1": 0.36, "obj2": 0.42132680065636074}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem - ( ACS / MRS ) ) ) ) ) ) ) / Const )", "choosing": "( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( ( MUR * RMSe ) + ( Min( RCSe ,Max( RMSe,MUC ) ) - Min( RCSe ,RRSe ) ) ) ) ) * ( CS * RMSe ) ) / MUM )", "obj1": 0.086, "obj2": 0.6768499443461967}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + Min( DDR ,Min( FirstVNF_CPU ,AMS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( ( RMSe * ( MLU - Max( RMSe,Min( MUM ,( MUM - ( RCSe * RRSe ) ) ) ) ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.714, "obj2": 0.1703962122686029}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.714, "obj2": 0.1703962122686029}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MRS * FirstVNF_Mem_Server ) ) + Min( DDR ,( FirstVNF_RAM + ACS ) ) ) - Min( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) ,( AMS - FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Min( RMSe ,RCSe ) ,( ( ( ( MUC / RMSe ) * MUR ) * DS ) / RRSe ) ) ) ) )", "obj1": 0.686, "obj2": 0.1998422582881625}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - MLU )", "obj1": 0.954, "obj2": 0.02492545630085891}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + Max( Max( MDR,Min( CRS ,MRS ) ),ARS ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) * Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * ( Max( RMSe,RCSe ) + ( RCSe / MUR ) ) ) ) * DS ) * Min( MUC ,CS ) )", "obj1": 0.598, "obj2": 0.25996879767330766}, {"determining": "( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - CS ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.976, "obj2": 0.0218490602536292}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / ( FirstVNF_CPU - ( ( AMS * MDR ) + DDR ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.116, "obj2": 0.639362574792472}, {"determining": "( ( ACS + FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( MUM / MUC ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RCSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( DS + CS ) ) ) )", "obj1": 0.16, "obj2": 0.588023738440294}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.318, "obj2": 0.4409440524148737}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.586, "obj2": 0.2712176435763609}, {"determining": "( ( DDR / FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.16, "obj2": 0.588023738440294}], "18": [{"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + ( ACS - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( RRSe / ( CS + MLU ) ) )", "obj1": 0.818, "obj2": 0.10813939271552671}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( AMS ,AMS ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * Max( MUC,MLU ) )", "obj1": 0.83, "obj2": 0.08407538961825402}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem - ( ACS / MRS ) ) ) ) ) ) ) / Const )", "choosing": "( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( ( MUR * RMSe ) + ( Min( RCSe ,Max( RMSe,MUC ) ) - Min( RCSe ,RRSe ) ) ) ) ) * ( CS * RMSe ) ) / MUM )", "obj1": 0.086, "obj2": 0.6768499443461967}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.906, "obj2": 0.05931458666874051}, {"determining": "Min( FirstVNF_RAM ,( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * Min( Max( RMSe,RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUR ) * DS ) ) ) )", "obj1": 0.78, "obj2": 0.1431358430489361}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( MDR * PN ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.05, "obj2": 0.7180920952628007}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.952, "obj2": 0.027811963972584453}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( ( ( DDR * FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem - CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( ( RRSe + ( ( ( MUR - CS ) + ( RMSe - CS ) ) + MUM ) ) / ( ( ( ( MUM + MUC ) / RMSe ) * ( RRSe - ( CS - RRSe ) ) ) / MUC ) ) ,RMSe ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) * ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - Max( FirstVNF_Mem_Server,AMS ) ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( CS * RCSe ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( Max( RMSe,RMSe ),RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUM ) * DS ) ) ) ) ) )", "obj1": 0.668, "obj2": 0.2120815400365354}, {"determining": "( Min( PN ,AMS ) / MRS )", "choosing": "( Min( ( ( Max( MUM,DS ) + RRSe ) - ( ( ( RRSe * MUR ) - ( ( RCSe - MUR ) * ( MLU * ( MUM / MUM ) ) ) ) + MUC ) ) ,DS ) - ( Min( CS ,( RMSe + Max( DS,RCSe ) ) ) + DS ) )", "obj1": 0.212, "obj2": 0.5572904599177353}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.686, "obj2": 0.1852474563334406}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.722, "obj2": 0.15001913459375246}, {"determining": "Min( ( ( ( BR / ( MRS - MRS ) ) / Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),Min( RMSe ,MUR ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( CS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.414, "obj2": 0.36847331624977525}, {"determining": "( ( Max( Max( BR,RRS ),( Min( RRS ,MRS ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.39, "obj2": 0.38780725097598684}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) + Max( RCSe,MUR ) ) ) ) + MLU ) / Min( ( RMSe * MUC ) ,( Max( RMSe,( Max( ( RRSe + MUM ),( DS - MLU ) ) + MUM ) ) + MUM ) ) )", "obj1": 0.518, "obj2": 0.2816027240045847}, {"determining": "( ( Max( Max( BR,RRS ),( Min( RRS ,MRS ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.272, "obj2": 0.5020367219587675}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.622, "obj2": 0.22991861939110433}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + DDR ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( DS - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.708, "obj2": 0.16261704519204795}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( Max( MUR,( ( RCSe * MUR ) * DS ) ) / ( Max( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) - DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.092, "obj2": 0.6626729790157682}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( MDR + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.39655802121040695}, {"determining": "Min( FirstVNF_Mem ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,Const ) ) )", "choosing": "( Max( ( ( ( ( RCSe * MUR ) + RRSe ) / ( MUM * CS ) ) - MUR ),MLU ) / ( MUR * ( CS * CS ) ) )", "obj1": 0.57, "obj2": 0.2808149192411787}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - MUR ),( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) ) ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.886, "obj2": 0.06284247197258964}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - ( MDR - ( DDR * DDR ) ) ) / ( ( FirstVNF_CPU_Server * ( DDR - Const ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( DS - RCSe ) ) - ( CS + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.106, "obj2": 0.645719065379393}, {"determining": "Min( ( ( ( FirstVNF_Mem * MDR ) * Const ) + Max( MDR,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / ( Max( RRS,PN ) - ( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( ARS - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( ( FirstVNF_RAM_Server * Max( PN,CRS ) ) / FirstVNF_RAM ) ,( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - ( ( Max( Max( MUM,( Max( DS,CS ) - ( RRSe * DS ) ) ),RRSe ) + RRSe ) - Min( Max( RMSe,RCSe ) ,( RRSe / ( ( RCSe * MUR ) * DS ) ) ) ) ) )", "obj1": 0.682, "obj2": 0.20705777719491303}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,( AMS - ACS ) ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( CS * ( RRSe / ( ( MUM * MUR ) / MLU ) ) ) ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,( RMSe * RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.256, "obj2": 0.5021653607701185}, {"determining": "Min( FirstVNF_RAM ,( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * Min( Max( RMSe,RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUR ) * DS ) ) ) )", "obj1": 0.78, "obj2": 0.1431358430489361}, {"determining": "( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - CS ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.976, "obj2": 0.0218490602536292}, {"determining": "( ( MDR / PN ) * ( ( RRS - FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * MDR ) + Max( MDR,( MDR - ( ( ARS + FirstVNF_CPU ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUM + ( RRSe - Max( MUM,( Min( ( CS / RRSe ) ,Max( ( MUM - MUM ),MUC ) ) * DS ) ) ) ) / ( Max( ( ( CS * RCSe ) / ( MLU * DS ) ),( CS * ( CS + ( ( ( MLU + RCSe ) - MLU ) + RRSe ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.304, "obj2": 0.4627025462346947}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.492, "obj2": 0.3116892015441804}, {"determining": "( ( DDR / FirstVNF_RAM ) / Const )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.222, "obj2": 0.5411938607283616}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.446, "obj2": 0.3334579846248914}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.364, "obj2": 0.412235348720756}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.294, "obj2": 0.47792549369113074}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,DDR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),Max( ( Min( ( ( Max( RCSe,MUR ) / RCSe ) * MUR ) ,RRSe ) / ( CS * RMSe ) ),MUM ) ) / ( MUR * ( DS * CS ) ) )", "obj1": 0.422, "obj2": 0.3562110820908713}, {"determining": "( Min( Max( ARS,AMS ) ,FirstVNF_Mem_Server ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( Min( Max( RRS,Max( CRS,MRS ) ) ,( MDR * PN ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.222, "obj2": 0.5411938607283616}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( ( AMS / RRS ) - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( MRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( Max( RRSe,RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / Max( Min( CS ,RMSe ),MUC ) )", "obj1": 0.422, "obj2": 0.3562110820908713}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( Max( ( ( Max( Max( Min( RCSe ,DS ),( MUR + CS ) ),CS ) * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) / MUM )", "obj1": 0.294, "obj2": 0.47792549369113074}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( CS * RCSe ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( Max( RMSe,RMSe ),RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUM ) * DS ) ) ) ) ) )", "obj1": 0.59, "obj2": 0.25672701290416716}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + ( FirstVNF_CPU_Server * Const ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( ARS - ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( MUM + MUC ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * RCSe ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.612, "obj2": 0.24777022592717626}, {"determining": "( ( DDR / FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.144, "obj2": 0.604071735745253}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.318, "obj2": 0.4409440524148737}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUR ) * DS ) ) ) ) ) )", "obj1": 0.6, "obj2": 0.2548446254759458}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.622, "obj2": 0.22991861939110433}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.586, "obj2": 0.2712176435763609}], "19": [{"determining": "( ( Max( Max( BR,RRS ),( ( Const + ( FirstVNF_CPU_Server * Const ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( ARS - ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( MUM + MUC ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * RCSe ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.572, "obj2": 0.24068257823214428}, {"determining": "Min( FirstVNF_Mem ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,Const ) ) )", "choosing": "( Max( ( ( ( ( RCSe * MUR ) + RRSe ) / ( MUM * CS ) ) - MUR ),MLU ) / ( MUR * ( CS * CS ) ) )", "obj1": 0.57, "obj2": 0.2808149192411787}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) + Max( RCSe,MUR ) ) ) ) + MLU ) / Min( ( RMSe * MUC ) ,( Max( RMSe,( Max( ( RRSe + MUM ),( DS - MLU ) ) + MUM ) ) + MUM ) ) )", "obj1": 0.518, "obj2": 0.2816027240045847}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.446, "obj2": 0.3334579846248914}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.364, "obj2": 0.412235348720756}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUM - ( MUR - RRSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.722, "obj2": 0.15001913459375246}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUC * RCSe ) ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.062, "obj2": 0.7067702552625943}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.336, "obj2": 0.4339106058035484}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / ( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,MUC ) ) - ( RCSe + RRSe ) ) ) ) ) * ( ( RRSe * CS ) * RMSe ) ) )", "obj1": 0.906, "obj2": 0.054906099345166985}, {"determining": "Min( FirstVNF_RAM ,( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * Min( Max( RMSe,RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUR ) * DS ) ) ) )", "obj1": 0.78, "obj2": 0.14218323685165532}, {"determining": "Min( ( ( CRS - ( ARS / ( FirstVNF_Mem / MRS ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Min( Max( Const,MDR ) ,( ARS * MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( RMSe / Max( MLU,DS ) ),( ( ( ( ( CS / RMSe ) * MUC ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.49, "obj2": 0.3166638167702945}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.934, "obj2": 0.03804486303510145}, {"determining": "( Const / ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) / CRS ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,Min( MUC ,MLU ) ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RCSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.154, "obj2": 0.5948694445012781}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( ( ( DDR * FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem - CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( ( RRSe + ( ( ( MUR - CS ) + ( RMSe - CS ) ) + MUM ) ) / ( ( ( ( MUM + MUC ) / RMSe ) * ( RRSe - ( CS - RRSe ) ) ) / MUC ) ) ,RMSe ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) * ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( ( MDR * PN ) ,Max( RRS,PN ) ) ) ) / ( FirstVNF_Mem_Server - ( ( ARS - CRS ) - ACS ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) / ( CS + MLU ) ) ) * ( CS * Min( CS ,Max( RMSe,( MUM * RCSe ) ) ) ) ) )", "obj1": 0.074, "obj2": 0.6761213943305004}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( Max( ( BR * PN ),FirstVNF_RAM_Server ),MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( MDR * Const ) + ( ( MDR + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( MUC * RCSe ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( MUC * CS ) ,( MLU + MUM ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.668, "obj2": 0.2085105194415752}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.496, "obj2": 0.3052239167133968}, {"determining": "Min( FirstVNF_RAM ,( DDR + Min( ( ( ( Max( FirstVNF_Mem_Server,AMS ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Min( ( Min( FirstVNF_CPU_Server ,AMS ) - FirstVNF_RAM_Server ) ,DDR ) ,FirstVNF_RAM ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + Min( ( ( RRSe * MUR ) / ( CS / MLU ) ) ,MUR ) ) + Min( ( ( MUC * ( RMSe - ( RRSe - RMSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( MUR * RRSe ) / ( CS / MLU ) ) ) ) ,( Min( Min( DS ,( RMSe / CS ) ) ,MUC ) * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( MUR,RCSe ) ) ) ) )", "obj1": 0.83, "obj2": 0.08407538961825402}, {"determining": "Min( FirstVNF_RAM ,( ( RRS - RRS ) - ( Max( ( ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * Min( DS ,DS ) ) ) * DS ) * Min( Max( RMSe,RCSe ) ,( RRSe / ( ( ( MLU * MLU ) * MUR ) * DS ) ) ) )", "obj1": 0.788, "obj2": 0.1406464492616818}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.864, "obj2": 0.06869251349979263}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( Max( MUR,( ( RCSe * MUR ) * DS ) ) / ( Max( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) - DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.092, "obj2": 0.6626729790157682}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( RRSe / ( CS + MLU ) ) )", "obj1": 0.818, "obj2": 0.10813939271552671}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem_Server ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( MRS / RRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( RMSe * MLU ) + RRSe ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - MUM ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( CS + DS ) ),( ( Min( Min( ( RMSe / CS ) ,DS ) ,( RMSe - Min( MUM ,MUR ) ) ) * MUM ) * MUR ) ) ) )", "obj1": 0.804, "obj2": 0.11382751790947009}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( FirstVNF_Mem - RRS ) ) ) ,( ( ( ( ( ACS - BR ) - ( BR * RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( Max( MRS,DDR ) ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( MUC - RCSe ) * ( ( ( Max( RCSe,RMSe ) + ( MUR + RCSe ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) + Max( RCSe,MUR ) ) ) ) )", "obj1": 0.644, "obj2": 0.2165754911456619}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.622, "obj2": 0.22991861939110433}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.434, "obj2": 0.35044059178460113}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( ( ( AMS * MDR ) * ( FirstVNF_CPU_Server - Const ) ) - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( RCSe * CS ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( RMSe,RCSe ) ,Max( RCSe,MUR ) ) ) ) )", "obj1": 0.706, "obj2": 0.18335273334653615}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,MUC ) ) - ( RCSe + RRSe ) ) ) ) ) )", "obj1": 0.23, "obj2": 0.534427165204851}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.318, "obj2": 0.4409440524148737}, {"determining": "( ( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( ( DDR + MDR ) ,MRS ) ) ) + ( RRS - RRS ) ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * ( MUM * RCSe ) ) ) ) / Max( Max( RRSe,MUM ),DS ) ),( ( ( RRSe + Max( ( ( ( MUM + RCSe ) / ( MUM * CS ) ) - CS ),MUR ) ) * DS ) / ( CS + MLU ) ) )", "obj1": 0.976, "obj2": 0.0218490602536292}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,( AMS - ACS ) ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( CS * ( RRSe / ( ( MUM * MUR ) / MLU ) ) ) ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,( RMSe * RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.256, "obj2": 0.5021653607701185}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - Min( Const ,( FirstVNF_CPU - MDR ) ) ) - Max( PN,BR ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - ( MDR / FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( MLU / RRSe ) / ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( ( CS - MLU ) + ( MUR + RCSe ) ) - Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( RMSe - DS ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) )", "obj1": 0.406, "obj2": 0.3818878100405346}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( MDR + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.39655802121040695}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.288, "obj2": 0.4832484155263249}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Max( CS,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.308, "obj2": 0.45153885782424674}, {"determining": "( ( ( Min( ( PN * RRS ) ,( FirstVNF_CPU_Server / CRS ) ) / DDR ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,( MDR - ( ( ARS + MDR ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( ( CS * CS ) / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.274, "obj2": 0.4961796452922013}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / ( MUR * ( CS * DS ) ) )", "obj1": 0.68, "obj2": 0.18996488207694603}, {"determining": "( ( MDR / PN ) * ( ( RRS - FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * MDR ) + Max( MDR,( MDR - ( ( ARS + FirstVNF_CPU ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUM + ( RRSe - Max( MUM,( Min( ( CS / RRSe ) ,Max( ( MUM - MUM ),MUC ) ) * DS ) ) ) ) / ( Max( ( ( CS * RCSe ) / ( MLU * DS ) ),( CS * ( CS + ( ( ( MLU + RCSe ) - MLU ) + RRSe ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.304, "obj2": 0.4627025462346947}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.952, "obj2": 0.027811963972584453}, {"determining": "( Min( PN ,AMS ) / MRS )", "choosing": "( Min( ( ( Max( MUM,DS ) + RRSe ) - ( ( ( RRSe * MUR ) - ( ( RCSe - MUR ) * ( MLU * ( MUM / MUM ) ) ) ) + MUC ) ) ,DS ) - ( Min( CS ,( RMSe + Max( DS,RCSe ) ) ) + DS ) )", "obj1": 0.212, "obj2": 0.5572904599177353}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,Min( MDR ,PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( AMS / BR ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),Max( CS,( ( Max( CS,MUR ) + Min( RRSe ,( RCSe * RCSe ) ) ) + CS ) ) ) * ( CS * DS ) ) )", "obj1": 0.08, "obj2": 0.6658691031432672}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.106, "obj2": 0.6368850431761176}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) - ( ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe + ( RMSe * RMSe ) ) * DS ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.196, "obj2": 0.5626484381341901}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) ) ) ) ) ,( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - Max( FirstVNF_Mem_Server,AMS ) ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( ( CS * RCSe ),RMSe ) ) - ( RMSe - ( MUC - Min( Max( Max( RMSe,RMSe ),RCSe ) ,Min( CS ,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 0.988, "obj2": 0.009008948597077121}], "20": [{"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + ( FirstVNF_CPU_Server * Const ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( ARS - ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( MUM + MUC ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( DS - CS ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * RCSe ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) + Max( RCSe,MUR ) ) ) ) + MLU ) / Min( ( RMSe * MUC ) ,( Max( RMSe,( Max( ( RRSe + MUM ),( DS - MLU ) ) + MUM ) ) + MUM ) ) )", "obj1": 0.518, "obj2": 0.2816027240045847}, {"determining": "Min( FirstVNF_Mem ,( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * Min( ( Min( Max( RRS,PN ) ,( ( ACS - BR ) - Max( BR,RRS ) ) ) / FirstVNF_RAM ) ,Const ) ) )", "choosing": "( Max( ( ( ( ( RCSe * MUR ) + RRSe ) / ( MUM * CS ) ) - MUR ),MLU ) / ( MUR * ( CS * CS ) ) )", "obj1": 0.57, "obj2": 0.27728785930202804}, {"determining": "( Min( ( ARS - ( ( FirstVNF_RAM / ( DDR * FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server + MDR ) ) ) ,FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( RMSe - RMSe ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,( ( ( CS + CS ) * Max( RCSe,MUR ) ) / RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.572, "obj2": 0.24068257823214428}, {"determining": "( Const / ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) / CRS ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,Min( MUC ,MLU ) ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RCSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.154, "obj2": 0.5948694445012781}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem_Server ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( MRS / RRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( RMSe * MLU ) + RRSe ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - MUM ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( CS + DS ) ),( ( Min( Min( ( RMSe / CS ) ,DS ) ,( RMSe - Min( MUM ,MUR ) ) ) * MUM ) * MUR ) ) ) )", "obj1": 0.804, "obj2": 0.11382751790947009}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.756, "obj2": 0.13068316239798478}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( ( ( DDR * FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem - CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( ( RRSe + ( ( ( MUR - CS ) + ( RMSe - CS ) ) + MUM ) ) / ( ( ( ( MUM + MUC ) / RMSe ) * ( RRSe - ( CS - RRSe ) ) ) / MUC ) ) ,RMSe ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) * ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / ( MUR * ( CS * DS ) ) )", "obj1": 0.692, "obj2": 0.18184849531769745}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( MDR - ( Max( MDR,Min( RRS ,FirstVNF_RAM_Server ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( Max( Min( CS ,RRSe ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( Max( RMSe,RCSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( DS * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) / MUM )", "obj1": 0.904, "obj2": 0.04085334201935646}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * Max( RMSe,RCSe ) ),( ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) / ( CS + MLU ) ) )", "obj1": 0.886, "obj2": 0.06284247197258964}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.446, "obj2": 0.3334579846248914}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.496, "obj2": 0.3052239167133968}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.48, "obj2": 0.31648612312844254}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.864, "obj2": 0.06869251349979263}, {"determining": "( ( MDR / PN ) * ( ( RRS - FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * MDR ) + Max( MDR,( MDR - ( ( ARS + FirstVNF_CPU ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUM + ( RRSe - Max( MUM,( Min( ( CS / RRSe ) ,Max( ( MUM - MUM ),MUC ) ) * DS ) ) ) ) / ( Max( ( ( CS * RCSe ) / ( MLU * DS ) ),( CS * ( CS + ( ( ( MLU + RCSe ) - MLU ) + RRSe ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.304, "obj2": 0.4627025462346947}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.934, "obj2": 0.03804486303510145}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MDR / FirstVNF_RAM ),( ( BR / ( MRS - ( Max( RRS,FirstVNF_CPU ) - FirstVNF_Mem ) ) ) / Const ) ) ) / MRS )", "choosing": "( ( ( MUM / ( ( RMSe - CS ) / ( Max( Max( Min( CS ,RRSe ),DS ),MUR ) / Max( RRSe,RRSe ) ) ) ) + ( ( RCSe + MUR ) + Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,Min( RMSe ,DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( RCSe * DS ) ) ) )", "obj1": 0.128, "obj2": 0.6307389222560345}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( Max( ( BR * PN ),FirstVNF_RAM_Server ),MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( MDR * Const ) + ( ( MDR + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( MUC * RCSe ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( MUC * CS ) ,( MLU + MUM ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.668, "obj2": 0.2085105194415752}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * Min( CS ,Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.092, "obj2": 0.661180959259757}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - Min( Const ,( FirstVNF_CPU - MDR ) ) ) - Max( PN,BR ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - ( MDR / FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( MLU / RRSe ) / ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( ( CS - MLU ) + ( MUR + RCSe ) ) - Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( RMSe - DS ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) )", "obj1": 0.406, "obj2": 0.3818878100405346}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.344, "obj2": 0.4312285809834098}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) - ( ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe + ( RMSe * MLU ) ) * DS ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.196, "obj2": 0.5619851535824968}, {"determining": "Min( FirstVNF_RAM ,( DDR + Min( ( ( ( Max( FirstVNF_Mem_Server,AMS ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Min( ( Min( FirstVNF_CPU_Server ,AMS ) - FirstVNF_RAM_Server ) ,DDR ) ,FirstVNF_RAM ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + Min( ( ( RRSe * MUR ) / ( CS / MLU ) ) ,MUR ) ) + Min( ( ( MUC * ( RMSe - ( RRSe - RMSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( MUR * RRSe ) / ( CS / MLU ) ) ) ) ,( Min( Min( DS ,( RMSe / CS ) ) ,MUC ) * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( MUR,RCSe ) ) ) ) )", "obj1": 0.83, "obj2": 0.08407538961825402}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.288, "obj2": 0.4832484155263249}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.748, "obj2": 0.1365406487705502}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,Min( MDR ,PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( AMS / BR ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),Max( CS,( ( Max( CS,MUR ) + Min( RRSe ,( RCSe * RCSe ) ) ) + CS ) ) ) * ( CS * DS ) ) )", "obj1": 0.058, "obj2": 0.6980058290112076}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.842, "obj2": 0.07951746135635038}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.416, "obj2": 0.3615290900703216}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.622, "obj2": 0.22991861939110433}, {"determining": "( Min( PN ,AMS ) / MRS )", "choosing": "( Min( ( ( Max( MUM,DS ) + RRSe ) - ( ( ( RRSe * MUR ) - ( ( RCSe - MUR ) * ( MLU * ( MUM / MUM ) ) ) ) + MUC ) ) ,DS ) - ( Min( CS ,( RMSe + Max( DS,RCSe ) ) ) + DS ) )", "obj1": 0.212, "obj2": 0.5572904599177353}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,( AMS - ACS ) ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( CS * ( RRSe / ( ( MUM * MUR ) / MLU ) ) ) ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,( RMSe * RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.256, "obj2": 0.5021653607701185}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS - FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Max( ( CS + MUC ),MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.218, "obj2": 0.5415247639319762}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) / Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( Min( FirstVNF_CPU ,PN ) * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUC - ( MLU - RMSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.722, "obj2": 0.15001913459375246}, {"determining": "( Max( Max( MDR,Min( RRS ,MRS ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( Min( RCSe ,MLU ) + MUR ) * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.102, "obj2": 0.639199688028659}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( ( ACS / ( MRS * FirstVNF_CPU_Server ) ) - ( CRS * Const ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( MDR + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( ( MLU / RCSe ) * MUM ) ) - Min( ( ( ( RMSe - MUM ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.82, "obj2": 0.10529992736220048}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,MUC ) ) - ( RCSe + RRSe ) ) ) ) ) )", "obj1": 0.23, "obj2": 0.534427165204851}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Max( CS,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.308, "obj2": 0.45153885782424674}, {"determining": "( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.336, "obj2": 0.4339106058035484}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.106, "obj2": 0.6368850431761176}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( CS / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.672, "obj2": 0.19422271784289552}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( BR - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,Min( MDR ,PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( AMS / BR ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),Max( CS,( ( Max( CS,MUR ) + Min( RRSe ,( RMSe * RCSe ) ) ) + CS ) ) ) * ( CS * DS ) ) )", "obj1": 0.054, "obj2": 0.7021453945460931}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR - PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / ( ( ( DDR * Min( BR ,ACS ) ) / ( ( ARS / ( ARS * ( ARS + PN ) ) ) - Max( FirstVNF_CPU_Server,Min( ( BR + DDR ) ,AMS ) ) ) ) / Const ) )", "choosing": "( MUM / ( Max( ( ( ( Min( CS ,Max( RMSe,RCSe ) ) + Min( RCSe ,RCSe ) ) * DS ) * ( CS + MLU ) ),( ( RRSe * CS ) / ( MLU / DS ) ) ) * ( CS * Min( CS ,( RMSe / RCSe ) ) ) ) )", "obj1": 0.074, "obj2": 0.6761213943305004}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.436, "obj2": 0.3412662441541353}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,AMS ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.236, "obj2": 0.5226936877045327}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - Min( ARS ,( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( FirstVNF_Mem_Server - MRS ) * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( AMS - FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( ( ( ( MUC - RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ) + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( MUR,( RMSe + RMSe ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.962, "obj2": 0.01971787319654448}], "21": [{"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( MDR * PN ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * MUM ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.656, "obj2": 0.17221266626002396}, {"determining": "( Min( ( ARS - ( ( FirstVNF_RAM / ( DDR * FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server + MDR ) ) ) ,FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( RMSe - RMSe ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,( ( ( CS + CS ) * Max( RCSe,MUR ) ) / RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.572, "obj2": 0.24068257823214428}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.344, "obj2": 0.4312285809834098}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.496, "obj2": 0.3052239167133968}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.92, "obj2": 0.033506422786000266}, {"determining": "Min( FirstVNF_RAM ,Max( ( ( RRS - FirstVNF_RAM ) + AMS ),ARS ) )", "choosing": "( MUM / ( Max( ( ( MLU / DS ) / ( CS * CS ) ),( ( CS + ( MUC / ( RRSe / ( CS * DS ) ) ) ) * RCSe ) ) * ( ( RCSe * MUC ) * DS ) ) )", "obj1": 0.694, "obj2": 0.16198928438195395}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( RRS,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( RRS - FirstVNF_Mem ) + ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / MDR ) + PN ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.4010970364954007}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( ( ( DDR * FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem - CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( ( RRSe + ( ( ( MUR - CS ) + ( RMSe - CS ) ) + MUM ) ) / ( ( ( ( MUM + MUC ) / RMSe ) * ( RRSe - ( CS - RRSe ) ) ) / MUC ) ) ,RMSe ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) * ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( CS / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.652, "obj2": 0.20353144685424138}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( MDR - ( Max( MDR,Min( RRS ,FirstVNF_RAM_Server ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( Max( Min( CS ,RRSe ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( Max( RMSe,RCSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( DS * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) / MUM )", "obj1": 0.904, "obj2": 0.04085334201935646}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - Min( ARS ,( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( FirstVNF_Mem_Server - MRS ) * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( AMS - FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( ( ( ( MUC - RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ) + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( MUR,( RMSe + RMSe ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.962, "obj2": 0.01971787319654448}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( Const ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( Max( RMSe,RCSe ),RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,Max( DS,RCSe ) ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.538, "obj2": 0.27605099627049556}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - ( AMS / FirstVNF_Mem_Server ) ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( Min( RRSe ,( RMSe * MLU ) ) * DS ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.772, "obj2": 0.12200342540589239}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,( AMS - ACS ) ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( CS * ( RRSe / ( ( MUM * MUR ) / MLU ) ) ) ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,( RMSe * RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.256, "obj2": 0.5021653607701185}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( ( ACS / ( MRS * FirstVNF_CPU_Server ) ) - ( CRS * Const ) ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( MDR + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( ( MLU / RCSe ) * MUM ) ) - Min( ( ( ( RMSe - MUM ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.82, "obj2": 0.10529992736220048}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.622, "obj2": 0.22991861939110433}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( Max( MDR,Min( RRS ,MRS ) ) + ( FirstVNF_CPU_Server * Const ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * FirstVNF_Mem ) * ( ( ( MRS + FirstVNF_CPU ) - RRS ) + ACS ) ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( Min( DS ,( RRSe - CS ) ) * DS ) * RCSe ) ) * Max( RMSe,RCSe ) ),( ( CS + ( Min( RCSe ,( DS * DS ) ) - ( RCSe + RRSe ) ) ) / ( CS + MLU ) ) )", "obj1": 0.886, "obj2": 0.06082049121066095}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ) + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.96, "obj2": 0.021035214954368806}, {"determining": "Min( FirstVNF_RAM ,( DDR + Min( ( ( ( Max( FirstVNF_Mem_Server,AMS ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Min( ( Min( FirstVNF_CPU_Server ,AMS ) - FirstVNF_RAM_Server ) ,DDR ) ,FirstVNF_RAM ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + Min( ( ( RRSe * MUR ) / ( CS / MLU ) ) ,MUR ) ) + Min( ( ( MUC * ( RMSe - ( RRSe - RMSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( MUR * RRSe ) / ( CS / MLU ) ) ) ) ,( Min( Min( DS ,( RMSe / CS ) ) ,MUC ) * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( MUR,RCSe ) ) ) ) )", "obj1": 0.83, "obj2": 0.08407538961825402}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - FirstVNF_Mem ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe + ( RMSe * MLU ) ) * DS ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.744, "obj2": 0.13375623759820493}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) / Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( Min( FirstVNF_CPU ,PN ) * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * ( CS + MLU ) ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( RCSe * ( ( MUC * ( ( MUC - ( MLU - RMSe ) ) * MUM ) ) * Min( RCSe ,CS ) ) ) ) )", "obj1": 0.722, "obj2": 0.15001913459375246}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.864, "obj2": 0.06869251349979263}, {"determining": "( ( ( ARS - ( Min( MDR ,Const ) * ( MDR + FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) - ( ACS + FirstVNF_Mem_Server ) )", "choosing": "( MUM / ( Max( ( ( CS * Min( DS ,DS ) ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) - ( RMSe * CS ) ) )", "obj1": 0.33, "obj2": 0.4360862954856382}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - Min( ACS ,CRS ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) + ( Max( RMSe,RCSe ) + Max( RCSe,MUR ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,Max( DS,RCSe ) ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - Max( ( CS / MUM ),MUM ) ) ) )", "obj1": 0.518, "obj2": 0.2816027240045847}, {"determining": "( ( Min( PN ,MRS ) / FirstVNF_RAM ) / Const )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.164, "obj2": 0.5944012237237124}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) + Max( RCSe,MUR ) ) ) ) + MLU ) / Min( ( RMSe * MUC ) ,( Max( RMSe,( Max( ( RRSe + MUM ),( DS - MLU ) ) + MUM ) ) + MUM ) ) )", "obj1": 0.562, "obj2": 0.2641482846293632}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( RRS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( RMSe,Max( MLU,( MLU - MLU ) ) ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.456, "obj2": 0.32361784417254374}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / ( MUR * ( CS * DS ) ) )", "obj1": 0.432, "obj2": 0.3489720939007688}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - Min( Const ,( FirstVNF_CPU - MDR ) ) ) - Max( PN,BR ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - ( MDR / FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( MLU / RRSe ) / ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( ( CS - MLU ) + ( MUR + RCSe ) ) - Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( RMSe - DS ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) )", "obj1": 0.406, "obj2": 0.3818878100405346}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( Max( RMSe,RCSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) )", "obj1": 0.394, "obj2": 0.38702484861920483}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( RRSe * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.802, "obj2": 0.11476268412892604}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * MLU ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.274, "obj2": 0.4928498495243085}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Max( ( ( ( RRSe + RRSe ) / ( MUM * CS ) ) - MUR ),MUR ) / Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,MUC ) ) - ( RCSe + RRSe ) ) ) ) ) )", "obj1": 0.23, "obj2": 0.534427165204851}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( ( MDR / PN ) * ( ( RRS - FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * MDR ) + Max( MDR,( MDR - ( ( ARS + FirstVNF_CPU ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUM + ( RRSe - Max( MUM,( Min( ( CS / RRSe ) ,Max( ( MUM - MUM ),MUC ) ) * DS ) ) ) ) / ( Max( ( ( CS * RCSe ) / ( MLU * DS ) ),( CS * ( CS + ( ( ( MLU + RCSe ) - MLU ) + RRSe ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.304, "obj2": 0.4627025462346947}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( Max( CS,RCSe ) + ( RCSe + MUR ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * Min( CS ,Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.074, "obj2": 0.6662713275465512}, {"determining": "Min( ( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) - RRS ) ) ) * MDR ) ,( ( DDR * Const ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * MDR ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( CS / MLU ) ) + MUR ) ) + Min( ( Min( RCSe ,RRSe ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * ( RCSe * MUR ) ) ) ) )", "obj1": 0.638, "obj2": 0.2215226612956012}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Const ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.644, "obj2": 0.21706115808307863}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS * FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - ( ACS - DDR ) ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( Max( MUM,( DS - MUM ) ) / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + Min( Min( RCSe ,( DS * CS ) ) ,( RCSe + RRSe ) ) ) ) ) * ( RMSe * MUR ) ) )", "obj1": 0.206, "obj2": 0.5448615910703521}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( ( CRS - FirstVNF_Mem ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( ( RRSe - ( CS + MUC ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.41, "obj2": 0.3617820178958887}, {"determining": "( ( ( ARS - Max( ACS,Const ) ) + MRS ) - ( FirstVNF_RAM + Const ) )", "choosing": "( DS / ( Max( ( CS * ( ( MUM * MUC ) + ( Max( CS,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) ),( ( CS * CS ) / ( MLU / DS ) ) ) * ( CS * DS ) ) )", "obj1": 0.308, "obj2": 0.45153885782424674}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.48, "obj2": 0.31648612312844254}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * ( ( CS + CS ) * Max( RCSe,MUR ) ) ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.086, "obj2": 0.6604183978249268}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) + Max( RCSe,MUR ) ) ) ) + MLU ) / Min( ( RMSe * MUC ) ,( Max( RMSe,( Max( ( RRSe + MUM ),( DS - MLU ) ) + MUM ) ) + MUM ) ) )", "obj1": 0.57, "obj2": 0.2618302512280323}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.064, "obj2": 0.6839635063762108}], "22": [{"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - Min( ARS ,( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( FirstVNF_Mem_Server - MRS ) * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( AMS - FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( MDR * PN ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( Const + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( ( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) * ( CS * RMSe ) ) )", "obj1": 0.598, "obj2": 0.20911617488312628}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,RRS ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.3, "obj2": 0.4501742383045017}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * MUM ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.656, "obj2": 0.17221266626002396}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( CS / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.652, "obj2": 0.20353144685424138}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( ( ( DDR * FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem - CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( ( RRSe + ( ( ( MUR - CS ) + ( RMSe - CS ) ) + MUM ) ) / ( ( ( ( MUM + MUC ) / RMSe ) * ( RRSe - ( CS - RRSe ) ) ) / MUC ) ) ,RMSe ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) * ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "( Min( ( ARS - ( ( FirstVNF_RAM / ( DDR * FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server + MDR ) ) ) ,FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( RMSe - RMSe ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,( ( ( CS + CS ) * Max( RCSe,MUR ) ) / RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.572, "obj2": 0.24068257823214428}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.56, "obj2": 0.24878618230585411}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,Max( DS,RCSe ) ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.532, "obj2": 0.2759304427594554}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( ( RRSe - ( CS + MUC ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.494, "obj2": 0.30144612965914597}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),Min( ( ARS * Min( FirstVNF_CPU ,MDR ) ) ,Max( CRS,AMS ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( BR / Max( ARS,MDR ) ) * ( Min( RRS ,RRS ) - ( Min( FirstVNF_Mem ,DDR ) + ( BR - AMS ) ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( CS * MLU ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) / Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.286, "obj2": 0.49077548803750504}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.344, "obj2": 0.4312285809834098}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( ( CRS - FirstVNF_Mem ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( ( RRSe - ( CS + MUC ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.41, "obj2": 0.3617820178958887}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.864, "obj2": 0.06869251349979263}, {"determining": "( ( MDR / PN ) * ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM + ( RRSe - Max( MUM,( Min( ( CS / RRSe ) ,Max( ( MUM - MUM ),MUC ) ) * DS ) ) ) ) / ( Max( ( ( CS * Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) / ( MLU * DS ) ),( CS * ( CS + ( ( ( MLU + RCSe ) - MLU ) + RRSe ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.376, "obj2": 0.4116529678307161}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.432, "obj2": 0.3440797474848292}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.226, "obj2": 0.5311776709153014}, {"determining": "( ( ( ARS - ( Min( Const ,Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( ( RRSe + ( RMSe * MLU ) ) * DS ) )", "obj1": 0.798, "obj2": 0.1043320348729965}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( ( ( DDR * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( RCSe / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.818, "obj2": 0.08770787556789925}, {"determining": "Min( Min( Min( ACS ,Max( ARS,( ( Min( MDR ,FirstVNF_Mem_Server ) * ARS ) - ( ( ARS + Min( Const ,MRS ) ) * ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,Max( MDR,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( ACS * CRS ),DDR ) ) )", "choosing": "( ( ( ( RRSe / Max( ( ( MUM / MUC ) / Min( RMSe ,( MUC * MUC ) ) ),Max( Max( Max( MLU,RMSe ),RCSe ),RCSe ) ) ) + Max( Max( RRSe,MUM ),( ( CS + ( CS + DS ) ) * Max( MUR,RCSe ) ) ) ) + MUR ) / Max( DS,Max( RCSe,Min( Min( ( DS + ( ( MUM + DS ) / RMSe ) ) ,MUM ) ,Min( ( Min( MUR ,RMSe ) + RCSe ) ,Max( ( RCSe * DS ),( MUR + MUM ) ) ) ) ) ) )", "obj1": 0.136, "obj2": 0.6159199697921646}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS - FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.206, "obj2": 0.5448615910703521}, {"determining": "( ( Min( PN ,MRS ) / FirstVNF_RAM ) / MDR )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS + CS ) * Max( ( Max( CS,RCSe ) + ( RCSe + MUR ) ),Max( RRSe,RRSe ) ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.158, "obj2": 0.5998272948967247}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.064, "obj2": 0.6839635063762108}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,( AMS - ACS ) ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( CS * ( RRSe / ( ( MUM * MUR ) / MLU ) ) ) ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,( RMSe * RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.256, "obj2": 0.5021653607701185}, {"determining": "Min( ( ( DDR * Const ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( CS / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.832, "obj2": 0.07757802117419287}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * MLU ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.446, "obj2": 0.3334579846248914}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( Min( FirstVNF_CPU ,PN ) * PN ) ) ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( ( Min( RCSe ,MLU ) + MUR ),MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.128, "obj2": 0.6207231418914354}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - Min( Const ,( FirstVNF_CPU - MDR ) ) ) - Max( PN,BR ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - ( MDR / FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( MLU / RRSe ) / ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( ( CS - MLU ) + ( MUR + RCSe ) ) - Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( RMSe - DS ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) )", "obj1": 0.406, "obj2": 0.3818878100405346}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,MDR ) + DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( RRSe * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( ( ( CS * CS ) / ( MLU / DS ) ) + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.79, "obj2": 0.12089847997051077}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Max( CS,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.326, "obj2": 0.4470869948980207}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS * FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - ( ACS - DDR ) ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( Max( MUM,( DS - MUM ) ) / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + Min( Min( RCSe ,( DS * CS ) ) ,( RCSe + RRSe ) ) ) ) ) * ( RMSe * MUR ) ) )", "obj1": 0.206, "obj2": 0.5448615910703521}, {"determining": "Min( FirstVNF_RAM ,Max( ( ( RRS - FirstVNF_RAM ) + AMS ),ARS ) )", "choosing": "( MUM / ( Max( ( ( MLU / DS ) / ( CS * CS ) ),( ( CS + ( MUC / ( RRSe / ( CS * DS ) ) ) ) * RCSe ) ) * ( ( RCSe * MUC ) * DS ) ) )", "obj1": 0.694, "obj2": 0.16198928438195395}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( RRS,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( RRS - FirstVNF_Mem ) + ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / MDR ) + PN ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.4010970364954007}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Max( CS,MUR ) + Min( RRSe ,( CS * RCSe ) ) ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.094, "obj2": 0.6601338575721915}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( RRS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( RMSe,Max( MLU,( MLU - MLU ) ) ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.456, "obj2": 0.32361784417254374}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.92, "obj2": 0.033506422786000266}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( RMSe + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.48, "obj2": 0.31648612312844254}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - AMS ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( MUM / ( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) * ( CS * RMSe ) ) )", "obj1": 0.736, "obj2": 0.13952860000667536}, {"determining": "( Max( RRS,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( MLU * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.114, "obj2": 0.6367090095459974}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( Max( CS,RCSe ) + ( RCSe + MUR ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * Min( CS ,Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.074, "obj2": 0.6662713275465512}, {"determining": "( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( MLU + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.104, "obj2": 0.6392986388532047}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( Max( FirstVNF_RAM,DDR ) + FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) / ( ( ( ( Max( RMSe,( ( MLU + MLU ) - RRSe ) ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( RRSe,MUM ),( ( CS * CS ) * Max( RCSe,Max( RRSe,RRSe ) ) ) ) ) + MLU ) )", "obj1": 0.17, "obj2": 0.5884498546124985}, {"determining": "Min( ( ( ( FirstVNF_RAM * CRS ) - Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( MRS - RRS ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) * ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( RCSe ,MLU ) + MUR ) * DS ) / RCSe ) ) * Max( RMSe,RCSe ) ),( ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + ( MUM - CS ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.894, "obj2": 0.05734874738180683}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( RRSe * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,Max( DS,RCSe ) ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.518, "obj2": 0.2816027240045847}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.05, "obj2": 0.7086663740047533}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ) + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.962, "obj2": 0.01965280324011528}], "23": [{"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - Min( ARS ,( MRS / FirstVNF_Mem ) ) ) * ( ( ( ( FirstVNF_Mem_Server - MRS ) * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( AMS - FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Const ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.92, "obj2": 0.033506422786000266}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,BR ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( CS / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.652, "obj2": 0.20353144685424138}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * FirstVNF_RAM_Server ) ,( ( ( ( RRS - Max( MRS,DDR ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - CRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( ( MUR * MUM ) / DS ) ),( ( ( ( Max( RCSe,MUR ) * MLU ) + MUR ) * DS ) * RCSe ) ) * Max( RMSe,RCSe ) ),( ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) / ( CS + MLU ) ) )", "obj1": 0.894, "obj2": 0.05710240855973945}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,RRS ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.3, "obj2": 0.4501742383045017}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.864, "obj2": 0.06869251349979263}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),Min( ( ARS * Min( FirstVNF_CPU ,MDR ) ) ,Max( CRS,AMS ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( BR / Max( ARS,MDR ) ) * ( Min( RRS ,RRS ) - ( Min( FirstVNF_Mem ,DDR ) + ( BR - AMS ) ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( CS * MLU ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) / Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.286, "obj2": 0.49077548803750504}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * MUM ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.656, "obj2": 0.17221266626002396}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ) + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.962, "obj2": 0.01965280324011528}, {"determining": "( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_CPU_Server + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( CRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + Min( Min( RCSe ,( DS * CS ) ) ,( RCSe + RRSe ) ) ) ) ) )", "obj1": 0.184, "obj2": 0.5695204698612485}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( Const + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( ( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( MLU / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) * ( CS * RMSe ) ) )", "obj1": 0.59, "obj2": 0.21161449117478906}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( Max( CS,RCSe ) + ( RCSe + MUR ) ) ) * DS ) * ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) + MLU ) ) ) * ( CS * Min( CS ,Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.094, "obj2": 0.6581076914863958}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.064, "obj2": 0.6839635063762108}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( Const ,MDR ) * ( MDR + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( MUM / ( ( ( ( Max( ( RCSe / MUC ),MUR ) * ( Max( CS,MLU ) / Min( MUR ,( RRSe * RCSe ) ) ) ) / MUM ) / ( ( RCSe - RCSe ) + Max( RCSe,MLU ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.55, "obj2": 0.24467786598773056}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.514, "obj2": 0.28124216651955986}, {"determining": "( ( ( ARS - ( Min( Const ,Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( ( RRSe + ( RMSe * MLU ) ) * DS ) )", "obj1": 0.798, "obj2": 0.1041393612802583}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - AMS ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe + ( RMSe * MLU ) ) * DS ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.734, "obj2": 0.13683452836390445}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) * ( CS * RMSe ) ) )", "obj1": 0.546, "obj2": 0.26867484298318217}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( Const * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe + ( CS * MLU ) ) * DS ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.35, "obj2": 0.42002173930607756}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( Const + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( ( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) * ( CS * RMSe ) ) )", "obj1": 0.598, "obj2": 0.20911617488312628}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.574, "obj2": 0.24062792348439355}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( ( RRS - Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.782, "obj2": 0.1206986347025414}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,( AMS - ACS ) ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( CS * ( RRSe / ( ( MUM * MUR ) / MLU ) ) ) ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,( RMSe * RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.256, "obj2": 0.5021653607701185}, {"determining": "( ( MDR / PN ) * ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM + ( RRSe - Max( MUM,( Min( ( CS / RRSe ) ,Max( ( MUM - MUM ),MUC ) ) * DS ) ) ) ) / ( Max( ( ( CS * Max( Max( Max( CS,MUC ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) / ( MLU * DS ) ),( CS * ( CS + ( ( ( MLU + RCSe ) - MLU ) + RRSe ) ) ) ) * ( CS * DS ) ) )", "obj1": 0.376, "obj2": 0.4116529678307161}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( ( Max( MDR,MDR ) + DDR ) + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( RRSe * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.966, "obj2": 0.01186457150155427}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS * FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - ( ACS - DDR ) ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( Max( MUM,( DS - MUM ) ) / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + Min( Min( RCSe ,( DS * CS ) ) ,( RCSe + RRSe ) ) ) ) ) * ( RMSe * MUR ) ) )", "obj1": 0.206, "obj2": 0.5448615910703521}, {"determining": "Min( ( ( DDR * Const ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( ( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) * ( CS * RMSe ) ) )", "obj1": 0.686, "obj2": 0.16836052699885315}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,DS ) - ( Min( ( ( RRSe - ( CS + MUC ) ) + Max( DS,RCSe ) ) ,CS ) + DS ) )", "obj1": 0.996, "obj2": 0.0053077367583809}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( FirstVNF_CPU + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( ( ( RCSe * MUR ) * DS ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.5, "obj2": 0.2985203613264809}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( Const + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( CS / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.716, "obj2": 0.15222582118693184}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( RRS,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( RRS - FirstVNF_Mem ) + ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / MDR ) + PN ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.4010970364954007}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( RRSe * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,Max( DS,RCSe ) ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.392, "obj2": 0.3887790026511161}, {"determining": "Min( ( ( DDR * Const ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( CS / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.832, "obj2": 0.07757802117419287}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.226, "obj2": 0.5311776709153014}, {"determining": "Min( FirstVNF_RAM ,Max( ( ( RRS - FirstVNF_RAM ) + AMS ),ARS ) )", "choosing": "( MUM / ( Max( ( ( MLU / DS ) / ( CS * CS ) ),( ( CS + ( MUC / ( RRSe / ( CS * DS ) ) ) ) * RCSe ) ) * ( ( RCSe * MUC ) * DS ) ) )", "obj1": 0.694, "obj2": 0.16198928438195395}, {"determining": "Min( ( ( DDR * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( MLU / DS ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( RCSe / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.76, "obj2": 0.13098143545738014}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,RRS ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / ( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / ( MRS - ( RRS / FirstVNF_RAM ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) / ( MDR * PN ) ) ) ) ) )", "choosing": "( ( CS + Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( ( MUM + Min( CS ,RMSe ) ) + MUR ) * DS ) * ( CS - MLU ) ) ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.336, "obj2": 0.4358892540954244}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS - FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.206, "obj2": 0.5448615910703521}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( ( ( DDR * FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem - CRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( ( RRSe + ( ( ( MUR - CS ) + ( RMSe - CS ) ) + MUM ) ) / ( ( ( ( MUM + MUC ) / RMSe ) * ( RRSe - ( CS - RRSe ) ) ) / MUC ) ) ,RMSe ) ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) * ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.176, "obj2": 0.5727717635742707}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.05, "obj2": 0.7086663740047533}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - Min( Const ,( FirstVNF_CPU - MDR ) ) ) - Max( PN,BR ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - ( MDR / FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( MLU / RRSe ) / ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( ( CS - MLU ) + ( MUR + RCSe ) ) - Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( RMSe - DS ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) )", "obj1": 0.406, "obj2": 0.3818878100405346}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR + FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - ( MRS + RRS ) ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * ( ( MUR + CS ) / RMSe ) ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( Max( ( ( RMSe - MUC ) - RRSe ),( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.784, "obj2": 0.10864599813686149}, {"determining": "( Max( RRS,( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( MLU * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.114, "obj2": 0.6367090095459974}, {"determining": "Min( ( ( DDR * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( RCSe / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.818, "obj2": 0.08770787556789925}, {"determining": "( ( ( ARS - ( ( ( CRS + FirstVNF_RAM_Server ) / ACS ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( Min( FirstVNF_CPU ,PN ) * PN ) ) ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( ( Min( RCSe ,MLU ) + MUR ),MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.12, "obj2": 0.622763095879609}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ACS + AMS ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * RMSe ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.34, "obj2": 0.42817436950286225}], "24": [{"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( BR,RRS ),( ( ACS + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ACS - BR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUR,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( ( CRS - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Const ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.04, "obj2": 0.7195908024323306}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - Min( Const ,( FirstVNF_CPU - MDR ) ) ) - Max( PN,BR ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - ( MDR / FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( MLU / RRSe ) / ( ( ( CS * CS ) / ( MLU / DS ) ) * CS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS + MLU ) ) ) * ( ( ( CS - MLU ) + ( MUR + RCSe ) ) - Min( ( ( ( ( MUM * CS ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( ( RMSe - DS ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) ) )", "obj1": 0.406, "obj2": 0.3818878100405346}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( FirstVNF_CPU + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( ( ( RCSe * MUR ) * DS ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.5, "obj2": 0.2985203613264809}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.612, "obj2": 0.20639120342152598}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( FirstVNF_CPU + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( ( ( RCSe * MUR ) * DS ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.5, "obj2": 0.2985203613264809}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.65, "obj2": 0.17237689636115858}, {"determining": "( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_CPU_Server + Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) ) + ( CRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + Min( Min( RCSe ,( DS * CS ) ) ,( RCSe + RRSe ) ) ) ) ) )", "obj1": 0.164, "obj2": 0.6117606443000184}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.92, "obj2": 0.03346725950917753}, {"determining": "Min( ( ( ( Const - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),Min( ( ARS * Min( CRS ,MDR ) ) ,Max( CRS,( AMS - ACS ) ) ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * ACS ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) ,( ( ( Min( RRS ,RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( BR / Max( ARS,MDR ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MLU + CS ) * DS ) ) ) ) / Max( Max( MLU,RCSe ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + ( CS * ( RRSe / ( ( MUM * MUR ) / MLU ) ) ) ) / ( Min( ( Min( ( MUR * ( ( RCSe * MUR ) * Max( MUR,MUR ) ) ) ,RMSe ) + ( CS * RCSe ) ) ,( RMSe * RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.256, "obj2": 0.5021653607701185}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( Const * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.278, "obj2": 0.47651571840824153}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.064, "obj2": 0.6839635063762108}, {"determining": "( ( FirstVNF_RAM * ( ( CRS - ( ( ( DDR - FirstVNF_RAM_Server ) / Min( Max( RRS,RRS ) ,Min( MDR ,PN ) ) ) - CRS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) / Const )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.3, "obj2": 0.4501742383045017}, {"determining": "( Const / Min( FirstVNF_RAM ,( ( CRS - ( ( MRS - ( RRS / FirstVNF_RAM ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server * Const ) + Max( ( FirstVNF_RAM + MDR ),( Max( FirstVNF_Mem_Server,RRS ) / ( ( MRS * FirstVNF_RAM ) * DDR ) ) ) ) ) ) )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) * ( MLU / Max( MUM,( MUR * MLU ) ) ) ),( ( ( MUR + ( MUM + Min( CS ,RMSe ) ) ) * DS ) * ( CS - MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.05, "obj2": 0.7086663740047533}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( Const + FirstVNF_Mem_Server ) * ( RRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( ( ( ( Min( CS ,Max( RMSe,( MLU / DS ) ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) * ( CS * RMSe ) ) )", "obj1": 0.072, "obj2": 0.6690412664585622}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( ( MDR * FirstVNF_CPU_Server ) + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * CS ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.168, "obj2": 0.5832813687273772}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * MUM ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.656, "obj2": 0.17221266626002396}, {"determining": "( ( ( ARS - ( ( ( CRS + FirstVNF_RAM_Server ) / ACS ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( Min( FirstVNF_CPU ,PN ) * PN ) ) ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( ( Min( RCSe ,MLU ) + MUR ),MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6159478092193573}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.512, "obj2": 0.2776838968374935}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( Max( MDR,Min( RRS ,MRS ) ) + ( RRS - ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( RCSe ,Max( RMSe,RMSe ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.862, "obj2": 0.06163786862141574}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.686, "obj2": 0.15507055452417357}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MLU ) * DS ) ) ) ) / Max( ( Max( RMSe,RCSe ) * MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( DS * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + Min( Min( RCSe ,( DS * CS ) ) ,( RCSe + RRSe ) ) ) ) ) )", "obj1": 0.296, "obj2": 0.4747680078441428}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( Const + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.586, "obj2": 0.22486391987439983}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( Max( MDR,Min( RRS ,MRS ) ) - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.778, "obj2": 0.11121612703758745}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( RRSe * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MLU ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,Max( DS,RCSe ) ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.392, "obj2": 0.3887790026511161}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( FirstVNF_CPU + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( ( ( MLU * MUR ) * DS ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.324, "obj2": 0.440433142514276}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * Min( AMS ,( AMS + ARS ) ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( MDR,MRS ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) * ( CS * RMSe ) ) )", "obj1": 0.546, "obj2": 0.26867484298318217}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + ( Max( CS,RCSe ) + ( RCSe + MUR ) ) ) * DS ) * ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) + MLU ) ) ) * ( CS * Min( CS ,Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.094, "obj2": 0.6581076914863958}, {"determining": "( ( ( ARS - ( Min( Const ,Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) ) * ( MDR + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( MUM / ( ( RRSe + ( RMSe * MLU ) ) * DS ) )", "obj1": 0.798, "obj2": 0.1041393612802583}, {"determining": "Min( ( ( DDR * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - ( Min( Const ,MDR ) * ( MDR + FirstVNF_RAM_Server ) ) ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( MLU / DS ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( RCSe / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.76, "obj2": 0.13098143545738014}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Const ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( Min( ( ( ( MUC * RCSe ) + RRSe ) / ( ( DS + RMSe ) + Max( MUM,DS ) ) ) ,( ( RCSe * ( MLU / MUM ) ) + CS ) ) / ( MLU / DS ) ) + ( RMSe * MLU ) ) * DS ) * ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - RRSe ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( MUM,( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.962, "obj2": 0.01965280324011528}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.574, "obj2": 0.24062792348439355}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS - FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - CRS ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.206, "obj2": 0.5448615910703521}, {"determining": "( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_CPU_Server + Max( MDR,( CRS + FirstVNF_RAM_Server ) ) ) + ( CRS - FirstVNF_Mem ) ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.106, "obj2": 0.6368850431761176}, {"determining": "Min( ( RRS + Max( MDR,( Min( FirstVNF_CPU_Server ,Const ) / Min( Max( PN,FirstVNF_RAM_Server ) ,( MDR * ( ( CRS / Const ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( ( MLU * MLU ) + ( DS - CS ) ) - ( ( RRSe + ( Min( MUR ,( MLU * MUC ) ) + ( RRSe - ( Min( MUR ,( MUR + RCSe ) ) / RCSe ) ) ) ) * DS ) )", "obj1": 0.244, "obj2": 0.5189474037286675}, {"determining": "( Max( ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( CRS * FirstVNF_Mem ) ),( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) - ( ACS - DDR ) ) / ( ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) + Max( MDR,( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) ) / Const )", "choosing": "( Max( MUM,( DS - MUM ) ) / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + Min( Min( RCSe ,( DS * CS ) ) ,( RCSe + RRSe ) ) ) ) ) * ( RMSe * MUR ) ) )", "obj1": 0.198, "obj2": 0.5680326925177699}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Const ) + ( ( Max( Max( RRS,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( RRS - FirstVNF_Mem ) + ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / MDR ) + PN ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( ( ( Min( ( MUR + DS ) ,Max( MUR,RCSe ) ) + ( MUR / ( MLU / DS ) ) ) * DS ) * ( CS + MLU ) ) ) * ( CS * DS ) ) )", "obj1": 0.378, "obj2": 0.4010970364954007}, {"determining": "Min( ( ( DDR * Const ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( CS / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.832, "obj2": 0.07757802117419287}, {"determining": "Min( ( ( ( RRS - RRS ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * FirstVNF_RAM_Server ) ,( ( ( ( RRS - Max( MRS,DDR ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - CRS ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( CS * CS ) / ( ( MUR * MUM ) / DS ) ),( ( ( ( Max( RCSe,MUR ) * MLU ) + MUR ) * DS ) * RCSe ) ) * Max( RMSe,RCSe ) ),( ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) / ( CS + MLU ) ) )", "obj1": 0.894, "obj2": 0.05710240855973945}, {"determining": "Min( ( ( DDR * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) + ( ( Max( Max( BR,RRS ),( ARS * ( Const + FirstVNF_Mem_Server ) ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + ( ARS * DDR ) ) + ( RRS - FirstVNF_Mem ) ) ) ) ,( ( ( ( RRS - RRS ) - ( Max( FirstVNF_Mem,DDR ) + ( BR - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( RRS ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( RCSe / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.812, "obj2": 0.0920289697280756}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * MUM ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,Max( RMSe,RMSe ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.908, "obj2": 0.03850523839469504}, {"determining": "( ( ( ARS - ( Min( Const ,MDR ) * ( MDR + ( ( Const + FirstVNF_Mem_Server ) * ARS ) ) ) ) + FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) )", "choosing": "( ( ( RRSe + ( RMSe * RMSe ) ) * DS ) * ( ( ( Max( Max( RRSe,MUM ),( ( CS * Min( DS ,DS ) ) * Max( RCSe,MUR ) ) ) + ( ( ( RMSe / ( DS + RMSe ) ) / ( CS / MLU ) ) + MUR ) ) + Min( ( ( ( ( RMSe - MUC ) - Max( RMSe,RCSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.716, "obj2": 0.15222582118693184}, {"determining": "Min( ( ( DDR - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( MDR * FirstVNF_CPU_Server ) + Max( MDR,MRS ) ) + ( RRS - ( FirstVNF_Mem - ( Max( MDR,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + ( ( FirstVNF_Mem_Server + ACS ) / FirstVNF_Mem_Server ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.984, "obj2": 0.005556111456139233}, {"determining": "Min( ( ( Const - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( CS ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.224, "obj2": 0.5320283755873126}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) / ( Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( ( ( Min( CS ,Max( RMSe,RCSe ) ) + MUR ) * DS ) * ( CS * MLU ) ) ) * ( CS * ( ( CS * CS ) / ( MLU / DS ) ) ) ) )", "obj1": 0.508, "obj2": 0.28348999395573754}, {"determining": "Min( ( ( Max( Max( BR,RRS ),( ( Const + FirstVNF_Mem_Server ) * ARS ) ) - ( ARS / ( MRS / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Max( MDR,MRS ) ) + ( RRS - FirstVNF_Mem ) ) ) ,( ( ( ( ( ACS - BR ) - Max( BR,RRS ) ) - ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,Min( PN ,MRS ) ) ) + ( RRS - RRS ) ) ) * MDR ) )", "choosing": "( MUM / ( Max( ( ( CS * CS ) / ( MLU / DS ) ),( CS * ( CS + ( Min( RCSe ,( CS * DS ) ) - ( RCSe + RRSe ) ) ) ) ) * ( CS * RMSe ) ) )", "obj1": 0.226, "obj2": 0.5311776709153014}, {"determining": "( ( ( ARS - ( ( FirstVNF_RAM / ACS ) * ( FirstVNF_RAM_Server + MDR ) ) ) + FirstVNF_RAM ) - ( MDR + Const ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,Max( MUR,( ( MUC * MUR ) * DS ) ) ) ) / Max( Max( MLU,MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( ( ( CS + CS ) * Max( RCSe,MUR ) ),RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.548, "obj2": 0.25532272698150543}, {"determining": "Min( FirstVNF_RAM ,( DDR / Min( ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( Const / FirstVNF_CPU ) ) - AMS ) / Min( Max( RRS,PN ) ,( DDR * PN ) ) ) ,( AMS * ( FirstVNF_Mem - ( Max( MDR,Min( RRS ,FirstVNF_RAM ) ) + DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( ( RRSe + ( RMSe * MLU ) ) * DS ) ) ) / Max( Max( Max( RMSe,RCSe ),MUM ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + MUR ) / ( Min( ( Min( Max( MUR,( ( RCSe * MUR ) * DS ) ) ,RMSe ) + ( DS * RCSe ) ) ,Max( RMSe,RCSe ) ) - ( RRSe - ( CS + DS ) ) ) )", "obj1": 0.734, "obj2": 0.13683452836390445}]}