{"1": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( ( MLU / CS ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6267949254894636}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,MUC ),Min( MUC ,MUC ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( RRSe - CS ) + Max( CS,DS ) )", "obj1": 0.8547717842323651, "obj2": 0.13953331347576306}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) * Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( DS * CS ) + ( MUR + MUC ) )", "obj1": 0.3091286307053942, "obj2": 0.610320041068111}, {"determining": "Min( ( ACS / CRS ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( DS / MLU ) + ( RMSe * MLU ) )", "obj1": 0.34232365145228216, "obj2": 0.5823214493449212}, {"determining": "Min( ( AMS - ARS ) ,( RRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,RCSe ) + ( MLU - RCSe ) )", "obj1": 0.6556016597510373, "obj2": 0.34070745199387825}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) - ( ( DDR / DDR ) / Max( MDR,BR ) ) )", "choosing": "Max( ( ( MLU - CS ) - ( RRSe * DS ) ),( ( CS * MUM ) + ( MUR / MUR ) ) )", "obj1": 0.8319502074688797, "obj2": 0.1957022071479393}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( Min( ( MUR + DS ) ,Min( CS ,MUR ) ),( Min( MUR ,MUC ) / ( RCSe + RMSe ) ) )", "obj1": 0.9688796680497925, "obj2": 0.03829882003242249}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.17219917012448133, "obj2": 0.6896361688125888}, {"determining": "Min( Min( Max( MDR,BR ) ,( PN - Const ) ) ,( Min( Const ,MRS ) - Min( FirstVNF_RAM ,RRS ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( CRS * ACS ) ) )", "choosing": "( ( RCSe * ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( ( Min( DS ,RRSe ) / ( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM - RCSe ) ),( RRSe + RRSe ) )", "obj1": 0.5892116182572614, "obj2": 0.3809824902828173}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7676348547717843, "obj2": 0.19641485195394168}, {"determining": "Min( ( ( Max( MDR,FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - ( ( Const / ACS ) * ( ACS - DDR ) ) ) ,( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Max( CS,MUR ) / ( MUR / MUM ) ) ,Max( Max( MUR,RCSe ),( MLU - MUM ) ) ) / ( Min( Min( MUC ,MUC ) ,( RCSe - MUM ) ) / Min( ( CS + MUR ) ,( RMSe / MUR ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.7266264121084531}, {"determining": "( ( ( Min( ACS ,BR ) * ( ACS * FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ) ) + ( Max( Min( PN ,BR ),( PN - FirstVNF_RAM ) ) + ( ( ACS - BR ) / ( FirstVNF_RAM_Server - CRS ) ) ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.24896265560165975, "obj2": 0.6194231388584397}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5062240663900415, "obj2": 0.4512293404692473}, {"determining": "Max( Min( ( ( ACS / FirstVNF_RAM ) - ( ARS * FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( FirstVNF_RAM_Server - MRS ) ) ),( ( Max( DDR,Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) - ( ( Const / DDR ) + Min( MDR ,CRS ) ) ) )", "choosing": "( Max( MUM,RCSe ) * ( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ARS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( FirstVNF_CPU - BR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Min( ( Min( ( Max( Min( ( MUC - CS ) ,( MUC + CS ) ),( ( CS - DS ) - ( RCSe * MLU ) ) ) * ( ( ( MUR + RCSe ) + ( RMSe - MUC ) ) / ( ( MUC - RCSe ) * ( DS * MUM ) ) ) ) ,( ( Min( Min( MUC ,MUC ) ,( RMSe + MUM ) ) + ( ( RRSe + MUM ) / Min( MLU ,RCSe ) ) ) - ( Min( ( MUR * CS ) ,Max( CS,CS ) ) * ( Max( DS,MUR ) + ( MLU * RMSe ) ) ) ) ) + ( ( ( ( ( MUM - MUC ) - Max( RRSe,CS ) ) / Max( Min( RRSe ,RMSe ),( CS * CS ) ) ) * Min( Min( ( MUR / RRSe ) ,( MUM * MLU ) ) ,( ( MLU * RRSe ) + ( CS - MUM ) ) ) ) + ( ( ( Max( RCSe,RRSe ) * ( MUR + RCSe ) ) * ( Min( DS ,CS ) * Max( RRSe,DS ) ) ) + ( Min( Max( MUM,MUM ) ,( MUM + CS ) ) + Min( ( MUM * MUC ) ,( MUR * MLU ) ) ) ) ) ) ,( ( ( Min( Min( ( MUR + CS ) ,Max( MLU,MUM ) ) ,( ( MUM + RCSe ) * ( MUM / RCSe ) ) ) * ( ( ( MUR - RRSe ) * ( MLU + RMSe ) ) - ( Max( RMSe,MUC ) - Min( MUR ,MUC ) ) ) ) * ( ( Max( ( CS + RCSe ),( MUC / RCSe ) ) - ( Max( MUC,RRSe ) * ( MUC - MUC ) ) ) + ( Max( Max( RCSe,MUR ),( RMSe * MUM ) ) - ( ( MUR / CS ) - Max( MLU,MUC ) ) ) ) ) + Max( ( ( ( ( MUM * MUM ) + ( RRSe + RMSe ) ) + ( Max( MUM,RRSe ) / ( RMSe / RRSe ) ) ) / ( ( ( MUC * RRSe ) + ( RMSe + MUC ) ) - ( ( MUC - MLU ) + ( MUC / RCSe ) ) ) ),( ( ( ( CS - RMSe ) - ( RMSe / RRSe ) ) * ( ( MUM - MLU ) / ( RCSe / MUM ) ) ) + Min( ( ( MUM / RMSe ) + ( MUM * RRSe ) ) ,( ( MUM - MUC ) * ( RCSe / RRSe ) ) ) ) ) ) ) * ( Max( Min( Min( ( Max( ( CS / DS ),Min( DS ,RRSe ) ) / Min( ( RMSe - RRSe ) ,( RCSe * RRSe ) ) ) ,( ( Min( MUR ,MUC ) / ( CS * MUM ) ) * ( Max( RCSe,CS ) - ( MLU * MLU ) ) ) ) ,( ( ( Max( DS,MUM ) + ( DS / MUR ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) - ( ( Max( DS,MUR ) * Max( DS,DS ) ) - ( ( MUM * RMSe ) + ( DS / MLU ) ) ) ) ),( ( ( ( ( MLU / RCSe ) / ( MUC * RMSe ) ) - Max( ( RCSe * RCSe ),( RMSe * RMSe ) ) ) * ( ( Min( DS ,CS ) - Max( MUR,MUR ) ) * Min( ( MLU - MUC ) ,Max( CS,DS ) ) ) ) * ( Max( ( ( MUM * MUC ) * ( MLU / MUR ) ),Max( Max( RCSe,DS ),( RCSe * RCSe ) ) ) * ( ( ( MUR + MUC ) + ( MUR + MUR ) ) * Max( ( MUM / RRSe ),Min( RMSe ,MUR ) ) ) ) ) ) / ( Min( ( Max( ( ( DS / RMSe ) / ( RRSe + MUC ) ),( ( MUC - MLU ) - ( RCSe + RMSe ) ) ) - ( Max( Min( RMSe ,MUR ),( RMSe - RMSe ) ) * ( ( MUC + RCSe ) / Max( RCSe,MUC ) ) ) ) ,Max( ( ( ( DS / RCSe ) / ( RRSe + RMSe ) ) - Max( ( CS + MUM ),Max( CS,MUR ) ) ),Max( ( ( RCSe - MUC ) + ( CS * RRSe ) ),Max( Min( RRSe ,DS ),( CS + MLU ) ) ) ) ) - ( Min( ( ( Max( MUC,CS ) - ( RCSe * MUM ) ) * Min( ( MUC * DS ) ,( MLU * RCSe ) ) ) ,Min( ( Max( MUR,MUR ) + ( MUM - MUM ) ) ,( ( MUC + DS ) + ( CS - RCSe ) ) ) ) - Max( ( Min( ( MUM + RRSe ) ,Min( CS ,MUM ) ) + ( Max( DS,RRSe ) / Max( DS,MLU ) ) ),( Max( ( MUM / RCSe ),( RRSe + RRSe ) ) * ( ( CS - RCSe ) + Max( RMSe,MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( ( MLU / CS ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.15560165975103735, "obj2": 0.7401766925639678}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_CPU - MRS ) + ( MDR + ACS ) ) ) )", "choosing": "( ( Min( CS ,DS ) * ( MUC - RMSe ) ) / ( CS + ( MUM * MUR ) ) )", "obj1": 0.3360995850622407, "obj2": 0.5469616313213871}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MDR / FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem + CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) * ( RRS - AMS ) )", "choosing": "( Max( ( Min( Max( CS,MUC ) ,( MUC + RCSe ) ) * Min( MUM ,MUR ) ),( ( RCSe + DS ) * ( RMSe + CS ) ) ) - ( Min( Max( CS,MUC ) ,( MUC + RCSe ) ) * ( ( RCSe - MLU ) / ( RMSe * DS ) ) ) )", "obj1": 0.491701244813278, "obj2": 0.47371656677931884}, {"determining": "( Min( Max( ( MRS + MRS ),Min( CRS ,FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( RRS,MDR ) ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( RMSe - RRSe ) ) ),( DS / Min( MUM ,MUC ) ) ) ,( DS + RCSe ) )", "obj1": 0.9377593360995851, "obj2": 0.0447731492510042}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.8713692946058091, "obj2": 0.11893730920969013}, {"determining": "Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( DS * CS ) + ( MUR + MUC ) )", "obj1": 0.3153526970954357, "obj2": 0.5934248812833578}, {"determining": "Min( ( AMS - ARS ) ,( RRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,RCSe ) + ( MLU - RCSe ) )", "obj1": 0.6556016597510373, "obj2": 0.34070745199387825}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.7863070539419087, "obj2": 0.17922603056690642}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),Max( DDR,RRS ) )", "choosing": "( ( MUM / MUC ) / ( MUC - RMSe ) )", "obj1": 0.24066390041493776, "obj2": 0.604240291539916}, {"determining": "( ( MRS / Max( FirstVNF_RAM_Server,ACS ) ) / Min( ( AMS - ARS ) ,( RRS / CRS ) ) )", "choosing": "( ( Max( CS,MUC ) + ( MLU - RCSe ) ) * ( Max( MUM,RCSe ) + RMSe ) )", "obj1": 0.7510373443983402, "obj2": 0.23238613608438558}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5352697095435685, "obj2": 0.4158495491341119}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( RRSe - CS ) + Max( CS,DS ) )", "obj1": 0.8443983402489627, "obj2": 0.14642164708720654}, {"determining": "Min( ( AMS - ARS ) ,( RRS * CRS ) )", "choosing": "( Max( CS,MUR ) + ( MLU - RCSe ) )", "obj1": 0.6203319502074689, "obj2": 0.34853076515289866}, {"determining": "( ( Max( MDR,FirstVNF_Mem ) - ( MRS / Max( FirstVNF_CPU,MRS ) ) ) - ( FirstVNF_RAM - BR ) )", "choosing": "( Max( CS,RRSe ) + Max( CS,DS ) )", "obj1": 0.7033195020746889, "obj2": 0.30197129298298914}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5020746887966805, "obj2": 0.44094108601041204}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MDR / FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem + CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) * ( Max( ( RRS / CRS ),DDR ) / ( ( AMS / Const ) / ( FirstVNF_Mem + PN ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) * Min( MUM ,MUR ) ),( ( RCSe + DS ) * ( MLU / CS ) ) ) - ( Min( Max( CS,MUC ) ,( MUC + RMSe ) ) * ( ( RCSe - MLU ) / ( RMSe * DS ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.25485030380955975}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM - RCSe ) ),( RRSe + RRSe ) )", "obj1": 0.5892116182572614, "obj2": 0.3809824902828173}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM - RCSe ) ),( RRSe + RRSe ) )", "obj1": 0.5746887966804979, "obj2": 0.40176157845425914}, {"determining": "( ( MRS / Max( FirstVNF_RAM_Server,ACS ) ) / Min( ACS ,Min( BR ,AMS ) ) )", "choosing": "( ( RRSe * ( RCSe * RMSe ) ) * ( Max( MUM,RCSe ) - RMSe ) )", "obj1": 0.15975103734439833, "obj2": 0.6914434702683729}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( ( FirstVNF_CPU / ACS ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) * ( Min( Min( RRS ,FirstVNF_RAM_Server ) ,( RRS - MDR ) ) + Min( Min( AMS ,MDR ) ,( DDR / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,MUM ) - ( RRSe - Min( CS ,MLU ) ) ) - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.7136929460580913, "obj2": 0.29408773696600693}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7676348547717843, "obj2": 0.19641485195394168}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( RRSe - CS ) + Max( CS,DS ) )", "obj1": 0.8547717842323651, "obj2": 0.13953331347576306}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6267949254894636}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( ( FirstVNF_RAM_Server / Const ) / ( MDR - FirstVNF_Mem ) )", "choosing": "( Max( Min( ( MUR + DS ) ,Min( CS ,MUR ) ),( Min( MUR ,MUC ) / ( RCSe + RMSe ) ) ) / Min( CS ,CS ) )", "obj1": 0.966804979253112, "obj2": 0.031926637107157006}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.17219917012448133, "obj2": 0.6896361688125888}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) * Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) ) )", "choosing": "( ( DS + MLU ) + ( MUR + MUR ) )", "obj1": 0.991701244813278, "obj2": 0.007487339152636266}, {"determining": "( ( Min( ACS ,ACS ) + Max( ACS,( FirstVNF_CPU * MDR ) ) ) / ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / RMSe ) - RRSe ) / Min( CS ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.6556762363040384}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.21784232365145229, "obj2": 0.6400361077871294}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7676348547717843, "obj2": 0.19641485195394168}, {"determining": "Min( ( ( Max( MDR,FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - ( ( Const / ACS ) * ( ACS - DDR ) ) ) ,( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( DS,Min( RCSe ,DS ) ) ,( ( RCSe * MLU ) - MUM ) )", "obj1": 0.2012448132780083, "obj2": 0.666317714998475}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( ( FirstVNF_CPU + BR ) + ( FirstVNF_CPU_Server + AMS ) ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( Min( ( MUR + DS ) ,Min( CS ,MUR ) ),Max( ( MLU + RRSe ),( Min( MLU ,RMSe ) / RRSe ) ) )", "obj1": 0.975103734439834, "obj2": 0.02563554053230759}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.22199170124481327, "obj2": 0.6379327268542458}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_RAM ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( ( MLU + RRSe ),( ( MLU - RMSe ) / RRSe ) )", "obj1": 0.975103734439834, "obj2": 0.02563554053230759}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) / Min( CS ,CS ) )", "obj1": 0.9730290456431535, "obj2": 0.027270245462027325}, {"determining": "( ( ( CRS / Max( Max( CRS,FirstVNF_RAM_Server ),Max( DDR,MDR ) ) ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( MUC * RMSe ),( RRSe + RRSe ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( MRS / Max( FirstVNF_RAM_Server,ACS ) ) / Min( ACS ,Min( BR ,AMS ) ) )", "choosing": "( ( RRSe * ( RCSe * RMSe ) ) * ( Max( MUM,RCSe ) - RMSe ) )", "obj1": 0.15975103734439833, "obj2": 0.6914434702683729}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,MUC ),Min( MUC ,MUC ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Min( Max( MDR,BR ) ,( PN - Const ) ) ,( Min( Const ,MRS ) - Min( FirstVNF_RAM ,RRS ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( CRS * ACS ) ) )", "choosing": "( ( RCSe * ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( ( Min( DS ,RRSe ) / ( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ACS / FirstVNF_RAM ) - ( ARS * FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( FirstVNF_RAM_Server - MRS ) ) ),( ( Max( DDR,Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) - ( ( Const / DDR ) + Min( MDR ,CRS ) ) ) )", "choosing": "( Max( MUM,RCSe ) * ( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ARS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - Max( MDR,ACS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,Max( MUR,MLU ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( RRSe * ( MUC - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( CRS * ACS ) ) )", "choosing": "( ( RRSe * ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( MRS,MDR ) ),( ( FirstVNF_RAM_Server + RRS ) * Max( FirstVNF_CPU_Server,MRS ) ) ) / ( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( AMS / MDR ) * ( CRS / AMS ) ) ) ) ,( ( Max( ( FirstVNF_CPU / Const ),( MRS + Const ) ) / ( ( ARS + MDR ) / ( FirstVNF_CPU - MDR ) ) ) * Max( ( ( FirstVNF_Mem_Server * DDR ) * Min( Const ,PN ) ),( Min( AMS ,ACS ) + ( MRS * FirstVNF_RAM ) ) ) ) ) / ( Max( ( ( Min( DDR ,AMS ) * Max( RRS,DDR ) ) - ( Min( FirstVNF_RAM ,PN ) / ( RRS / Const ) ) ),( Min( ( RRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) * Min( ( Const / FirstVNF_RAM ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) * ( ( Min( ( CRS / CRS ) ,( MRS - CRS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + Max( CRS,MDR ) ) ) / ( ( ( FirstVNF_Mem_Server + ACS ) - ( ARS + ARS ) ) + ( ( BR + FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) + Min( ( ( Min( Min( Max( BR,BR ) ,( AMS * ARS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) - Min( FirstVNF_Mem ,DDR ) ) ) + ( ( ( FirstVNF_CPU * ACS ) * ( FirstVNF_RAM_Server - DDR ) ) * ( Min( FirstVNF_RAM ,AMS ) - ( MDR / FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_Mem * MDR ) / ( Const * ARS ) ) - ( Max( ARS,FirstVNF_Mem_Server ) * Min( AMS ,BR ) ) ) * ( ( ( Const * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM_Server / ARS ),( MDR - PN ) ) ) ) ) ,( ( ( ( ( ACS + PN ) - ( BR + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_CPU ,RRS ) * ( FirstVNF_Mem_Server * DDR ) ) ,Max( ( CRS - ARS ),( FirstVNF_CPU - DDR ) ) ) ) / Max( ( ( ( ACS + FirstVNF_CPU ) / Min( ARS ,RRS ) ) - ( Max( FirstVNF_Mem_Server,DDR ) + ( MDR - RRS ) ) ),( ( Max( FirstVNF_RAM_Server,ARS ) - Max( ACS,BR ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MDR + FirstVNF_Mem ) ) ) ) ) ) ) ,Min( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( PN / FirstVNF_Mem ) ) + ( Max( MRS,FirstVNF_CPU ) - ( RRS * FirstVNF_CPU_Server ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( ACS - ACS ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Max( ARS,CRS ) ) ) ),Min( ( ( Min( DDR ,ARS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + Min( ( ACS / FirstVNF_CPU_Server ) ,( PN * Const ) ) ) ,Min( ( ( FirstVNF_RAM + RRS ) + ( FirstVNF_Mem * CRS ) ) ,Min( ( BR + MRS ) ,( RRS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( Min( RRS ,ACS ) / ( FirstVNF_RAM_Server / DDR ) ) ,( ( MDR / FirstVNF_Mem_Server ) * ( PN / FirstVNF_CPU_Server ) ) ) / ( ( ( ARS / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - PN ) ) - ( Min( DDR ,DDR ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ) * ( ( Max( Min( BR ,Const ),( PN + FirstVNF_RAM_Server ) ) * ( ( PN + DDR ) * Max( BR,BR ) ) ) - Min( Max( ( CRS * AMS ),( AMS * FirstVNF_RAM_Server ) ) ,( Max( AMS,DDR ) * ( FirstVNF_CPU * DDR ) ) ) ) ) ) ,Min( ( Min( ( ( ( ARS * PN ) - ( ACS - ARS ) ) / ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM + MRS ) ) ) ,Max( ( ( Const - AMS ) / Max( ARS,FirstVNF_Mem ) ),Max( ( ARS + DDR ),( FirstVNF_CPU / Const ) ) ) ) + Min( Max( ( Max( FirstVNF_Mem,Const ) + ( FirstVNF_CPU + MRS ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,( CRS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,MDR ) / Max( RRS,CRS ) ) ) ) ) ,Min( Min( ( Max( Max( DDR,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,Const ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) + Max( AMS,FirstVNF_Mem ) ) ) ,( ( ( CRS + FirstVNF_CPU_Server ) / Max( MRS,ACS ) ) - Min( ( ARS - FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ,( ( ( Max( FirstVNF_RAM_Server,ACS ) - ( MDR - MRS ) ) * ( ( MRS - PN ) * ( MRS / MRS ) ) ) + ( Max( ( MRS - Const ),Max( ARS,RRS ) ) + ( ( BR + MDR ) * Max( FirstVNF_CPU,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( RCSe * MUR ),( MUR / MLU ) ) / ( Max( RCSe,MUC ) / ( DS + CS ) ) ) + Min( ( ( RRSe + RMSe ) - ( RCSe / MUM ) ) ,Min( Max( RCSe,RCSe ) ,( RRSe + MUC ) ) ) ) - ( Min( Max( Min( MUC ,CS ),Max( MUR,MUC ) ) ,( ( RRSe - MUR ) / ( DS - MUR ) ) ) * ( ( ( DS * MLU ) - ( RRSe / DS ) ) / ( ( RMSe + MUC ) * Max( MUM,RMSe ) ) ) ) ) / ( ( ( ( ( CS * MLU ) * Max( RCSe,RRSe ) ) / ( ( RRSe * MLU ) / ( MUC + RMSe ) ) ) * ( ( ( RMSe * MUM ) * Min( RMSe ,CS ) ) * ( ( CS / RCSe ) * ( MLU + DS ) ) ) ) * Min( Min( Min( ( MUM - RRSe ) ,( MUR * RRSe ) ) ,( ( MUC - RCSe ) + ( MUC * MUM ) ) ) ,Max( ( ( DS * RMSe ) + Max( CS,RCSe ) ),Max( ( MLU * MLU ),( RCSe * RRSe ) ) ) ) ) ) - ( Max( Max( ( ( ( MLU - MUC ) + Max( MUR,RMSe ) ) * ( ( DS / RMSe ) / ( MLU - MUC ) ) ),Max( Min( ( MUR * RCSe ) ,( CS * RMSe ) ),( ( DS + RMSe ) / ( RMSe * MUC ) ) ) ),( Min( Max( ( MUC * MUC ),Min( RRSe ,RMSe ) ) ,( Max( DS,DS ) + ( MUM / MUR ) ) ) + ( ( ( MUR * MUM ) * ( DS * RRSe ) ) * ( Max( DS,RCSe ) / ( RRSe + CS ) ) ) ) ) - ( ( Max( ( ( MUR / MLU ) / ( MUC + MUC ) ),Min( ( RRSe + MUC ) ,( CS - RRSe ) ) ) - ( ( Min( MLU ,MLU ) / Min( RCSe ,MUR ) ) - ( Min( MUM ,RRSe ) / ( RRSe * RRSe ) ) ) ) + Min( ( Max( ( RCSe + MLU ),( MUR * CS ) ) + ( Min( DS ,RCSe ) * ( MUM - RCSe ) ) ) ,( ( ( CS / MLU ) * ( MUR / MUR ) ) - ( ( MUR * RMSe ) / ( MUC / MUM ) ) ) ) ) ) ) - ( ( ( ( ( ( ( RMSe - DS ) / ( MUR * MUC ) ) + Min( ( MUR * RMSe ) ,( MLU * MLU ) ) ) - ( Max( ( DS - RMSe ),( DS + MUC ) ) * ( Max( MUC,RMSe ) - ( RCSe + MUC ) ) ) ) / ( ( ( Min( RCSe ,RMSe ) + Min( DS ,MUR ) ) + Min( Min( RMSe ,MUR ) ,( DS * MUR ) ) ) - ( Min( ( MLU * MUC ) ,( RMSe + DS ) ) - ( Max( MLU,RRSe ) + Max( DS,RRSe ) ) ) ) ) + Min( Max( Max( Max( ( MUC - MUR ),( DS + DS ) ),Max( ( RCSe / RMSe ),Max( RCSe,DS ) ) ),Max( Max( ( MUC + RCSe ),( RMSe - MLU ) ),( ( DS - MUM ) + ( RMSe - DS ) ) ) ) ,( ( Min( ( DS / DS ) ,( RCSe / MLU ) ) / ( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) + ( ( ( CS / RRSe ) - ( CS / RCSe ) ) / ( ( MUM * MUR ) / Min( MUM ,RRSe ) ) ) ) ) ) / Min( ( ( ( ( Min( CS ,RCSe ) + ( RCSe / RRSe ) ) / ( Min( DS ,MUC ) - ( MUC + MUR ) ) ) - ( Min( ( DS * RCSe ) ,( DS * RCSe ) ) - ( ( RRSe / MUR ) / Min( DS ,MLU ) ) ) ) - ( Min( ( Max( DS,RRSe ) - ( RCSe / DS ) ) ,Min( ( RMSe / DS ) ,( MUM / MLU ) ) ) - Max( ( Min( MUM ,MUM ) + ( MUC - CS ) ),( Max( RCSe,RCSe ) / ( RMSe + RRSe ) ) ) ) ) ,( ( ( ( ( MLU / MUR ) * Max( RCSe,RCSe ) ) + Min( Min( DS ,RMSe ) ,( MUR - MLU ) ) ) / Max( Min( Max( DS,RRSe ) ,Min( RMSe ,DS ) ),( Max( MUM,MUC ) + Max( MUR,RRSe ) ) ) ) - Max( ( ( ( DS + RRSe ) / ( MUC / MUR ) ) - ( ( RMSe - MUM ) - Min( RMSe ,RCSe ) ) ),Max( ( ( MUM - CS ) + Max( CS,RMSe ) ),Max( Max( CS,RRSe ),( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( ( MLU / CS ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Min( ( Min( ( Max( Min( ( MUC - CS ) ,( MUC + CS ) ),( ( CS - DS ) - ( RCSe * MLU ) ) ) * ( ( ( MUR + RCSe ) + ( RMSe - MUC ) ) / ( ( MUC - RCSe ) * ( DS * MUM ) ) ) ) ,( ( Min( Min( MUC ,MUC ) ,( RMSe + MUM ) ) + ( ( RRSe + MUM ) / Min( MLU ,RCSe ) ) ) - ( Min( ( MUR * CS ) ,Max( CS,CS ) ) * ( Max( DS,MUR ) + ( MLU * RMSe ) ) ) ) ) + ( ( ( ( ( MUM - MUC ) - Max( RRSe,CS ) ) / Max( Min( RRSe ,RMSe ),( CS * CS ) ) ) * Min( Min( ( MUR / RRSe ) ,( MUM * MLU ) ) ,( ( MLU * RRSe ) + ( CS - MUM ) ) ) ) + ( ( ( Max( RCSe,RRSe ) * ( MUR + RCSe ) ) * ( Min( DS ,CS ) * Max( RRSe,DS ) ) ) + ( Min( Max( MUM,MUM ) ,( MUM + CS ) ) + Min( ( MUM * MUC ) ,( MUR * MLU ) ) ) ) ) ) ,( ( ( Min( Min( ( MUR + CS ) ,Max( MLU,MUM ) ) ,( ( MUM + RCSe ) * ( MUM / RCSe ) ) ) * ( ( ( MUR - RRSe ) * ( MLU + RMSe ) ) - ( Max( RMSe,MUC ) - Min( MUR ,MUC ) ) ) ) * ( ( Max( ( CS + RCSe ),( MUC / RCSe ) ) - ( Max( MUC,RRSe ) * ( MUC - MUC ) ) ) + ( Max( Max( RCSe,MUR ),( RMSe * MUM ) ) - ( ( MUR / CS ) - Max( MLU,MUC ) ) ) ) ) + Max( ( ( ( ( MUM * MUM ) + ( RRSe + RMSe ) ) + ( Max( MUM,RRSe ) / ( RMSe / RRSe ) ) ) / ( ( ( MUC * RRSe ) + ( RMSe + MUC ) ) - ( ( MUC - MLU ) + ( MUC / RCSe ) ) ) ),( ( ( ( CS - RMSe ) - ( RMSe / RRSe ) ) * ( ( MUM - MLU ) / ( RCSe / MUM ) ) ) + Min( ( ( MUM / RMSe ) + ( MUM * RRSe ) ) ,( ( MUM - MUC ) * ( RCSe / RRSe ) ) ) ) ) ) ) * ( Max( Min( Min( ( Max( ( CS / DS ),Min( DS ,RRSe ) ) / Min( ( RMSe - RRSe ) ,( RCSe * RRSe ) ) ) ,( ( Min( MUR ,MUC ) / ( CS * MUM ) ) * ( Max( RCSe,CS ) - ( MLU * MLU ) ) ) ) ,( ( ( Max( DS,MUM ) + ( DS / MUR ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) - ( ( Max( DS,MUR ) * Max( DS,DS ) ) - ( ( MUM * RMSe ) + ( DS / MLU ) ) ) ) ),( ( ( ( ( MLU / RCSe ) / ( MUC * RMSe ) ) - Max( ( RCSe * RCSe ),( RMSe * RMSe ) ) ) * ( ( Min( DS ,CS ) - Max( MUR,MUR ) ) * Min( ( MLU - MUC ) ,Max( CS,DS ) ) ) ) * ( Max( ( ( MUM * MUC ) * ( MLU / MUR ) ),Max( Max( RCSe,DS ),( RCSe * RCSe ) ) ) * ( ( ( MUR + MUC ) + ( MUR + MUR ) ) * Max( ( MUM / RRSe ),Min( RMSe ,MUR ) ) ) ) ) ) / ( Min( ( Max( ( ( DS / RMSe ) / ( RRSe + MUC ) ),( ( MUC - MLU ) - ( RCSe + RMSe ) ) ) - ( Max( Min( RMSe ,MUR ),( RMSe - RMSe ) ) * ( ( MUC + RCSe ) / Max( RCSe,MUC ) ) ) ) ,Max( ( ( ( DS / RCSe ) / ( RRSe + RMSe ) ) - Max( ( CS + MUM ),Max( CS,MUR ) ) ),Max( ( ( RCSe - MUC ) + ( CS * RRSe ) ),Max( Min( RRSe ,DS ),( CS + MLU ) ) ) ) ) - ( Min( ( ( Max( MUC,CS ) - ( RCSe * MUM ) ) * Min( ( MUC * DS ) ,( MLU * RCSe ) ) ) ,Min( ( Max( MUR,MUR ) + ( MUM - MUM ) ) ,( ( MUC + DS ) + ( CS - RCSe ) ) ) ) - Max( ( Min( ( MUM + RRSe ) ,Min( CS ,MUM ) ) + ( Max( DS,RRSe ) / Max( DS,MLU ) ) ),( Max( ( MUM / RCSe ),( RRSe + RRSe ) ) * ( ( CS - RCSe ) + Max( RMSe,MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6964131238145829}, {"determining": "( Min( Max( ( MRS + MRS ),Min( CRS ,FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( RRS,MDR ) ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( RMSe - RRSe ) ) ),( DS / Min( MUM ,MUC ) ) ) ,( DS + RCSe ) )", "obj1": 0.9377593360995851, "obj2": 0.0447731492510042}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / MUC ) / ( MUC - RMSe ) )", "obj1": 0.6763485477178424, "obj2": 0.25414011271890186}, {"determining": "Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( DS * CS ) + ( MUR + MUC ) )", "obj1": 0.3153526970954357, "obj2": 0.5934248812833578}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RCSe ) ) )", "obj1": 0.44813278008298757, "obj2": 0.503987729880708}, {"determining": "( Max( BR,DDR ) - ( DDR + BR ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( DS,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.8796680497925311, "obj2": 0.10998793355321591}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),Max( DDR,RRS ) )", "choosing": "( ( MUM / MUC ) / ( MUC - RMSe ) )", "obj1": 0.24066390041493776, "obj2": 0.604240291539916}, {"determining": "Min( ( AMS - ARS ) ,CRS )", "choosing": "( Max( ( MUM + MLU ),RCSe ) + ( MLU - RCSe ) )", "obj1": 0.6659751037344398, "obj2": 0.3343392971913721}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) * Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) ) ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) + ( MUR + MUR ) ) * ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.38381742738589214, "obj2": 0.516665077559215}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.470954356846473, "obj2": 0.4576283128370213}, {"determining": "( ( MRS / Max( FirstVNF_RAM_Server,ACS ) ) / Min( ( AMS - ARS ) ,( RRS / CRS ) ) )", "choosing": "( ( Max( CS,MUC ) + ( MLU - RCSe ) ) * ( Max( MUM,RCSe ) + RMSe ) )", "obj1": 0.7510373443983402, "obj2": 0.23238613608438558}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.5746887966804979, "obj2": 0.3693961657964336}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.2095435684647303, "obj2": 0.6264854380955973}, {"determining": "Min( ( AMS - ARS ) ,( RRS * FirstVNF_Mem ) )", "choosing": "( Max( CS,MUR ) + ( ( ( DS + MLU ) + ( MUR + MUR ) ) - RCSe ) )", "obj1": 0.7323651452282157, "obj2": 0.243700496212237}, {"determining": "( Max( PN,( FirstVNF_RAM + BR ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,MUC ),Min( RRSe ,MUC ) )", "obj1": 0.7655601659751037, "obj2": 0.18291528830690817}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( Min( FirstVNF_CPU ,MRS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( Min( CS ,DS ) / ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.3360995850622407, "obj2": 0.5469616313213871}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5352697095435685, "obj2": 0.4158495491341119}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( DS ,RRSe ),( MUM / RRSe ) ),Min( Max( CS,MUC ) ,( MUC + RCSe ) ) )", "obj1": 0.5373443983402489, "obj2": 0.3887605829591553}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( ( Min( DS ,RRSe ) / ( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 0.49377593360995853, "obj2": 0.4323374569195245}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - ARS ) ,( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( DS ,RRSe ) / ( MUM / RRSe ) ),( MLU * ( RRSe - CS ) ) )", "obj1": 0.3775933609958506, "obj2": 0.5425652253036857}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) + Max( ( ( MRS * MRS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.1887966804979253, "obj2": 0.6474322849396656}, {"determining": "Min( ( AMS - ARS ) ,( RRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,RCSe ) + ( MLU - RCSe ) )", "obj1": 0.6556016597510373, "obj2": 0.34070745199387825}, {"determining": "Min( ( AMS - ARS ) ,( RRS * CRS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6120331950207469, "obj2": 0.34850436603794194}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM - Max( DS,RRSe ) ) ),( RRSe + RRSe ) )", "obj1": 0.6099585062240664, "obj2": 0.3612346986961733}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( RRSe - CS ) + Max( CS,DS ) )", "obj1": 0.8547717842323651, "obj2": 0.13953331347576306}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( MUM / MUC ) / ( MUC * RMSe ) )", "obj1": 0.8132780082987552, "obj2": 0.16314856027462454}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.4854771784232365, "obj2": 0.4459994977735076}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_CPU ,RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) ) )", "choosing": "Max( ( MLU / ( CS / RMSe ) ),( RMSe / MLU ) )", "obj1": 0.9626556016597511, "obj2": 0.03214601529753643}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.8713692946058091, "obj2": 0.11893730920969013}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * RCSe ) ) )", "obj1": 0.8298755186721992, "obj2": 0.1515692415513236}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.7863070539419087, "obj2": 0.17922603056690642}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * MRS ) * Min( Const ,MRS ) ),( ( AMS - ARS ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( MUR / ( MUM * RMSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6725217594247235}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.17219917012448133, "obj2": 0.6896361688125888}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.7863070539419087, "obj2": 0.17922603056690642}, {"determining": "( Max( DDR,MDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) )", "obj1": 0.8174273858921162, "obj2": 0.16035070373307667}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_CPU - MRS ) + ( MDR + ACS ) ) ) )", "choosing": "( ( Min( CS ,DS ) * ( MUC - RMSe ) ) / ( CS + ( MUM * MUR ) ) )", "obj1": 0.3360995850622407, "obj2": 0.5469616313213871}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( RRSe - CS ) + Max( CS,DS ) )", "obj1": 0.8443983402489627, "obj2": 0.14642164708720654}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "Max( Min( RCSe ,MUC ),Min( MUC ,MUC ) )", "obj1": 0.8734439834024896, "obj2": 0.11834434411372297}, {"determining": "( ( MRS / Max( FirstVNF_RAM_Server,ACS ) ) / Min( ACS ,Min( BR ,AMS ) ) )", "choosing": "( ( RRSe * ( RCSe * RMSe ) ) * ( Max( MUM,RCSe ) - RMSe ) )", "obj1": 0.15975103734439833, "obj2": 0.6914434702683729}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( RRSe - CS ) + Max( CS,DS ) )", "obj1": 0.8443983402489627, "obj2": 0.14642164708720654}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_RAM ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 0.9875518672199171, "obj2": 0.0114682463372484}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ACS ,ACS ) + Max( ACS,( FirstVNF_CPU * MDR ) ) ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( MDR - FirstVNF_Mem ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.975103734439834, "obj2": 0.022440439544489637}, {"determining": "Min( Min( ( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_CPU - MRS ) + ( MDR + ACS ) ) ) ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "( ( ( Min( CS ,DS ) * ( MUC - RMSe ) ) / ( CS + ( MUM * MUR ) ) ) / Min( CS ,CS ) )", "obj1": 0.970954356846473, "obj2": 0.028367936630929336}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) * Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) ) )", "choosing": "( ( DS + MLU ) + ( MUR + MUR ) )", "obj1": 0.991701244813278, "obj2": 0.007487339152636266}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) / Min( CS ,CS ) )", "obj1": 0.9730290456431535, "obj2": 0.027270245462027325}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.979253112033195, "obj2": 0.02144093200564975}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_RAM ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 0.9854771784232366, "obj2": 0.013524135152994613}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) * Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) ) )", "choosing": "( ( DS + MLU ) + ( MUR + MUR ) )", "obj1": 0.9813278008298755, "obj2": 0.018234477339454193}], "4": [{"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - ( Min( FirstVNF_CPU ,MRS ) / ( MDR + ACS ) ) ) )", "choosing": "( ( MLU - CS ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( ( MLU / CS ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( FirstVNF_RAM + BR ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) )", "obj1": 0.13900414937759337, "obj2": 0.7421498859124601}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.7074688796680498, "obj2": 0.2202340103464102}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( RMSe * MUC ) ) )", "obj1": 0.6576763485477178, "obj2": 0.3037501282758084}, {"determining": "( DDR + ( ARS / FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,MUR ),( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) )", "obj1": 0.3112033195020747, "obj2": 0.570379266909127}, {"determining": "( Max( PN,( PN + BR ) ) + ( ARS - AMS ) )", "choosing": "( ( RRSe * RMSe ) / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) )", "obj1": 0.7655601659751037, "obj2": 0.18124728522430933}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe / MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.8879668049792531, "obj2": 0.10360634305382632}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RCSe ) ) )", "obj1": 0.44813278008298757, "obj2": 0.503987729880708}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * MUC ) / ( MUC * MUR ) )", "obj1": 0.25103734439834025, "obj2": 0.5855020953128508}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( RMSe - RRSe ) ) ),( DS / Min( MUM ,MLU ) ) ) ,( DS - RCSe ) )", "obj1": 0.9356846473029046, "obj2": 0.04940375345105716}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.470954356846473, "obj2": 0.4576283128370213}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.5746887966804979, "obj2": 0.3693961657964336}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.6182572614107884, "obj2": 0.32475230862970383}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / MUC ) / ( MUC - RMSe ) )", "obj1": 0.6763485477178424, "obj2": 0.25414011271890186}, {"determining": "( Max( DDR,MDR ) - ( ( FirstVNF_RAM + BR ) - BR ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) )", "obj1": 0.8402489626556017, "obj2": 0.13165348985780512}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) * Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) ) ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) + ( MUR + MUR ) ) * ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.38381742738589214, "obj2": 0.516665077559215}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - BR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU - RMSe ) / Min( CS ,CS ) )", "obj1": 0.34024896265560167, "obj2": 0.525467490948077}, {"determining": "( Min( Max( ( MRS + MRS ),Min( CRS ,FirstVNF_CPU_Server ) ) ,( ARS - BR ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( Min( RCSe ,MUC ) / RRSe ) ) ),( DS / Min( MUM ,MLU ) ) ) ,( DS + RCSe ) )", "obj1": 0.4087136929460581, "obj2": 0.512609200463165}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.2095435684647303, "obj2": 0.6264854380955973}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( BR + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + MUC ) + RRSe ) + MLU ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.524896265560166, "obj2": 0.42341321123166936}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8672199170124482, "obj2": 0.11005424674542612}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM - Max( DS,RRSe ) ) ),( RRSe + RRSe ) )", "obj1": 0.6099585062240664, "obj2": 0.3612346986961733}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6964131238145829}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( DS ,RRSe ),( MUM / RRSe ) ),Min( Max( CS,MUC ) ,( MUC + RCSe ) ) )", "obj1": 0.5373443983402489, "obj2": 0.3887605829591553}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / MUC ) / ( MUC - RMSe ) )", "obj1": 0.6763485477178424, "obj2": 0.25414011271890186}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * RCSe ) ) )", "obj1": 0.8298755186721992, "obj2": 0.1515692415513236}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.533195020746888, "obj2": 0.40688713359941525}, {"determining": "Max( Max( ( ( ( Min( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ,( Max( DDR,FirstVNF_Mem_Server ) - ( BR - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Max( DDR,MRS ) ) / ( ( Const * FirstVNF_RAM ) / Max( DDR,FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem * ACS ) + ( ACS + MRS ) ) / ( ( MDR * RRS ) / ( BR + BR ) ) ) ,( ( ( MDR / AMS ) / ( MRS / BR ) ) / ( ( MRS * ARS ) + Min( RRS ,ARS ) ) ) ) ) / Min( Min( ( Max( Max( MRS,CRS ),( FirstVNF_RAM_Server / RRS ) ) / Min( ( CRS / PN ) ,Min( MRS ,MDR ) ) ) ,( ( Max( RRS,ACS ) + Min( Const ,RRS ) ) * ( ( Const - DDR ) * ( FirstVNF_CPU_Server * AMS ) ) ) ) ,( Min( ( Min( DDR ,PN ) * ( DDR + DDR ) ) ,( Min( MRS ,FirstVNF_RAM ) - Min( ACS ,BR ) ) ) / ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / ( ARS + MRS ) ) / ( ( MDR - MRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ),Min( Min( ( Min( Max( ( Const * RRS ),( FirstVNF_RAM + MRS ) ) ,( Min( DDR ,DDR ) + ( ACS / PN ) ) ) / ( Min( Max( AMS,FirstVNF_Mem_Server ) ,( BR - RRS ) ) + Min( Max( FirstVNF_CPU_Server,ACS ) ,Min( PN ,BR ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server + ARS ) + ( RRS * Const ) ) + ( ( ACS * PN ) / ( CRS * ACS ) ) ) ,Max( Min( Min( FirstVNF_Mem ,PN ) ,( AMS - Const ) ),Max( ( FirstVNF_CPU_Server - RRS ),( DDR - FirstVNF_RAM ) ) ) ) ) ,Min( ( ( ( Max( FirstVNF_RAM,AMS ) * Max( CRS,FirstVNF_Mem ) ) - ( Max( BR,MRS ) + ( RRS / FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Max( PN,CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( CRS + FirstVNF_RAM ) ) ) ) ,Max( ( Max( Min( Const ,FirstVNF_RAM ),( PN - ACS ) ) - ( ( FirstVNF_RAM_Server / ACS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( CRS,CRS ) ) - Max( ( FirstVNF_Mem + ACS ),( FirstVNF_CPU_Server / PN ) ) ) ) ) ) ),( ( ( ( ( Max( ( FirstVNF_Mem - ACS ),Max( FirstVNF_Mem_Server,MRS ) ) - Min( Min( PN ,RRS ) ,Max( ACS,AMS ) ) ) / ( ( ( RRS * PN ) - ( PN * CRS ) ) + ( ( FirstVNF_RAM + PN ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) / ( ( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem - MDR ) ) * Max( ( AMS + CRS ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Max( ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),( ( ACS * AMS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( Min( RRS ,FirstVNF_Mem ) - ( AMS * MRS ) ) / ( ( FirstVNF_Mem_Server - Const ) * ( ACS - FirstVNF_RAM_Server ) ) ) * Min( ( ( CRS * MRS ) * ( DDR - BR ) ) ,( Max( RRS,PN ) + ( DDR + RRS ) ) ) ) * ( ( ( Max( MDR,MRS ) * Max( FirstVNF_Mem,MDR ) ) + ( Max( DDR,ARS ) + Min( ARS ,FirstVNF_CPU ) ) ) - Min( ( Max( MDR,AMS ) / ( MRS / Const ) ) ,( ( RRS + PN ) * ( MRS / MDR ) ) ) ) ) ) / Max( ( Max( Max( Min( ( BR * RRS ) ,( MDR * MRS ) ),( ( MDR + AMS ) / Max( FirstVNF_Mem,ARS ) ) ),( ( ( RRS / RRS ) / ( ACS + Const ) ) / ( Min( RRS ,CRS ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) - ( ( ( ( RRS - AMS ) / ( FirstVNF_RAM_Server / ACS ) ) * Min( ( BR * Const ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) + ( ( Max( DDR,ARS ) * ( DDR * RRS ) ) * ( ( FirstVNF_CPU + MDR ) - Min( BR ,RRS ) ) ) ) ),( ( ( ( Max( DDR,DDR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( RRS + FirstVNF_CPU_Server ) / ( MRS * RRS ) ) ) * ( ( ( MRS * FirstVNF_CPU_Server ) + ( RRS + PN ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( BR * RRS ) ) ) ) - ( Min( ( ( FirstVNF_Mem_Server + Const ) * ( BR * ARS ) ) ,( ( FirstVNF_CPU_Server * Const ) - ( CRS * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU + DDR ) ,Min( DDR ,BR ) ) / ( Max( MDR,PN ) + ( FirstVNF_Mem + ARS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( Min( Min( ( MUM / RMSe ) ,Min( RCSe ,MUR ) ) ,( Min( RRSe ,MUR ) + Min( MLU ,MUC ) ) ) ,( ( ( MUM + MUM ) * ( MLU * MUC ) ) * ( Max( DS,RCSe ) / ( RCSe - RMSe ) ) ) ) / Max( Min( ( ( MLU / CS ) / Max( DS,RMSe ) ) ,( Min( MUM ,MUR ) + Max( RRSe,DS ) ) ),( Max( Max( DS,RRSe ),( RCSe - MUR ) ) + ( Min( DS ,MUC ) + ( RCSe + RRSe ) ) ) ) ) ,( Max( ( ( ( RMSe / RCSe ) + ( RMSe + RCSe ) ) - ( ( MUM * RCSe ) + ( MUM + MUM ) ) ),( ( Min( MUR ,DS ) * ( CS - RCSe ) ) - ( Max( MUM,MUC ) / ( MUM + RCSe ) ) ) ) / ( ( ( ( RCSe - RRSe ) * ( CS - MUR ) ) - ( ( MLU / DS ) - ( RRSe - MUM ) ) ) * ( ( Max( MLU,MUC ) * Min( MUM ,RMSe ) ) / ( ( DS * MUC ) - ( MUM / RCSe ) ) ) ) ) ),( Max( ( ( Max( ( DS + CS ),( MUM / MLU ) ) * ( ( MUM - RCSe ) / ( MUC / RMSe ) ) ) - Min( ( Min( MUM ,RCSe ) + Max( MUR,RCSe ) ) ,( ( RMSe / RCSe ) / ( RMSe * MUM ) ) ) ),( ( ( ( MUR - RCSe ) - ( MLU * RRSe ) ) / ( ( MLU / CS ) / ( RCSe + MUM ) ) ) - ( Min( ( MUR / RRSe ) ,( MUR - MUM ) ) * ( ( MUM + RCSe ) * Min( RMSe ,MUM ) ) ) ) ) / Min( ( Min( Min( ( RMSe - MUC ) ,Max( MUC,RCSe ) ) ,( ( DS + MUM ) * ( DS / MUM ) ) ) - ( ( ( RMSe + MUM ) * ( MUR / RCSe ) ) / Min( ( MUR - RCSe ) ,( DS - RRSe ) ) ) ) ,Max( ( ( ( MLU / CS ) + Min( CS ,MUC ) ) + Min( Max( MLU,MUC ) ,Min( DS ,MUM ) ) ),Max( ( Min( RRSe ,MUM ) * ( DS * RRSe ) ),( ( MUM * RRSe ) - ( MUR * MUR ) ) ) ) ) ) ) * Min( Max( ( ( ( Min( ( RCSe * CS ) ,( MLU / RCSe ) ) * Min( Max( MLU,MUC ) ,( MUM + RCSe ) ) ) + Min( ( Max( MUR,RCSe ) * ( MUM + RRSe ) ) ,( ( MUC + MLU ) + ( MLU - MUC ) ) ) ) * ( ( ( Min( MUR ,MUM ) * Min( MUR ,MUM ) ) - Min( ( CS * MLU ) ,Max( RMSe,CS ) ) ) / ( ( Max( CS,RCSe ) * ( RCSe / DS ) ) * ( Max( MUR,MUR ) + ( MUC / CS ) ) ) ) ),Min( ( ( Min( Min( MUM ,MUM ) ,( CS / CS ) ) + ( ( DS * MUM ) / ( CS + DS ) ) ) + ( ( ( CS / RRSe ) * ( RMSe * RRSe ) ) / Min( ( RMSe * MLU ) ,Max( DS,MUM ) ) ) ) ,Max( ( ( ( MLU - MUR ) - ( MUM * RCSe ) ) + ( ( RRSe - DS ) - Min( RCSe ,RCSe ) ) ),Max( ( Max( MUR,MUM ) + Max( CS,MUR ) ),( ( MUR * MUR ) / ( MUC * RCSe ) ) ) ) ) ) ,Min( ( ( Min( ( ( MUR / MUR ) + Max( RRSe,MUM ) ) ,( Min( RRSe ,MLU ) * ( DS * MUR ) ) ) - ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) ) * Max( Max( ( ( RRSe - MLU ) * ( MUM * DS ) ),( ( MLU - DS ) / ( CS / MUR ) ) ),( ( Max( MUR,MUC ) - ( MLU - MUR ) ) * ( Min( CS ,MUM ) + Max( MUC,MLU ) ) ) ) ) ,Min( ( ( ( ( CS / MUC ) / ( MUC / CS ) ) - ( ( MUC - RCSe ) - ( MUC * RCSe ) ) ) - ( Min( ( MUR * MUR ) ,( RMSe / RMSe ) ) - ( ( CS + MUC ) / ( RMSe + DS ) ) ) ) ,( ( Min( ( MLU + RRSe ) ,Max( MUR,RRSe ) ) * ( Min( RRSe ,CS ) - ( CS - RCSe ) ) ) * Max( Min( ( DS - RRSe ) ,( MLU + MLU ) ),Max( ( MUC / RCSe ),( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.48132780082987553, "obj2": 0.4415952068617412}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( Min( FirstVNF_CPU ,MRS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( Min( CS ,DS ) / ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.3360995850622407, "obj2": 0.5469616313213871}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_CPU ,RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) ) )", "choosing": "Max( ( MLU / ( CS / RMSe ) ),( RMSe / MLU ) )", "obj1": 0.9626556016597511, "obj2": 0.03214601529753643}, {"determining": "( Min( Max( ( MRS + MRS ),Min( CRS ,FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( RRS,MDR ) ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( RMSe - RRSe ) ) ),( DS / Min( MUM ,MUC ) ) ) ,( DS + RCSe ) )", "obj1": 0.9377593360995851, "obj2": 0.0447731492510042}, {"determining": "Min( ( AMS - ARS ) ,( RRS * FirstVNF_Mem ) )", "choosing": "( ( DS / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.1887966804979253, "obj2": 0.6474322849396656}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( ( Min( DS ,RRSe ) / ( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 0.49377593360995853, "obj2": 0.4323374569195245}, {"determining": "Max( Max( CRS,( FirstVNF_RAM - BR ) ),Max( DDR,MDR ) )", "choosing": "( ( MUM / MUC ) / ( CS * RMSe ) )", "obj1": 0.2157676348547718, "obj2": 0.6083329895657154}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.17219917012448133, "obj2": 0.6896361688125888}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.7863070539419087, "obj2": 0.17922603056690642}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * MRS ) * Min( Const ,MRS ) ),( ( AMS - ARS ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( MUR / ( MUM * RMSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6725217594247235}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_CPU - AMS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( Min( CS ,DS ) * ( MUC - RMSe ) ) / Min( CS ,( MUM * MLU ) ) )", "obj1": 0.3360995850622407, "obj2": 0.5469616313213871}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( MUM / MUC ) / ( MUC * RMSe ) )", "obj1": 0.8132780082987552, "obj2": 0.16314856027462454}, {"determining": "( Max( DDR,MDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) )", "obj1": 0.8174273858921162, "obj2": 0.16035070373307667}, {"determining": "Min( ( AMS - ARS ) ,( RRS * CRS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6120331950207469, "obj2": 0.34850436603794194}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.7863070539419087, "obj2": 0.17922603056690642}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( DS ,RRSe ),( MUM / RRSe ) ),Min( Max( CS,MUC ) ,( MUC + RCSe ) ) )", "obj1": 0.5373443983402489, "obj2": 0.3887605829591553}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) + Max( ( ( MRS * MRS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.1887966804979253, "obj2": 0.6474322849396656}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( ( Min( DS ,RRSe ) / ( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 0.49377593360995853, "obj2": 0.4323374569195245}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( MUM / MUC ) / ( MUC * RMSe ) )", "obj1": 0.8132780082987552, "obj2": 0.16314856027462454}, {"determining": "Min( ( AMS - ARS ) ,( RRS * CRS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6120331950207469, "obj2": 0.34850436603794194}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6964131238145829}], "5": [{"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - ( Min( FirstVNF_CPU ,MRS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( MUM - CS ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - ( Min( FirstVNF_CPU ,MRS ) / ( MDR + ACS ) ) ) )", "choosing": "( ( MLU - CS ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ( ARS / CRS ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( MLU / ( DS * DS ) ) * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7722361886146724}, {"determining": "( ( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( CS ,DS ) * ( MUC - RMSe ) ) / ( MUM * RMSe ) )", "obj1": 0.3112033195020747, "obj2": 0.5675665788126419}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7338238515557501}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( RMSe * MUC ) ) )", "obj1": 0.6576763485477178, "obj2": 0.3010048258117843}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * MUC ) / ( MUC * MUR ) )", "obj1": 0.25103734439834025, "obj2": 0.5855020953128508}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4730290456431535, "obj2": 0.4202561662499145}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( ACS + FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Max( Min( RCSe ,MUC ),( ( ( ( MUM / RCSe ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) )", "obj1": 0.921161825726141, "obj2": 0.04500874183728136}, {"determining": "( Min( ( ( MRS + MRS ) / Min( CRS ,FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - BR )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) - RRSe ) ) ),( DS / ( MUM + MLU ) ) ) ,( DS + RCSe ) )", "obj1": 0.7614107883817427, "obj2": 0.2200258454329318}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) )", "obj1": 0.3651452282157676, "obj2": 0.5000753033020704}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( MRS ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( RCSe / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.7074688796680498, "obj2": 0.2202340103464102}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( RRSe * RCSe ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.533195020746888, "obj2": 0.40688713359941525}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( Min( RCSe ,MUC ) - RRSe ) ) ),Max( Min( RCSe ,MUC ),( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) ) ) ,( DS + RCSe ) )", "obj1": 0.43983402489626555, "obj2": 0.48458970698585563}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) )", "choosing": "( ( MUM / DS ) / ( MUM * RMSe ) )", "obj1": 0.6680497925311203, "obj2": 0.2565883768264836}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( Min( PN ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / MUC ) / Max( DS,RMSe ) )", "obj1": 0.3900414937759336, "obj2": 0.49002704293314314}, {"determining": "( Max( PN,( PN + BR ) ) + ( ARS - AMS ) )", "choosing": "( ( RRSe * RMSe ) / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) )", "obj1": 0.7655601659751037, "obj2": 0.18124728522430933}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.6950207468879668, "obj2": 0.2496485716472683}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.6182572614107884, "obj2": 0.32475230862970383}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.8900414937759336, "obj2": 0.10008078273783878}, {"determining": "( ( PN - ( FirstVNF_RAM + MDR ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8319502074688797, "obj2": 0.1258202453791743}, {"determining": "( ( ( CRS / BR ) + ( ( Min( FirstVNF_CPU ,MRS ) / ( MDR + ACS ) ) - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "( Max( Max( MUR,RMSe ),CS ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.5601659751037344, "obj2": 0.3875394632730988}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.5746887966804979, "obj2": 0.3693961657964336}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) / ( MUM * RMSe ) )", "obj1": 0.46473029045643155, "obj2": 0.45954121914163326}, {"determining": "Max( Max( ( ( ( Min( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ,( Max( DDR,FirstVNF_Mem_Server ) - ( BR - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Max( DDR,MRS ) ) / ( ( Const * FirstVNF_RAM ) / Max( DDR,FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem * ACS ) + ( ACS + MRS ) ) / ( ( MDR * RRS ) / ( BR + BR ) ) ) ,( ( ( MDR / AMS ) / ( MRS / BR ) ) / ( ( MRS * ARS ) + Min( RRS ,ARS ) ) ) ) ) / Min( Min( ( Max( Max( MRS,CRS ),( FirstVNF_RAM_Server / RRS ) ) / Min( ( CRS / PN ) ,Min( MRS ,MDR ) ) ) ,( ( Max( RRS,ACS ) + Min( Const ,RRS ) ) * ( ( Const - DDR ) * ( FirstVNF_CPU_Server * AMS ) ) ) ) ,( Min( ( Min( DDR ,PN ) * ( DDR + DDR ) ) ,( Min( MRS ,FirstVNF_RAM ) - Min( ACS ,BR ) ) ) / ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / ( ARS + MRS ) ) / ( ( MDR - MRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ),Min( Min( ( Min( Max( ( Const * RRS ),( FirstVNF_RAM + MRS ) ) ,( Min( DDR ,DDR ) + ( ACS / PN ) ) ) / ( Min( Max( AMS,FirstVNF_Mem_Server ) ,( BR - RRS ) ) + Min( Max( FirstVNF_CPU_Server,ACS ) ,Min( PN ,BR ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server + PN ) + ( RRS * Const ) ) + ( ( ACS * PN ) / ( CRS * ACS ) ) ) ,Max( Min( Min( FirstVNF_Mem ,PN ) ,( AMS - Const ) ),Max( ( FirstVNF_CPU_Server - RRS ),( DDR - FirstVNF_RAM ) ) ) ) ) ,Min( ( ( ( Max( FirstVNF_RAM,AMS ) * Max( CRS,FirstVNF_Mem ) ) - ( Max( BR,MRS ) + ( RRS / FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Max( PN,CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( CRS + FirstVNF_RAM ) ) ) ) ,Max( ( Max( Min( Const ,FirstVNF_RAM ),( PN - ACS ) ) - ( ( FirstVNF_RAM_Server / ACS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( CRS,CRS ) ) - Max( ( FirstVNF_Mem + ACS ),( FirstVNF_CPU_Server / PN ) ) ) ) ) ) ),( ( ( ( ( Max( ( FirstVNF_Mem - ACS ),Max( FirstVNF_Mem_Server,MRS ) ) - Min( Min( PN ,RRS ) ,Max( ACS,AMS ) ) ) / ( ( ( RRS * PN ) - ( PN * CRS ) ) + ( ( FirstVNF_RAM + PN ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) / ( ( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem - MDR ) ) * Max( ( AMS + CRS ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Max( ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),( ( ACS * AMS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( Min( RRS ,FirstVNF_Mem ) - ( AMS * MRS ) ) / ( ( FirstVNF_Mem_Server - Const ) * ( ACS - FirstVNF_RAM_Server ) ) ) * Min( ( ( CRS * MRS ) * ( DDR - BR ) ) ,( Max( RRS,PN ) + ( DDR + RRS ) ) ) ) * ( ( ( Max( MDR,MRS ) * Max( FirstVNF_Mem,MDR ) ) + ( Max( DDR,ARS ) + Min( ARS ,FirstVNF_CPU ) ) ) - Min( ( Max( MDR,AMS ) / ( MRS / Const ) ) ,( ( RRS + PN ) * ( MRS / MDR ) ) ) ) ) ) / Max( ( Max( Max( Min( ( BR * RRS ) ,( MDR * MRS ) ),( ( MDR + AMS ) / Max( FirstVNF_Mem,ARS ) ) ),( ( ( RRS / RRS ) / ( ACS + Const ) ) / ( Min( RRS ,CRS ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) - ( ( ( ( RRS - AMS ) / ( FirstVNF_RAM_Server / ACS ) ) * Min( ( BR * Const ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) + ( ( Max( DDR,ARS ) * ( DDR * RRS ) ) * ( ( FirstVNF_CPU + MDR ) - Min( BR ,RRS ) ) ) ) ),( ( ( ( Max( DDR,DDR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( RRS + FirstVNF_CPU_Server ) / ( MRS * RRS ) ) ) * ( ( ( MRS * FirstVNF_CPU_Server ) + ( RRS + PN ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( BR * RRS ) ) ) ) - ( Min( ( ( FirstVNF_Mem_Server + Const ) * ( BR * ARS ) ) ,( ( FirstVNF_CPU_Server * Const ) - ( CRS * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU + DDR ) ,Min( DDR ,BR ) ) / ( Max( MDR,PN ) + ( FirstVNF_Mem + ARS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( Min( Min( ( MUM / RMSe ) ,Min( RCSe ,MUR ) ) ,( Min( RRSe ,MUR ) + Min( MLU ,MUC ) ) ) ,( ( ( MUM + MUM ) * ( MLU * MUC ) ) * ( Max( DS,RCSe ) / ( RCSe - RMSe ) ) ) ) / Max( Min( ( ( MLU / CS ) / Max( DS,RMSe ) ) ,( ( MUM / RCSe ) / ( MUM * RMSe ) ) ),( Max( Max( DS,RRSe ),( RCSe - MUR ) ) + ( Min( DS ,MUC ) + ( RCSe + RRSe ) ) ) ) ) ,( Max( ( ( ( RMSe / RCSe ) + ( RMSe + RCSe ) ) - ( ( MUM * RCSe ) + ( MUM + MUM ) ) ),( ( Min( MUR ,DS ) * ( CS - RCSe ) ) - ( Max( MUM,MUC ) / ( MUM + RCSe ) ) ) ) / ( ( ( ( RCSe - RRSe ) * ( CS - MUR ) ) - ( ( MLU / DS ) - ( RRSe - MUM ) ) ) * ( ( Max( MLU,MUC ) * Min( MUM ,RMSe ) ) / ( ( DS * MUC ) - ( MUM / RCSe ) ) ) ) ) ),( Max( ( ( Max( ( DS + CS ),( MUM / MLU ) ) * ( ( MUM - RCSe ) / ( MUC / RMSe ) ) ) - Min( ( Min( MUM ,RCSe ) + Max( MUR,RCSe ) ) ,( ( RMSe / RCSe ) / ( RMSe * MUM ) ) ) ),( ( ( ( MUR - RCSe ) - ( MLU * RRSe ) ) / ( ( MLU / CS ) / ( RCSe + MUM ) ) ) - ( Min( ( MUR / RRSe ) ,( MUR - MUM ) ) * ( ( MUM + RCSe ) * Min( RMSe ,MUM ) ) ) ) ) / Min( ( Min( Min( ( RMSe - MUC ) ,Max( MUC,RCSe ) ) ,( ( DS + MUM ) * ( DS / MUM ) ) ) - ( ( ( RMSe + MUM ) * ( MUR / RCSe ) ) / Min( ( MUR - RCSe ) ,( DS - RRSe ) ) ) ) ,Max( ( ( ( MLU / CS ) + Min( CS ,MUC ) ) + Min( Max( MLU,MUC ) ,Min( DS ,MUM ) ) ),Max( ( Min( RRSe ,MUM ) * ( DS * RRSe ) ),( ( MUM * RRSe ) - ( MUR * MUR ) ) ) ) ) ) ) * Min( Max( ( ( ( Min( ( RCSe * CS ) ,( MLU / RCSe ) ) * Min( Max( MLU,MUC ) ,( MUM + RCSe ) ) ) + Min( ( Max( MUR,RCSe ) * ( MUM + RRSe ) ) ,( ( MUC + MLU ) + ( MLU - MUC ) ) ) ) * ( ( ( Min( MUR ,MUM ) * Min( MUR ,MUM ) ) - Min( ( CS * MLU ) ,Max( RMSe,CS ) ) ) / ( ( Max( CS,RCSe ) * ( RCSe / DS ) ) * ( Max( MUR,MUR ) + ( MUC / CS ) ) ) ) ),Min( ( ( Min( Min( MUM ,MUM ) ,( CS / CS ) ) + ( ( DS * MUM ) / ( CS + DS ) ) ) + ( ( ( CS / RRSe ) * ( RMSe * RRSe ) ) / Min( ( RMSe * MLU ) ,Max( DS,MUM ) ) ) ) ,Max( ( ( ( MLU - MUR ) - ( MUM * RCSe ) ) + ( ( RRSe - DS ) - Min( RCSe ,RCSe ) ) ),Max( ( Max( MUR,MUM ) + Max( CS,MUR ) ),( ( MUR * MUR ) / ( MUC * RCSe ) ) ) ) ) ) ,Min( ( ( Min( ( ( MUR / MUR ) + Max( RRSe,MUM ) ) ,( Min( RRSe ,MLU ) * ( DS * MUR ) ) ) - ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) ) * Max( Max( ( ( RRSe - MLU ) * ( MUM * DS ) ),( ( MLU - DS ) / ( CS / MUR ) ) ),( ( Max( MUR,MUC ) - ( MLU - MUR ) ) * ( Min( CS ,MUM ) + Max( MUC,MLU ) ) ) ) ) ,Min( ( ( ( ( CS / MUC ) / ( MUC / CS ) ) - ( ( MUC - RCSe ) - ( MUC * RCSe ) ) ) - ( Min( ( MUR * MUR ) ,( RMSe / RMSe ) ) - ( ( CS + MUC ) / ( RMSe + DS ) ) ) ) ,( ( Min( ( MLU + RRSe ) ,Max( MUR,RRSe ) ) * ( Min( RRSe ,CS ) - ( CS - RCSe ) ) ) * Max( Min( ( DS - RRSe ) ,( MLU + MLU ) ),Max( ( MUC / RCSe ),( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.42323651452282157, "obj2": 0.4881179285626796}, {"determining": "Min( ( AMS - ARS ) ,( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + MLU ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.8236514522821576, "obj2": 0.1506617428449044}, {"determining": "( Max( DDR,MDR ) - ( ( FirstVNF_RAM + BR ) - BR ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.8568464730290456, "obj2": 0.12495719753014713}, {"determining": "( ( ( ( CRS - MDR ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * MRS ) * Min( Const ,MRS ) ),( ( AMS - ARS ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( MUR / MUM )", "obj1": 0.975103734439834, "obj2": 0.02394334146644787}, {"determining": "( Max( DDR,MRS ) - ( Const * Const ) )", "choosing": "( ( ( ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RMSe ) )", "obj1": 0.9896265560165975, "obj2": 0.009770978442387656}, {"determining": "( Min( Max( ( MRS + MRS ),Min( CRS ,FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( RRS,MDR ) ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( RMSe - RRSe ) ) ),( DS / Min( MUM ,MUC ) ) ) ,( DS + RCSe ) )", "obj1": 0.9377593360995851, "obj2": 0.0447731492510042}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( Min( FirstVNF_CPU ,MRS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( Min( CS ,DS ) / ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.3360995850622407, "obj2": 0.5469616313213871}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.34024896265560167, "obj2": 0.525467490948077}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / DS ) / Max( MUM,RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6964131238145829}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.470954356846473, "obj2": 0.4576283128370213}, {"determining": "Min( ( AMS - ARS ) ,( RRS * CRS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6120331950207469, "obj2": 0.34850436603794194}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( DS ,RRSe ),( MUM / RRSe ) ),Min( Max( CS,MUC ) ,( MUC + RCSe ) ) )", "obj1": 0.5373443983402489, "obj2": 0.3887605829591553}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.5871369294605809, "obj2": 0.3601339279388079}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8672199170124482, "obj2": 0.11005424674542612}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU - RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5954356846473029, "obj2": 0.3505595668560717}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_CPU ,RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) ) )", "choosing": "Max( ( MLU / ( CS / RMSe ) ),( RMSe / MLU ) )", "obj1": 0.9585062240663901, "obj2": 0.03340637346134452}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.8900414937759336, "obj2": 0.10008078273783878}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6964131238145829}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.6182572614107884, "obj2": 0.32475230862970383}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.16390041493775934, "obj2": 0.6884629394327892}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - BR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU - RMSe ) / Min( CS ,CS ) )", "obj1": 0.34024896265560167, "obj2": 0.525467490948077}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUR / ( MUM * RMSe ) ) / RMSe ) / CS )", "obj1": 0.17012448132780084, "obj2": 0.6772403187790929}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( PN / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.1950207468879668, "obj2": 0.6330326921781878}, {"determining": "( ( ( ( BR / BR ) - ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.1887966804979253, "obj2": 0.6474322849396656}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8734439834024896, "obj2": 0.10391021157513208}], "6": [{"determining": "( Max( ( ( ( Min( Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( MDR - MDR ) ) ,( ( Const - FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) + Min( ( ( Const / FirstVNF_CPU ) * ( RRS / FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,( BR + FirstVNF_CPU ) ) ) ) - Max( ( ( ( BR - FirstVNF_Mem_Server ) + ( MDR + DDR ) ) / ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_CPU - BR ) ) ),( ( Min( DDR ,RRS ) * Min( ACS ,BR ) ) + Min( ( MDR * DDR ) ,( FirstVNF_RAM / ARS ) ) ) ) ) - ( ( ( ( ( MRS - BR ) * Max( RRS,FirstVNF_Mem ) ) - ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem + DDR ) ) ) - Min( ( ( AMS / AMS ) - ( RRS + RRS ) ) ,( ( ACS + BR ) - ( BR * PN ) ) ) ) * ( ( Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_RAM_Server,ARS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * PN ) ) ) + Max( ( ( PN * RRS ) / ( ARS / FirstVNF_RAM_Server ) ),( ( ACS - MDR ) / ( CRS / FirstVNF_RAM ) ) ) ) ) ),Max( ( ( ( ( ( FirstVNF_CPU + ARS ) / Min( Const ,FirstVNF_CPU_Server ) ) + ( ( DDR + FirstVNF_Mem ) + Min( FirstVNF_Mem ,DDR ) ) ) / Max( ( Min( CRS ,FirstVNF_Mem_Server ) * ( DDR - FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) ) ) - ( Min( ( ( Const - FirstVNF_CPU ) / ( AMS * FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * MDR ) + ( BR / BR ) ) ) * ( ( Min( ARS ,MDR ) / ( Const / AMS ) ) + ( Max( CRS,MDR ) * ( PN / BR ) ) ) ) ),( ( ( ( ( BR + AMS ) / Max( MRS,CRS ) ) + Max( ( BR + MRS ),Max( ACS,ARS ) ) ) + ( ( Max( MDR,FirstVNF_CPU_Server ) - ( PN / MRS ) ) / Max( ( Const - MRS ),( DDR - PN ) ) ) ) - ( ( ( Max( AMS,ACS ) - ( RRS / FirstVNF_Mem_Server ) ) + ( ( CRS + MDR ) - ( AMS - CRS ) ) ) - Max( ( Max( PN,FirstVNF_RAM ) - Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS * MRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Min( Min( Min( ( ( ( ( FirstVNF_CPU_Server - MRS ) * ( FirstVNF_RAM_Server * PN ) ) + ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( CRS * ACS ) ) ) - Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( MRS - AMS ) ) ,Max( ( ACS * DDR ),( AMS + FirstVNF_RAM_Server ) ) ) ) ,( Max( Max( ( MRS - ARS ),( FirstVNF_CPU_Server - BR ) ),( Min( CRS ,RRS ) * ( FirstVNF_Mem_Server - MRS ) ) ) - ( ( Max( CRS,Const ) + Max( ARS,ACS ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Min( CRS ,DDR ) ) ) ) ) ,( ( ( Min( ( Const / MRS ) ,Min( PN ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,MDR ) + Min( CRS ,FirstVNF_RAM_Server ) ) ) + Max( ( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM ) + Min( FirstVNF_Mem ,ACS ) ) ) ) / ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / ( Const / AMS ) ) ,( ( MDR + FirstVNF_CPU ) + Max( BR,ACS ) ) ) * Min( Min( ( DDR / CRS ) ,( CRS - FirstVNF_CPU_Server ) ) ,Max( ( CRS / ACS ),( MDR * ACS ) ) ) ) ) ) ,Min( ( ( ( Min( ( FirstVNF_RAM_Server - PN ) ,( FirstVNF_CPU - BR ) ) + Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_CPU / Const ) ) ) / Max( ( Max( MRS,CRS ) - ( MDR * RRS ) ),Min( Min( MRS ,RRS ) ,Max( RRS,ACS ) ) ) ) / Min( ( ( Max( RRS,FirstVNF_RAM ) - Min( BR ,FirstVNF_CPU ) ) + Max( Max( ARS,MRS ),( AMS + ARS ) ) ) ,Min( ( ( FirstVNF_Mem / ARS ) - Max( BR,ARS ) ) ,( Max( MRS,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,CRS ) ) ) ) ) ,( ( ( ( ( AMS / AMS ) + ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) / ( MDR / BR ) ) ) * ( ( ( Const * CRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem_Server + ARS ) * ( BR * FirstVNF_Mem ) ) ) ) / Max( Min( Max( Max( FirstVNF_CPU_Server,PN ),( PN - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU / PN ) * ( FirstVNF_CPU_Server - ACS ) ) ),( ( Min( ACS ,BR ) / ( PN - ARS ) ) + Min( ( ARS / FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,BR ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Min( RRSe ,MUC ) + ( MUM * RCSe ) ) / ( ( MUR - RCSe ) + ( MUC * MUM ) ) ),( Min( ( MUM / MUM ) ,Min( CS ,MUM ) ) * Max( ( RRSe * RCSe ),Max( DS,RMSe ) ) ) ) / ( ( ( ( MLU + MUC ) / ( RMSe * MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) - Max( ( ( RRSe / RCSe ) / ( MUR * MLU ) ),( ( DS + RCSe ) * Min( DS ,MUC ) ) ) ) ) ,( ( ( ( Min( MUR ,MUC ) / ( RCSe * MUM ) ) * ( Max( RMSe,MUM ) + ( MLU / RCSe ) ) ) + ( ( ( DS / RMSe ) / ( MLU + RCSe ) ) + ( ( MUR - CS ) + ( CS + MUC ) ) ) ) + ( ( ( ( DS * RRSe ) - Max( RMSe,MLU ) ) / ( ( MUC / DS ) - Min( MUR ,RMSe ) ) ) / ( ( Min( CS ,CS ) + Max( RCSe,MUM ) ) / Min( ( MUM - MUR ) ,Min( RRSe ,RRSe ) ) ) ) ) ) + ( Min( ( ( ( Max( MUR,RRSe ) + Max( CS,MUR ) ) * Max( ( MUC + RRSe ),( CS - DS ) ) ) * ( Min( Min( RCSe ,RCSe ) ,( RCSe / MUR ) ) * Max( ( MLU - RCSe ),( MUR + MUM ) ) ) ) ,Max( ( ( ( RMSe * DS ) - ( RRSe - RRSe ) ) * ( ( MLU - RRSe ) / Max( RMSe,RRSe ) ) ),( ( Max( RMSe,RRSe ) * ( RCSe / CS ) ) - Min( ( RRSe + RCSe ) ,( RRSe * MLU ) ) ) ) ) / Min( Max( ( Max( Max( CS,MUM ),( CS / MLU ) ) / ( ( MLU + CS ) - ( RMSe / RRSe ) ) ),Min( ( ( CS / CS ) + ( MUC - RMSe ) ) ,Min( Min( CS ,RCSe ) ,Min( DS ,RCSe ) ) ) ) ,Max( ( Min( Min( RMSe ,RRSe ) ,( MLU + MUC ) ) + ( ( RCSe * MUC ) / ( MUM / DS ) ) ),( ( ( RCSe - RRSe ) / ( DS + RCSe ) ) * Max( Min( MLU ,MLU ),( MLU + RCSe ) ) ) ) ) ) ) - Min( ( ( Max( ( ( ( MUM + MUM ) + ( MLU - DS ) ) * ( ( MUM / DS ) + ( RMSe + MUM ) ) ),( ( ( MUR + RMSe ) * ( DS * MUR ) ) / Min( Max( CS,MUM ) ,Min( RRSe ,DS ) ) ) ) - ( ( ( ( DS + CS ) - Max( MUR,MUM ) ) + ( ( RMSe * MUR ) * Max( DS,MUR ) ) ) - Max( ( Max( DS,RMSe ) * ( RCSe / DS ) ),( Min( MUC ,DS ) * ( RCSe - MUM ) ) ) ) ) + Max( ( ( Min( Max( RMSe,MUC ) ,( RMSe + MLU ) ) / ( ( RRSe + RMSe ) * Max( MUM,RMSe ) ) ) - ( ( ( MUM + RRSe ) * ( CS - RRSe ) ) / ( ( MUC + MLU ) + ( DS / MUR ) ) ) ),( ( Min( ( MUC - CS ) ,( MUC - RMSe ) ) - ( ( RMSe + MUR ) - Min( CS ,CS ) ) ) / ( Min( Min( MUM ,RCSe ) ,( CS + MUR ) ) / ( ( MLU + MUR ) - ( MUM + MLU ) ) ) ) ) ) ,( ( Max( Min( ( ( MUC - RMSe ) / Max( CS,MUM ) ) ,( Max( MLU,CS ) / ( RRSe - RRSe ) ) ),Max( Min( Min( MUC ,MUM ) ,Min( MUC ,RRSe ) ),( ( DS + MUC ) - Max( MLU,CS ) ) ) ) - ( Min( ( ( DS * CS ) / ( MUC / CS ) ) ,( Min( MLU ,MLU ) * Min( RMSe ,MUM ) ) ) * ( Min( Min( DS ,CS ) ,( MUM + CS ) ) - ( Max( MUR,DS ) * Max( RCSe,MLU ) ) ) ) ) - ( Min( Max( Min( ( MUR - CS ) ,Max( RMSe,RMSe ) ),Min( ( RRSe - MUR ) ,( MLU + MLU ) ) ) ,( ( Max( DS,DS ) + Min( RCSe ,DS ) ) - ( ( RMSe * MUM ) / ( RMSe - DS ) ) ) ) + ( ( ( Min( DS ,MLU ) - ( RMSe * RCSe ) ) * ( ( RRSe + DS ) + Max( MUC,MUR ) ) ) * ( ( ( MUC * RMSe ) * ( RMSe - CS ) ) - ( ( MUC - DS ) / ( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - ( Min( FirstVNF_CPU ,MRS ) - ( MDR + ACS ) ) ) )", "choosing": "( ( MUM - CS ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( RRS * CRS ) ,( Const / ( ARS / CRS ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( MLU / ( DS * DS ) ) + RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7854813085170925}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_RAM ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( CS / RMSe ) / DS )", "obj1": 0.524896265560166, "obj2": 0.34386961706001573}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( DDR + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.5954356846473029, "obj2": 0.3085161116804863}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4854771784232365, "obj2": 0.39712379031668704}, {"determining": "( Max( PN,( PN + BR ) ) + ( ARS - AMS ) )", "choosing": "( ( RRSe * RMSe ) / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) )", "obj1": 0.7655601659751037, "obj2": 0.18124728522430933}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( ( Max( Min( Const ,FirstVNF_RAM ),( PN - ACS ) ) - ( ( FirstVNF_RAM_Server / ACS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.8153526970954357, "obj2": 0.14896853057392084}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( Min( ( ( MRS + MRS ) / Min( CRS ,FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - BR )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) - RRSe ) ) ),( DS / ( MUM + MLU ) ) ) ,( DS + RCSe ) )", "obj1": 0.7614107883817427, "obj2": 0.2200258454329318}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ( ARS / CRS ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( MLU / ( DS * DS ) ) * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7722361886146724}, {"determining": "( Max( ARS,DDR ) - ( ARS + RRS ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( RCSe,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / ( CS / DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.8962655601659751, "obj2": 0.09386837726079188}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / ( MUM / MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.921161825726141, "obj2": 0.04485031506816976}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( ( ACS * FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) ) )", "obj1": 0.6950207468879668, "obj2": 0.2272962069333428}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.3008298755186722, "obj2": 0.556136231604021}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) / Min( RMSe ,CS ) )", "obj1": 0.2925311203319502, "obj2": 0.5691158841879131}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - CRS )", "choosing": "Min( Max( Min( ( MUR / CS ) ,( RMSe + ( Min( RCSe ,MUC ) - RRSe ) ) ),Max( Min( RCSe ,MUC ),( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) ) ) ,( DS + RCSe ) )", "obj1": 0.43983402489626555, "obj2": 0.48458970698585563}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( MRS ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( RCSe / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.7074688796680498, "obj2": 0.2202340103464102}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( RMSe * MUC ) ) )", "obj1": 0.6576763485477178, "obj2": 0.3010048258117843}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( Min( PN ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / MUC ) / Max( DS,RMSe ) )", "obj1": 0.3900414937759336, "obj2": 0.49002704293314314}, {"determining": "Max( Max( ( ( ( Min( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ,( Max( DDR,FirstVNF_Mem_Server ) - ( BR - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Max( DDR,MRS ) ) / ( ( Const * FirstVNF_RAM ) / Max( DDR,FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem * ACS ) + ( ACS + MRS ) ) / ( ( MDR * RRS ) / ( BR + BR ) ) ) ,( ( ( MDR / AMS ) / ( MRS / BR ) ) / ( ( MRS * ARS ) + Min( RRS ,ARS ) ) ) ) ) / Min( Min( ( Max( Max( MRS,CRS ),( FirstVNF_RAM_Server / RRS ) ) / Min( ( CRS / PN ) ,Min( MRS ,MDR ) ) ) ,( ( Max( RRS,ACS ) + Min( Const ,RRS ) ) * ( ( Const - DDR ) * ( FirstVNF_CPU_Server * AMS ) ) ) ) ,( Min( FirstVNF_RAM ,( Min( MRS ,FirstVNF_RAM ) - Min( ACS ,BR ) ) ) / ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / ( ARS + MRS ) ) / ( ( MDR - MRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ),Min( Min( ( Min( Max( ( Const * RRS ),( FirstVNF_RAM + MRS ) ) ,( Min( DDR ,DDR ) + ( ACS / PN ) ) ) / ( Min( Max( AMS,FirstVNF_Mem_Server ) ,( BR - RRS ) ) + Min( Max( FirstVNF_CPU_Server,ACS ) ,Min( PN ,BR ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server + PN ) + ( RRS * Const ) ) + ( ( ACS * PN ) / ( CRS * ACS ) ) ) ,Max( Min( Min( FirstVNF_Mem ,PN ) ,( AMS - Const ) ),Max( ( FirstVNF_CPU_Server - RRS ),( DDR - FirstVNF_RAM ) ) ) ) ) ,Min( ( ( ( Max( FirstVNF_RAM,AMS ) * Max( CRS,FirstVNF_Mem ) ) - ( Max( BR,MRS ) + ( RRS / FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Max( PN,CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( CRS + FirstVNF_RAM ) ) ) ) ,Max( ( Max( Min( Const ,FirstVNF_RAM ),( PN - ACS ) ) - ( ( FirstVNF_RAM_Server / ACS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( CRS,CRS ) ) - Max( ( FirstVNF_Mem + ACS ),( FirstVNF_CPU_Server / PN ) ) ) ) ) ) ),( ( ( ( ( Max( ( FirstVNF_Mem - ACS ),Max( FirstVNF_Mem_Server,MRS ) ) - Min( Min( PN ,RRS ) ,Max( ACS,AMS ) ) ) / ( ( ( RRS * PN ) - ( PN * CRS ) ) + ( ( FirstVNF_RAM + PN ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) / ( ( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem - MDR ) ) * Max( ( AMS + CRS ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Max( ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),( ( ACS * AMS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( Min( RRS ,FirstVNF_Mem ) - ( AMS * MRS ) ) / ( ( FirstVNF_Mem_Server - Const ) * ( ACS - FirstVNF_RAM_Server ) ) ) * Min( ( ( CRS * MRS ) * ( DDR - BR ) ) ,( Max( RRS,PN ) + ( DDR + RRS ) ) ) ) * ( ( ( Max( MDR,MRS ) * Max( FirstVNF_Mem,MDR ) ) + ( Max( DDR,ARS ) + Min( ARS ,FirstVNF_CPU ) ) ) - Min( ( Max( MDR,AMS ) / ( MRS / Const ) ) ,( ( RRS + PN ) * ( MRS / MDR ) ) ) ) ) ) / Max( ( Max( Max( Min( ( BR * RRS ) ,( MDR * MRS ) ),( ( MDR + AMS ) / Max( FirstVNF_Mem,ARS ) ) ),( ( ( RRS / RRS ) / ( ACS + Const ) ) / ( Min( RRS ,CRS ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) - ( ( ( ( RRS - AMS ) / ( FirstVNF_RAM_Server / ACS ) ) * Min( ( BR * Const ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) + ( ( Max( DDR,ARS ) * ( DDR * RRS ) ) * ( ( FirstVNF_CPU + MDR ) - Min( BR ,RRS ) ) ) ) ),( ( ( ( Max( DDR,DDR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( RRS + FirstVNF_CPU_Server ) / ( MRS * RRS ) ) ) * ( ( ( MRS * FirstVNF_CPU_Server ) + ( RRS + PN ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( BR * RRS ) ) ) ) - ( Min( ( ( FirstVNF_Mem_Server + Const ) * ( BR * ARS ) ) ,( ( FirstVNF_CPU_Server * Const ) - ( CRS * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU + DDR ) ,Min( DDR ,BR ) ) / ( Max( MDR,PN ) + ( FirstVNF_Mem + ARS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( Min( Min( ( MUM / RMSe ) ,Min( RCSe ,MUR ) ) ,( Min( RRSe ,MUR ) + Min( MLU ,MUC ) ) ) ,( ( ( MUM + MUM ) * ( MLU * MUC ) ) * ( Max( DS,RCSe ) / ( RCSe - RMSe ) ) ) ) / Max( Min( ( ( MLU / CS ) / Max( DS,RMSe ) ) ,( ( MUM / RCSe ) / ( MUM * RMSe ) ) ),( Max( Max( DS,RRSe ),( RCSe - MUR ) ) + ( Min( DS ,MUC ) + ( RCSe + RRSe ) ) ) ) ) ,( ( MUM / MUC ) / ( ( ( ( RCSe - RRSe ) * ( CS - MUR ) ) - ( ( MLU / DS ) - ( RRSe - MUM ) ) ) * ( ( Max( MLU,MUC ) * Min( MUM ,RMSe ) ) / ( ( DS * MUC ) - ( MUM / RCSe ) ) ) ) ) ),( Max( ( ( Max( ( DS + CS ),( MUM / MLU ) ) * ( ( MUM - RCSe ) / ( MUC / RMSe ) ) ) - Min( ( Min( MUM ,RCSe ) + Max( MUR,RCSe ) ) ,( ( RMSe / RCSe ) / ( RMSe * MUM ) ) ) ),( ( ( ( MUR - RCSe ) - ( MLU * RRSe ) ) / ( ( MLU / CS ) / ( RCSe + MUM ) ) ) - ( Min( ( MUR / RRSe ) ,( MUR - MUM ) ) * ( ( MUM + RCSe ) * Min( RMSe ,MUM ) ) ) ) ) / Min( ( Min( Min( ( RMSe - MUC ) ,Max( MUC,RCSe ) ) ,( ( DS + MUM ) * ( DS / MUM ) ) ) - ( ( ( RMSe + MUM ) * ( MUR / RCSe ) ) / Min( ( MUR - RCSe ) ,( DS - RRSe ) ) ) ) ,Max( ( ( ( MLU / CS ) + Min( CS ,MUC ) ) + Min( Max( MLU,MUC ) ,Min( DS ,MUM ) ) ),Max( ( Min( RRSe ,MUM ) * ( DS * RRSe ) ),( ( MUM * RRSe ) - ( MUR * MUR ) ) ) ) ) ) ) * Min( Max( ( ( ( Min( ( RCSe * CS ) ,( MLU / RCSe ) ) * Min( Max( MLU,MUC ) ,( MUM + RCSe ) ) ) + Min( ( Max( MUR,RCSe ) * ( MUM + RRSe ) ) ,( ( MUC + MLU ) + ( MLU - MUC ) ) ) ) * ( ( ( Min( MUR ,MUM ) * Min( MUR ,MUM ) ) - Min( ( CS * MLU ) ,Max( RMSe,CS ) ) ) / ( ( Max( CS,RCSe ) * ( RCSe / DS ) ) * ( Max( MUR,MUR ) + ( MUC / CS ) ) ) ) ),Min( ( ( Min( Min( MUM ,MUM ) ,( CS / CS ) ) + ( ( DS * MUM ) / ( CS + DS ) ) ) + ( ( ( CS / RRSe ) * ( RMSe * RRSe ) ) / Min( ( RMSe * MLU ) ,Max( DS,MUM ) ) ) ) ,Max( ( ( ( MLU - MUR ) - ( MUM * RCSe ) ) + ( ( RRSe - DS ) - Min( RCSe ,RCSe ) ) ),Max( ( Max( MUR,MUM ) + Max( CS,MUR ) ),( ( MUR * MUR ) / ( MUC * RCSe ) ) ) ) ) ) ,Min( ( ( Min( ( ( MUR / MUR ) + Max( RRSe,MUM ) ) ,( Min( RRSe ,MLU ) * ( DS * MUR ) ) ) - ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) ) * Max( Max( ( ( RRSe - MLU ) * ( MUM * DS ) ),( ( MLU - DS ) / ( CS / MUR ) ) ),( ( Max( MUR,MUC ) - ( MLU - MUR ) ) * ( Min( CS ,MUM ) + Max( MUC,MLU ) ) ) ) ) ,Min( ( ( ( ( CS / MUC ) / ( MUC / CS ) ) - ( ( MUC - RCSe ) - ( MUC * RCSe ) ) ) - ( Min( ( MUR * MUR ) ,( RMSe / RMSe ) ) - ( ( CS + MUC ) / ( RMSe + DS ) ) ) ) ,( ( Min( ( MLU + RRSe ) ,Max( MUR,RRSe ) ) * ( Min( RRSe ,CS ) - ( CS - RCSe ) ) ) * Max( Min( ( DS - RRSe ) ,( MLU + MLU ) ),Max( ( MUC / RCSe ),( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.6473029045643154, "obj2": 0.3061923491854701}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_CPU ,RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) ) )", "choosing": "Max( ( MLU / ( CS / RMSe ) ),( RMSe / MLU ) )", "obj1": 0.9585062240663901, "obj2": 0.03340637346134452}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.3278008298755187, "obj2": 0.5292121052395188}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) )", "choosing": "( ( MUM / DS ) / ( MUM * RMSe ) )", "obj1": 0.6680497925311203, "obj2": 0.2565883768264836}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) )", "choosing": "( ( MUM / DS ) / ( MUM * RMSe ) )", "obj1": 0.6639004149377593, "obj2": 0.2572335977527461}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),ARS )", "choosing": "( ( ( MUM / MUC ) + RRSe ) / ( MUC * MUR ) )", "obj1": 0.2551867219917012, "obj2": 0.583765333354007}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - CRS )", "choosing": "( ( MUM / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5231281314310234}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4730290456431535, "obj2": 0.4202561662499145}, {"determining": "Max( Max( ( ( ( Min( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ,( Max( DDR,FirstVNF_Mem_Server ) - ( BR - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Max( DDR,MRS ) ) / ( ( Const * FirstVNF_RAM ) / Max( DDR,FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem * ACS ) + ( ACS + MRS ) ) / ( ( MDR * RRS ) / ( BR + BR ) ) ) ,( ( ( MDR / AMS ) / ( MRS / BR ) ) / ( ( MRS * ARS ) + Min( RRS ,ARS ) ) ) ) ) / Min( Min( ( Max( Max( MRS,CRS ),( FirstVNF_RAM_Server / RRS ) ) / Min( ( CRS / PN ) ,Min( MRS ,MDR ) ) ) ,( ( Max( RRS,ACS ) + Min( Const ,RRS ) ) * ( ( Const - DDR ) * ( FirstVNF_CPU_Server * AMS ) ) ) ) ,( Min( ( Min( DDR ,PN ) * ( DDR + DDR ) ) ,( Min( MRS ,FirstVNF_RAM ) - Min( ACS ,BR ) ) ) / ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / ( ARS + MRS ) ) / ( ( MDR - MRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ),Min( Min( ( Min( Max( ( Const * RRS ),( FirstVNF_RAM + MRS ) ) ,( Min( DDR ,DDR ) + ( ACS / PN ) ) ) / ( Min( Max( AMS,FirstVNF_Mem_Server ) ,( BR - RRS ) ) + Min( Max( FirstVNF_CPU_Server,ACS ) ,Min( PN ,BR ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server + PN ) + ( RRS * Const ) ) + ( ( ACS * PN ) / ( CRS * ACS ) ) ) ,Max( Min( Min( FirstVNF_Mem ,PN ) ,( AMS - Const ) ),Max( ( FirstVNF_CPU_Server - RRS ),( DDR - FirstVNF_RAM ) ) ) ) ) ,Min( ( ( ( Max( FirstVNF_RAM,AMS ) * Max( CRS,FirstVNF_Mem ) ) - ( Max( BR,MRS ) + ( RRS / FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Max( PN,CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( CRS + FirstVNF_RAM ) ) ) ) ,Max( ( Max( Min( Const ,FirstVNF_RAM ),( PN - ACS ) ) - ( ( FirstVNF_RAM_Server / ACS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( CRS,CRS ) ) - Max( ( FirstVNF_Mem + ACS ),( FirstVNF_CPU_Server / PN ) ) ) ) ) ) ),( ( ( ( ( Max( ( FirstVNF_Mem - ACS ),Max( FirstVNF_Mem_Server,MRS ) ) - Min( Min( PN ,RRS ) ,Max( ACS,AMS ) ) ) / ( ( ( RRS * PN ) - ( PN * CRS ) ) + ( ( FirstVNF_RAM + PN ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) / ( ( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem - MDR ) ) * Max( ( AMS + CRS ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Max( ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),( ( ACS * AMS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( Min( RRS ,FirstVNF_Mem ) - ( AMS * MRS ) ) / ( ( FirstVNF_Mem_Server - Const ) * ( ACS - FirstVNF_RAM_Server ) ) ) * Min( ( ( CRS * MRS ) * ( DDR - BR ) ) ,( Max( RRS,PN ) + ( DDR + RRS ) ) ) ) * ( ( ( Max( MDR,MRS ) * Max( FirstVNF_Mem,MDR ) ) + ( Max( DDR,ARS ) + Min( ARS ,FirstVNF_CPU ) ) ) - Min( ( Max( MDR,AMS ) / ( MRS / Const ) ) ,( ( RRS + PN ) * ( MRS / MDR ) ) ) ) ) ) / Max( ( Max( Max( Min( ( BR * RRS ) ,( MDR * MRS ) ),( ( MDR + AMS ) / Max( FirstVNF_Mem,ARS ) ) ),( ( ( RRS / RRS ) / ( ACS + Const ) ) / ( Min( RRS ,CRS ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) - ( ( ( ( RRS - AMS ) / ( FirstVNF_RAM_Server / ACS ) ) * Min( ( BR * Const ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) + ( ( Max( DDR,ARS ) * ( DDR * RRS ) ) * ( ( FirstVNF_CPU + MDR ) - Min( BR ,RRS ) ) ) ) ),( ( ( ( Max( DDR,DDR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( RRS + FirstVNF_CPU_Server ) / ( MRS * RRS ) ) ) * ( ( ( MRS * FirstVNF_CPU_Server ) + ( RRS + PN ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( BR * RRS ) ) ) ) - ( Min( ( ( FirstVNF_Mem_Server + Const ) * ( BR * ARS ) ) ,( ( FirstVNF_CPU_Server * Const ) - ( CRS * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU + DDR ) ,Min( DDR ,BR ) ) / ( Max( MDR,PN ) + ( FirstVNF_Mem + ARS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Min( Min( Min( ( MUM / RMSe ) ,Min( RCSe ,MUR ) ) ,( Min( RRSe ,MUR ) + Min( MLU ,MUC ) ) ) ,( ( ( MUM + MUM ) * ( MLU * MUC ) ) * ( Max( DS,RCSe ) / ( RCSe - RMSe ) ) ) ) / Max( Min( ( ( MLU / CS ) / Max( DS,RMSe ) ) ,( ( MUM / RCSe ) / ( MUM * RMSe ) ) ),( Max( Max( DS,RRSe ),( RCSe - MUR ) ) + ( Min( DS ,MUC ) + ( RCSe + RRSe ) ) ) ) ) ,( Max( ( ( ( RMSe / RCSe ) + ( RMSe + RCSe ) ) - ( ( MUM * RCSe ) + ( MUM + MUM ) ) ),( ( Min( MUR ,DS ) * ( CS - RCSe ) ) - ( Max( MUM,MUC ) / ( MUM + RCSe ) ) ) ) / ( ( ( ( RCSe - RRSe ) * ( CS - MUR ) ) - ( ( MLU / DS ) - ( RRSe - MUM ) ) ) * ( ( Max( MLU,MUC ) * Min( MUM ,RMSe ) ) / ( ( DS * MUC ) - ( MUM / RCSe ) ) ) ) ) ),( Max( ( ( Max( ( DS + CS ),( MUM / MLU ) ) * ( ( MUM - RCSe ) / ( MUC / RMSe ) ) ) - Min( ( Min( MUM ,RCSe ) + Max( MUR,RCSe ) ) ,( ( RMSe / RCSe ) / ( RMSe * MUM ) ) ) ),( ( ( ( MUR - RCSe ) - ( MLU * RRSe ) ) / ( ( MLU / CS ) / ( RCSe + MUM ) ) ) - ( Min( ( MUR / RRSe ) ,( MUR - MUM ) ) * ( ( MUM + RCSe ) * Min( RMSe ,MUM ) ) ) ) ) / Min( ( Min( Min( ( RMSe - MUC ) ,Max( MUC,RCSe ) ) ,( ( DS + MUM ) * ( DS / MUM ) ) ) - ( ( ( RMSe + MUM ) * ( MUR / RCSe ) ) / Min( ( MUR - RCSe ) ,( DS - RRSe ) ) ) ) ,Max( ( ( ( MLU / CS ) + Min( CS ,MUC ) ) + Min( Max( MLU,MUC ) ,Min( DS ,MUM ) ) ),Max( ( Min( RRSe ,MUM ) * ( DS * RRSe ) ),( ( MUM * RRSe ) - ( MUR * MUR ) ) ) ) ) ) ) * Min( Max( ( ( ( Min( ( RCSe * CS ) ,( MLU / RCSe ) ) * Min( Max( MLU,MUC ) ,( MUM + RCSe ) ) ) + Min( ( Max( MUR,RCSe ) * ( MUM + RRSe ) ) ,( ( MUC + MLU ) + ( MLU - MUC ) ) ) ) * ( ( ( Min( MUR ,MUM ) * Min( MUR ,MUM ) ) - Min( ( CS * MLU ) ,Max( RMSe,CS ) ) ) / ( ( Max( CS,RCSe ) * ( RCSe / DS ) ) * ( Max( MUR,MUR ) + ( MUC / CS ) ) ) ) ),Min( ( ( Min( Min( MUM ,MUM ) ,( CS / CS ) ) + ( ( DS * MUM ) / ( CS + DS ) ) ) + ( ( ( CS / RRSe ) * ( RMSe * RRSe ) ) / Min( ( RMSe * MLU ) ,Max( DS,MUM ) ) ) ) ,Max( ( ( ( MLU - MUR ) - ( MUM * RCSe ) ) + ( ( RRSe - DS ) - Min( RCSe ,RCSe ) ) ),Max( ( Max( MUR,MUM ) + Max( CS,MUR ) ),( ( MUR * MUR ) / ( MUC * RCSe ) ) ) ) ) ) ,Min( ( ( Min( ( ( MUR / MUR ) + Max( RRSe,MUM ) ) ,( Min( RRSe ,MLU ) * ( DS * MUR ) ) ) - ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) ) * Max( Max( ( ( RRSe - MLU ) * ( MUM * DS ) ),( ( MLU - DS ) / ( CS / MUR ) ) ),( ( Max( MUR,MUC ) - ( MLU - MUR ) ) * ( Min( CS ,MUM ) + Max( MUC,MLU ) ) ) ) ) ,Min( ( ( ( ( CS / MUC ) / ( MUC / CS ) ) - ( ( MUC - RCSe ) - ( MUC * RCSe ) ) ) - ( Min( ( MUR * MUR ) ,( RMSe / RMSe ) ) - ( ( CS + MUC ) / ( RMSe + DS ) ) ) ) ,( ( Min( ( MLU + RRSe ) ,Max( MUR,RRSe ) ) * ( Min( RRSe ,CS ) - ( CS - RCSe ) ) ) * Max( Min( ( DS - RRSe ) ,( MLU + MLU ) ),Max( ( MUC / RCSe ),( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.42323651452282157, "obj2": 0.4881179285626796}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) )", "obj1": 0.3651452282157676, "obj2": 0.5000753033020704}, {"determining": "( ( PN - ( FirstVNF_RAM + MDR ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8319502074688797, "obj2": 0.1258202453791743}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( ACS + FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( ( Min( CS ,DS ) / ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.9232365145228216, "obj2": 0.04262321241307088}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "Max( Min( RCSe ,MUC ),( ( ( ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) )", "obj1": 0.9647302904564315, "obj2": 0.017114135663599386}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) )", "obj1": 0.2095435684647303, "obj2": 0.6234480668477397}, {"determining": "( ( ( ( BR / BR ) - ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.1887966804979253, "obj2": 0.6474322849396656}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8568464730290456, "obj2": 0.1168323893332862}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RMSe / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8381742738589212, "obj2": 0.124620118695384}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / DS ) / Max( MUM,RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6964131238145829}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.33402489626556015, "obj2": 0.5246701949355639}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM - ( ( ( AMS - BR ) + ( BR * FirstVNF_Mem ) ) - ( MDR + ACS ) ) ) )", "choosing": "( ( MUM - CS ) + Max( ( ( MLU - RMSe ) / Min( CS ,CS ) ),DS ) )", "obj1": 0.983402489626556, "obj2": 0.01107645957177379}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * MUC ) / ( MUC * MUR ) )", "obj1": 0.25103734439834025, "obj2": 0.5855020953128508}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4730290456431535, "obj2": 0.4202561662499145}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8734439834024896, "obj2": 0.10391021157513208}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( MUM * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6964131238145829}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( PN / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.2074688796680498, "obj2": 0.6275839097528468}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.638604782843766}, {"determining": "Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ),( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "( ( MUM / MUC ) / RMSe )", "obj1": 0.25103734439834025, "obj2": 0.5855020953128508}], "7": [{"determining": "( Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( MDR - MDR ) ) ,( ( Const - FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) + Min( ( ( Const / FirstVNF_CPU ) * ( RRS / FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,( BR + FirstVNF_CPU ) ) ) ) - Max( ( ( ( BR - FirstVNF_Mem_Server ) + ( MDR + DDR ) ) / ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_CPU - BR ) ) ),( ( Min( DDR ,RRS ) * Min( ACS ,BR ) ) + Min( ( MDR * DDR ) ,( FirstVNF_RAM / ARS ) ) ) ) ) - ( ( ( ( ( MRS - BR ) * Max( RRS,FirstVNF_Mem ) ) - ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem + DDR ) ) ) - Min( ( ( AMS / AMS ) - ( RRS + RRS ) ) ,( ( ACS + BR ) - ( BR * PN ) ) ) ) * ( ( Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_RAM_Server,ARS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * PN ) ) ) + Max( ( ( PN * RRS ) / ( ARS / FirstVNF_RAM_Server ) ),( ( ACS - MDR ) / ( CRS / FirstVNF_RAM ) ) ) ) ) ),Max( ( ( ( ( ( FirstVNF_CPU + ARS ) / Min( Const ,FirstVNF_CPU_Server ) ) + ( ( DDR + FirstVNF_Mem ) + Min( FirstVNF_Mem ,DDR ) ) ) / Max( ( Min( CRS ,FirstVNF_Mem_Server ) * ( DDR - FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) ) ) - ( Min( ( ( Const - FirstVNF_CPU ) / ( AMS * FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * MDR ) + ( BR / BR ) ) ) * ( ( Min( ARS ,MDR ) / ( Const / AMS ) ) + ( Max( CRS,MDR ) * ( PN / BR ) ) ) ) ),( ( ( ( ( BR + AMS ) / Max( MRS,CRS ) ) + Max( ( BR + MRS ),Max( ACS,ARS ) ) ) + ( ( Max( MDR,FirstVNF_CPU_Server ) - ( PN / MRS ) ) / Max( ( Const - MRS ),( DDR - PN ) ) ) ) - ( ( ( Max( AMS,ACS ) - ( RRS / FirstVNF_Mem_Server ) ) + ( ( CRS + MDR ) - ( AMS - CRS ) ) ) - Max( ( Max( PN,FirstVNF_RAM ) - Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS * MRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Min( Min( Min( ( ( ( ( FirstVNF_CPU_Server - MRS ) * ( FirstVNF_RAM_Server * PN ) ) + ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( CRS * ACS ) ) ) - Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( MRS - AMS ) ) ,Max( ( ACS * DDR ),( AMS + FirstVNF_RAM_Server ) ) ) ) ,( Max( Max( ( MRS - ARS ),( FirstVNF_CPU_Server - BR ) ),( Min( CRS ,RRS ) * ( FirstVNF_Mem_Server - MRS ) ) ) - ( ( Max( CRS,Const ) + Max( ARS,ACS ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Min( CRS ,DDR ) ) ) ) ) ,( ( ( Min( ( Const / MRS ) ,Min( PN ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,MDR ) + Min( CRS ,FirstVNF_RAM_Server ) ) ) + Max( ( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM ) + Min( FirstVNF_Mem ,ACS ) ) ) ) / ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / ( Const / AMS ) ) ,( ( MDR + FirstVNF_CPU ) + Max( BR,ACS ) ) ) * Min( Min( ( DDR / CRS ) ,( CRS - FirstVNF_CPU_Server ) ) ,Max( ( CRS / ACS ),( MDR * ACS ) ) ) ) ) ) ,Min( ( ( ( Min( ( FirstVNF_RAM_Server - PN ) ,( FirstVNF_CPU - BR ) ) + Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_CPU / Const ) ) ) / Max( ( Max( MRS,CRS ) - ( MDR * RRS ) ),Min( Min( MRS ,RRS ) ,Max( RRS,ACS ) ) ) ) / Min( ( ( Max( RRS,FirstVNF_RAM ) - Min( BR ,FirstVNF_CPU ) ) + Max( Max( ARS,MRS ),( AMS + ARS ) ) ) ,Min( ( ( FirstVNF_Mem / ARS ) - Max( BR,ARS ) ) ,( Max( MRS,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,CRS ) ) ) ) ) ,( ( ( ( ( AMS / AMS ) + ( DDR + Const ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) / ( MDR / BR ) ) ) * ( ( ( Const * CRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem_Server + ARS ) * ( BR * FirstVNF_Mem ) ) ) ) / Max( Min( Max( Max( FirstVNF_CPU_Server,PN ),( PN - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU / PN ) * ( FirstVNF_CPU_Server - ACS ) ) ),( ( Min( ACS ,BR ) / ( PN - ARS ) ) + Min( ( ARS / FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,BR ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Min( RRSe ,MUC ) + ( MUM * RCSe ) ) / ( ( MUR - RCSe ) + ( MUC * MUM ) ) ),( Min( ( MUM / MUM ) ,Min( CS ,MUM ) ) * Max( ( RRSe * RCSe ),Max( DS,RMSe ) ) ) ) / ( ( ( ( MLU + MUC ) / ( RMSe * MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) - Max( ( ( RRSe / RCSe ) / ( MUR * MLU ) ),( ( DS + RCSe ) * Min( DS ,MUC ) ) ) ) ) ,( ( ( ( Min( MUR ,MUC ) / ( RCSe * MUM ) ) * ( Max( RMSe,MUM ) + ( MLU / RCSe ) ) ) + ( ( ( DS / RMSe ) / ( MLU + RCSe ) ) + ( ( MUR - CS ) + ( CS + MUC ) ) ) ) + ( ( ( ( DS * RRSe ) - Max( RMSe,MLU ) ) / ( ( MUC / DS ) - Min( MUR ,RMSe ) ) ) / ( ( Min( CS ,CS ) + Max( RCSe,MUM ) ) / Min( ( MUM - MUR ) ,Min( RRSe ,RRSe ) ) ) ) ) ) + ( Min( ( ( ( Max( MUR,RRSe ) + Max( CS,MUR ) ) * Max( ( MUC + RRSe ),( CS - DS ) ) ) * ( Min( Min( RCSe ,RCSe ) ,( RCSe / MUR ) ) * Max( ( MLU - RCSe ),( MUR + MUM ) ) ) ) ,Max( ( ( ( RMSe * DS ) - ( RRSe - RRSe ) ) * ( ( MLU - RRSe ) / Max( RMSe,RRSe ) ) ),( ( Max( RMSe,RRSe ) * ( RCSe / CS ) ) - Min( ( RRSe + RCSe ) ,( RRSe * MLU ) ) ) ) ) / Min( Max( ( Max( Max( CS,MUM ),( CS / MLU ) ) / ( ( MLU + CS ) - ( RMSe / RRSe ) ) ),Min( ( ( CS / CS ) + ( MUC - RMSe ) ) ,Min( Min( CS ,RCSe ) ,Min( DS ,RCSe ) ) ) ) ,Max( ( Min( Min( RMSe ,RRSe ) ,( MLU + MUC ) ) + ( ( RCSe * MUC ) / ( MUM / DS ) ) ),( ( ( RCSe - RRSe ) / ( DS + RCSe ) ) * Max( Min( MLU ,MLU ),( MLU + RCSe ) ) ) ) ) ) ) - Min( ( ( Max( ( ( ( MUM + MUM ) + ( MLU - DS ) ) * ( ( MUM / DS ) + ( RMSe + MUM ) ) ),( ( ( MUR + RMSe ) * ( DS * MUR ) ) / Min( Max( CS,MUM ) ,Min( RRSe ,DS ) ) ) ) - ( ( ( ( DS + CS ) - Max( MUR,MUM ) ) + ( ( RMSe * MUR ) * Max( DS,MUR ) ) ) - Max( ( Max( DS,RMSe ) * ( RCSe / DS ) ),( Min( MUC ,DS ) * ( RCSe - MUM ) ) ) ) ) + Max( ( ( Min( Max( RMSe,MUC ) ,( RMSe + MLU ) ) / ( ( RRSe + RMSe ) * Max( MUM,RMSe ) ) ) - ( ( ( MUM + RRSe ) * ( CS - RRSe ) ) / ( ( MUC + MLU ) + ( DS / MUR ) ) ) ),( ( Min( ( MUC - CS ) ,( MUC - RMSe ) ) - ( ( RMSe + MUR ) - Min( CS ,CS ) ) ) / ( Min( Min( MUM ,RCSe ) ,( CS + MUR ) ) / ( ( MLU + MUR ) - ( MUM + MLU ) ) ) ) ) ) ,( ( Max( Min( ( ( MUC - RMSe ) / Max( CS,MUM ) ) ,( Max( MLU,CS ) / ( RRSe - RRSe ) ) ),Max( Min( Min( MUC ,MUM ) ,Min( MUC ,RRSe ) ),( ( DS + MUC ) - Max( MLU,CS ) ) ) ) - ( Min( ( ( DS * CS ) / ( MUC / CS ) ) ,( Min( MLU ,MLU ) * Min( RMSe ,MUM ) ) ) * ( Min( Min( DS ,CS ) ,( MUM + CS ) ) - ( Max( MUR,DS ) * Max( RCSe,MLU ) ) ) ) ) - ( Min( Max( Min( ( MUR - CS ) ,Max( RMSe,RMSe ) ),Min( ( RRSe - MUR ) ,( MLU + MLU ) ) ) ,( ( Max( DS,DS ) + Min( RCSe ,DS ) ) - ( ( RMSe * MUM ) / ( RMSe - DS ) ) ) ) + ( ( ( Min( DS ,MLU ) - ( RMSe * RCSe ) ) * ( ( RRSe + DS ) + Max( MUC,MUR ) ) ) * ( ( ( MUC * RMSe ) * ( RMSe - CS ) ) - ( ( MUC - DS ) / ( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / DS ) / Max( MUM,RMSe ) )", "obj1": 0.08713692946058091, "obj2": 0.776593506502073}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_RAM ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( CS / RMSe ) / DS )", "obj1": 0.524896265560166, "obj2": 0.34386961706001573}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) + Max( ( ( MLU - RMSe ) / Min( CS ,CS ) ),DS ) )", "obj1": 0.6410788381742739, "obj2": 0.2914686043981439}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,( ( AMS - BR ) + ( BR * FirstVNF_Mem ) ) ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,( Max( RRSe,( MUM - CS ) ) * ( RMSe + RMSe ) ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.5850622406639004, "obj2": 0.3063189943894176}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4854771784232365, "obj2": 0.39712379031668704}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Max( PN,( PN + BR ) ) + ( ARS - AMS ) )", "choosing": "( ( RRSe * RMSe ) / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) )", "obj1": 0.7655601659751037, "obj2": 0.18124728522430933}, {"determining": "( Max( ARS,DDR ) - ( ARS + RRS ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( RCSe,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / ( CS / DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.8962655601659751, "obj2": 0.09386837726079188}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ( ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( MUM,RMSe ) ) * ( ( ( MLU / ( DS * DS ) ) * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7650510609367412}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5560165975103735, "obj2": 0.32964247457376844}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7240663900414938, "obj2": 0.19627390450455756}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) )", "obj1": 0.4211618257261411, "obj2": 0.46628691760756447}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / MUC ) / RMSe )", "obj1": 0.36721991701244816, "obj2": 0.4866851712037731}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( Min( Max( Max( MRS,MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / Min( MUM ,MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.9190871369294605, "obj2": 0.04555295543198067}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( MLU / ( DS * DS ) ) * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.8091286307053942, "obj2": 0.17511600234282307}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ),DDR ) - ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) + BR ) )", "choosing": "( ( RMSe / RMSe ) / Min( CS ,( ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) / MUC ) / ( MUC * RMSe ) ) ) )", "obj1": 0.27800829875518673, "obj2": 0.5680777545088945}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.3008298755186722, "obj2": 0.556136231604021}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6784232365145229, "obj2": 0.2409200611424966}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Min( DDR ,MDR ) )", "choosing": "( ( MUM / MUC ) / Max( MUC,DS ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( Max( Const,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( CS,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.42946058091286304, "obj2": 0.46404504472868857}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.31950207468879666, "obj2": 0.5433114413298316}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / MUM )", "obj1": 0.13900414937759337, "obj2": 0.7061817168847776}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - CRS )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.3630705394190871, "obj2": 0.48824279285721434}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - CRS )", "choosing": "( ( MUM / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5231281314310234}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( PN / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.2074688796680498, "obj2": 0.6275839097528468}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RCSe ) / ( MUM * RMSe ) )", "obj1": 0.24273858921161826, "obj2": 0.5926687463688233}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),ARS )", "choosing": "( ( ( MUM / MUC ) + RRSe ) / ( MUC * MUR ) )", "obj1": 0.2551867219917012, "obj2": 0.583765333354007}, {"determining": "( Max( BR,DDR ) - MRS )", "choosing": "( ( ( ( ( MUM / MUC ) / ( MUM / MUC ) ) - CS ) - ( RMSe * RCSe ) ) / Min( CS ,CS ) )", "obj1": 0.16804979253112035, "obj2": 0.6731373919250886}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_CPU ,RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.9543568464730291, "obj2": 0.042169680027864635}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ARS,( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( ( ACS * FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) ) )", "obj1": 0.6950207468879668, "obj2": 0.2272962069333428}, {"determining": "( ( ( AMS + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RCSe ) / CS )", "obj1": 0.7116182572614108, "obj2": 0.21406210210775356}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) )", "choosing": "( ( MUM / DS ) / ( MUM * RMSe ) )", "obj1": 0.6639004149377593, "obj2": 0.2572335977527461}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( MUC ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8734439834024896, "obj2": 0.09657950063207259}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Max( MDR,PN ) + ( FirstVNF_Mem + ARS ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe * CS ) ,( MLU / RCSe ) ) * Min( Max( MLU,MUC ) ,( MUM + RCSe ) ) ) + Min( ( Max( MUR,RCSe ) * ( MUM + RRSe ) ) ,( ( MUC + MLU ) + ( MLU - MUC ) ) ) ) ) / Min( CS ,CS ) )", "obj1": 0.8298755186721992, "obj2": 0.13249353102396827}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( Max( ACS,FirstVNF_Mem ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - ( ( MUM / MUC ) / ( MUC * RMSe ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.48132780082987553, "obj2": 0.41616328367041494}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) / ( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * RMSe ) / Max( MUM,RMSe ) )", "obj1": 0.16390041493775934, "obj2": 0.6884629394327892}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),ARS ) )", "choosing": "( ( MUM / RCSe ) / ( MUC * MUR ) )", "obj1": 0.1887966804979253, "obj2": 0.6390737151053081}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8692946058091287, "obj2": 0.10847214965988608}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_CPU ,RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) ) )", "choosing": "Max( ( MLU / ( CS / RMSe ) ),( RMSe / MLU ) )", "obj1": 0.9585062240663901, "obj2": 0.03340637346134452}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( ( Max( Min( Const ,FirstVNF_RAM ),( PN - ACS ) ) - ( ( FirstVNF_RAM_Server / ACS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.8132780082987552, "obj2": 0.1525795911529072}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( ACS + FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( ( Min( CS ,DS ) / ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 0.9232365145228216, "obj2": 0.04262321241307088}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.416752822679205}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.33402489626556015, "obj2": 0.5246701949355639}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "Max( Min( RCSe ,MUC ),( ( ( ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) )", "obj1": 0.9647302904564315, "obj2": 0.017114135663599386}, {"determining": "( ( PN - ( FirstVNF_RAM + MDR ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Max( ( ( Min( RRSe ,MUC ) + ( MUM * RCSe ) ) / ( ( MUR - RCSe ) + ( MUC * MUM ) ) ),( Min( ( MUM / MUM ) ,Min( CS ,MUM ) ) * Max( ( RRSe * RCSe ),Max( DS,RMSe ) ) ) ) / ( ( ( ( MLU + MUC ) / ( RMSe * MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) - Max( ( ( RRSe / RCSe ) / ( MUR * MLU ) ),( ( DS + RCSe ) * Min( DS ,MUC ) ) ) ) ) ,( ( ( ( Min( MUR ,MUC ) / ( RCSe * MUM ) ) * ( Max( RMSe,MUM ) + ( MLU / RCSe ) ) ) + ( ( ( DS / RMSe ) / ( MLU + RCSe ) ) + ( ( MUR - CS ) + ( CS + MUC ) ) ) ) + ( ( ( ( DS * RRSe ) - Max( RMSe,MLU ) ) / ( ( MUC / DS ) - Min( MUR ,RMSe ) ) ) / ( ( Min( CS ,CS ) + Max( RCSe,MUM ) ) / Min( ( MUM - MUR ) ,Min( RRSe ,RRSe ) ) ) ) ) ) + ( Min( ( ( ( Max( MUR,RRSe ) + Max( CS,MUR ) ) * Max( ( MUC + RRSe ),( CS - DS ) ) ) * ( Min( Min( RCSe ,RCSe ) ,( RCSe / MUR ) ) * Max( ( MLU - RCSe ),( MUR + MUM ) ) ) ) ,Max( ( ( ( RMSe * DS ) - ( RRSe - RRSe ) ) * ( ( MLU - RRSe ) / Max( RMSe,RRSe ) ) ),( ( Max( RMSe,RRSe ) * ( RCSe / CS ) ) - Min( ( RRSe + RCSe ) ,( RRSe * MLU ) ) ) ) ) / Min( Max( ( Max( Max( CS,MUM ),( CS / MLU ) ) / ( ( MLU + CS ) - ( RMSe / RRSe ) ) ),Min( ( ( CS / CS ) + ( MUC - RMSe ) ) ,Min( Min( CS ,RCSe ) ,Min( DS ,RCSe ) ) ) ) ,Max( ( Min( Min( RMSe ,RRSe ) ,( MLU + MUC ) ) + ( ( RCSe * MUC ) / ( MUM / DS ) ) ),( ( ( RCSe - RRSe ) / ( DS + RCSe ) ) * Max( Min( MLU ,MLU ),( MLU + RCSe ) ) ) ) ) ) ) - Min( ( ( Max( ( ( ( MUM + MUM ) + ( MLU - DS ) ) * ( ( MUM / DS ) + ( RMSe + MUM ) ) ),( ( ( MUR + RMSe ) * ( DS * MUR ) ) / Min( Max( CS,MUM ) ,Min( RRSe ,DS ) ) ) ) - ( ( ( ( DS + CS ) - Max( MUR,MUM ) ) + ( ( RMSe * MUR ) * Max( DS,MUR ) ) ) - Max( ( Max( DS,RMSe ) * ( RCSe / DS ) ),( Min( MUC ,DS ) * ( RCSe - MUM ) ) ) ) ) + Max( ( ( Min( Max( RMSe,MUC ) ,( RMSe + MLU ) ) / ( ( RRSe + RMSe ) * Max( MUM,RMSe ) ) ) - ( ( ( MUM + RRSe ) * ( CS - RRSe ) ) / ( ( MUC + MLU ) + ( DS / MUR ) ) ) ),( ( Min( ( MUC - CS ) ,( MUC - RMSe ) ) - ( ( RMSe + MUR ) - Min( CS ,CS ) ) ) / ( Min( Min( MUM ,RCSe ) ,( CS + MUR ) ) / ( ( MLU + MUR ) - ( MUM + MLU ) ) ) ) ) ) ,( ( Max( Min( ( ( MUC - RMSe ) / Max( CS,MUM ) ) ,( Max( MLU,CS ) / ( RRSe - RRSe ) ) ),Max( Min( Min( MUC ,MUM ) ,Min( MUC ,RRSe ) ),( ( DS + MUC ) - Max( MLU,CS ) ) ) ) - ( Min( ( ( DS * CS ) / ( MUC / CS ) ) ,( Min( MLU ,MLU ) * Min( RMSe ,MUM ) ) ) * ( Min( Min( DS ,CS ) ,( MUM + CS ) ) - ( Max( MUR,DS ) * Max( RCSe,MLU ) ) ) ) ) - ( Min( Max( Min( ( MUR - CS ) ,Max( RMSe,RMSe ) ),Min( ( RRSe - MUR ) ,( MLU + MLU ) ) ) ,( ( Max( DS,DS ) + Min( RCSe ,DS ) ) - ( ( RMSe * MUM ) / ( RMSe - DS ) ) ) ) + ( ( ( Min( DS ,MLU ) - ( RMSe * RCSe ) ) * ( ( RRSe + DS ) + Max( MUC,MUR ) ) ) * ( ( ( MUC * RMSe ) * ( RMSe - CS ) ) - ( ( MUC - DS ) / ( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.8360995850622407, "obj2": 0.11998479399367953}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8568464730290456, "obj2": 0.1168323893332862}], "8": [{"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / DS ) / Max( MUM,RMSe ) )", "obj1": 0.08713692946058091, "obj2": 0.776593506502073}, {"determining": "( ( PN - ( FirstVNF_RAM - Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Max( ( ( Min( RRSe ,MUC ) + ( MUM * RCSe ) ) / ( ( MUR - RCSe ) + ( MUC * MUM ) ) ),( Min( ( MUM / MUM ) ,Min( CS ,MUM ) ) * Max( ( RRSe * RCSe ),Max( DS,RMSe ) ) ) ) / ( ( ( ( MLU + MUC ) / ( RMSe * MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) - Max( ( ( RRSe / RCSe ) / ( MUR * MLU ) ),( ( DS + RCSe ) * Min( DS ,MUC ) ) ) ) ) ,( ( ( ( Min( MUR ,MUC ) / ( RCSe * MUM ) ) * ( Max( RMSe,MUM ) + ( MLU / RCSe ) ) ) + ( ( ( DS / RMSe ) / ( MLU + RCSe ) ) + ( ( MUR - CS ) + ( CS + MUC ) ) ) ) + ( ( ( ( DS * RRSe ) - Max( RMSe,MLU ) ) / ( ( MUC / DS ) - Min( MUR ,RMSe ) ) ) / ( ( Min( CS ,CS ) + Max( RCSe,MUM ) ) / Min( ( MUM - MUR ) ,Min( RRSe ,RRSe ) ) ) ) ) ) + ( Min( ( ( ( Max( MUR,RRSe ) + Max( CS,MUR ) ) * Max( ( MUC + RRSe ),( CS - DS ) ) ) * ( Min( Min( RCSe ,RCSe ) ,( RCSe / MUR ) ) * Max( ( MLU - RCSe ),( MUR + MUM ) ) ) ) ,Max( ( ( ( RMSe * DS ) - ( RRSe - RRSe ) ) * ( ( MLU - RRSe ) / Max( RMSe,RRSe ) ) ),( ( Max( RMSe,RRSe ) * ( RCSe / CS ) ) - Min( ( RRSe + RCSe ) ,( RRSe * MLU ) ) ) ) ) / Min( Max( ( Max( Max( CS,MUM ),( CS / MLU ) ) / ( ( MLU + CS ) - ( RMSe / RRSe ) ) ),Min( ( ( CS / CS ) + ( MUC - RMSe ) ) ,Min( Min( CS ,RCSe ) ,Min( DS ,RCSe ) ) ) ) ,Max( ( Min( Min( RMSe ,RRSe ) ,( MLU + MUC ) ) + ( ( RCSe * MUC ) / ( MUM / DS ) ) ),( ( ( RCSe - RRSe ) / ( DS + RCSe ) ) * Max( Min( MLU ,MLU ),( MLU + RCSe ) ) ) ) ) ) ) - Min( ( ( Max( ( ( ( MUM + MUM ) + ( MLU - DS ) ) * ( ( MUM / DS ) + ( RMSe + MUM ) ) ),( ( ( MUR + RMSe ) * ( DS * MUR ) ) / Min( Max( CS,MUM ) ,Min( RRSe ,DS ) ) ) ) - ( ( ( ( DS + CS ) - Max( MUR,MUM ) ) + ( ( RMSe * MUR ) * Max( DS,MUR ) ) ) - Max( ( Max( DS,RMSe ) * ( RCSe / DS ) ),( Min( MUC ,DS ) * ( RCSe - MUM ) ) ) ) ) + Max( ( ( Min( Max( RMSe,MUC ) ,( RMSe + MLU ) ) / ( ( RRSe + RMSe ) * Max( MUM,RMSe ) ) ) - ( ( ( MUM + RRSe ) * ( CS - RRSe ) ) / ( ( MUC + MLU ) + ( DS / MUR ) ) ) ),( ( Min( ( MUC - CS ) ,( MUC - RMSe ) ) - ( ( RMSe + MUR ) - Min( CS ,CS ) ) ) / ( Min( Min( MUM ,RCSe ) ,( CS + MUR ) ) / ( ( MLU + MUR ) - ( MUM + MLU ) ) ) ) ) ) ,( ( Max( Min( ( ( MUC - RMSe ) / Max( CS,MUM ) ) ,( Max( MLU,CS ) / ( RRSe - RRSe ) ) ),Max( Min( Min( MUC ,MUM ) ,Min( MUC ,RRSe ) ),( ( DS + MUC ) - Max( MLU,CS ) ) ) ) - ( Min( ( ( DS * CS ) / ( MUC / CS ) ) ,( Min( MLU ,MLU ) * Min( RMSe ,MUM ) ) ) * ( Min( Min( DS ,CS ) ,( MUM + CS ) ) - ( Max( MUR,DS ) * Max( RCSe,MLU ) ) ) ) ) - ( Min( Max( Min( ( MUR - MUC ) ,Max( RMSe,RMSe ) ),Min( ( RRSe - MUR ) ,( MLU + MLU ) ) ) ,( ( Max( DS,DS ) + Min( RCSe ,DS ) ) - ( ( RMSe * MUM ) / ( RMSe - DS ) ) ) ) + ( ( ( Min( DS ,MLU ) - ( RMSe * RCSe ) ) * ( ( RRSe + DS ) + Max( MUC,MUR ) ) ) * ( MUM / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / DS ) / Max( MUM,RMSe ) )", "obj1": 0.08713692946058091, "obj2": 0.776593506502073}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( MRS - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem - FirstVNF_RAM ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( ( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,CS ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.6390041493775933, "obj2": 0.28170203403865446}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.0954356846473029, "obj2": 0.75379444480923}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Max( PN,( PN + BR ) ) + ( ARS - AMS ) )", "choosing": "( ( RRSe * RMSe ) / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) )", "obj1": 0.7655601659751037, "obj2": 0.18124728522430933}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( ( AMS - BR ) + ( BR * FirstVNF_Mem ) ) ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,( Max( RRSe,( MUM - CS ) ) * ( RMSe + RMSe ) ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.5871369294605809, "obj2": 0.3055119049232652}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_RAM ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( CS / RMSe ) / DS )", "obj1": 0.524896265560166, "obj2": 0.34386961706001573}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( ( DDR / FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / MUC ) / RMSe )", "obj1": 0.4107883817427386, "obj2": 0.46031000983295217}, {"determining": "( ( ( ( BR / BR ) + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( ( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( ARS - FirstVNF_RAM ) ) ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,CS ) )", "obj1": 0.9004149377593361, "obj2": 0.06991184827706909}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7240663900414938, "obj2": 0.19627390450455756}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,MUM ) )", "obj1": 0.45435684647302904, "obj2": 0.41258326732747785}, {"determining": "( ( ( ( BR / BR ) + ( ( ( PN - ( FirstVNF_RAM + MDR ) ) + ( ARS - FirstVNF_RAM ) ) / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RCSe ) / ( Min( RRSe ,RRSe ) * RMSe ) )", "obj1": 0.8153526970954357, "obj2": 0.13208585938432735}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - FirstVNF_RAM ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) ) / CS )", "obj1": 0.3962655601659751, "obj2": 0.46929176141828843}, {"determining": "( ( CRS - ( FirstVNF_RAM + MDR ) ) + ( ARS - BR ) )", "choosing": "( Max( Max( MUR,RMSe ),Max( MUM,MLU ) ) * ( ( ( Min( MUM ,MUC ) / Min( MUM ,MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.8340248962655602, "obj2": 0.11356295621330012}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - ( MDR * ARS ) )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * MUR ) ) - CS ) + Max( Min( CS ,CS ),DS ) ) )", "obj1": 0.7842323651452282, "obj2": 0.16368550129276238}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( ( ACS * FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) ) )", "obj1": 0.6950207468879668, "obj2": 0.2272962069333428}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,( ( AMS - BR ) + Max( AMS,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( DS,( ( MUR / MLU ) - Max( MLU,( Max( RRSe,( MUM - CS ) ) * ( RMSe + RMSe ) ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9543568464730291, "obj2": 0.032746493930168104}, {"determining": "( Max( Const,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( DS * DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.35477178423236516, "obj2": 0.5070355797207255}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5560165975103735, "obj2": 0.32964247457376844}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( CS,DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / CS ) ) )", "obj1": 0.8506224066390041, "obj2": 0.10594030443816888}, {"determining": "( ( Const - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8796680497925311, "obj2": 0.0798796856199814}, {"determining": "( ( ( AMS + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RCSe ) / CS )", "obj1": 0.7116182572614108, "obj2": 0.21406210210775356}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / MUC ) / RMSe )", "obj1": 0.36721991701244816, "obj2": 0.4866851712037731}, {"determining": "( Min( Const ,( ( Max( ACS,FirstVNF_Mem ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - ( ( MUM / MUC ) / ( MUC * RMSe ) ) ) ) - ( CS - ( ( ( MUM / RMSe ) / MUM ) / Min( CS ,CS ) ) ) )", "obj1": 0.5103734439834025, "obj2": 0.3755794444405236}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.3008298755186722, "obj2": 0.556136231604021}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.9066390041493776, "obj2": 0.04454689429551832}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "Max( Min( RCSe ,MUC ),( ( ( ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) )", "obj1": 0.9647302904564315, "obj2": 0.017114135663599386}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.5186721991701245, "obj2": 0.3655704324476046}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / MUC ) / RMSe )", "obj1": 0.5, "obj2": 0.39667759138712133}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( Max( ACS,FirstVNF_Mem ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - ( ( MUM / MUC ) / ( MUC * RMSe ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.475103734439834, "obj2": 0.4037040847218672}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ARS,( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - ( ( MUM / MUC ) / ( MUC * RMSe ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.17012448132780084, "obj2": 0.6590695916922432}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / MUM )", "obj1": 0.14522821576763487, "obj2": 0.6892511867051112}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ARS,( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.5809128630705395, "obj2": 0.3140744834400383}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / DS ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6784232365145229, "obj2": 0.2409200611424966}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.3250589888593649}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.9273858921161826, "obj2": 0.038839303840734474}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( MUC ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8734439834024896, "obj2": 0.09657950063207259}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( PN / ARS ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.18672199170124482, "obj2": 0.6497777114111407}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3070539419087137, "obj2": 0.5458540413571716}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) / ( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * RMSe ) / Max( MUM,RMSe ) )", "obj1": 0.16390041493775934, "obj2": 0.6884629394327892}, {"determining": "( ( PN - ( PN + BR ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( MLU / RMSe ) / Min( MLU ,CS ) )", "obj1": 0.3381742738589212, "obj2": 0.5180769708307317}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ),DDR ) - ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) + BR ) )", "choosing": "( ( RMSe / RMSe ) / Min( CS ,( ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) / MUC ) / ( MUC * RMSe ) ) ) )", "obj1": 0.27800829875518673, "obj2": 0.5680777545088945}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.33402489626556015, "obj2": 0.5246701949355639}], "9": [{"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / DS ) / Max( MUM,RMSe ) )", "obj1": 0.08713692946058091, "obj2": 0.776593506502073}, {"determining": "( ( RRS + CRS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( ( MLU / DS ) + MUM ) + ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_RAM - Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Max( ( ( Min( RRSe ,MUC ) + ( MUM * RCSe ) ) / ( ( MUR - RCSe ) + ( MUC * MUM ) ) ),( Min( ( MUM / MUM ) ,Min( CS ,MUM ) ) * Max( ( RRSe * RCSe ),Max( DS,RMSe ) ) ) ) / ( ( ( ( MLU + MUC ) / ( RMSe * MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) - Max( ( ( RRSe / RCSe ) / ( MUR * MLU ) ),( ( DS + RCSe ) * Min( DS ,MUC ) ) ) ) ) ,( ( ( ( Min( MUR ,MUC ) / ( RCSe * MUM ) ) * ( Max( RMSe,MUM ) + ( MLU / RCSe ) ) ) + ( ( ( DS / RMSe ) / ( MLU + RCSe ) ) + ( ( MUR - CS ) + ( CS + MUC ) ) ) ) + ( ( ( ( DS * RRSe ) - Max( RMSe,MLU ) ) / ( ( MUC / DS ) - Min( MUR ,RMSe ) ) ) / ( ( Min( CS ,CS ) + Max( RCSe,MUM ) ) / Min( ( MUM - MUR ) ,Min( RRSe ,RRSe ) ) ) ) ) ) + ( Min( ( ( ( Max( MUR,RRSe ) + Max( CS,MUR ) ) * Max( ( MUC + RRSe ),( CS - DS ) ) ) * ( Min( Min( RCSe ,RCSe ) ,( RCSe / MUR ) ) * Max( ( MLU - RCSe ),( MUR + MUM ) ) ) ) ,Max( ( ( ( RMSe * DS ) - ( RRSe - RRSe ) ) * ( ( MLU - RRSe ) / Max( RMSe,RRSe ) ) ),( ( Max( RMSe,RRSe ) * ( RCSe / CS ) ) - Min( ( RRSe + RCSe ) ,( RRSe * MLU ) ) ) ) ) / Min( Max( ( Max( Max( CS,MUM ),( CS / MLU ) ) / ( ( MLU + CS ) - ( RMSe / RRSe ) ) ),Min( ( ( CS / CS ) + ( MUC - RMSe ) ) ,Min( Min( CS ,RCSe ) ,Min( DS ,RCSe ) ) ) ) ,Max( ( Min( Min( RMSe ,RRSe ) ,( MLU + MUC ) ) + ( ( RCSe * MUC ) / ( MUM / DS ) ) ),( ( ( RCSe - RRSe ) / ( DS + RCSe ) ) * Max( Min( MLU ,MLU ),( MLU + RCSe ) ) ) ) ) ) ) - Min( ( ( Max( ( ( ( MUM + MUM ) + ( MLU - DS ) ) * ( ( MUM / DS ) + ( RMSe + MUM ) ) ),( ( ( MUR + RMSe ) * ( DS * MUR ) ) / Min( Max( CS,MUM ) ,Min( RRSe ,DS ) ) ) ) - ( ( ( ( DS + CS ) - Max( MUR,MUM ) ) + ( ( RMSe * MUR ) * Max( DS,MUR ) ) ) - Max( ( Max( DS,RMSe ) * ( RCSe / DS ) ),( Min( MUC ,DS ) * ( RCSe - MUM ) ) ) ) ) + Max( ( ( Min( Max( RMSe,MUC ) ,( RMSe + MLU ) ) / ( ( RRSe + RMSe ) * Max( MUM,RMSe ) ) ) - ( ( ( MUM + RRSe ) * ( CS - RRSe ) ) / ( ( MUC + MLU ) + ( DS / MUR ) ) ) ),( ( Min( ( MUC - CS ) ,( MUC - RMSe ) ) - ( ( RMSe + MUR ) - Min( CS ,CS ) ) ) / ( Min( Min( MUM ,RCSe ) ,( CS + MUR ) ) / ( ( MLU + MUR ) - ( MUM + MLU ) ) ) ) ) ) ,( ( Max( Min( ( ( MUC - RMSe ) / Max( CS,MUM ) ) ,( Max( MLU,CS ) / ( RRSe - RRSe ) ) ),Max( Min( Min( MUC ,MUM ) ,Min( MUC ,RRSe ) ),( ( DS + MUC ) - Max( MLU,CS ) ) ) ) - ( Min( ( ( DS * CS ) / ( MUC / CS ) ) ,( Min( MLU ,MLU ) * Min( RMSe ,MUM ) ) ) * ( Min( Min( DS ,CS ) ,( MUM + CS ) ) - ( Max( MUR,DS ) * Max( RCSe,MLU ) ) ) ) ) - ( Min( Max( Min( ( MUR - MUC ) ,Max( RMSe,RMSe ) ),Min( ( RRSe - MUR ) ,( MLU + MLU ) ) ) ,( ( Max( DS,DS ) + Min( RCSe ,DS ) ) - ( ( RMSe * MUM ) / ( RMSe - DS ) ) ) ) + ( ( ( Min( DS ,MLU ) - ( RMSe * RCSe ) ) * ( ( RRSe + DS ) + Max( MUC,MUR ) ) ) * ( MUM / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / DS ) / Max( MUM,RMSe ) )", "obj1": 0.08713692946058091, "obj2": 0.776593506502073}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / RMSe ) ) )", "obj1": 0.6120331950207469, "obj2": 0.28041982771354}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - FirstVNF_RAM ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6763485477178424, "obj2": 0.24247023291724099}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5809128630705395, "obj2": 0.2967229989917537}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( PN / ARS ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.18464730290456433, "obj2": 0.6460441714060706}, {"determining": "( ( ( AMS + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7655601659751037, "obj2": 0.17290179254059926}, {"determining": "( ( ( ( BR / BR ) + ( ( ( PN - ( FirstVNF_RAM + MDR ) ) + ( ARS - FirstVNF_RAM ) ) / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RCSe ) / ( Min( RRSe ,RRSe ) * RMSe ) )", "obj1": 0.8153526970954357, "obj2": 0.13208585938432735}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.0995850622406639, "obj2": 0.7449702780275788}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( Min( CS ,CS ),DS ) ) )", "obj1": 0.8858921161825726, "obj2": 0.05157645223273295}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( Min( FirstVNF_Mem_Server ,RRS ),Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - ( MDR * ARS ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8070539419087137, "obj2": 0.15469844010987163}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ),DDR ) - ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) + BR ) )", "choosing": "( ( RMSe / RMSe ) / Min( CS ,( ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) / MUC ) / ( MUC * RMSe ) ) ) )", "obj1": 0.27800829875518673, "obj2": 0.5680777545088945}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( MLU - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.42738589211618255, "obj2": 0.44899710898866924}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.487551867219917, "obj2": 0.3845653189221248}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_RAM ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( CS / RMSe ) / DS )", "obj1": 0.524896265560166, "obj2": 0.34386961706001573}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.9190871369294605, "obj2": 0.037557269298420556}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) / ( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * RMSe ) / Max( MUM,RMSe ) )", "obj1": 0.16390041493775934, "obj2": 0.6884629394327892}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7323651452282157, "obj2": 0.19165436265216337}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.29045643153526973, "obj2": 0.5500069561112845}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,( ( AMS - BR ) + Max( AMS,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( DS,( ( MUR / MLU ) - Max( MLU,( Max( RRSe,( MUM - CS ) ) * ( RMSe + RMSe ) ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9543568464730291, "obj2": 0.032746493930168104}, {"determining": "( Min( Const ,( ( Max( ACS,FirstVNF_Mem ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - ( ( MUM / MUC ) / ( MUC * RMSe ) ) ) ) - ( CS - ( ( ( MUM / RMSe ) / MUM ) / Min( CS ,CS ) ) ) )", "obj1": 0.5103734439834025, "obj2": 0.3755794444405236}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( AMS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / ( ( MUM / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) ) / CS ) ) / CS )", "obj1": 0.8630705394190872, "obj2": 0.09141316449539479}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU / RMSe ) / Min( CS ,CS ) )", "obj1": 0.5186721991701245, "obj2": 0.3655704324476046}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / MUM )", "obj1": 0.14522821576763487, "obj2": 0.6892511867051112}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ARS,( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - ( ( MUM / MUC ) / ( MUC * RMSe ) ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.17012448132780084, "obj2": 0.6590695916922432}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( ( ACS * FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) ) )", "obj1": 0.6950207468879668, "obj2": 0.2272962069333428}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.553941908713693, "obj2": 0.3422438432915796}, {"determining": "( ( ( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( Min( RRSe ,RRSe ) * RMSe ) ) / CS )", "obj1": 0.24896265560165975, "obj2": 0.5881776018002546}, {"determining": "( ( CRS - ( FirstVNF_RAM + MDR ) ) + ( ARS - BR ) )", "choosing": "( Max( Max( MUR,RMSe ),Max( MUM,MLU ) ) * ( ( ( Min( MUM ,MUC ) / Min( MUM ,MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.8340248962655602, "obj2": 0.11356295621330012}, {"determining": "( ( Const - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe / RMSe ) / Min( CS ,CS ) )", "obj1": 0.8796680497925311, "obj2": 0.0798796856199814}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3070539419087137, "obj2": 0.5458540413571716}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.38381742738589214, "obj2": 0.4777205103460271}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - Const ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - ( ( BR * Const ) * ( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( Min( MLU ,RMSe ) / Min( MUC ,CS ) ) ) )", "obj1": 0.475103734439834, "obj2": 0.3989880327823907}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ARS,( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + BR ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.21374788225844904}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( Min( ( ARS - FirstVNF_RAM ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.33195020746887965, "obj2": 0.5183589527373453}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.3250589888593649}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - FirstVNF_RAM ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) ) / CS )", "obj1": 0.3962655601659751, "obj2": 0.46929176141828843}, {"determining": "( Max( PN,( PN + BR ) ) + ( Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0038089594965705115}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * BR ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "Max( Min( MLU ,MUC ),RMSe )", "obj1": 0.975103734439834, "obj2": 0.010611777476033637}, {"determining": "( ( PN - ( PN + BR ) ) + ( ARS - FirstVNF_RAM ) )", "choosing": "( ( MLU / RMSe ) / Min( MLU ,CS ) )", "obj1": 0.35892116182572614, "obj2": 0.5058396032786007}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) * ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( MDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RMSe / RMSe ) / Min( CS ,MUM ) )", "obj1": 0.45435684647302904, "obj2": 0.41258326732747785}, {"determining": "( Max( Const,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( DS * DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.35477178423236516, "obj2": 0.5070355797207255}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.08921161825726141, "obj2": 0.7548831200759013}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - ( MDR * ARS ) )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * MUR ) ) - CS ) + Max( Min( CS ,CS ),DS ) ) )", "obj1": 0.7842323651452282, "obj2": 0.16368550129276238}], "10": [{"determining": "( ( RRS + CRS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( ( MLU / DS ) + MUM ) + ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + CRS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( ( MLU / DS ) + MUM ) + ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5809128630705395, "obj2": 0.2967229989917537}, {"determining": "( ( ( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( Min( RRSe ,RRSe ) * RMSe ) ) / CS )", "obj1": 0.24896265560165975, "obj2": 0.5881776018002546}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9253112033195021, "obj2": 0.032224813723150114}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / RMSe ) ) )", "obj1": 0.6120331950207469, "obj2": 0.28041982771354}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5668956630270903}, {"determining": "( ( CRS - ( FirstVNF_RAM + MDR ) ) + ( ARS - BR ) )", "choosing": "( Max( Max( MUR,RMSe ),Max( MUM,MLU ) ) * ( ( ( Min( MUM ,MUC ) / Min( MUM ,MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.8340248962655602, "obj2": 0.11356295621330012}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / Min( MUM ,MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.975103734439834, "obj2": 0.009536316278141607}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.3250589888593649}, {"determining": "( ( ( ( BR / BR ) + ( ( ( PN - ( Max( DDR,FirstVNF_Mem ) + MDR ) ) + ( ARS - FirstVNF_RAM ) ) * CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / MLU ) / ( Min( RRSe ,RRSe ) * RMSe ) )", "obj1": 0.8672199170124482, "obj2": 0.07922573010700977}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,AMS ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / ( PN * CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( RMSe / MLU ) / MUC ) / CS )", "obj1": 0.8443983402489627, "obj2": 0.0837053071280092}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.19050798811632033}, {"determining": "( ( ( AMS + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7655601659751037, "obj2": 0.17290179254059926}, {"determining": "( Max( Const,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.34439834024896265, "obj2": 0.5025796678955587}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - Const ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - ( ( BR * Const ) * ( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( Min( MLU ,RMSe ) / Min( MUC ,CS ) ) ) )", "obj1": 0.475103734439834, "obj2": 0.3989880327823907}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / CS ) ) )", "obj1": 0.6307053941908713, "obj2": 0.26458075315116514}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.0995850622406639, "obj2": 0.7449702780275788}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.487551867219917, "obj2": 0.3845653189221248}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_RAM ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( CS / RMSe ) / DS )", "obj1": 0.524896265560166, "obj2": 0.34386961706001573}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.553941908713693, "obj2": 0.3422438432915796}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.29045643153526973, "obj2": 0.5500069561112845}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( Min( CS ,CS ),DS ) ) )", "obj1": 0.8858921161825726, "obj2": 0.05157645223273295}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.36400729198635795}, {"determining": "( ( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / ( ( CS / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) ) / CS ) ) / CS )", "obj1": 0.6535269709543569, "obj2": 0.2595730162209113}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.38381742738589214, "obj2": 0.4777205103460271}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( MLU - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.42738589211618255, "obj2": 0.44899710898866924}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.9066390041493776, "obj2": 0.04310422398008243}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS - ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.14522821576763487, "obj2": 0.6892511867051112}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( Min( Max( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ),Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( ( ACS * FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Max( MUR,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,RRSe ) ) )", "obj1": 0.7240663900414938, "obj2": 0.19830379638553608}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( Max( Const,DDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RCSe ) ) - CS ) + Max( Min( CS ,CS ),DS ) ) )", "obj1": 0.37344398340248963, "obj2": 0.4959690406089023}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * RRS ) ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "Max( RMSe,( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) + Max( CS,DS ) ) )", "obj1": 0.6950207468879668, "obj2": 0.22729620693334276}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3070539419087137, "obj2": 0.5458540413571716}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( Min( MLU ,RMSe ) / Min( CS ,MUM ) )", "obj1": 0.45435684647302904, "obj2": 0.41258326732747785}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + BR ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.21374788225844904}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - FirstVNF_RAM ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6659751037344398, "obj2": 0.250755653442108}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( ( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) / RMSe ) / MUM )", "obj1": 0.16597510373443983, "obj2": 0.6737706514318512}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( PN * ARS ) ) )", "choosing": "( ( MUM + ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) ) / CS )", "obj1": 0.2012448132780083, "obj2": 0.6321427756046105}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( BR * Const ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * ( BR - MDR ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.8049792531120332, "obj2": 0.1516441874269028}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) / ( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * RMSe ) / Max( MUM,RMSe ) )", "obj1": 0.16390041493775934, "obj2": 0.6884629394327892}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( Min( ( ARS - FirstVNF_RAM ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.33195020746887965, "obj2": 0.5183589527373453}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.6867219917012448, "obj2": 0.2424426274934454}, {"determining": "( Min( Const ,( ( Max( ACS,FirstVNF_Mem ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,Max( RMSe,RRSe ) ),( ( MUR / MLU ) - ( ( MUM / MUC ) / ( MUC * RMSe ) ) ) ) - ( CS - ( ( ( MUM / RMSe ) / MUM ) / Min( CS ,CS ) ) ) )", "obj1": 0.5103734439834025, "obj2": 0.3755794444405236}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem ) + Max( ( PN - ( FirstVNF_RAM - Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) ),MDR ) ) ) - ( MDR * ARS ) )", "choosing": "Max( ( Max( ( ( Min( RRSe ,MUC ) + ( MUM * RCSe ) ) / ( ( MUR - RCSe ) + ( MUC * MUM ) ) ),( Min( ( MUM / MUM ) ,Min( CS ,MUM ) ) * Max( ( RRSe * RCSe ),Max( DS,RMSe ) ) ) ) / ( ( ( ( MLU + MUC ) / ( RMSe * MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) - Max( ( ( RRSe / RCSe ) / ( MUR * MLU ) ),( ( DS + RCSe ) * Min( DS ,MUC ) ) ) ) ),( ( ( ( MUM / MUC ) / ( MUC * MUR ) ) - CS ) + Max( Min( CS ,CS ),DS ) ) )", "obj1": 0.8029045643153527, "obj2": 0.16059487204951248}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - Const ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - ( ( BR * Const ) * ( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( Min( MLU ,RMSe ) / Min( MUC ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.43951373961519363}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - ( MDR * ARS ) )", "choosing": "( ( RMSe / RMSe ) / Min( CS ,MUM ) )", "obj1": 0.8132780082987552, "obj2": 0.13568732968257838}], "11": [{"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - ( Max( Const,DDR ) - ( FirstVNF_RAM + BR ) ) ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + CRS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( ( MLU / DS ) + MUM ) + ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.8112033195020747, "obj2": 0.11343300261134588}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - FirstVNF_RAM ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - FirstVNF_RAM ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.1908713692946058, "obj2": 0.6282647460734729}, {"determining": "( ( ( AMS + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7655601659751037, "obj2": 0.17290179254059926}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5668956630270903}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS - ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.14522821576763487, "obj2": 0.6892511867051112}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.24066390041493776, "obj2": 0.5852161299947475}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.17634854771784234, "obj2": 0.6569611260617513}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( FirstVNF_RAM + MDR ) * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),( MUM + MLU ) ) * ( ( ( ( MUM / MUC ) / Min( MUM ,MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.9730290456431535, "obj2": 0.009367597694379802}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,AMS ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / ( PN * CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( RMSe / MLU ) / MUC ) / CS )", "obj1": 0.8443983402489627, "obj2": 0.0837053071280092}, {"determining": "( Min( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( ( MUM / RMSe ) ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM - RMSe ) / CS ) ) )", "obj1": 0.9564315352697096, "obj2": 0.02866587806252331}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.36099585062240663, "obj2": 0.4930996212518814}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.0995850622406639, "obj2": 0.7449702780275788}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.38381742738589214, "obj2": 0.4777205103460271}, {"determining": "( Min( Min( ( BR - FirstVNF_Mem_Server ) ,Max( BR,ACS ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * ( BR - MDR ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + RMSe ) ) * ( ( ( ( MUM / RMSe ) / MLU ) - CS ) - Max( RMSe,RCSe ) ) )", "obj1": 0.7987551867219918, "obj2": 0.15550801932679575}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - DDR )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6846473029045643, "obj2": 0.2182262143921416}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM - BR ) )", "choosing": "( Min( MLU ,RMSe ) / Min( CS ,MUM ) )", "obj1": 0.45435684647302904, "obj2": 0.41258326732747785}, {"determining": "( ( ( ( BR / BR ) + ( ( ( PN - ( Max( DDR,FirstVNF_Mem ) + MDR ) ) + ( ARS - FirstVNF_RAM ) ) / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Max( ( MRS + Const ),Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) ) / CS )", "obj1": 0.8651452282157677, "obj2": 0.06896070459915217}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_RAM ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( CS / RMSe ) / DS )", "obj1": 0.524896265560166, "obj2": 0.34386961706001573}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / RMSe ) ) )", "obj1": 0.6120331950207469, "obj2": 0.28041982771354}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + BR ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.21374788225844904}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( DDR ,Min( Min( FirstVNF_RAM_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( ( MUC / CS ) / CS )", "obj1": 0.7344398340248963, "obj2": 0.1839057088988926}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / CS ) ) )", "obj1": 0.6307053941908713, "obj2": 0.26458075315116514}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM + RMSe ) / CS )", "obj1": 0.5746887966804979, "obj2": 0.30248685092307026}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - ( ( BR * Const ) / ( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * ( BR / MDR ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR + MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / CS ) / Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.15073108656834563}, {"determining": "( ( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / MUC ) / MUC )", "obj1": 0.6410788381742739, "obj2": 0.25190427524913594}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.29045643153526973, "obj2": 0.5500069561112845}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6763485477178424, "obj2": 0.23772550765241832}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - ( ( ( Min( BR ,DDR ) - ( MRS + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( Max( ( MUR / ( MUM + RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,( MLU - ( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4004149377593361, "obj2": 0.46950270778987246}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.2987551867219917, "obj2": 0.5451638013953117}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9253112033195021, "obj2": 0.032224813723150114}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( Min( ( ARS - FirstVNF_RAM ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.33195020746887965, "obj2": 0.5183589527373453}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - Const ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - ( ( BR * Const ) * ( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( Min( MLU ,RMSe ) / Min( MUC ,CS ) ) ) )", "obj1": 0.475103734439834, "obj2": 0.3989880327823907}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( ( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RCSe ) * ( RMSe + RMSe ) ) / RMSe ) / MUM )", "obj1": 0.16597510373443983, "obj2": 0.6737706514318512}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) - Min( Const ,MRS ) ),( ( MRS + Const ) - Max( ( ( ( FirstVNF_Mem + ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / RRSe ) / RRSe )", "obj1": 0.16182572614107885, "obj2": 0.6779838059492391}, {"determining": "( ( ( CRS * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( Min( RRSe ,( ( MLU / DS ) + MUM ) ) * RMSe ) ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.6001587472748033}, {"determining": "( Max( ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM - RMSe ) / CS )", "obj1": 0.5809128630705395, "obj2": 0.2967229989917537}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,BR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.6161825726141079, "obj2": 0.27582565327082653}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.553941908713693, "obj2": 0.3422438432915796}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) / Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4730290456431535, "obj2": 0.4056529167545066}, {"determining": "( Max( Const,DDR ) - ( MDR + BR ) )", "choosing": "( ( MLU / RMSe ) / CS )", "obj1": 0.34439834024896265, "obj2": 0.5025796678955587}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.5, "obj2": 0.38250386851637674}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.3250589888593649}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.0954356846473029, "obj2": 0.7523387351118557}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( Min( FirstVNF_Mem_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7219917012448133, "obj2": 0.2003826606547187}], "12": [{"determining": "( Min( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( ( MUM / RMSe ) ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM - RMSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - ( Max( Const,DDR ) - ( FirstVNF_RAM + BR ) ) ) ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.8112033195020747, "obj2": 0.11343300261134588}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Min( Min( ( PN + AMS ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Min( RMSe ,( ( ( MUM / MUC ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4336099585062241, "obj2": 0.4373726767105858}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9004149377593361, "obj2": 0.042022466874711374}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.36099585062240663, "obj2": 0.4930996212518814}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6763485477178424, "obj2": 0.23772550765241832}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,AMS ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / ( PN * CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( RMSe / MLU ) / MUC ) / CS )", "obj1": 0.8443983402489627, "obj2": 0.0837053071280092}, {"determining": "( ( ( AMS + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7655601659751037, "obj2": 0.17290179254059926}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.0995850622406639, "obj2": 0.7449702780275788}, {"determining": "( ( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / MUC ) / MUC )", "obj1": 0.6410788381742739, "obj2": 0.25190427524913594}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.3250589888593649}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( CS / RMSe ) / DS )", "obj1": 0.8734439834024896, "obj2": 0.06474652111784926}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( Min( ( ARS - FirstVNF_RAM ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.33195020746887965, "obj2": 0.5183589527373453}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - ( ( BR * Const ) / ( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * ( BR / MDR ) ) ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUM / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ),Min( ( MUR + MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / CS ) / Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.15073108656834563}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( CS - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.524896265560166, "obj2": 0.3436856482346996}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / RMSe ) ) )", "obj1": 0.6120331950207469, "obj2": 0.28041982771354}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),( DDR + FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUR / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - Max( RCSe,MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.47925311203319504, "obj2": 0.37870827881385954}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) - Min( Const ,MRS ) ),( ( MRS + Const ) - Max( ( ( ( FirstVNF_Mem + ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / RRSe ) / RRSe )", "obj1": 0.17219917012448133, "obj2": 0.6543586050065306}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.553941908713693, "obj2": 0.3422438432915796}, {"determining": "( Max( Const,DDR ) - ( MDR + BR ) )", "choosing": "( ( MLU / RMSe ) / CS )", "obj1": 0.34439834024896265, "obj2": 0.5025796678955587}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5668956630270903}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ARS - FirstVNF_RAM ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) - ( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( ( ( MUM / RMSe ) / RRSe ),DS ) / RMSe ) / CS )", "obj1": 0.5124481327800829, "obj2": 0.3763552256500774}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM + RMSe ) / CS )", "obj1": 0.5746887966804979, "obj2": 0.30248685092307026}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.5228215767634855, "obj2": 0.3669983134193578}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.29045643153526973, "obj2": 0.5500069561112845}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( ( ( ( ( MRS * ARS ) * Min( Const ,MRS ) ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( ( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM / RMSe ) / RMSe ) / MUM )", "obj1": 0.14522821576763487, "obj2": 0.6892511867051112}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.2987551867219917, "obj2": 0.5451638013953117}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Const ,Min( Min( FirstVNF_RAM_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( RRSe / CS )", "obj1": 0.7510373443983402, "obj2": 0.17695553379533202}, {"determining": "( Min( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * ( BR * FirstVNF_Mem ) ) ) ) - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( ( MUM / RMSe ) ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / ( RCSe * MLU ) ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / CS ) ) )", "obj1": 0.9564315352697096, "obj2": 0.028665878062523308}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( FirstVNF_RAM + MDR ) * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.9730290456431535, "obj2": 0.009367597694379802}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9253112033195021, "obj2": 0.032224813723150114}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.475103734439834, "obj2": 0.3951486288063691}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( FirstVNF_RAM + MDR ) * Const ) ) * Min( ( Const * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) ,( Const / ARS ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),( MUM + MLU ) ) * ( ( ( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / Min( MUM ,MUC ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6225631131328816}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) - Min( Const ,MRS ) ),( ( MRS + Const ) - Max( ( ( ( FirstVNF_Mem + ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / RRSe ) / RRSe )", "obj1": 0.16182572614107885, "obj2": 0.6779838059492391}, {"determining": "( Min( Min( ( BR - FirstVNF_Mem_Server ) ,Max( BR,ACS ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * ( BR - MDR ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + RMSe ) ) * ( ( ( ( MUM / RMSe ) / MLU ) - CS ) - Max( RMSe,RCSe ) ) )", "obj1": 0.7987551867219918, "obj2": 0.15550801932679575}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS - ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.14522821576763487, "obj2": 0.6892511867051112}, {"determining": "( ( ( CRS * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( Min( RRSe ,( ( MLU / DS ) + MUM ) ) * RMSe ) ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.6001587472748033}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( ( DDR + FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Min( MUM ,RMSe ) / CS )", "obj1": 0.5809128630705395, "obj2": 0.2967229989917537}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,BR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.6161825726141079, "obj2": 0.27582565327082653}, {"determining": "( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( DDR ,Min( Min( FirstVNF_RAM_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS )", "choosing": "( ( MUC / CS ) / CS )", "obj1": 0.7344398340248963, "obj2": 0.1839057088988926}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / CS ) ) )", "obj1": 0.45228215767634855, "obj2": 0.42187022645776734}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.46887966804979253, "obj2": 0.40381109570706014}, {"determining": "( Min( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ) ,( ARS - DDR ) ) - DDR )", "choosing": "( ( Max( MLU,MLU ) / RMSe ) / CS )", "obj1": 0.9543568464730291, "obj2": 0.030605443566433327}], "13": [{"determining": "( Min( Min( ( BR - FirstVNF_Mem_Server ) ,Max( BR,ACS ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * ( BR - MDR ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + RMSe ) ) * ( ( ( ( MUM / RMSe ) / MLU ) - CS ) - Max( RMSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) ,( ARS - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / Min( RMSe ,CS ) ),( ( Min( ( MUM / RMSe ) ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM - RMSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.12656597618769738}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / RRSe )", "obj1": 0.42531120331950206, "obj2": 0.43461044967940105}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,AMS ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / ( PN * CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( RMSe / MLU ) / MUC ) / CS )", "obj1": 0.8443983402489627, "obj2": 0.0837053071280092}, {"determining": "( ( ( AMS + ( ARS / CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7655601659751037, "obj2": 0.17290179254059926}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.622390312518843}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,FirstVNF_RAM ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7095435684647303, "obj2": 0.2165588927578301}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.8112033195020747, "obj2": 0.11343300261134588}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.49377593360995853, "obj2": 0.36826784645903315}, {"determining": "( Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR * ACS ) ) * ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.3250589888593649}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.33195020746887965, "obj2": 0.5036277997326806}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( ( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUM / RMSe ) / RMSe ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.36721991701244816, "obj2": 0.4849873779219741}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5668956630270903}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) + Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MLU / MUR ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.5145228215767634, "obj2": 0.35029614403275466}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.553941908713693, "obj2": 0.3422438432915796}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * ( MLU + MLU ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.11203319502074689, "obj2": 0.7274909561300142}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) - Min( Const ,MRS ) ),( ( MRS + Const ) - Max( ( ( ( FirstVNF_Mem + ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / RRSe ) / RRSe )", "obj1": 0.13900414937759337, "obj2": 0.7105230261184429}, {"determining": "( ( ( ( ( ( ( Max( Const,DDR ) - ( MDR + BR ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( MLU / CS )", "obj1": 0.6369294605809128, "obj2": 0.25685095450274154}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,BR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.6161825726141079, "obj2": 0.27582565327082653}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM + RMSe ) / CS )", "obj1": 0.5746887966804979, "obj2": 0.30248685092307026}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( MUM - ( CS - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9004149377593361, "obj2": 0.042022466874711374}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( ( BR * Const ),MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( Min( PN ,AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUC ) / MLU ) - CS ) / Max( MUM,RMSe ) )", "obj1": 0.8547717842323651, "obj2": 0.076862672601818}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.29045643153526973, "obj2": 0.5500069561112845}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),( DDR + FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUR / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - Max( RCSe,MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.47925311203319504, "obj2": 0.3785630164633982}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( ARS,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM * RMSe ) / MUC )", "obj1": 0.8008298755186722, "obj2": 0.12358010820959676}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / RMSe ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2875940084524689}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8900414937759336, "obj2": 0.04616562140755352}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( CS - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.524896265560166, "obj2": 0.3436856482346996}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ARS - FirstVNF_RAM ) ) ,( Min( ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Const ,Min( Min( FirstVNF_RAM_Server ,RRS ) ,RRS ) ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) - ( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( ( ( ( RRSe / CS ) / RMSe ) / RRSe ),DS ) / RMSe ) / CS )", "obj1": 0.7178423236514523, "obj2": 0.20995149318478634}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6763485477178424, "obj2": 0.23772550765241832}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.36099585062240663, "obj2": 0.4930996212518814}, {"determining": "( ( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / MUC ) / MUC )", "obj1": 0.6410788381742739, "obj2": 0.25190427524913594}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS / Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.4328295638075968}, {"determining": "( Max( Const,DDR ) - ( MDR + BR ) )", "choosing": "( ( MLU / RMSe ) / CS )", "obj1": 0.34439834024896265, "obj2": 0.5025796678955587}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( ( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / MUC ) / MUC )", "obj1": 0.2717842323651452, "obj2": 0.5862675584970326}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,RCSe ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9253112033195021, "obj2": 0.032224813723150114}, {"determining": "( Min( ACS ,Min( ACS ,PN ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( MUM / RMSe ) / MUC ) / CS )", "obj1": 0.24688796680497926, "obj2": 0.597883180817048}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * MRS ) ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / CS ) ) )", "obj1": 0.45228215767634855, "obj2": 0.42187022645776734}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ARS ) * Min( Const ,MRS ) ) * ( PN / BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),Min( ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) ) / RMSe ) + RMSe ) / MLU )", "obj1": 0.15975103734439833, "obj2": 0.6752090965702758}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( MUM - ( CS - ( ( ( DS - RCSe ) / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9647302904564315, "obj2": 0.01883726805247679}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( AMS - MDR ) / ( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( CS / Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,RCSe ) ) ) ) / DS )", "obj1": 0.8755186721991701, "obj2": 0.06320158202381918}, {"determining": "( ( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.26348547717842324, "obj2": 0.5923386422896304}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.4605809128630705, "obj2": 0.41497718963541275}, {"determining": "( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_RAM ) ) - ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( FirstVNF_RAM + MDR ) * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / MUC ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.9730290456431535, "obj2": 0.009367597694379802}], "14": [{"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( ARS,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM * RMSe ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( BR - FirstVNF_Mem_Server ) ,Max( BR,ACS ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,( ( ( Max( BR,DDR ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * ( BR - MDR ) ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + RMSe ) ) * ( ( ( ( MUM / RMSe ) / MLU ) - CS ) - Max( RMSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,( CRS / BR ) ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MLU / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7219917012448133, "obj2": 0.19264710983476468}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MLU / DS ) / CS )", "obj1": 0.1037344398340249, "obj2": 0.7252985264254261}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUC,RMSe ) )", "obj1": 0.4066390041493776, "obj2": 0.4333333422078025}, {"determining": "( Min( ACS ,Min( ACS ,PN ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( MUM / RMSe ) / MUC ) / CS )", "obj1": 0.24688796680497926, "obj2": 0.597883180817048}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( MUM / MUC ) + RRSe ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.553941908713693, "obj2": 0.3270840676663256}, {"determining": "( Min( ( DDR + ( ARS - FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - DDR )", "choosing": "( Max( ( ( MLU / RMSe ) / ( RMSe + CS ) ),( ( Min( DS ,DS ) / Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Max( ( ( MUM / RMSe ) / RRSe ),DS ) ) ) ) / ( MLU / ( ( MUM / RMSe ) / RMSe ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2875940084524689}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,BR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.6161825726141079, "obj2": 0.27582565327082653}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( ( BR * Const ),MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + DDR ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( MUR / RMSe ) / MLU ) - CS ) / Max( MUM,RMSe ) )", "obj1": 0.8360995850622407, "obj2": 0.09117447619767678}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM + RMSe ) / CS )", "obj1": 0.5746887966804979, "obj2": 0.30248685092307026}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.12656597618769738}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( CS - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.524896265560166, "obj2": 0.3436856482346996}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.26141078838174275, "obj2": 0.5692563911887781}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,RCSe ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9253112033195021, "obj2": 0.032224813723150114}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - ( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( CRS,( CRS - MDR ) ) ) + Max( Max( Min( ACS ,FirstVNF_RAM ),( CRS - MDR ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) - ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( Min( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ,Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.14937759336099585, "obj2": 0.7088747201970135}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ) ,( ( ( Max( BR,FirstVNF_RAM ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / ( ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6804979253112033, "obj2": 0.23650436207105086}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.622390312518843}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( MUM - ( CS - ( ( ( DS - RCSe ) / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9605809128630706, "obj2": 0.021295597105562225}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( DDR / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.44813278008298757, "obj2": 0.4065715345806408}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( RRSe / DS ) / Max( MUM,RMSe ) )", "obj1": 0.8112033195020747, "obj2": 0.11343300261134588}, {"determining": "( ( ( ( ( ( ( Max( Const,DDR ) - ( MDR + BR ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( MLU / CS )", "obj1": 0.6369294605809128, "obj2": 0.25685095450274154}, {"determining": "( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,ARS ),( BR * MRS ) ) ,( ( ( Max( BR,FirstVNF_RAM ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( ( MLU / DS ),( ( ( MUM / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR + MLU ) ,Max( MLU,( CS * ( RMSe + RRSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6680497925311203, "obj2": 0.2506315070416036}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - ( Min( MDR ,RRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RCSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( DS * MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.46265560165975106, "obj2": 0.39124079264539574}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.2697095435684647, "obj2": 0.5614787545205316}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ACS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3257261410788382, "obj2": 0.5114668207512428}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) + Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MLU / MUR ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.5145228215767634, "obj2": 0.35029614403275466}, {"determining": "( Max( Const,FirstVNF_CPU ) - ( MDR + ( ( DDR + ( AMS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - RRS ) ) - ( ( MDR * CRS ) / Min( DDR ,PN ) ) ) ) ) )", "choosing": "( ( CS / RRSe ) / RRSe )", "obj1": 0.5560165975103735, "obj2": 0.30501978909912825}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.44190871369294604, "obj2": 0.41930408943127245}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7842323651452282, "obj2": 0.1173947955098182}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.36099585062240663, "obj2": 0.4930996212518814}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.17634854771784234, "obj2": 0.660562997715734}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.29045643153526973, "obj2": 0.5500069561112845}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.4979253112033195, "obj2": 0.3638682673299389}, {"determining": "( Max( Const,DDR ) - ( MDR + BR ) )", "choosing": "( ( MLU / RMSe ) / CS )", "obj1": 0.34439834024896265, "obj2": 0.5025796678955587}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ARS ) * Min( Const ,MRS ) ) * ( PN / BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),Min( ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) ) / RMSe ) + RMSe ) / MLU )", "obj1": 0.15767634854771784, "obj2": 0.6766201804822647}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * Max( PN,BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( Const - ( RRS * FirstVNF_Mem ) ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + RRSe ) + CS ) / ( MUM * RMSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7153736381743816}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.37136929460580914, "obj2": 0.4702493430965779}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) * ( Min( Max( ( MRS + MRS ),( CRS - FirstVNF_CPU_Server ) ) ,( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( ( MUM / MUC ) / MUC )", "obj1": 0.6410788381742739, "obj2": 0.25190427524913594}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( FirstVNF_RAM + ( Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) ) / DS )", "obj1": 0.8858921161825726, "obj2": 0.04883471954236807}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.29045643153526973, "obj2": 0.5500069561112845}, {"determining": "( Max( PN,( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( DS ,DS ) ) ) ) / DS )", "obj1": 0.8651452282157677, "obj2": 0.059709803296610235}, {"determining": "( Max( Const,DDR ) - ( MDR + BR ) )", "choosing": "( ( MLU / RMSe ) / CS )", "obj1": 0.16804979253112035, "obj2": 0.6621512256538042}], "15": [{"determining": "( ( ( ( ( FirstVNF_Mem_Server * ARS ) * Min( Const ,MRS ) ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( ARS,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( MUM * RMSe ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.1016597510373444, "obj2": 0.7081788349465771}, {"determining": "( ( PN - ( ( CRS - MDR ) + Min( Max( ( DDR + ( ARS - FirstVNF_RAM ) ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6286307053941909, "obj2": 0.24185921450650547}, {"determining": "( ( PN - ( ACS + Max( MRS,MDR ) ) ) + Max( ACS,BR ) )", "choosing": "( Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUC / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) ) ) )", "obj1": 0.7800829875518672, "obj2": 0.1056680597328081}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUC,RMSe ) )", "obj1": 0.6473029045643154, "obj2": 0.21193041294238205}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) * ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( MRS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / Max( MUM,RMSe ) )", "obj1": 0.7095435684647303, "obj2": 0.1801870999558804}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.09336099585062241, "obj2": 0.7562913844661445}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( ( BR * Const ),MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + DDR ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( MUR / RMSe ) / MLU ) - CS ) / Max( MUM,RMSe ) )", "obj1": 0.8360995850622407, "obj2": 0.09117447619767678}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.35269709543568467, "obj2": 0.4817470495467832}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( MUM - ( CS - ( ( ( DS - RCSe ) / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9605809128630706, "obj2": 0.021295597105562225}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,BR ) - ( BR - MDR ) ) ) + Max( ( ( ( ( DDR / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) * Min( Const ,MRS ) ),( ( ARS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / Max( RCSe,RCSe ) ) / Max( MUM,RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.7031980399305557}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,CRS ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,MUC ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7240663900414938, "obj2": 0.1529464890409361}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( BR * MRS ) ) ,( ( ( Max( BR,( CRS / BR ) ) - BR ) - Max( MDR,FirstVNF_Mem ) ) * Min( ( AMS - MDR ) ,( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( RMSe / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7012448132780082, "obj2": 0.20186960187132008}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( ( BR * Const ),MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + DDR ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8381742738589212, "obj2": 0.08910552189691101}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6721991701244814, "obj2": 0.20485670807032835}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,BR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.6161825726141079, "obj2": 0.27582565327082653}, {"determining": "( Max( PN,( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( DS ,DS ) ) ) ) / DS )", "obj1": 0.8651452282157677, "obj2": 0.059709803296610235}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.24066390041493776, "obj2": 0.5842465279332851}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.33195020746887965, "obj2": 0.5002034220400678}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUM / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR + MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7717842323651453, "obj2": 0.12896295402786975}, {"determining": "( ( PN + ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Max( RMSe,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( Max( Max( RCSe,RRSe ),( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9253112033195021, "obj2": 0.03222481372315011}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - ( Min( MDR ,RRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RCSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( DS * MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.46265560165975106, "obj2": 0.39124079264539574}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( MLU - ( RMSe * RCSe ) ) )", "obj1": 0.475103734439834, "obj2": 0.3791344457045529}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.622390312518843}, {"determining": "( ( PN - ( FirstVNF_RAM + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.975103734439834, "obj2": 0.009533277866800237}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ACS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3257261410788382, "obj2": 0.5114668207512428}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3962655601659751, "obj2": 0.44127822709120795}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ARS ) * Min( Const ,MRS ) ) * ( PN / BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),Min( ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) ) / RMSe ) + RMSe ) / MLU )", "obj1": 0.15767634854771784, "obj2": 0.6740518668055296}, {"determining": "( Max( Const,FirstVNF_CPU ) - ( MDR + ( ( DDR + ( AMS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - RRS ) ) - ( ( MDR * CRS ) / Min( DDR ,PN ) ) ) ) ) )", "choosing": "( ( CS / RRSe ) / RRSe )", "obj1": 0.5560165975103735, "obj2": 0.30501978909912825}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( BR * FirstVNF_RAM ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( ( MUM / RMSe ) / ( MUC * RMSe ) ),( ( CS - Max( DS,CS ) ) - ( Min( DS ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.549792531120332, "obj2": 0.3320982164424452}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5871369294605809, "obj2": 0.29712859967677757}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR + RRS ),Min( DDR ,PN ) ) ) ) ,CRS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Max( MUM,RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( MUM ,DS ) ) ) ) / DS )", "obj1": 0.36721991701244816, "obj2": 0.4648389115662702}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3132780082987552, "obj2": 0.5310118248586237}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) / RMSe ) / CS )", "obj1": 0.17634854771784234, "obj2": 0.660562997715734}, {"determining": "( ( PN - ( ACS / Min( ( ( DDR + ( ARS + FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( DDR / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.44813278008298757, "obj2": 0.4065715345806408}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( PN,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MLU / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4138831796623437}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( ( CRS / BR ),( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( CS - ( ( MUM / RMSe ) / RMSe ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.495850622406639, "obj2": 0.3701632194004815}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM + RMSe ) / CS )", "obj1": 0.5746887966804979, "obj2": 0.30248685092307026}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) + ( MDR * RRS ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MLU / Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) / CS )", "obj1": 0.15560165975103735, "obj2": 0.6949433263857356}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.2551867219917012, "obj2": 0.5760677384467132}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.2842323651452282, "obj2": 0.5449820094008176}, {"determining": "( ( BR - Max( MDR,FirstVNF_Mem ) ) + ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / ( MLU / DS ) )", "obj1": 0.995850622406639, "obj2": 0.004087160863047332}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.29045643153526973, "obj2": 0.5401101551788416}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5575870332031818}, {"determining": "( ( AMS - ( FirstVNF_RAM / Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( DDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS * CS ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}], "16": [{"determining": "( ( ( DDR + ( FirstVNF_RAM - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM * MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ARS ) * Min( Const ,MRS ) ) * ( PN * BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Max( MRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7614107883817427, "obj2": 0.08834702325246445}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / ( Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.8464730290456431, "obj2": 0.08499506509839655}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,BR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / RMSe ) / CS )", "obj1": 0.6161825726141079, "obj2": 0.27582565327082653}, {"determining": "( ( PN - ( ( CRS - MDR ) + Min( Max( ( DDR + ( ARS - FirstVNF_RAM ) ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6286307053941909, "obj2": 0.24185921450650547}, {"determining": "( ( PN + ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Max( RMSe,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( Max( Max( RCSe,RRSe ),( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.529045643153527, "obj2": 0.33668634240269746}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,BR ) - ( BR - MDR ) ) ) + Max( ( ( ( ( DDR / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) * Min( Const ,MRS ) ),( ( ARS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.13485477178423236, "obj2": 0.6890597690978557}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( MLU - MUM ) )", "obj1": 0.49377593360995853, "obj2": 0.364334528913002}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUC,RMSe ) )", "obj1": 0.6473029045643154, "obj2": 0.21193041294238205}, {"determining": "( ( PN - ( ACS / Min( ( ( DDR + ( ARS + FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.09336099585062241, "obj2": 0.7562913844661445}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.34647302904564314, "obj2": 0.481190861937709}, {"determining": "( ( AMS - ( FirstVNF_RAM / Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( DDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS * CS ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * CRS ) ) )", "choosing": "( ( ( ( MUM / MUM ) / RRSe ) - ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6950207468879668, "obj2": 0.18577112072461535}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR + RRS ),Min( DDR ,PN ) ) ) ) ,CRS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Max( MUM,RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( MUM ,DS ) ) ) ) / DS )", "obj1": 0.36721991701244816, "obj2": 0.4648389115662702}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.1016597510373444, "obj2": 0.7081788349465771}, {"determining": "( ( PN + ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Max( RMSe,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( Max( Max( RCSe,RRSe ),( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9253112033195021, "obj2": 0.03222481372315011}, {"determining": "( Max( Const,FirstVNF_CPU ) - ( MDR + ( ( DDR + ( AMS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - RRS ) ) - ( ( MDR * CRS ) / Min( DDR ,PN ) ) ) ) ) )", "choosing": "( ( CS / RRSe ) / RRSe )", "obj1": 0.5560165975103735, "obj2": 0.30501978909912825}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6721991701244814, "obj2": 0.20485670807032835}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + ( BR * MRS ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - MLU ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.2925311203319502, "obj2": 0.5224683809684816}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( MUM - ( CS - ( ( ( DS - RCSe ) / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9605809128630706, "obj2": 0.021295597105562225}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - ( Min( MDR ,RRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RCSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( DS * MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.46265560165975106, "obj2": 0.39124079264539574}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( BR * FirstVNF_RAM ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( ( MUM / RMSe ) / ( MUC * RMSe ) ),( ( CS - Max( DS,CS ) ) - ( Min( DS ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.549792531120332, "obj2": 0.3320982164424452}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / CS )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / RRSe )", "obj1": 0.44190871369294604, "obj2": 0.3959835966356503}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ARS ) * Min( Const ,MRS ) ) * ( PN / BR ) ) * Max( Min( ACS ,Min( ACS ,PN ) ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),Min( ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) ) / RMSe ) + RMSe ) / MLU )", "obj1": 0.15767634854771784, "obj2": 0.6740518668055296}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) * ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( MRS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / Max( MUM,RMSe ) )", "obj1": 0.7095435684647303, "obj2": 0.1801870999558804}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( AMS ,MDR ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3215767634854772, "obj2": 0.5173149969925961}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5575870332031818}, {"determining": "( ( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( ( BR * Const ),MDR ) ) ) - CRS ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,( ( PN + DDR ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / Max( MLU,( DS * MUC ) ) )", "obj1": 0.8547717842323651, "obj2": 0.07629681640320214}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * ( MUM + RRSe ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3983402489626556, "obj2": 0.4375788609657665}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( PN,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MLU / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4138831796623437}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7240663900414938, "obj2": 0.1529464890409361}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( ARS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.14730290456431536, "obj2": 0.6830003235683766}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM + RMSe ) / CS )", "obj1": 0.5746887966804979, "obj2": 0.30248685092307026}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5871369294605809, "obj2": 0.29712859967677757}, {"determining": "( ( PN - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( Max( CRS,BR ) + ( PN * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3381742738589212, "obj2": 0.4996862807334019}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM / RMSe ) / RRSe )", "obj1": 0.5871369294605809, "obj2": 0.29712859967677757}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.29045643153526973, "obj2": 0.5401101551788416}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MLU / Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.44874432279824855}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.24066390041493776, "obj2": 0.5842465279332851}, {"determining": "( ( FirstVNF_RAM - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / CS )", "obj1": 0.17842323651452283, "obj2": 0.6563329471163596}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6597510373443983, "obj2": 0.20607627718186186}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ACS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / RMSe ),( MUM + MLU ) ) * ( ( ( ( MUM / RMSe ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3257261410788382, "obj2": 0.5114668207512428}], "17": [{"determining": "( ( PN - ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( ( MLU / CS ) / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + Max( MRS,MDR ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM * MUC ) / RMSe ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Max( MRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.7614107883817427, "obj2": 0.08834702325246445}, {"determining": "( ( PN - ( ( CRS - MDR ) + Min( Max( ( DDR + ( ARS - FirstVNF_RAM ) ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6286307053941909, "obj2": 0.24185921450650547}, {"determining": "( ( MDR - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.5954356846473029, "obj2": 0.26341925345985107}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,FirstVNF_Mem ) + ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) ) ) - CRS ) )", "choosing": "( Max( Max( MUR,RMSe ),( MLU + MLU ) ) * ( ( ( ( MUM / MUC ) / ( Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( RRSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) ) - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.8464730290456431, "obj2": 0.08499506509839655}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7531120331950207, "obj2": 0.11747446724056528}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( ( MUM / RMSe ) / CS ) ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.49377593360995853, "obj2": 0.3534091167919891}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5575870332031818}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MLU / Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) / CS )", "obj1": 0.8734439834024896, "obj2": 0.055358280009236094}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.34647302904564314, "obj2": 0.481190861937709}, {"determining": "( ( AMS - ( FirstVNF_RAM / Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( DDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS * CS ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * CRS ) ) )", "choosing": "( ( ( ( MUM / MUM ) / RRSe ) - ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6950207468879668, "obj2": 0.18577112072461535}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR + RRS ),Min( DDR ,PN ) ) ) ) ,CRS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Max( MUM,RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( MUM ,DS ) ) ) ) / DS )", "obj1": 0.36721991701244816, "obj2": 0.4648389115662702}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.09336099585062241, "obj2": 0.7562913844661445}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.29045643153526973, "obj2": 0.5401101551788416}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6701244813278008, "obj2": 0.20048300648957326}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( PN,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MLU / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4138831796623437}, {"determining": "( Max( Const,FirstVNF_CPU ) - ( MDR + ( ( DDR + ( AMS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - RRS ) ) - ( ( MDR * CRS ) / Min( DDR ,PN ) ) ) ) ) )", "choosing": "( ( CS / RRSe ) / RRSe )", "obj1": 0.5560165975103735, "obj2": 0.30501978909912825}, {"determining": "( ( PN - ( ACS / Min( ( ( DDR + ( ARS + FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * ( MUM + RRSe ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3983402489626556, "obj2": 0.4375788609657665}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( BR * FirstVNF_RAM ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( ( MUM / RMSe ) / ( MUC * RMSe ) ),( ( CS - Max( DS,CS ) ) - ( Min( DS ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.549792531120332, "obj2": 0.3320982164424452}, {"determining": "( Max( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( ( Max( DDR,FirstVNF_Mem ) + ( MDR * ARS ) ) ,( ( ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) ) ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5871369294605809, "obj2": 0.29712859967677757}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + ( BR * MRS ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - MLU ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.2925311203319502, "obj2": 0.5224683809684816}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN * BR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR - MDR ) ) ) + Max( ( ( Max( PN,( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),( ( ARS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.14730290456431536, "obj2": 0.6830003235683766}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * FirstVNF_Mem ) ) )", "choosing": "( MUM - ( CS - ( ( ( DS - RCSe ) / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9605809128630706, "obj2": 0.021295597105562225}, {"determining": "( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,MRS ) + ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) ) ) - CRS ) ) + ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Min( MLU ,MUC ) ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 0.9377593360995851, "obj2": 0.028425093085029496}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUC,MUR ) )", "obj1": 0.6473029045643154, "obj2": 0.21193041294238205}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,FirstVNF_CPU ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,RCSe ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.16483074469727071}, {"determining": "( ( FirstVNF_RAM - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / Min( CS ,CS ) ) + MLU ) / CS )", "obj1": 0.17842323651452283, "obj2": 0.6563329471163596}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / RRSe )", "obj1": 0.44190871369294604, "obj2": 0.3959835966356503}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9149377593360996, "obj2": 0.03443772318393222}, {"determining": "( ( PN - ( ACS + Min( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( Max( MUR,RMSe ) * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8692946058091287, "obj2": 0.058112766313291625}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( ACS * FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RCSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) + ( Min( MLU ,MUR ) + Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.48132780082987553, "obj2": 0.3750013955539763}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.15560165975103735, "obj2": 0.6646917507904216}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Max( RMSe,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.529045643153527, "obj2": 0.33668634240269746}, {"determining": "( ( PN + ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Max( RMSe,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( Max( Max( RCSe,RRSe ),( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.529045643153527, "obj2": 0.33668634240269746}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( MUM / RMSe ) / ( MUC * RMSe ) ),( ( CS - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / Min( MLU ,( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( Min( MLU ,DS ) / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.9875518672199171, "obj2": 0.009168580896843317}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( MLU - MUM ) )", "obj1": 0.483402489626556, "obj2": 0.3724026247434118}, {"determining": "( ( FirstVNF_RAM - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) * ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.1016597510373444, "obj2": 0.7081788349465771}, {"determining": "( ( PN - ( ACS + Min( ( ( Max( ( MDR * RRS ),Min( FirstVNF_Mem_Server ,PN ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,( MUR / MLU ) ) ) - ( RMSe - ( ( MLU / MUC ) / Min( CS ,CS ) ) ) )", "obj1": 0.9149377593360996, "obj2": 0.03443772318393222}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Const ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC / RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3153526970954357, "obj2": 0.5190332286234286}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) * ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( MRS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR / ( MUM * RMSe ) ),( ( MUR / MLU ) - Max( MLU,MLU ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / Max( MUM,RMSe ) )", "obj1": 0.7095435684647303, "obj2": 0.1801870999558804}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - BR ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RMSe )", "obj1": 0.12033195020746888, "obj2": 0.6991316292242172}], "18": [{"determining": "( ( MRS - Const ) - Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ),AMS ) )", "choosing": "( ( ( Max( ( Min( ( ( RCSe * CS ) - ( MUR / CS ) ) ,( Max( RCSe,RMSe ) - ( MUC + MUM ) ) ) - Max( ( ( RRSe + RMSe ) / Min( MLU ,RCSe ) ),Max( ( RRSe - RCSe ),Max( MUR,MUC ) ) ) ),( ( ( Min( CS ,CS ) - Max( MUR,CS ) ) / Max( ( MUM * RMSe ),( RMSe - RCSe ) ) ) + ( ( ( CS - RCSe ) + ( RRSe - MUC ) ) * ( ( MUR - RMSe ) / ( MUR / MUR ) ) ) ) ) - ( ( ( Max( ( MLU - CS ),( MUM + CS ) ) - ( Min( DS ,CS ) - ( DS * RMSe ) ) ) * ( ( ( DS - MUR ) + Max( RRSe,RMSe ) ) - ( ( RRSe * MUR ) + ( MLU / RMSe ) ) ) ) * ( Min( ( ( MLU - MUM ) / ( MUM + RRSe ) ) ,Max( ( MUR + MUM ),( RMSe / CS ) ) ) * Max( ( ( CS - MLU ) * ( CS * DS ) ),( Min( RRSe ,RRSe ) / ( CS + DS ) ) ) ) ) ) * ( ( ( ( ( Max( MUR,RCSe ) + Max( RMSe,MUM ) ) - ( Max( MLU,RCSe ) + Min( MUC ,RRSe ) ) ) * Max( ( Min( RRSe ,MUM ) + ( MUR / RRSe ) ),( Min( MUR ,MUM ) - ( RRSe + MUC ) ) ) ) - Min( Min( Min( ( MUR + CS ) ,Max( RCSe,RCSe ) ) ,Max( ( RMSe * RCSe ),( MUM + DS ) ) ) ,Min( ( ( MUR * MLU ) + ( MUR - DS ) ) ,( ( RMSe * RMSe ) - Max( MUR,DS ) ) ) ) ) + Min( ( Min( Max( ( MLU * RRSe ),Max( RCSe,MUC ) ) ,( Min( RCSe ,CS ) * ( DS / RCSe ) ) ) - ( Min( ( MUR + MUC ) ,( MUC - MUR ) ) + ( ( MUM - MUC ) * Min( MUM ,CS ) ) ) ) ,Min( Min( Max( ( RMSe - DS ),( MUC - DS ) ) ,( ( RMSe - CS ) - Min( DS ,MLU ) ) ) ,( Max( ( RMSe - RRSe ),( MUM / MUC ) ) + Min( ( MUR + RMSe ) ,Max( MLU,CS ) ) ) ) ) ) ) + ( ( Max( ( ( ( ( RRSe / MUR ) / Max( DS,MUR ) ) / ( Max( DS,MUC ) / Min( RRSe ,MUC ) ) ) + Min( Min( Min( CS ,DS ) ,( DS / RMSe ) ) ,( ( CS - RRSe ) + ( MUR + RRSe ) ) ) ),( Max( Min( ( CS - MUM ) ,( MLU + RCSe ) ),Max( Min( CS ,MUR ),( DS / RRSe ) ) ) + ( ( ( RRSe - MLU ) - ( RCSe - RMSe ) ) - ( Min( MUM ,MLU ) + Min( DS ,MLU ) ) ) ) ) - Max( ( Max( Max( ( MLU - RRSe ),Min( CS ,DS ) ),( ( CS - CS ) + ( MUR + DS ) ) ) * Min( ( Min( RMSe ,MUR ) - ( DS + MUM ) ) ,( ( MUR - MLU ) * ( DS * RMSe ) ) ) ),( ( ( Min( RCSe ,MUR ) - ( DS + MUC ) ) + ( ( DS * RMSe ) + ( CS / MUC ) ) ) / Min( ( Max( RCSe,MLU ) - ( RMSe + CS ) ) ,Max( Min( MUR ,RMSe ),Min( MUR ,MUM ) ) ) ) ) ) * ( Max( ( Max( ( Max( MUR,MUR ) - Min( RCSe ,RCSe ) ),( ( MLU - RMSe ) * Min( MUR ,RRSe ) ) ) / Min( ( ( MUC + RRSe ) / ( MUC - MUM ) ) ,( ( RRSe + MUM ) * ( RCSe * MUC ) ) ) ),( ( Min( ( MUM * MUR ) ,( MUR / MUR ) ) * Min( ( CS * RRSe ) ,( DS * RMSe ) ) ) * ( Max( ( MUM - MUC ),Max( MUR,DS ) ) + Min( Max( CS,RMSe ) ,Min( MUC ,MUM ) ) ) ) ) - Min( ( ( ( ( MUC * MUC ) / Min( RRSe ,RMSe ) ) + ( ( MUM * MUR ) - ( DS * MUM ) ) ) + ( ( ( RMSe / RRSe ) + Max( MUM,RRSe ) ) + ( ( CS / CS ) - Min( DS ,DS ) ) ) ) ,( Min( ( Min( RRSe ,RRSe ) - Min( RRSe ,DS ) ) ,Max( ( MUM / MUM ),( MLU - RMSe ) ) ) + Min( ( ( MUM / MUR ) - ( RCSe + RRSe ) ) ,Min( ( RCSe + RMSe ) ,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( ( MLU / CS ) / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( MDR - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.5954356846473029, "obj2": 0.26341925345985107}, {"determining": "( ( PN - ( ( CRS - MDR ) + Min( Max( ( DDR + ( ARS - FirstVNF_RAM ) ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6286307053941909, "obj2": 0.24185921450650547}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR + RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Max( MUM,RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3091286307053942, "obj2": 0.5183690424300448}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Min( MDR ,RRS ) * ( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS * FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR - MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( MLU ,MLU ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8651452282157677, "obj2": 0.05543438710106701}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.29663640389680584}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( ACS / Min( ( ( DDR + ( ARS + FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUC,MUR ) )", "obj1": 0.6473029045643154, "obj2": 0.21193041294238205}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Min( MLU ,MUC ) ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 0.6576763485477178, "obj2": 0.19607588896978023}, {"determining": "( ( PN - ( ACS + Max( MRS,FirstVNF_CPU_Server ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,RMSe ) / RMSe )", "obj1": 0.7614107883817427, "obj2": 0.08834702325246445}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.09336099585062241, "obj2": 0.7562913844661445}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,FirstVNF_CPU ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,RCSe ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.16483074469727071}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_RAM + ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( RCSe * MLU ) ,Max( MUR,DS ) ) - ( Max( RMSe,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) ) / ( MLU / ( ( ( Max( RCSe,RRSe ) * ( DS - RCSe ) ) * Max( ( CS / RMSe ),Min( DS ,RMSe ) ) ) * MUC ) ) )", "obj1": 0.529045643153527, "obj2": 0.33668634240269746}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( ( MUM / RMSe ) / CS ) ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.49377593360995853, "obj2": 0.3534091167919891}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * CRS ) ) )", "choosing": "( ( ( ( MUM / MUM ) / RRSe ) - ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6950207468879668, "obj2": 0.18577112072461535}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RRSe * MUC ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.34647302904564314, "obj2": 0.481190861937709}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.533195020746888, "obj2": 0.30769342665976934}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( MLU - MUM ) ) ) ) / DS )", "obj1": 0.14730290456431536, "obj2": 0.6789380837183762}, {"determining": "( ( AMS - ( FirstVNF_RAM / Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( DDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS * CS ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( MLU - MUM ) )", "obj1": 0.17634854771784234, "obj2": 0.656139481113101}, {"determining": "( ( PN - ( FirstVNF_RAM - Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / ( ( MUM + RRSe ) / RRSe ) ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.24688796680497926, "obj2": 0.59170562878647}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.34647302904564314, "obj2": 0.481190861937709}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( PN,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MLU / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4138831796623437}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5575870332031818}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.8049792531120332, "obj2": 0.08639937504454245}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.7448132780082988, "obj2": 0.11968141843742704}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.12655601659751037, "obj2": 0.6927342116014344}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / RRSe )", "obj1": 0.44190871369294604, "obj2": 0.3959835966356503}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.45850622406639, "obj2": 0.38865933113756646}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * ( MUM + RRSe ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3983402489626556, "obj2": 0.4375788609657665}, {"determining": "( ( PN - ( DDR + Min( FirstVNF_Mem ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( MLU / Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5746072658475094}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + ( BR * MRS ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - MLU ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.2925311203319502, "obj2": 0.5224683809684816}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR * ( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) / ( MUC * ( MUM + RRSe ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ) * ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6970954356846473, "obj2": 0.17276466157603546}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7531120331950207, "obj2": 0.11747446724056528}, {"determining": "( Max( Const,FirstVNF_CPU ) - ( MDR + ( ( DDR + ( AMS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - RRS ) ) - ( ( MDR * CRS ) / Min( DDR ,PN ) ) ) ) ) )", "choosing": "( ( CS / RRSe ) / RRSe )", "obj1": 0.5560165975103735, "obj2": 0.30501978909912825}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.15560165975103735, "obj2": 0.6646917507904216}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2883817427385892, "obj2": 0.5452754424725115}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.4004149377593361, "obj2": 0.43362157417456926}, {"determining": "( ( FirstVNF_RAM - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.4730290456431535, "obj2": 0.3794358964032109}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.1016597510373444, "obj2": 0.7081788349465771}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ARS ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.9564315352697096, "obj2": 0.017455290095304783}, {"determining": "( ( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Const * Const ) ) * ( ( ( ARS - FirstVNF_RAM ) - ( Max( ACS,MRS ) + ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) ) ) - CRS ) ) + ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Min( MLU ,MUC ) ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 0.9377593360995851, "obj2": 0.028425093085029496}], "19": [{"determining": "( ( PN - ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ) + ( ACS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * CS ) ),Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Min( MLU ,MUC ) ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) - Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ),AMS ) )", "choosing": "( ( ( Max( ( Min( ( ( RCSe * CS ) - ( MUR / CS ) ) ,( Max( RCSe,RMSe ) - ( MUC + MUM ) ) ) - Max( ( ( RRSe + RMSe ) / Min( MLU ,RCSe ) ),Max( ( RRSe - RCSe ),Max( MUR,MUC ) ) ) ),( ( ( Min( CS ,CS ) - Max( MUR,CS ) ) / Max( ( MUM * RMSe ),( RMSe - RCSe ) ) ) + ( ( ( CS - RCSe ) + ( RRSe - MUC ) ) * ( ( MUR - RMSe ) / ( MUR / MUR ) ) ) ) ) - ( ( ( Max( ( MLU - CS ),( MUM + CS ) ) - ( Min( DS ,CS ) - ( DS * RMSe ) ) ) * ( ( ( DS - MUR ) + Max( RRSe,RMSe ) ) - ( ( RRSe * MUR ) + ( MLU / RMSe ) ) ) ) * ( Min( ( ( MLU - MUM ) / ( MUM + RRSe ) ) ,Max( ( MUR + MUM ),( RMSe / CS ) ) ) * Max( ( ( CS - MLU ) * ( CS * DS ) ),( Min( RRSe ,RRSe ) / ( CS + DS ) ) ) ) ) ) * ( ( ( ( ( Max( MUR,RCSe ) + Max( RMSe,MUM ) ) - ( Max( MLU,RCSe ) + Min( MUC ,RRSe ) ) ) * Max( ( Min( RRSe ,MUM ) + ( MUR / RRSe ) ),( Min( MUR ,MUM ) - ( RRSe + MUC ) ) ) ) - Min( Min( Min( ( MUR + CS ) ,Max( RCSe,RCSe ) ) ,Max( ( RMSe * RCSe ),( MUM + DS ) ) ) ,Min( ( ( MUR * MLU ) + ( MUR - DS ) ) ,( ( RMSe * RMSe ) - Max( MUR,DS ) ) ) ) ) + Min( ( Min( Max( ( MLU * RRSe ),Max( RCSe,MUC ) ) ,( Min( RCSe ,CS ) * ( DS / RCSe ) ) ) - ( Min( ( MUR + MUC ) ,( MUC - MUR ) ) + ( ( MUM - MUC ) * Min( MUM ,CS ) ) ) ) ,Min( Min( Max( ( RMSe - DS ),( MUC - DS ) ) ,( ( RMSe - CS ) - Min( DS ,MLU ) ) ) ,( Max( ( RMSe - RRSe ),( MUM / MUC ) ) + Min( ( MUR + RMSe ) ,Max( MLU,CS ) ) ) ) ) ) ) + ( ( Max( ( ( ( ( RRSe / MUR ) / Max( DS,MUR ) ) / ( Max( DS,MUC ) / Min( RRSe ,MUC ) ) ) + Min( Min( Min( CS ,DS ) ,( DS / RMSe ) ) ,( ( CS - RRSe ) + ( MUR + RRSe ) ) ) ),( Max( Min( ( CS - MUM ) ,( MLU + RCSe ) ),Max( Min( CS ,MUR ),( DS / RRSe ) ) ) + ( ( ( RRSe - MLU ) - ( RCSe - RMSe ) ) - ( Min( MUM ,MLU ) + Min( DS ,MLU ) ) ) ) ) - Max( ( Max( Max( ( MLU - RRSe ),Min( CS ,DS ) ),( ( CS - CS ) + ( MUR + DS ) ) ) * Min( ( Min( RMSe ,MUR ) - ( DS + MUM ) ) ,( ( MUR - MLU ) * ( DS * RMSe ) ) ) ),( ( ( Min( RCSe ,MUR ) - ( DS + MUC ) ) + ( ( DS * RMSe ) + ( CS / MUC ) ) ) / Min( ( Max( RCSe,MLU ) - ( RMSe + CS ) ) ,Max( Min( MUR ,RMSe ),Min( MUR ,MUM ) ) ) ) ) ) * ( Max( ( Max( ( Max( MUR,MUR ) - Min( RCSe ,RCSe ) ),( ( MLU - RMSe ) * Min( MUR ,RRSe ) ) ) / Min( ( ( MUC + RRSe ) / ( MUC - MUM ) ) ,( ( RRSe + MUM ) * ( RCSe * MUC ) ) ) ),( ( Min( ( MUM * MUR ) ,( MUR / MUR ) ) * Min( ( CS * RRSe ) ,( DS * RMSe ) ) ) * ( Max( ( MUM - MUC ),Max( MUR,DS ) ) + Min( Max( CS,RMSe ) ,Min( MUC ,MUM ) ) ) ) ) - Min( ( ( ( ( MUC * MUC ) / Min( RRSe ,RMSe ) ) + ( ( MUM * MUR ) - ( DS * MUM ) ) ) + ( ( ( RMSe / RRSe ) + Max( MUM,RRSe ) ) + ( ( CS / CS ) - Min( DS ,DS ) ) ) ) ,( Min( ( Min( RRSe ,RRSe ) - Min( RRSe ,DS ) ) ,Max( ( MUM / MUM ),( MLU - RMSe ) ) ) + Min( ( ( MUM / MUR ) - ( RCSe + RRSe ) ) ,Min( ( RCSe + RMSe ) ,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ( CRS - MDR ) + Min( Max( ( DDR + ( ARS - FirstVNF_RAM ) ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6286307053941909, "obj2": 0.24185921450650547}, {"determining": "( ( MDR - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.5954356846473029, "obj2": 0.26341925345985107}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5103734439834025, "obj2": 0.33369136230102475}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05990766064399185}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( PN - ( ACS / Min( ( ( DDR + ( ARS + FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3236514522821577, "obj2": 0.5014198958070002}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.09336099585062241, "obj2": 0.7562913844661445}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,FirstVNF_CPU ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,RCSe ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.16483074469727071}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.7448132780082988, "obj2": 0.11968141843742704}, {"determining": "( ( FirstVNF_RAM - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.18049792531120332, "obj2": 0.6359279629495146}, {"determining": "( ( AMS - ( FirstVNF_RAM / Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( DDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS * CS ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( Max( ( PN + AMS ),( FirstVNF_RAM_Server - Const ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2883817427385892, "obj2": 0.5452754424725115}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( ( FirstVNF_RAM + CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.533195020746888, "obj2": 0.30769342665976934}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.13692946058091288, "obj2": 0.6703919679944969}, {"determining": "( ( PN - ( FirstVNF_RAM - Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / ( ( MUM + RRSe ) / RRSe ) ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.24688796680497926, "obj2": 0.59170562878647}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * CRS ) ) )", "choosing": "( ( ( ( MUM / MUM ) / RRSe ) - ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6950207468879668, "obj2": 0.18577112072461535}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( PN,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MLU / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4138831796623437}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUM / RMSe ) / CS ) / MUC ) / CS ) / DS )", "obj1": 0.16804979253112035, "obj2": 0.6538921173748345}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.27385892116182575, "obj2": 0.5575870332031818}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Max( MUC,RMSe ) / RRSe ) / RRSe )", "obj1": 0.491701244813278, "obj2": 0.3706077632112137}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - PN ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( MUM / RRSe ) - CS ),RMSe ) )", "obj1": 0.34647302904564314, "obj2": 0.481190861937709}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.46887966804979253, "obj2": 0.37924212759538684}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RRSe * MUC ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.34647302904564314, "obj2": 0.481190861937709}, {"determining": "( ( PN - ( ACS + Max( MRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RMSe ) / RMSe )", "obj1": 0.7468879668049793, "obj2": 0.10099009165253639}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5767634854771784, "obj2": 0.2873854915665502}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) / RMSe ) / RMSe )", "obj1": 0.7717842323651453, "obj2": 0.086209892865795}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.15560165975103735, "obj2": 0.6620961292738083}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6618257261410788, "obj2": 0.19128620449676342}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUC,RMSe ) )", "obj1": 0.6473029045643154, "obj2": 0.21193041294238205}, {"determining": "( ( PN - ( DDR + Min( FirstVNF_Mem ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( MLU / Max( ( MUR / ( ( CS / RMSe ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5746072658475094}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + ( BR * MRS ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - MLU ) ),( Min( Min( MLU ,DS ) ,Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.2925311203319502, "obj2": 0.5224683809684816}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR * ( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) / ( MUC * ( MUM + RRSe ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ) * ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6970954356846473, "obj2": 0.17276466157603546}, {"determining": "Max( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ,DDR ) ) ),Max( RRS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.11410788381742738, "obj2": 0.6977059298954986}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - Max( DDR,FirstVNF_Mem ) ) ) * ARS ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,( MLU / ( CS * ( RMSe + RMSe ) ) ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - ( MUM / RMSe ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.9564315352697096, "obj2": 0.01702452597677058}, {"determining": "( ( PN - ( ACS + Max( MRS,FirstVNF_CPU_Server ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,RMSe ) / RMSe )", "obj1": 0.7614107883817427, "obj2": 0.08834702325246445}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.29663640389680584}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Min( MLU ,MUC ) ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 0.6576763485477178, "obj2": 0.19607588896978023}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUC,MUR ) )", "obj1": 0.6473029045643154, "obj2": 0.21193041294238205}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( ( MUM / RMSe ) / CS ) ) / ( MUC * RMSe ) ) - CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.49377593360995853, "obj2": 0.3534091167919891}, {"determining": "( ( PN - ( PN + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( MUM / RMSe ) ) ) / DS )", "obj1": 0.13278008298755187, "obj2": 0.6923606477378044}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.5477178423236515, "obj2": 0.3036133196341388}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR + RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Max( MUM,RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3091286307053942, "obj2": 0.5183690424300448}], "20": [{"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + BR ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ( PN + AMS ) / Max( DDR,FirstVNF_Mem ) ) + Const ) ) + ( ACS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * CS ) ),Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Min( MLU ,MUC ) ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / RMSe ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ( CRS - MDR ) + Min( Max( ( DDR + ( ARS - FirstVNF_RAM ) ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6286307053941909, "obj2": 0.24185921450650547}, {"determining": "( ( MDR - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.5954356846473029, "obj2": 0.26341925345985107}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.46887966804979253, "obj2": 0.37924212759538684}, {"determining": "( ( PN - ( ACS / Min( ( ( DDR + ( ARS + FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( ( FirstVNF_RAM + CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RRSe ) / MUM )", "obj1": 0.22199170124481327, "obj2": 0.6013884763486442}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.34232365145228216, "obj2": 0.48095368416895473}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.09336099585062241, "obj2": 0.7562913844661445}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5767634854771784, "obj2": 0.2873854915665502}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ( CRS / PN ) + ( PN - FirstVNF_RAM_Server ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUC / CS ) ) / ( MUC * RMSe ) ) - RMSe ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.45020746887966806, "obj2": 0.40782810950054477}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,FirstVNF_CPU ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,RCSe ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.16483074469727071}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - ( Min( MDR ,RRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( MUR / ( MUM * RMSe ) ),Max( ( CS / Min( MUM ,RMSe ) ),( ( MUR / MLU ) - Min( MLU ,MUC ) ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / CS ) + ( ( RRSe / MUC ) / Max( MUM,RMSe ) ) ) / MLU )", "obj1": 0.37136929460580914, "obj2": 0.47780929936131505}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.7448132780082988, "obj2": 0.11968141843742704}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.3775933609958506, "obj2": 0.45498179500159147}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.26348547717842324, "obj2": 0.5450319875099692}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5838908308178127}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / RMSe ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( FirstVNF_RAM + ( BR * CRS ) ) )", "choosing": "( ( ( ( MUM / MUM ) / RRSe ) - ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6950207468879668, "obj2": 0.18577112072461535}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + ( BR * MRS ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - MLU ) ),( Min( Min( MLU ,DS ) ,Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5373469381055122}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Max( MUC,RMSe ) / RRSe ) / RRSe )", "obj1": 0.491701244813278, "obj2": 0.3706077632112137}, {"determining": "( ( PN - ( ACS + Max( MRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RMSe ) / RMSe )", "obj1": 0.7468879668049793, "obj2": 0.10099009165253639}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) / RMSe ) / RMSe )", "obj1": 0.7717842323651453, "obj2": 0.086209892865795}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05990766064399185}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.15560165975103735, "obj2": 0.6620961292738083}, {"determining": "( ( AMS - ( FirstVNF_RAM / Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( DDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS * CS ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - Max( DDR,FirstVNF_Mem ) ) ) * ARS ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,( MLU / ( CS * ( RMSe + RMSe ) ) ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - ( MUM / RMSe ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.946058091286307, "obj2": 0.02149541630513883}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( PN,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MLU / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4138831796623437}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.533195020746888, "obj2": 0.30769342665976934}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6618257261410788, "obj2": 0.19128620449676342}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.29663640389680584}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.43728275065150457}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( FirstVNF_Mem * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + ( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.031639942653523406}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( PN - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / ( ( MUM / RRSe ) / CS ) ) ) ) / DS )", "obj1": 0.8858921161825726, "obj2": 0.048485857519421034}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,Const ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( Max( ( ( MUM / RMSe ) / CS ),DS ) / RCSe )", "obj1": 0.13692946058091288, "obj2": 0.6703919679944969}, {"determining": "( ( PN - ( PN + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( MUM / RMSe ) ) ) / DS )", "obj1": 0.13278008298755187, "obj2": 0.6923606477378044}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - Max( DDR,FirstVNF_Mem ) ) ) * ARS ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,( MLU / ( CS * ( RMSe + RMSe ) ) ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - ( MUM / RMSe ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.9564315352697096, "obj2": 0.01702452597677058}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR * ( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) / ( MUC * ( MUM + RRSe ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ) * ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6970954356846473, "obj2": 0.17276466157603546}, {"determining": "( ( PN - ( ACS + Max( MRS,FirstVNF_CPU_Server ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,RMSe ) / RMSe )", "obj1": 0.7614107883817427, "obj2": 0.08834702325246445}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.524896265560166, "obj2": 0.3265891147216957}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.5, "obj2": 0.33770404246892793}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3236514522821577, "obj2": 0.5014198958070002}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( BR * FirstVNF_Mem ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( MUM - CS ),RMSe ) )", "obj1": 0.3236514522821577, "obj2": 0.5014198958070002}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR + RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Max( MUM,RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3091286307053942, "obj2": 0.5183690424300448}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}], "21": [{"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + BR ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + BR ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ( CRS - MDR ) + Min( Max( ( DDR + ( ARS - FirstVNF_RAM ) ),( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6286307053941909, "obj2": 0.24185921450650547}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.19238051894406302}, {"determining": "( Max( Const,DDR ) - ( Max( DDR,( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( RRS * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RCSe ) / CS ) / DS ) / MLU )", "obj1": 0.15975103734439833, "obj2": 0.6551722916612217}, {"determining": "( ( PN - ( ACS / Min( ( ( DDR + ( ARS + FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.14663919114313312}, {"determining": "( ( MDR - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.5954356846473029, "obj2": 0.26341925345985107}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.4730290456431535, "obj2": 0.34972234398278107}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.533195020746888, "obj2": 0.30769342665976934}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.7448132780082988, "obj2": 0.11968141843742704}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( DDR + ( ARS - FirstVNF_RAM ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( MUM,RMSe ) )", "obj1": 0.46887966804979253, "obj2": 0.37924212759538684}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,FirstVNF_CPU ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,RCSe ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.16483074469727071}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,Const ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( Max( ( ( MUM / RMSe ) / CS ),DS ) / RCSe )", "obj1": 0.13692946058091288, "obj2": 0.6703919679944969}, {"determining": "( ( PN - ( ACS + Min( ( ( ( PN - FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,Max( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ),CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + ( ( MUR / MLU ) - Min( MLU ,DS ) ) ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6161825726141079, "obj2": 0.2544373615353106}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( ( FirstVNF_RAM + CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / FirstVNF_RAM ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( AMS ,MDR ) - ( BR * FirstVNF_Mem ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / MUC ) / CS ) / DS )", "obj1": 0.12655601659751037, "obj2": 0.6927342116014344}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_RAM_Server ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.2157676348547718, "obj2": 0.5992657188145442}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) / RMSe ) / RMSe )", "obj1": 0.7717842323651453, "obj2": 0.086209892865795}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5838908308178127}, {"determining": "( ( AMS - ( FirstVNF_RAM / Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( DDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS * CS ) / RRSe )", "obj1": 0.4170124481327801, "obj2": 0.4222868597430066}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ACS ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( PN,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MLU / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4138831796623437}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( MRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( AMS,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.6124700004343551}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.524896265560166, "obj2": 0.3265891147216957}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.553941908713693, "obj2": 0.29267303217578405}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.5767634854771784, "obj2": 0.2873854915665502}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.36929460580912865, "obj2": 0.4721900317220101}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6804979253112033, "obj2": 0.17757787556886717}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + Max( Min( MDR ,FirstVNF_Mem ),( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( ( ( MUM / RMSe ) / CS ) - ( DS / RMSe ) ) ) ),( Min( Min( MLU ,DS ) ,Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.29045643153526973, "obj2": 0.5292499798477052}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.26348547717842324, "obj2": 0.5450319875099692}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.5, "obj2": 0.33770404246892793}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4979253112033195, "obj2": 0.3395139106000123}, {"determining": "( ( PN - ( ACS + Max( MRS,FirstVNF_CPU_Server ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,RMSe ) / RMSe )", "obj1": 0.7614107883817427, "obj2": 0.08834702325246445}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05990766064399185}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( PN,Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) / DS ) / CS )", "obj1": 0.34439834024896265, "obj2": 0.4794941749856964}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) / RMSe ) / CS )", "obj1": 0.9771784232365145, "obj2": 0.01095536390437582}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05990766064399185}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3360995850622407, "obj2": 0.48766739243920104}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - Max( DDR,FirstVNF_Mem ) ) ) * ARS ) ,DDR ) ) ) + FirstVNF_Mem )", "choosing": "( Max( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,( MLU / ( CS * ( RMSe + RMSe ) ) ) ) ),( ( Min( MLU ,DS ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - ( MUM / RMSe ) ) ) ) ) - ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.991701244813278, "obj2": 0.0028166351937375786}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.43728275065150457}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + CRS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUC / RMSe ) / RMSe )", "obj1": 0.3153526970954357, "obj2": 0.5111849442911974}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / RMSe ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( ( PN - ( PN + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( MUM / RMSe ) ) ) / DS )", "obj1": 0.13278008298755187, "obj2": 0.6923606477378044}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR * ( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) / ( MUC * ( MUM + RRSe ) ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ) * ( ( Min( MLU ,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6970954356846473, "obj2": 0.17276466157603546}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + ( BR * MRS ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - MLU ) ),( Min( Min( MLU ,DS ) ,Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5373469381055122}], "22": [{"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( CRS / ARS ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + BR ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,RRSe ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + BR ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,PN ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4605809128630705, "obj2": 0.38669882315527904}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,FirstVNF_CPU ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,RCSe ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.16483074469727071}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.6244813278008299, "obj2": 0.2391841535832715}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( MDR - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.5954356846473029, "obj2": 0.26341925345985107}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( FirstVNF_Mem + DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MLU ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.553941908713693, "obj2": 0.28005115272103565}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.19238051894406302}, {"determining": "( Max( Const,DDR ) - ( Max( DDR,( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( DDR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RCSe ) / CS ) / DS ) / ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.1908713692946058, "obj2": 0.6345345548453818}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / RMSe ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( Max( Const,DDR ) - ( Max( DDR,( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( RRS * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RCSe ) / CS ) / DS ) / MLU )", "obj1": 0.15975103734439833, "obj2": 0.6551722916612217}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.524896265560166, "obj2": 0.3265891147216957}, {"determining": "( ( PN - ( ACS + Max( MRS,FirstVNF_CPU_Server ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,RMSe ) / RMSe )", "obj1": 0.7614107883817427, "obj2": 0.08834702325246445}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6804979253112033, "obj2": 0.17757787556886717}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.3755186721991701, "obj2": 0.4633921197515555}, {"determining": "( Min( PN ,( ACS + Min( ( Const + ( ( ( ACS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU / DS ) + ( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9149377593360996, "obj2": 0.03427654307010852}, {"determining": "( ( PN - ( ACS + Min( ( ( ( PN - FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,Max( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ),CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( CS * ( RMSe + ( ( MUR / MLU ) - Min( MLU ,DS ) ) ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6161825726141079, "obj2": 0.2544373615353106}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.46887966804979253, "obj2": 0.34980708506027863}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.11203319502074689, "obj2": 0.6952246518202068}, {"determining": "( ( PN - ( ACS + Min( ( ( ( PN - FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - CRS ) ) - ( ( FirstVNF_Mem * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5477178423236515, "obj2": 0.29732763911789506}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + CRS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUC / RMSe ) / RMSe )", "obj1": 0.3153526970954357, "obj2": 0.5111849442911974}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.19238051894406302}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_RAM_Server ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.2157676348547718, "obj2": 0.5992657188145442}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.7717842323651453, "obj2": 0.08443331049807049}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + CRS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.25933609958506226, "obj2": 0.5504879577261448}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.43728275065150457}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) )", "obj1": 0.9481327800829875, "obj2": 0.01969335106124924}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / RMSe )", "obj1": 0.9377593360995851, "obj2": 0.03269560384281117}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.12448132780082988, "obj2": 0.685752849503127}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS / FirstVNF_RAM ) ) + Max( Min( MDR ,FirstVNF_Mem ),( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / RMSe )", "obj1": 0.3153526970954357, "obj2": 0.5111849442911974}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8775933609958506, "obj2": 0.05022890569217726}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( ( FirstVNF_RAM + CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5838908308178127}, {"determining": "( ( PN - ( ACS + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / ( Max( ( ( ( MUM / RMSe ) / CS ) - ( ( RMSe * MUM ) - ( ( ( MUM / RMSe ) / CS ) - ( DS / RMSe ) ) ) ),( Min( Min( MLU ,DS ) ,Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / ( CS / DS ) ) ) ) / DS ) )", "obj1": 0.966804979253112, "obj2": 0.016628501427804945}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.504149377593361, "obj2": 0.3353546229780443}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05990766064399185}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.533195020746888, "obj2": 0.30769342665976934}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05990766064399185}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3360995850622407, "obj2": 0.48766739243920104}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( MRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( AMS,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.6124700004343551}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( PN,Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) / DS ) / CS )", "obj1": 0.34439834024896265, "obj2": 0.4794941749856964}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / MUM ) / RRSe ) / CS )", "obj1": 0.35684647302904565, "obj2": 0.4763802925519328}, {"determining": "( Max( Const,FirstVNF_Mem ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / MUM )", "obj1": 0.13278008298755187, "obj2": 0.6741359098869047}], "23": [{"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - ( PN - ( ACS + Max( RRS,MDR ) ) ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( CRS / ARS ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + BR ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,RRSe ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( MUM + MUR ) ) ),( ( Max( MLU,DS ) - Max( DS,MUM ) ) - ( Min( MLU ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6203319502074689, "obj2": 0.2330117826670817}, {"determining": "( ( PN - ( ACS + Min( ( Max( DDR,( ARS - Max( MDR,FirstVNF_Mem ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,FirstVNF_CPU ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( MLU ,RCSe ) - ( Min( MLU ,MUR ) / Min( CS ,( ( MUR / MLU ) - Max( MLU,MUC ) ) ) ) ) * ( Min( MLU ,MUR ) / Min( CS ,( MUM / RMSe ) ) ) ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.16483074469727071}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) + ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15767634854771784, "obj2": 0.6522224823633008}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( Max( Const,DDR ) - ( Max( DDR,( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( DDR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RCSe ) / CS ) / DS ) / ( CS / ( ( MLU / RCSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.1908713692946058, "obj2": 0.6345345548453818}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( MDR - ( ( AMS - MDR ) + Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC / RMSe ) / CS ) / DS ) / MLU )", "obj1": 0.5954356846473029, "obj2": 0.26341925345985107}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.19238051894406302}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN + FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( DS + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5228215767634855, "obj2": 0.3220335414128967}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.3008298755186722, "obj2": 0.524233234103951}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( DS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.43173656816763406}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU / DS ) + ( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.8526970954356846, "obj2": 0.061398200131178964}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.11203319502074689, "obj2": 0.6952246518202068}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.46887966804979253, "obj2": 0.34980708506027863}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / RMSe ) / CS )", "obj1": 0.44190871369294604, "obj2": 0.4096863483308342}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3091286307053942, "obj2": 0.5029497138059256}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ,( ( ( ACS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / ( ( ( MLU / DS ) + Min( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) ,CS ) ) / DS ) )", "obj1": 0.9771784232365145, "obj2": 0.01070490750560885}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_RAM_Server ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.2157676348547718, "obj2": 0.5992657188145442}, {"determining": "( Min( PN ,Max( ACS,Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe / MLU ) / CS ) / DS ) / CS )", "obj1": 0.470954356846473, "obj2": 0.34914781848805654}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,PN ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4605809128630705, "obj2": 0.38669882315527904}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( ( FirstVNF_RAM + CRS ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / RCSe ) / RCSe )", "obj1": 0.15145228215767634, "obj2": 0.6676722042224182}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / RMSe )", "obj1": 0.9377593360995851, "obj2": 0.03269560384281117}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + CRS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.25933609958506226, "obj2": 0.5504879577261448}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.504149377593361, "obj2": 0.3353546229780443}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( MRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( AMS,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.6124700004343551}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6929460580912863, "obj2": 0.1675816251312568}, {"determining": "( ( ( ( AMS - ARS ) * ( PN * BR ) ) * Max( ( ACS / FirstVNF_RAM ),( CRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.19294605809128632, "obj2": 0.6209585062987955}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + CRS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.27593360995850624, "obj2": 0.5342511012456616}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.45228215767634855, "obj2": 0.39680538729282694}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5643153526970954, "obj2": 0.271912895696417}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3278008298755187, "obj2": 0.5017895052334367}, {"determining": "( ( PN - ( ACS - Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.7531120331950207, "obj2": 0.09320125941718434}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3360995850622407, "obj2": 0.48766739243920104}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( FirstVNF_Mem + DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MLU ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.553941908713693, "obj2": 0.28005115272103565}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.19238051894406302}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUM / RRSe ),CS ) / DS ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( ( FirstVNF_RAM + CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.0975103734439834, "obj2": 0.7097058143775703}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5838908308178127}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.7717842323651453, "obj2": 0.08443331049807049}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,PN ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3921161825726141, "obj2": 0.4607781362281163}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,( ( ( CRS / BR ) + ( Const - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( MUM / RMSe ) ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6763485477178424, "obj2": 0.18968332763618215}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.2863070539419087, "obj2": 0.5341187789513038}, {"determining": "( Max( Const,FirstVNF_Mem ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / MUM )", "obj1": 0.13278008298755187, "obj2": 0.6741359098869047}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.504149377593361, "obj2": 0.3353546229780443}], "24": [{"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - ( PN - ( ACS + Max( RRS,MDR ) ) ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - ( PN - ( ACS + Max( RRS,MDR ) ) ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( FirstVNF_RAM * Min( ( ( DDR - ( MDR - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RMSe ) / DS ) * MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe - RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6970954356846473, "obj2": 0.15917753131056117}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN + FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( DS + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5228215767634855, "obj2": 0.3220335414128967}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3360995850622407, "obj2": 0.48766739243920104}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( RMSe / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.37136929460580914, "obj2": 0.46257805108325567}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5871369294605809, "obj2": 0.25268545034778195}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,PN ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4605809128630705, "obj2": 0.38669882315527904}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( ( ACS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9688796680497925, "obj2": 0.011021615992122777}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.6680497925311203, "obj2": 0.18453066203630902}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6929460580912863, "obj2": 0.1675816251312568}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.6099585062240664, "obj2": 0.2345908937572729}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.46887966804979253, "obj2": 0.34980708506027863}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU / DS ) + ( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / ( CS / RMSe ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.8713692946058091, "obj2": 0.05334062498248544}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_RAM_Server ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MUR / MLU ) - Max( MLU,MUC ) ) / RMSe )", "obj1": 0.9024896265560166, "obj2": 0.04154842486292348}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.553941908713693, "obj2": 0.28005115272103565}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + CRS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.25933609958506226, "obj2": 0.5504879577261448}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( MRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( AMS,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.6124700004343551}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6307053941908713, "obj2": 0.2268125153884729}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS + Min( ( Min( FirstVNF_RAM ,CRS ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUC + CS ) / DS )", "obj1": 0.3900414937759336, "obj2": 0.46075453362060087}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.5684647302904564, "obj2": 0.2661514042976167}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5838908308178127}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15145228215767634, "obj2": 0.6563661560850939}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + Const ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS / DS ) / CS )", "obj1": 0.9066390041493776, "obj2": 0.037538967509316144}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) + ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15767634854771784, "obj2": 0.6522224823633008}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.5020746887966805, "obj2": 0.3281074297865385}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.7717842323651453, "obj2": 0.08443331049807049}, {"determining": "( Max( PN,( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + Const ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) * CS ) / CS ) - ( DS - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.2572614107883817, "obj2": 0.5605107069637353}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.2863070539419087, "obj2": 0.5341187789513038}, {"determining": "( ( PN - ( DDR + Min( Max( DDR,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - MUR ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2946058091286307, "obj2": 0.5178940530965347}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_RAM_Server ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.2157676348547718, "obj2": 0.5992657188145442}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15767634854771784, "obj2": 0.6522224823633008}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / RMSe )", "obj1": 0.9356846473029046, "obj2": 0.03347670854329616}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUM / RRSe ),CS ) / DS ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU / DS ) + ( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.8526970954356846, "obj2": 0.061398200131178964}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3278008298755187, "obj2": 0.5017895052334367}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3091286307053942, "obj2": 0.5029497138059256}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( DS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.43173656816763406}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + BR ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.4024896265560166, "obj2": 0.44041446597417716}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.487551867219917, "obj2": 0.340878373764075}], "25": [{"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - ( PN - ( ACS + Max( RRS,MDR ) ) ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7053941908713693, "obj2": 0.15635460287969274}, {"determining": "( ( PN - ( ACS + Min( ( Const + PN ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( DS + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / MUM )", "obj1": 0.9356846473029046, "obj2": 0.02598855128545174}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( Min( DDR ,DDR ) + ( ARS - RRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Max( MUC,MUM ) / CS ) / DS ) / CS )", "obj1": 0.5456431535269709, "obj2": 0.30349576694159125}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.12240663900414937, "obj2": 0.6917935438780699}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,PN ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.44813278008298757, "obj2": 0.3908219977503672}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( RMSe / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.37136929460580914, "obj2": 0.46257805108325567}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.2863070539419087, "obj2": 0.5341187789513038}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.516597510373444, "obj2": 0.3210694260778328}, {"determining": "( ( PN - FirstVNF_Mem ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / MUM ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.17842323651452283, "obj2": 0.6475291040901533}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.46887966804979253, "obj2": 0.34980708506027863}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.34024896265560167, "obj2": 0.4834884593074838}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5838908308178127}, {"determining": "( ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + Const ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) / ( DS / DS ) ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.14522821576763487, "obj2": 0.689113751810654}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + CRS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.25933609958506226, "obj2": 0.5504879577261448}, {"determining": "( ( PN - ( DDR + Min( Max( DDR,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - MUR ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2946058091286307, "obj2": 0.5178940530965347}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6307053941908713, "obj2": 0.2268125153884729}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6929460580912863, "obj2": 0.1675816251312568}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.6680497925311203, "obj2": 0.18453066203630902}, {"determining": "( ( PN - BR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM / RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.25311203319502074, "obj2": 0.5780809738173204}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5871369294605809, "obj2": 0.2510481566792515}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_RAM_Server ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) + ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + ARS ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.2157676348547718, "obj2": 0.5992657188145442}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3091286307053942, "obj2": 0.5029497138059256}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( CRS / DDR ) + ACS ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU / DS ) + ( ( ( MUC / ( RRSe / ( RMSe + RMSe ) ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9647302904564315, "obj2": 0.012669218581810854}, {"determining": "( ( PN - ( FirstVNF_RAM * Min( ( ( DDR - ( MDR - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RMSe ) / DS ) * MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe - RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4605809128630705, "obj2": 0.3815482123752492}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU / DS ) + ( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe - ( ( MLU / RMSe ) / Min( MLU ,CS ) ) ) )", "obj1": 0.8485477178423236, "obj2": 0.0637496309079454}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( MRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( AMS,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.6124700004343551}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15145228215767634, "obj2": 0.6563661560850939}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS + Min( ( Min( FirstVNF_RAM ,CRS ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUC + CS ) / DS )", "obj1": 0.3900414937759336, "obj2": 0.46075453362060087}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( DS + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7531120331950207, "obj2": 0.0959706237392853}, {"determining": "( ( PN / ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / MUR )", "obj1": 0.7717842323651453, "obj2": 0.08443331049807049}, {"determining": "( ( PN - DDR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) + DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.6099585062240664, "obj2": 0.2345908937572729}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.487551867219917, "obj2": 0.340878373764075}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( Max( CRS,BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUM / RRSe ),CS ) / DS ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.25629774262623584}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3278008298755187, "obj2": 0.5017895052334367}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( DS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.43173656816763406}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3360995850622407, "obj2": 0.48766739243920104}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + Const ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( DS / DS ) / CS )", "obj1": 0.9066390041493776, "obj2": 0.037538967509316144}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,( ( ( ACS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( CS / ( ( MUM + RMSe ) / MUC ) ) ) / DS ) ),( ( MUM / MLU ) - Max( MLU,RRSe ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9688796680497925, "obj2": 0.011021615992122777}], "26": [{"determining": "( ( PN - ( ACS + ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / MUR ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7053941908713693, "obj2": 0.15635460287969274}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / CS ) / DS ) / CS )", "obj1": 0.5684647302904564, "obj2": 0.2692757395765057}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) / Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) * RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.12033195020746888, "obj2": 0.6875113284181814}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.8568464730290456, "obj2": 0.057799216925348756}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15145228215767634, "obj2": 0.6563661560850939}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( DS - ( RMSe - ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.9066390041493776, "obj2": 0.03707898976118499}, {"determining": "( ( PN - ( FirstVNF_RAM * Min( ( ( DDR - ( MDR - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RMSe ) / DS ) * MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe - RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4605809128630705, "obj2": 0.3815482123752492}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.2863070539419087, "obj2": 0.5341187789513038}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6929460580912863, "obj2": 0.1675816251312568}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( MDR * RRS ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / ( RRSe / DS ) ) / DS ) / CS )", "obj1": 0.44398340248962653, "obj2": 0.41059801688847436}, {"determining": "( ( PN - ( ACS + Min( ( Const + PN ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( DS + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / MUM )", "obj1": 0.9356846473029046, "obj2": 0.02598855128545174}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( Min( DDR ,DDR ) + ( ARS - RRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Max( MUC,MUM ) / CS ) / DS ) / CS )", "obj1": 0.5456431535269709, "obj2": 0.30349576694159125}, {"determining": "( ( PN - BR ) + Min( DDR ,Min( DDR ,PN ) ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.11410788381742738, "obj2": 0.6981933875636229}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.46887966804979253, "obj2": 0.34980708506027863}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3091286307053942, "obj2": 0.5029497138059256}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5311203319502075, "obj2": 0.31561080467803065}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,PN ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.44813278008298757, "obj2": 0.3908219977503672}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.504149377593361, "obj2": 0.3312860600236549}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.6680497925311203, "obj2": 0.18453066203630902}, {"determining": "( ( ( ( CRS - ARS ) * ( PN * BR ) ) * Max( ( ACS - FirstVNF_RAM ),( MRS - MDR ) ) ) + Max( ( ( MRS * ARS ) * Min( Const ,MRS ) ),( ( MRS + Const ) - Max( AMS,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.6124700004343551}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( CS ,CS ) )", "obj1": 0.25311203319502074, "obj2": 0.5625614216656082}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.24273858921161826, "obj2": 0.5778684563837421}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - Max( ( MDR + RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( RMSe / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( DS + DS ) ) ) ) / DS )", "obj1": 0.26348547717842324, "obj2": 0.547897558964866}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS + Min( ( Min( FirstVNF_RAM ,CRS ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUC + CS ) / DS )", "obj1": 0.3900414937759336, "obj2": 0.46075453362060087}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( MDR - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5145228215767634, "obj2": 0.32058048861058447}, {"determining": "( ( PN / ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / MUR )", "obj1": 0.18049792531120332, "obj2": 0.6404420607327274}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / RCSe )", "obj1": 0.9937759336099585, "obj2": 0.0021003399736885644}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + BR ) )", "choosing": "( ( ( ( ( ( ( RMSe / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.37136929460580914, "obj2": 0.46257805108325567}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5838908308178127}, {"determining": "( Max( Const,DDR ) - Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.0975103734439834, "obj2": 0.7140677959485543}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( Min( MDR ,RRS ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5954356846473029, "obj2": 0.24784265258874316}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.7717842323651453, "obj2": 0.08443331049807049}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) + CS ) / DS ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15767634854771784, "obj2": 0.6538238679786292}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6307053941908713, "obj2": 0.2268125153884729}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( Min( DDR ,DDR ) + ( ARS - RRS ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Max( MUC,MUM ) / CS ) / DS ) / CS )", "obj1": 0.5456431535269709, "obj2": 0.30349576694159125}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( FirstVNF_CPU ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / DS )", "obj1": 0.34024896265560167, "obj2": 0.4834884593074838}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.25629774262623584}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3278008298755187, "obj2": 0.5017895052334367}, {"determining": "( ( PN - ( DDR + Min( Max( DDR,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - MUR ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2946058091286307, "obj2": 0.5178940530965347}], "27": [{"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( PN - ( ACS + Max( RRS,MDR ) ) ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUM * RCSe ) / RMSe ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS + ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / MUR ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - ( Const + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( MDR - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.8568464730290456, "obj2": 0.057799216925348756}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.1527848985980724}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - ( DDR + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.17427385892116182, "obj2": 0.6303853782485069}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) + CS ) / DS ) / CS )", "obj1": 0.3941908713692946, "obj2": 0.4430857474642858}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.7468879668049793, "obj2": 0.10099009165253639}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6120331950207469, "obj2": 0.23187116024031856}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / ( ( CS / RMSe ) / DS ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.6680497925311203, "obj2": 0.18453066203630902}, {"determining": "( ( PN - BR ) + Min( DDR ,( DDR + PN ) ) )", "choosing": "( ( ( ( ( ( RCSe / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14315352697095435, "obj2": 0.6786760716652968}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - ( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( RMSe,MUM ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.44190871369294604, "obj2": 0.39648012869602567}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RMSe,MUM ) / CS ) / DS ) / CS )", "obj1": 0.4979253112033195, "obj2": 0.3494326809049666}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.36099585062240663, "obj2": 0.46835195468571755}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.558091286307054, "obj2": 0.27269936412583773}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3257261410788382, "obj2": 0.49768229674883774}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) / Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RRSe ) * RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.12033195020746888, "obj2": 0.6875113284181814}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( PN - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8775933609958506, "obj2": 0.05022890569217726}, {"determining": "( ( PN - ( FirstVNF_RAM * Min( ( ( DDR - ( MDR - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RMSe ) / DS ) * MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe - RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.4605809128630705, "obj2": 0.3815482123752492}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - Max( Min( FirstVNF_Mem_Server ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9481327800829875, "obj2": 0.023163352837186478}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( MDR - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5456431535269709, "obj2": 0.2968910773408708}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6929460580912863, "obj2": 0.1675816251312568}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RRSe ) / CS )", "obj1": 0.7717842323651453, "obj2": 0.08443331049807049}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.46887966804979253, "obj2": 0.34980708506027863}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.3879668049792531, "obj2": 0.44644758264971734}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.21991701244813278, "obj2": 0.5946290043680148}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( Min( MDR ,RRS ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5954356846473029, "obj2": 0.24784265258874316}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) )", "obj1": 0.9688796680497925, "obj2": 0.011992809010833518}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.8921161825726142, "obj2": 0.043713751846407155}, {"determining": "( ( PN - ( DDR + Min( Max( DDR,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - MUR ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2946058091286307, "obj2": 0.5178940530965347}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( CS ,CS ) )", "obj1": 0.25311203319502074, "obj2": 0.5625614216656082}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.2863070539419087, "obj2": 0.5341187789513038}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) / ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM + RMSe ) / CS )", "obj1": 0.34024896265560167, "obj2": 0.4834884593074838}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) / Max( MDR,FirstVNF_Mem ) ) + ( Min( PN ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( CS / RMSe ) / DS ) / CS )", "obj1": 0.979253112033195, "obj2": 0.011349313458856293}, {"determining": "( Max( PN,( ACS + ( RRS * MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe - RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.08377443292318239}, {"determining": "( ( PN - ( Const + Min( ( ( Min( DDR ,PN ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * RRS ),Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.44813278008298757, "obj2": 0.3908219977503672}, {"determining": "( ( PN - ( ACS + Max( RRS,( CRS / BR ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM / RRSe ) / ( RRSe / DS ) ) / DS ) / CS )", "obj1": 0.9128630705394191, "obj2": 0.03590637063935085}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14937759336099585, "obj2": 0.6620017556756372}, {"determining": "( ( PN - ( ACS + Min( ( Const + PN ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR / MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( DS + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / MUM )", "obj1": 0.9315352697095436, "obj2": 0.028068429044606245}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.15767634854771784, "obj2": 0.6538238679786292}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5311203319502075, "obj2": 0.31561080467803065}], "28": [{"determining": "( Max( ( AMS + RRS ),CRS ) + ( ( MRS - ( AMS / MRS ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( Max( ( ( ( ( RMSe - MUR ) + ( RCSe / MUR ) ) / Min( Min( RMSe ,CS ) ,Max( CS,MUR ) ) ) + Max( ( ( MUC * MUR ) * ( MUM / MUR ) ),( ( CS / MUC ) - Max( MUC,MLU ) ) ) ),( Max( ( ( MUR * MUC ) + Min( MUR ,RCSe ) ),( Max( MUC,RRSe ) - Max( MUM,RCSe ) ) ) * Min( Max( ( RMSe + RRSe ),( RMSe * MLU ) ) ,( ( DS * CS ) + ( MUC - DS ) ) ) ) ) + ( ( ( ( Min( RMSe ,CS ) + Max( MUR,RRSe ) ) / Max( ( MLU + CS ),Max( MUM,MUM ) ) ) / Min( ( ( MUC + MLU ) * ( RRSe - RRSe ) ) ,( Min( MUM ,MUR ) - ( RRSe - MUC ) ) ) ) * ( Min( ( ( MLU / MUR ) / ( CS / CS ) ) ,( ( MUR - RRSe ) - ( DS - RCSe ) ) ) - ( ( ( MUC * RCSe ) - ( DS - CS ) ) - ( ( MUR - CS ) + ( DS - MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + MUR ) * ( CS + RRSe ) ) - ( ( MUM - MLU ) - ( CS + MUC ) ) ) / Max( ( ( DS + CS ) + ( MLU - CS ) ),Min( Min( MUC ,DS ) ,( RCSe + MUM ) ) ) ) - ( ( ( Max( RRSe,CS ) - Min( CS ,RMSe ) ) / ( Max( MLU,RRSe ) / Min( CS ,DS ) ) ) - ( ( Min( MLU ,MLU ) - ( MUM - MLU ) ) + ( ( MUR + MUC ) + ( RMSe + MUR ) ) ) ) ) - ( ( ( Min( ( RCSe / MUC ) ,( DS / CS ) ) - Max( Min( MUM ,MUM ),( RRSe * MUC ) ) ) + ( ( Min( RMSe ,MUC ) * ( MUC * DS ) ) * ( ( MUR + MUR ) - ( DS / DS ) ) ) ) + ( ( Min( Max( RCSe,DS ) ,Max( MUC,RMSe ) ) + Min( ( MUC / RRSe ) ,( RRSe - RRSe ) ) ) - ( ( ( MUM / MUM ) / ( RCSe + RMSe ) ) + Max( ( DS - MUR ),( RRSe / MUC ) ) ) ) ) ) ) + ( ( ( ( ( Min( Min( MUC ,MUM ) ,( CS / MLU ) ) / Max( Max( CS,RRSe ),Min( RRSe ,DS ) ) ) * ( ( ( RRSe - MUR ) * ( MUC - MLU ) ) / ( Min( MUM ,CS ) / ( RCSe * RMSe ) ) ) ) / ( ( Min( ( RMSe / MUM ) ,( CS + RCSe ) ) - Min( Min( DS ,CS ) ,Max( RCSe,CS ) ) ) * Min( ( ( MUM + RCSe ) - Max( RCSe,MUM ) ) ,( ( CS - RCSe ) + Max( MUM,RRSe ) ) ) ) ) + ( Max( ( Max( ( MUR * MUM ),( MUM / MUC ) ) + ( Max( MUM,MUC ) + ( MUC * DS ) ) ),( ( Min( DS ,RCSe ) - ( MUR * MUC ) ) + ( Min( RMSe ,RCSe ) / ( MUR / MUM ) ) ) ) * ( ( ( ( RRSe * MUC ) * ( RMSe / RRSe ) ) * ( Min( CS ,MLU ) / ( CS + MLU ) ) ) - Max( ( ( RRSe * MLU ) * ( CS + MLU ) ),Min( Min( MLU ,RRSe ) ,( MLU - RMSe ) ) ) ) ) ) * Min( ( ( ( Max( ( RCSe * MUC ),( RRSe - MUM ) ) - ( ( RMSe - MUM ) + ( RRSe - MLU ) ) ) + ( ( ( MUC - MUM ) - ( MLU / MLU ) ) - ( ( DS / RCSe ) + ( MUC * RMSe ) ) ) ) - ( ( ( ( MUR + DS ) - ( MLU - RRSe ) ) - ( Max( MLU,CS ) / ( MUR * MUC ) ) ) - ( Min( ( MLU * CS ) ,( RCSe + RRSe ) ) * ( Max( CS,MUM ) * Min( MUM ,DS ) ) ) ) ) ,Max( Max( Min( ( ( RCSe - RCSe ) - ( DS + MUR ) ) ,( ( DS / CS ) - ( RRSe - DS ) ) ),( Max( ( RCSe / MUR ),Min( MLU ,DS ) ) + ( ( RMSe * MLU ) - ( MUC + DS ) ) ) ),( ( Min( ( MLU - RRSe ) ,( MUC * RCSe ) ) - ( Min( MLU ,MLU ) / ( MUR * CS ) ) ) * ( ( ( CS + RRSe ) - ( CS / RCSe ) ) / ( ( MLU / RCSe ) - ( RRSe * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( PN - ( ACS + Max( RRS,MDR ) ) ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUM * RCSe ) / RMSe ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.1527848985980724}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.21991701244813278, "obj2": 0.5946290043680148}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.3759256928250403}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( MDR - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5456431535269709, "obj2": 0.2968910773408708}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - CRS ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe / RMSe ) ) ) ) )", "obj1": 0.8568464730290456, "obj2": 0.05733871514036447}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.24273858921161826, "obj2": 0.5778684563837421}, {"determining": "( ( PN - ( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server * MRS ),Min( DDR ,PN ) ) ) ) + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RRSe ) / MUM ) / CS )", "obj1": 0.43568464730290457, "obj2": 0.4045594099037973}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.15767634854771784, "obj2": 0.6477371326136999}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.2053941908713693, "obj2": 0.6177228226194156}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) )", "choosing": "( ( ( ( MUM / RRSe ) + CS ) / DS ) / CS )", "obj1": 0.4024896265560166, "obj2": 0.4407052651180672}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6929460580912863, "obj2": 0.1675816251312568}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( Min( CS ,CS ) ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.3049792531120332, "obj2": 0.5115156623549479}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - BR ) + Min( DDR ,( DDR + PN ) ) )", "choosing": "( ( ( ( ( ( RCSe / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14315352697095435, "obj2": 0.6786760716652968}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( RCSe / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6120331950207469, "obj2": 0.23187116024031856}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6473029045643154, "obj2": 0.21829024215724555}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.3755186721991701, "obj2": 0.46504156808487557}, {"determining": "( ( PN - ( Const + Min( ( ( BR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14937759336099585, "obj2": 0.6620017556756372}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.529045643153527, "obj2": 0.3132871482093522}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( Min( MDR ,RRS ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.25297762208691466}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( CS ,CS ) )", "obj1": 0.25311203319502074, "obj2": 0.5625614216656082}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / MLU ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5684647302904564, "obj2": 0.2671478750509627}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.2863070539419087, "obj2": 0.5341187789513038}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.27385892116182575, "obj2": 0.5410249593621265}, {"determining": "( ( PN - ( DDR + ( Max( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ),FirstVNF_Mem ) + DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( CS / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5579883075187011}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) )", "obj1": 0.9688796680497925, "obj2": 0.011992809010833518}, {"determining": "( ( PN - ( DDR + Min( Max( DDR,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - MUR ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2946058091286307, "obj2": 0.5178940530965347}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( RRS ,DDR ) ) ) + Min( ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / Min( ( RRSe / DS ) ,MUR ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) )", "obj1": 0.6742738589211619, "obj2": 0.1808709392372845}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.4854771784232365, "obj2": 0.34420825967135316}, {"determining": "( Max( Const,DDR ) - ( ( DDR + ( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + BR ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.36099585062240663, "obj2": 0.46835195468571755}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - Max( Min( FirstVNF_Mem_Server ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9481327800829875, "obj2": 0.023163352837186478}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( MDR - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( CS / RMSe ) / DS ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8921161825726142, "obj2": 0.04114214973917292}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.558091286307054, "obj2": 0.27269936412583773}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3257261410788382, "obj2": 0.49768229674883774}, {"determining": "( ( PN - ( DDR + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.17427385892116182, "obj2": 0.6303853782485069}, {"determining": "( Max( PN,( ACS + ( RRS * MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe - RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.08377443292318239}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.15994360058535312}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.7468879668049793, "obj2": 0.10099009165253639}, {"determining": "( ( PN - BR ) + Min( DDR ,Min( DDR ,PN ) ) )", "choosing": "( ( ( ( ( Max( RMSe,MUM ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.12240663900414937, "obj2": 0.6853962635559832}], "29": [{"determining": "( ( Max( ( Min( ( ( Max( FirstVNF_CPU,Const ) * Min( DDR ,FirstVNF_Mem ) ) / Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / MDR ) ) ) ,Max( ( Max( ACS,FirstVNF_CPU_Server ) - ( PN + ARS ) ),Max( ( FirstVNF_RAM_Server * AMS ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) * ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_Mem ) ),Min( Max( MDR,MRS ) ,( ARS / FirstVNF_Mem ) ) ) - ( ( Max( Const,FirstVNF_CPU ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Max( ( AMS / ARS ),Min( Const ,FirstVNF_CPU ) ) ) ) ),Min( ( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Min( Const ,AMS ) ) / ( ( Const / FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) * Max( ( Max( FirstVNF_CPU,DDR ) + ( ARS / FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * ( FirstVNF_RAM - RRS ) ) ) ) ,Min( ( Min( Max( ACS,PN ) ,Max( DDR,ACS ) ) * ( ( DDR - ACS ) + ( Const + MRS ) ) ) ,( Max( ( FirstVNF_RAM_Server + ACS ),( RRS / MDR ) ) / ( ( Const / CRS ) / Min( Const ,FirstVNF_Mem ) ) ) ) ) ) * ( Max( Max( Min( Min( ( FirstVNF_RAM_Server + MDR ) ,Min( DDR ,DDR ) ) ,Max( ( RRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ),( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + Min( Max( MRS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( ( CRS + BR ) * Min( CRS ,Const ) ) / ( ( ARS - FirstVNF_CPU ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) ) * ( ( Min( ARS ,MDR ) / ( FirstVNF_Mem + MRS ) ) + Min( ( FirstVNF_CPU / AMS ) ,( MRS - FirstVNF_CPU_Server ) ) ) ) ) + ( ( Min( ( ( FirstVNF_CPU - CRS ) / Min( ARS ,ARS ) ) ,( Min( Const ,CRS ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ) - ( ( ( ACS / CRS ) - ( MDR / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU / MDR ) - Min( PN ,FirstVNF_Mem ) ) ) ) / ( Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / ( MRS / DDR ) ) ,( ( MRS * FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) + ( ( ( FirstVNF_RAM / DDR ) - ( RRS - MDR ) ) + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS * Const ) ) ) ) ) ) ) - Max( ( ( Min( Max( ( ( PN + MDR ) * ( FirstVNF_RAM_Server - MRS ) ),( ( Const + FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ,Min( Min( ( CRS / ARS ) ,Max( AMS,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - AMS ) - Min( RRS ,CRS ) ) ) ) / ( ( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem_Server * AMS ) ) * Min( ( FirstVNF_CPU_Server - ARS ) ,( Const / MDR ) ) ) - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ),( FirstVNF_Mem / MRS ) ) / ( Min( FirstVNF_RAM ,ACS ) * ( ARS + FirstVNF_RAM ) ) ) ) ) + ( Min( Min( Max( Min( CRS ,FirstVNF_RAM_Server ),( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) - Min( DDR ,FirstVNF_RAM_Server ) ) ) ,Max( ( ( CRS - FirstVNF_RAM_Server ) / ( ACS + CRS ) ),( ( Const / CRS ) + ( FirstVNF_Mem_Server + DDR ) ) ) ) / ( ( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MRS ,FirstVNF_CPU ) ) / ( ( PN * PN ) / ( MRS + BR ) ) ) + ( ( ( FirstVNF_RAM / ARS ) / ( FirstVNF_Mem_Server + PN ) ) - ( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_RAM_Server * BR ) ) ) ) ) ),( ( Min( ( ( ( AMS * PN ) / ( BR * ACS ) ) - Min( Min( CRS ,ACS ) ,( FirstVNF_Mem_Server - MDR ) ) ) ,Max( ( ( BR / CRS ) / ( MDR / CRS ) ),( ( ARS / AMS ) + Min( FirstVNF_CPU_Server ,BR ) ) ) ) + ( Max( ( ( MDR - Const ) / ( FirstVNF_Mem_Server + MDR ) ),Min( ( FirstVNF_Mem / FirstVNF_Mem ) ,( FirstVNF_Mem_Server / Const ) ) ) + Min( Max( ( Const * PN ),Max( FirstVNF_CPU_Server,MDR ) ) ,( ( AMS / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) + Min( Max( Min( ( Min( FirstVNF_CPU ,RRS ) / ( CRS + FirstVNF_RAM ) ) ,( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ),Max( ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_RAM_Server / PN ) ),Max( ( BR * RRS ),( MDR * FirstVNF_CPU ) ) ) ) ,Max( Min( Min( ( Const - FirstVNF_CPU ) ,( BR / FirstVNF_RAM_Server ) ) ,( ( ACS / MDR ) - ( ARS * AMS ) ) ),( ( ( FirstVNF_CPU_Server - RRS ) * ( CRS / FirstVNF_Mem ) ) * ( ( RRS / BR ) - ( FirstVNF_CPU_Server / ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( ( ( ( RMSe + RMSe ) - ( MUR / MUM ) ) - ( ( MUM + RCSe ) * ( MUC - RMSe ) ) ) ,( ( ( DS - CS ) / Max( RMSe,RRSe ) ) - Min( ( CS * MUM ) ,( MUM / RMSe ) ) ) ) - ( ( ( ( MUR / CS ) * ( RMSe - MUC ) ) * ( ( MUR * MUR ) * ( RCSe - DS ) ) ) + ( Max( ( MUM / MUR ),( RRSe - CS ) ) / Max( Max( CS,MLU ),( MUC * DS ) ) ) ) ) - Min( Min( Max( Max( ( CS / MUR ),Max( MUR,MLU ) ),( ( RCSe + RMSe ) * ( RMSe + MUC ) ) ) ,( Max( ( MUC * MLU ),( DS / MUC ) ) * Max( Min( RMSe ,MUR ),Min( MUC ,RMSe ) ) ) ) ,( ( ( ( DS * RMSe ) - ( CS - MUR ) ) + ( ( CS + MUM ) / ( MUM / CS ) ) ) - Max( ( ( MUM + MUM ) * ( DS - MUR ) ),( Max( CS,MUM ) - ( CS + RRSe ) ) ) ) ) ),Max( Min( ( ( ( ( RMSe * MUR ) + ( RMSe - MUR ) ) / Min( Min( MUC ,RRSe ) ,( MUC / DS ) ) ) * ( Max( ( MLU * MUM ),( DS * CS ) ) * ( Max( RMSe,MUC ) + ( MUM * MUM ) ) ) ) ,( Min( ( ( MUR * MUM ) * ( DS + CS ) ) ,Max( ( RRSe / RMSe ),Max( RMSe,RRSe ) ) ) * ( ( Max( RCSe,MUR ) + ( RRSe - MUM ) ) - Max( Max( MLU,RMSe ),Min( RMSe ,RCSe ) ) ) ) ),( ( Min( Min( ( CS / RRSe ) ,( RRSe / CS ) ) ,Max( ( RMSe + MUM ),Max( RMSe,RRSe ) ) ) / ( ( ( RCSe / RCSe ) / ( DS / RRSe ) ) / ( ( RCSe - RMSe ) * Min( DS ,MLU ) ) ) ) - Min( ( Max( Max( MUM,RCSe ),( CS + RMSe ) ) * ( ( MUM * MUR ) / ( MUC / MLU ) ) ) ,Min( ( ( DS * MUR ) * Max( CS,RRSe ) ) ,( ( MUM / RRSe ) - ( MUR + MUR ) ) ) ) ) ) ) + Max( ( ( Max( ( ( ( MLU - CS ) / Max( DS,MUC ) ) / Max( Max( MUM,DS ),Max( RMSe,MLU ) ) ),( ( ( CS + RRSe ) - ( RMSe * MUM ) ) * ( ( RMSe + MUR ) * ( DS * RRSe ) ) ) ) / ( ( Max( Min( MLU ,RCSe ),Max( RMSe,MUR ) ) * Min( ( MUR / RMSe ) ,( RMSe * DS ) ) ) - Min( ( ( MUM / RCSe ) + ( DS + RCSe ) ) ,( Max( MUC,MUR ) + Min( DS ,RMSe ) ) ) ) ) * ( Max( Max( ( ( MUC / RMSe ) * ( DS / MUR ) ),Min( Max( RRSe,MLU ) ,Max( MUC,MUM ) ) ),( Min( ( MUR + DS ) ,( MUM * MUM ) ) + Min( Max( RCSe,MLU ) ,( MUR + MUM ) ) ) ) + Min( ( Max( ( CS * RRSe ),Max( MUR,RRSe ) ) - ( ( CS - MUM ) - ( MUM - MLU ) ) ) ,Min( ( ( DS - MUM ) + ( CS + RCSe ) ) ,( ( RMSe + RMSe ) - ( MUM / MUM ) ) ) ) ) ),( Max( ( ( ( Max( DS,MUM ) + ( CS + MUC ) ) + Min( ( RRSe / RRSe ) ,( MUR * MLU ) ) ) / ( ( ( MUR - DS ) / Min( CS ,RCSe ) ) / ( ( MUM * MUM ) / ( MLU * RRSe ) ) ) ),Max( ( ( ( RMSe + MUM ) / ( MUC * CS ) ) - ( Max( MLU,DS ) + ( MLU + MUC ) ) ),( Min( ( RRSe * MUR ) ,( RCSe * RRSe ) ) * Max( ( DS * RCSe ),Max( RCSe,MUM ) ) ) ) ) * ( Max( ( Max( ( MLU + RMSe ),Min( MUC ,RRSe ) ) * ( ( CS + MUM ) / ( MLU * CS ) ) ),( Min( Max( RRSe,MUR ) ,Max( RCSe,MUC ) ) - ( ( DS - RRSe ) - ( MUR + MUM ) ) ) ) + ( Min( Min( Max( DS,RMSe ) ,Max( RRSe,MLU ) ) ,( Max( RRSe,MUM ) / ( MLU + RMSe ) ) ) - Max( Min( Min( MUC ,MUC ) ,( MUR + RCSe ) ),( ( MUC + MUM ) - ( DS * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + RRS ),CRS ) + ( ( MRS - ( AMS / MRS ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( Max( ( ( ( ( RMSe - MUR ) + ( RCSe / MUR ) ) / Min( Min( RMSe ,CS ) ,Max( CS,MUR ) ) ) + Max( ( ( MUC * MUR ) * ( MUM / MUR ) ),( ( CS / MUC ) - Max( MUC,MLU ) ) ) ),( Max( ( ( MUR * MUC ) + Min( MUR ,RCSe ) ),( Max( MUC,RRSe ) - Max( MUM,RCSe ) ) ) * Min( Max( ( RMSe + RRSe ),( RMSe * MLU ) ) ,( ( DS * CS ) + ( MUC - DS ) ) ) ) ) + ( ( ( ( Min( RMSe ,CS ) + Max( MUR,RRSe ) ) / Max( ( MLU + CS ),Max( MUM,MUM ) ) ) / Min( ( ( MUC + MLU ) * ( RRSe - RRSe ) ) ,( Min( MUM ,MUR ) - ( RRSe - MUC ) ) ) ) * ( Min( ( ( MLU / MUR ) / ( CS / CS ) ) ,( ( MUR - RRSe ) - ( DS - RCSe ) ) ) - ( ( ( MUC * RCSe ) - ( DS - CS ) ) - ( ( MUR - CS ) + ( DS - MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + MUR ) * ( CS + RRSe ) ) - ( ( MUM - MLU ) - ( CS + MUC ) ) ) / Max( ( ( DS + CS ) + ( MLU - CS ) ),Min( Min( MUC ,DS ) ,( RCSe + MUM ) ) ) ) - ( ( ( Max( RRSe,CS ) - Min( CS ,RMSe ) ) / ( Max( MLU,RRSe ) / Min( CS ,DS ) ) ) - ( ( Min( MLU ,MLU ) - ( MUM - MLU ) ) + ( ( MUR + MUC ) + ( RMSe + MUR ) ) ) ) ) - ( ( ( Min( ( RCSe / MUC ) ,( DS / CS ) ) - Max( Min( MUM ,MUM ),( RRSe * MUC ) ) ) + ( ( Min( RMSe ,MUC ) * ( MUC * DS ) ) * ( ( MUR + MUR ) - ( DS / DS ) ) ) ) + ( ( Min( Max( RCSe,DS ) ,Max( MUC,RMSe ) ) + Min( ( MUC / RRSe ) ,( RRSe - RRSe ) ) ) - ( ( ( MUM / MUM ) / ( RCSe + RMSe ) ) + Max( ( DS - MUR ),( RRSe / MUC ) ) ) ) ) ) ) + ( ( ( ( ( Min( Min( MUC ,MUM ) ,( CS / MLU ) ) / Max( Max( CS,RRSe ),Min( RRSe ,DS ) ) ) * ( ( ( RRSe - MUR ) * ( MUC - MLU ) ) / ( Min( MUM ,CS ) / ( RCSe * RMSe ) ) ) ) / ( ( Min( ( RMSe / MUM ) ,( CS + RCSe ) ) - Min( Min( DS ,CS ) ,Max( RCSe,CS ) ) ) * Min( ( ( MUM + RCSe ) - Max( RCSe,MUM ) ) ,( ( CS - RCSe ) + Max( MUM,RRSe ) ) ) ) ) + ( Max( ( Max( ( MUR * MUM ),( MUM / MUC ) ) + ( Max( MUM,MUC ) + ( MUC * DS ) ) ),( ( Min( DS ,RCSe ) - ( MUR * MUC ) ) + ( Min( RMSe ,RCSe ) / ( MUR / MUM ) ) ) ) * ( ( ( ( RRSe * MUC ) * ( RMSe / RRSe ) ) * ( Min( CS ,MLU ) / ( CS + MLU ) ) ) - Max( ( ( RRSe * MLU ) * ( CS + MLU ) ),Min( Min( MLU ,RRSe ) ,( MLU - RMSe ) ) ) ) ) ) * Min( ( ( ( Max( ( RCSe * MUC ),( RRSe - MUM ) ) - ( ( RMSe - MUM ) + ( RRSe - MLU ) ) ) + ( ( ( MUC - MUM ) - ( MLU / MLU ) ) - ( ( DS / RCSe ) + ( MUC * RMSe ) ) ) ) - ( ( ( ( MUR + DS ) - ( MLU - RRSe ) ) - ( Max( MLU,CS ) / ( MUR * MUC ) ) ) - ( Min( ( MLU * CS ) ,( RCSe + RRSe ) ) * ( Max( CS,MUM ) * Min( MUM ,DS ) ) ) ) ) ,Max( Max( Min( ( ( RCSe - RCSe ) - ( DS + MUR ) ) ,( ( DS / CS ) - ( RRSe - DS ) ) ),( Max( ( RCSe / MUR ),Min( MLU ,DS ) ) + ( ( RMSe * MLU ) - ( MUC + DS ) ) ) ),( ( Min( ( MLU - RRSe ) ,( MUC * RCSe ) ) - ( Min( MLU ,MLU ) / ( MUR * CS ) ) ) * ( ( ( CS + RRSe ) - ( CS / RCSe ) ) / ( ( MLU / RCSe ) - ( RRSe * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) * ( PN - BR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( BR - MDR ) ) ) + Max( ( ( ( PN - ( PN + BR ) ) * ARS ) * Min( Const ,MRS ) ),Min( ( ARS + Const ) ,Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RCSe ) )", "obj1": 0.08713692946058091, "obj2": 0.7621393694721079}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.1527848985980724}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( RCSe / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6120331950207469, "obj2": 0.23187116024031856}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( Min( MDR ,RRS ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.25297762208691466}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.3759256928250403}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU + CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.35269709543568467, "obj2": 0.48249402156799387}, {"determining": "( ( PN - ( Const + Min( ( ( BR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - ( DDR + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.17427385892116182, "obj2": 0.6303853782485069}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( RRS + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.12033195020746888, "obj2": 0.6926357761765446}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe * ( MUM - RMSe ) ) * ( RCSe + MUR ) ) / RMSe ) / CS )", "obj1": 0.9356846473029046, "obj2": 0.03357178020632351}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10312011783771252}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( RRS ,DDR ) ) ) + Min( ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / Min( ( RRSe / DS ) ,MUR ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) )", "obj1": 0.6742738589211619, "obj2": 0.1808709392372845}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.558091286307054, "obj2": 0.27269936412583773}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.24273858921161826, "obj2": 0.5778684563837421}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + ( RRS * MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14315352697095435, "obj2": 0.6729220411256458}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ACS + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / CS ) / Max( MUC,RCSe ) ) / RMSe ) / CS )", "obj1": 0.9045643153526971, "obj2": 0.038127276349686934}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + ( ACS + FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / CS )", "obj1": 0.6369294605809128, "obj2": 0.22578579221611406}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( CS ,CS ) )", "obj1": 0.25311203319502074, "obj2": 0.5625614216656082}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.529045643153527, "obj2": 0.3132871482093522}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( CRS / BR ) ,( PN - FirstVNF_RAM_Server ) ) + ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,AMS ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MUM * DS ) / Min( ( CS / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - CS ),RMSe ) )", "obj1": 0.2863070539419087, "obj2": 0.5341187789513038}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.7676348547717843, "obj2": 0.0905544161656895}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) )", "choosing": "( ( ( ( MUM / RRSe ) + CS ) / DS ) / CS )", "obj1": 0.4024896265560166, "obj2": 0.4407052651180672}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - Max( Min( FirstVNF_Mem_Server ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9481327800829875, "obj2": 0.022925878898239133}, {"determining": "( ( PN - BR ) + Min( DDR ,Min( DDR ,PN ) ) )", "choosing": "( ( ( ( ( Max( RMSe,MUM ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.12240663900414937, "obj2": 0.6853962635559832}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - ( DDR + Min( Max( DDR,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - MUR ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2946058091286307, "obj2": 0.5178940530965347}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( MDR - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5456431535269709, "obj2": 0.2968910773408708}, {"determining": "( ( PN - ( ACS + Max( RRS,( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.991701244813278, "obj2": 0.003117435820970435}, {"determining": "( ( PN - ( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server * MRS ),Min( DDR ,PN ) ) ) ) + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RRSe ) / MUM ) / CS )", "obj1": 0.43568464730290457, "obj2": 0.4045594099037973}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) + BR ) )", "choosing": "( ( RCSe / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.15767634854771784, "obj2": 0.6477371326136999}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.4854771784232365, "obj2": 0.34420825967135316}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.08377443292318239}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) )", "obj1": 0.9688796680497925, "obj2": 0.011992809010833516}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( DS / ( MUR / CS ) ) / ( MUM * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3132780082987552, "obj2": 0.5061826108943001}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,Const ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3257261410788382, "obj2": 0.49768229674883774}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( MDR - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3879668049792531, "obj2": 0.44994268199738835}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( PN - ( DDR + ( Max( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ),FirstVNF_Mem ) + DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( CS / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5579883075187011}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( MDR - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( CS / RMSe ) / DS ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8921161825726142, "obj2": 0.04114214973917292}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.529045643153527, "obj2": 0.3132871482093522}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.3755186721991701, "obj2": 0.46504156808487557}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.2053941908713693, "obj2": 0.6177228226194156}], "30": [{"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) - ( ACS + Max( RRS,( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / CS ) / ( ( CS / RMSe ) / DS ) ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( ( Max( FirstVNF_CPU,Const ) * Min( DDR ,FirstVNF_Mem ) ) / Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / MDR ) ) ) ,Max( ( Max( ACS,FirstVNF_CPU_Server ) - ( PN + ARS ) ),Max( ( FirstVNF_RAM_Server * AMS ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) * ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_Mem ) ),Min( Max( MDR,MRS ) ,( ARS / FirstVNF_Mem ) ) ) - ( ( Max( Const,FirstVNF_CPU ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Max( ( AMS / ARS ),Min( Const ,FirstVNF_CPU ) ) ) ) ),Min( ( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Min( Const ,AMS ) ) / ( ( Const / FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) * Max( ( Max( FirstVNF_CPU,DDR ) + ( ARS / FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * ( FirstVNF_RAM - RRS ) ) ) ) ,Min( ( Min( Max( ACS,PN ) ,Max( DDR,ACS ) ) * ( ( DDR - ACS ) + ( Const + MRS ) ) ) ,( Max( ( FirstVNF_RAM_Server + ACS ),( RRS / MDR ) ) / ( ( Const / CRS ) / Min( Const ,FirstVNF_Mem ) ) ) ) ) ) * ( Max( Max( Min( Min( ( FirstVNF_RAM_Server + MDR ) ,Min( DDR ,DDR ) ) ,Max( ( RRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ),( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + Min( Max( MRS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( ( CRS + BR ) * Min( CRS ,Const ) ) / ( ( ARS - FirstVNF_CPU ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) ) * ( ( Min( ARS ,MDR ) / ( FirstVNF_Mem + MRS ) ) + Min( ( FirstVNF_CPU / AMS ) ,( MRS - FirstVNF_CPU_Server ) ) ) ) ) + ( ( Min( ( ( FirstVNF_CPU - CRS ) / Min( ARS ,ARS ) ) ,( Min( Const ,CRS ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ) - ( ( ( ACS / CRS ) - ( MDR / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU / MDR ) - Min( PN ,FirstVNF_Mem ) ) ) ) / ( Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / ( MRS / DDR ) ) ,( ( MRS * FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,DDR ) ) ) + ( ( ( FirstVNF_RAM / DDR ) - ( RRS - MDR ) ) + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS * Const ) ) ) ) ) ) ) - Max( ( ( Min( Max( ( ( PN + MDR ) * ( FirstVNF_RAM_Server - MRS ) ),( ( Const + FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ,Min( Min( ( CRS / ARS ) ,Max( AMS,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - AMS ) - Min( RRS ,CRS ) ) ) ) / ( ( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem_Server * AMS ) ) * Min( ( FirstVNF_CPU_Server - ARS ) ,( Const / MDR ) ) ) - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ),( FirstVNF_Mem / MRS ) ) / ( Min( FirstVNF_RAM ,ACS ) * ( ARS + FirstVNF_RAM ) ) ) ) ) + ( Min( Min( Max( Min( CRS ,FirstVNF_RAM_Server ),( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) - Min( DDR ,FirstVNF_RAM_Server ) ) ) ,Max( ( ( CRS - FirstVNF_RAM_Server ) / ( ACS + CRS ) ),( ( Const / CRS ) + ( FirstVNF_Mem_Server + DDR ) ) ) ) / ( ( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MRS ,FirstVNF_CPU ) ) / ( ( PN * PN ) / ( MRS + BR ) ) ) + ( ( ( FirstVNF_RAM / ARS ) / ( FirstVNF_Mem_Server + PN ) ) - ( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_RAM_Server * BR ) ) ) ) ) ),( ( Min( ( ( ( AMS * PN ) / ( BR * ACS ) ) - Min( Min( CRS ,ACS ) ,( FirstVNF_Mem_Server - MDR ) ) ) ,Max( ( ( BR / CRS ) / ( MDR / CRS ) ),( ( ARS / AMS ) + Min( FirstVNF_CPU_Server ,BR ) ) ) ) + ( Max( ( ( MDR - Const ) / ( FirstVNF_Mem_Server + MDR ) ),Min( ( FirstVNF_Mem / FirstVNF_Mem ) ,( FirstVNF_Mem_Server / Const ) ) ) + Min( Max( ( Const * PN ),Max( FirstVNF_CPU_Server,MDR ) ) ,( ( AMS / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) + Min( Max( Min( ( Min( FirstVNF_CPU ,RRS ) / ( CRS + FirstVNF_RAM ) ) ,( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ),Max( ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_RAM_Server / PN ) ),Max( ( BR * RRS ),( MDR * FirstVNF_CPU ) ) ) ) ,Max( Min( Min( ( Const - FirstVNF_CPU ) ,( BR / FirstVNF_RAM_Server ) ) ,( ( ACS / MDR ) - ( ARS * AMS ) ) ),( ( ( FirstVNF_CPU_Server - RRS ) * ( CRS / FirstVNF_Mem ) ) * ( ( RRS / BR ) - ( FirstVNF_CPU_Server / ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( ( ( ( RMSe + RMSe ) - ( MUR / MUM ) ) - ( ( MUM + RCSe ) * ( MUC - RMSe ) ) ) ,( ( ( DS - CS ) / Max( RMSe,RRSe ) ) - Min( ( CS * MUM ) ,( MUM / RMSe ) ) ) ) - ( ( ( ( MUR / CS ) * ( RMSe - MUC ) ) * ( ( MUR * MUR ) * ( RCSe - DS ) ) ) + ( Max( ( MUM / MUR ),( RRSe - CS ) ) / Max( Max( CS,MLU ),( MUC * DS ) ) ) ) ) - Min( Min( Max( Max( ( CS / MUR ),Max( MUR,MLU ) ),( ( RCSe + RMSe ) * ( RMSe + MUC ) ) ) ,( Max( ( MUC * MLU ),( DS / MUC ) ) * Max( Min( RMSe ,MUR ),Min( MUC ,RMSe ) ) ) ) ,( ( ( ( DS * RMSe ) - ( CS - MUR ) ) + ( ( CS + MUM ) / ( MUM / CS ) ) ) - Max( ( ( MUM + MUM ) * ( DS - MUR ) ),( Max( CS,MUM ) - ( CS + RRSe ) ) ) ) ) ),Max( Min( ( ( ( ( RMSe * MUR ) + ( RMSe - MUR ) ) / Min( Min( MUC ,RRSe ) ,( MUC / DS ) ) ) * ( Max( ( MLU * MUM ),( DS * CS ) ) * ( Max( RMSe,MUC ) + ( MUM * MUM ) ) ) ) ,( Min( ( ( MUR * MUM ) * ( DS + CS ) ) ,Max( ( RRSe / RMSe ),Max( RMSe,RRSe ) ) ) * ( ( Max( RCSe,MUR ) + ( RRSe - MUM ) ) - Max( Max( MLU,RMSe ),Min( RMSe ,RCSe ) ) ) ) ),( ( Min( Min( ( CS / RRSe ) ,( RRSe / CS ) ) ,Max( ( RMSe + MUM ),Max( RMSe,RRSe ) ) ) / ( ( ( RCSe / RCSe ) / ( DS / RRSe ) ) / ( ( RCSe - RMSe ) * Min( DS ,MLU ) ) ) ) - Min( ( Max( Max( MUM,RCSe ),( CS + RMSe ) ) * ( ( MUM * MUR ) / ( MUC / MLU ) ) ) ,Min( ( ( DS * MUR ) * Max( CS,RRSe ) ) ,( ( MUM / RRSe ) - ( MUR + MUR ) ) ) ) ) ) ) + Max( ( ( Max( ( ( ( MLU - CS ) / Max( DS,MUC ) ) / Max( Max( MUM,DS ),Max( RMSe,MLU ) ) ),( ( ( CS + RRSe ) - ( RMSe * MUM ) ) * ( ( RMSe + MUR ) * ( DS * RRSe ) ) ) ) / ( ( Max( Min( MLU ,RCSe ),Max( RMSe,MUR ) ) * Min( ( MUR / RMSe ) ,( RMSe * DS ) ) ) - Min( ( ( MUM / RCSe ) + ( DS + RCSe ) ) ,( Max( MUC,MUR ) + Min( DS ,RMSe ) ) ) ) ) * ( Max( Max( ( ( MUC / RMSe ) * ( DS / MUR ) ),Min( Max( RRSe,MLU ) ,Max( MUC,MUM ) ) ),( Min( ( MUR + DS ) ,( MUM * MUM ) ) + Min( Max( RCSe,MLU ) ,( MUR + MUM ) ) ) ) + Min( ( Max( ( CS * RRSe ),Max( MUR,RRSe ) ) - ( ( CS - MUM ) - ( MUM - MLU ) ) ) ,Min( ( ( DS - MUM ) + ( CS + RCSe ) ) ,( ( RMSe + RMSe ) - ( MUM / MUM ) ) ) ) ) ),( Max( ( ( ( Max( DS,MUM ) + ( CS + MUC ) ) + Min( ( RRSe / RRSe ) ,( MUR * MLU ) ) ) / ( ( ( MUR - DS ) / Min( CS ,RCSe ) ) / ( ( MUM * MUM ) / ( MLU * RRSe ) ) ) ),Max( ( ( ( RMSe + MUM ) / ( MUC * CS ) ) - ( Max( MLU,DS ) + ( MLU + MUC ) ) ),( Min( ( RRSe * MUR ) ,( RCSe * RRSe ) ) * Max( ( DS * RCSe ),Max( RCSe,MUM ) ) ) ) ) * ( Max( ( Max( ( MLU + RMSe ),Min( MUC ,RRSe ) ) * ( ( CS + MUM ) / ( MLU * CS ) ) ),( Min( Max( RRSe,MUR ) ,Max( RCSe,MUC ) ) - ( ( DS - RRSe ) - ( MUR + MUM ) ) ) ) + ( Min( Min( Max( DS,RMSe ) ,Max( RRSe,MLU ) ) ,( Max( RRSe,MUM ) / ( MLU + RMSe ) ) ) - Max( Min( Min( MUC ,MUC ) ,( MUR + RCSe ) ),( ( MUC + MUM ) - ( DS * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Max( Const,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),PN ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( RRSe * MUM ) - ( RCSe + MUR ) ) ) / RMSe ) / CS )", "obj1": 0.8257261410788381, "obj2": 0.08099445391387487}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ACS + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.8817427385892116, "obj2": 0.04797331853887325}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.1527848985980724}, {"determining": "( ( PN - ( ACS + Min( MDR ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7261410788381742, "obj2": 0.10753019084896688}, {"determining": "( ( PN - ( DDR + ( Max( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ),FirstVNF_Mem ) + DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( CS / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5579883075187011}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.4854771784232365, "obj2": 0.34420825967135316}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2800829875518672, "obj2": 0.5196327518995961}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.3759256928250403}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.42323651452282157, "obj2": 0.38662489193248284}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.3755186721991701, "obj2": 0.46504156808487557}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( MDR - Min( FirstVNF_RAM ,Min( FirstVNF_RAM_Server ,DDR ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.25294623040045333}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.7676348547717843, "obj2": 0.0905544161656895}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.921161825726141, "obj2": 0.03208368788093349}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,Const ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3257261410788382, "obj2": 0.49768229674883774}, {"determining": "( ( PN - ( ACS + ( RRS * MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14315352697095435, "obj2": 0.6729220411256458}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6307053941908713, "obj2": 0.22455164612195722}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / Min( ( RRSe / DS ) ,MUR ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( ( RRSe / CS ) / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6908713692946058, "obj2": 0.17950102500777818}, {"determining": "( ( PN - ( ACS + Min( MDR ,RRS ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.11618257261410789, "obj2": 0.7008823030422815}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7344398340248963, "obj2": 0.10240627110319975}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) )", "choosing": "( ( ( ( MUM / RRSe ) + CS ) / DS ) / CS )", "obj1": 0.4024896265560166, "obj2": 0.4407052651180672}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.08377443292318239}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( ( MUM / RMSe ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.4187190070095696}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( MLU + CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.2095435684647303, "obj2": 0.6082066224716306}, {"determining": "( ( PN - ( Const + Min( ( ( BR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5145228215767634, "obj2": 0.32065942904922595}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( MDR - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5456431535269709, "obj2": 0.2968910773408708}, {"determining": "( ( PN - ( ACS + Min( ( ( ( ( CRS / DDR ) + ACS ) * Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MLU / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.3506224066390041, "obj2": 0.4864624538271184}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - Max( Min( FirstVNF_Mem_Server ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9481327800829875, "obj2": 0.022925878898239133}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN * FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / MUC ) / CS )", "obj1": 0.15352697095435686, "obj2": 0.6494977657741059}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.558091286307054, "obj2": 0.27269936412583773}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6120331950207469, "obj2": 0.23187116024031856}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( ( MUM + RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.35477178423236516, "obj2": 0.4755851627003621}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( RRS ,DDR ) ) ) + Min( ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / Min( ( RRSe / DS ) ,MUR ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) )", "obj1": 0.6742738589211619, "obj2": 0.1808709392372845}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / FirstVNF_Mem_Server ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.5932446527431321}, {"determining": "( ( PN - ( DDR + Min( Max( DDR,FirstVNF_Mem ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUM / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - MUR ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.2946058091286307, "obj2": 0.5178940530965347}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7033195020746889, "obj2": 0.16058892237437744}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) + BR ) )", "choosing": "( ( RCSe / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( RCSe / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6120331950207469, "obj2": 0.23187116024031856}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Max( ( FirstVNF_RAM_Server * MRS ),Min( DDR ,PN ) ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.5726141078838174, "obj2": 0.26287222102730995}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) )", "obj1": 0.9688796680497925, "obj2": 0.011992809010833516}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.529045643153527, "obj2": 0.3132871482093522}], "31": [{"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - MDR ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + ( BR * FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / RCSe ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) - ( ACS + Max( RRS,( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / CS ) / ( ( CS / RMSe ) / DS ) ),RMSe ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( DDR + ( Max( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ),FirstVNF_Mem ) + DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( CS / ( MUR + MLU ) ) / ( MUC * RMSe ) ) - CS ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( Min( ( RRSe / DS ) ,MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.2676348547717842, "obj2": 0.5579883075187011}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8153526970954357, "obj2": 0.06802216148121336}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) + BR ) )", "choosing": "( ( RCSe / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( DDR - Min( ( ( ( PN / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( DS / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.1908713692946058, "obj2": 0.6203234090230927}, {"determining": "( ( PN - ( ACS + Min( ( ( ACS + Max( RRS,MDR ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ),( ( ( MUM / RMSe ) / CS ) - Max( ( MLU / MUR ),Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8692946058091287, "obj2": 0.0553803591253726}, {"determining": "( ( PN - ( ACS + Min( MDR ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7261410788381742, "obj2": 0.10753019084896688}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.1527848985980724}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2800829875518672, "obj2": 0.5196327518995961}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( ACS ,PN ) ) ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - Max( ( MLU / MUC ),( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.533195020746888, "obj2": 0.2968325237688083}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.3759256928250403}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUR ) / CS ) - ( ( MLU / MLU ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4211618257261411, "obj2": 0.384513566866178}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.15352697095435686, "obj2": 0.6494977657741059}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( RRS ,DDR ) ) ) + Min( ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.12448132780082988, "obj2": 0.6918079078171667}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Min( MDR ,RRS ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.11618257261410789, "obj2": 0.7008823030422815}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.4854771784232365, "obj2": 0.34420825967135316}, {"determining": "( ( PN - ( ( CRS / BR ) + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / ( CS + DS ) ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3983402489626556, "obj2": 0.448840690438915}, {"determining": "( ( FirstVNF_CPU - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RRSe ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5560165975103735, "obj2": 0.2740119400777141}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / Min( ( RRSe / DS ) ,MUR ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( ( RRSe / CS ) / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.6908713692946058, "obj2": 0.17950102500777818}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ACS ,Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) )", "choosing": "( ( ( ( MUM / RRSe ) + CS ) / DS ) / CS )", "obj1": 0.4024896265560166, "obj2": 0.4407052651180672}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.3755186721991701, "obj2": 0.46504156808487557}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.6493775933609959, "obj2": 0.21781385971881867}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Max( ( FirstVNF_RAM_Server * MRS ),Min( DDR ,PN ) ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.5726141078838174, "obj2": 0.26287222102730995}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.08377443292318239}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( ( MUM / RMSe ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.4187190070095696}, {"determining": "( ( PN - ( Const + Min( ( ( BR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( Max( PN,( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( MLU * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.7468879668049793, "obj2": 0.10099009165253639}, {"determining": "( ( PN - ( ACS + ( RRS * MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14315352697095435, "obj2": 0.6729220411256458}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN * FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / MUC ) / CS )", "obj1": 0.15352697095435686, "obj2": 0.6494977657741059}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7033195020746889, "obj2": 0.16058892237437744}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.6535269709543569, "obj2": 0.1994461183066433}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( RRS ,DDR ) ) ) + Min( ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / Min( ( RRSe / DS ) ,MUR ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) )", "obj1": 0.6742738589211619, "obj2": 0.1808709392372845}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - ( DDR + Min( Max( ACS,FirstVNF_Mem_Server ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * ( RMSe * RRSe ) ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3236514522821577, "obj2": 0.5136772717592653}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.34439834024896265, "obj2": 0.49145781683064965}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ,DDR ) )", "choosing": "( ( MUM / RMSe ) / Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.010855179541481736}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( MLU + CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.2095435684647303, "obj2": 0.6082066224716306}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + ACS ) - Max( Min( Const ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.3257261410788382, "obj2": 0.49768229674883774}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS - RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6016597510373444, "obj2": 0.2400110707748541}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - Max( Min( FirstVNF_Mem_Server ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9481327800829875, "obj2": 0.022925878898239133}, {"determining": "( ( PN - ( ACS + Max( Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RMSe ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) + CS ),RMSe ) )", "obj1": 0.8962655601659751, "obj2": 0.04131633070198236}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( MDR - Min( FirstVNF_RAM ,Min( FirstVNF_RAM_Server ,DDR ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5850622406639004, "obj2": 0.2503112047564781}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.4979253112033195, "obj2": 0.3415127917024069}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM - RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3029045643153527, "obj2": 0.5138636833137744}, {"determining": "( ( PN - ( ACS + Max( RRS,FirstVNF_RAM ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe * RRSe ) / RMSe ) / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}], "32": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) - ( ACS + Max( RRS,( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - MDR ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + ( BR * FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / RCSe ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / ( CS - RCSe ) ) ) ) / MUR )", "obj1": 0.2676348547717842, "obj2": 0.5435740558561031}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / CS ) ) / CS ) ,CS ) )", "obj1": 0.25103734439834025, "obj2": 0.5795545255112831}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( ( DDR * DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUR ) / CS ) - ( ( MLU / MLU ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6410788381742739, "obj2": 0.21451030824576403}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.29045643153526973, "obj2": 0.513416947130884}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,( BR * FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) + BR ) )", "choosing": "( ( RCSe / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.3755186721991701, "obj2": 0.46504156808487557}, {"determining": "( ( PN - ( ACS + Min( ( ( ACS + Max( RRS,MDR ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ),( ( ( MUM / RMSe ) / CS ) - Max( ( MLU / MUR ),Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8692946058091287, "obj2": 0.0553803591253726}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * FirstVNF_CPU ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) - DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.18464730290456433, "obj2": 0.6286348044143567}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.3759256928250403}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6141078838174274, "obj2": 0.23567113121877256}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - MDR ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,( MLU / MLU ) ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7219917012448133, "obj2": 0.1439688732667441}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS - RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.5269709543568465, "obj2": 0.3277954717357777}, {"determining": "( ( PN - ( ACS + Min( MDR ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.7468879668049793, "obj2": 0.1007271209827497}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + ( RRS * MDR ) ) ) + Max( ( DDR + ( ARS - FirstVNF_RAM ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / ( MUM / RMSe ) ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.12448132780082988, "obj2": 0.6901765000704639}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + ( ACS + FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / RMSe ) / CS ) / DS ) / RCSe )", "obj1": 0.15352697095435686, "obj2": 0.6494977657741059}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2800829875518672, "obj2": 0.5196327518995961}, {"determining": "( ( FirstVNF_CPU - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RRSe ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5560165975103735, "obj2": 0.2740119400777141}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.34323215179115585}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( ACS ,PN ) ) ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - Max( ( MLU / MUC ),( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.533195020746888, "obj2": 0.2968325237688083}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8153526970954357, "obj2": 0.06802216148121336}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.35477178423236516, "obj2": 0.4755851627003621}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4211618257261411, "obj2": 0.384513566866178}, {"determining": "( ( PN - ( FirstVNF_RAM + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,MDR ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.4004149377593361, "obj2": 0.43840928645156424}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( Const,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU / DS ) ,( ( ( MUC / ( RRSe / DS ) ) / ( MUC * RRSe ) ) - CS ) ) / Min( ( MUR / MLU ) ,Max( MLU,( MUM * ( RMSe + RMSe ) ) ) ) ) - ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) )", "obj1": 0.8070539419087137, "obj2": 0.08327298739595945}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3381742738589212, "obj2": 0.47872641184134695}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.6535269709543569, "obj2": 0.1994461183066433}, {"determining": "( ( PN - ( ACS + Min( MDR ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7261410788381742, "obj2": 0.10753019084896688}, {"determining": "( ( PN - ( Const + Min( ( ( BR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUM / RMSe ) / MUC )", "obj1": 0.4170124481327801, "obj2": 0.41320816079782285}, {"determining": "( ( PN - ( ACS + Max( Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9190871369294605, "obj2": 0.030290588705394108}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( ( MUM / RMSe ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7717842323651453, "obj2": 0.0874149561107868}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( ( MUM / RMSe ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.4187190070095696}, {"determining": "( ( PN - ( ACS + ( RRS * MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.14315352697095435, "obj2": 0.6729220411256458}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS - RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6016597510373444, "obj2": 0.2400110707748541}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - Max( Min( FirstVNF_Mem_Server ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9481327800829875, "obj2": 0.02292587889823913}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.529045643153527, "obj2": 0.2985896401929238}, {"determining": "( ( PN - ( ACS + Max( Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RMSe ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) + CS ),RMSe ) )", "obj1": 0.8962655601659751, "obj2": 0.04131633070198236}, {"determining": "( ( MDR - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( Max( CS,( MUR / ( ( CS / RMSe ) / MUC ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / RMSe ) / ( CS - RMSe ) ) ) )", "obj1": 0.6597510373443983, "obj2": 0.18994357783408838}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( RRS ,DDR ) ) ) + Min( ( DDR + Min( Max( ACS,FirstVNF_Mem ) ,DDR ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( MUR / Min( ( RRSe / DS ) ,MUR ) ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( MLU / CS ) / Min( CS ,CS ) ) ) )", "obj1": 0.6742738589211619, "obj2": 0.1808709392372845}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7033195020746889, "obj2": 0.16058892237437744}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7738589211618258, "obj2": 0.08377443292318239}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( CRS / BR ) + ( PN - PN ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7116182572614108, "obj2": 0.1527848985980724}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - MDR ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9647302904564315, "obj2": 0.018289552517507624}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - CS ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6887966804979253, "obj2": 0.16721333174216965}], "33": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( Min( DDR ,PN ) - ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - CS ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( DS / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) - ( ACS + Max( RRS,( DDR + ( ARS - FirstVNF_RAM ) ) ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * FirstVNF_CPU ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) - DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.18464730290456433, "obj2": 0.6286348044143567}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS - RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6016597510373444, "obj2": 0.2400110707748541}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( Max( MLU,CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.09336099585062241, "obj2": 0.7142329838138791}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8153526970954357, "obj2": 0.06802216148121336}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5643153526970954, "obj2": 0.26583203729179}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.34323215179115585}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.8672199170124482, "obj2": 0.054058098502048575}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.36799127661694303}, {"determining": "( ( Min( DDR ,( ( FirstVNF_CPU - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) ) ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( RMSe / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.38589211618257263, "obj2": 0.45657777160483637}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) / ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM - RMSe ) / CS ) - ( ( ( MUM / RMSe ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3941908713692946, "obj2": 0.43443862052458776}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( Min( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( MLU + CS ) / CS ) - MUR ) / RCSe )", "obj1": 0.2095435684647303, "obj2": 0.6082066224716306}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS - RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.5269709543568465, "obj2": 0.3277954717357777}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( PN - Min( CRS ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( RMSe * Max( ( MLU / RMSe ),Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.11618257261410789, "obj2": 0.708296851167022}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.35892116182572614, "obj2": 0.4616785312781454}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3008298755186722, "obj2": 0.509980724340987}, {"determining": "( ( FirstVNF_CPU - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RRSe ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5560165975103735, "obj2": 0.2740119400777141}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8070539419087137, "obj2": 0.07256069734568096}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.25311203319502074, "obj2": 0.5710351704185894}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( ACS ,PN ) ) ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - Max( ( MLU / MUC ),( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.533195020746888, "obj2": 0.2968325237688083}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.15352697095435686, "obj2": 0.6494977657741059}, {"determining": "( ( PN - ( ACS + Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / RMSe ) / DS ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) + CS ),RMSe ) )", "obj1": 0.7219917012448133, "obj2": 0.1232326318846423}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RRSe ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6286307053941909, "obj2": 0.22084681238579068}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( ( DDR * DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUR ) / CS ) - ( ( MLU / MLU ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6410788381742739, "obj2": 0.21451030824576403}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6141078838174274, "obj2": 0.23567113121877256}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( RRSe / MUC ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) - CS ),RMSe ) )", "obj1": 0.6535269709543569, "obj2": 0.1994461183066433}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4170124481327801, "obj2": 0.39026552980304013}, {"determining": "( ( PN - ( ACS + Max( RRS,MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7759336099585062, "obj2": 0.08339716040971049}, {"determining": "( ( PN - ( ACS + Min( MDR ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( CS / RMSe ) / CS )", "obj1": 0.7468879668049793, "obj2": 0.10072712098274969}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - MDR ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,( MLU / MLU ) ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7178423236514523, "obj2": 0.14451462021511846}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / CS ) ) / CS ) ,CS ) )", "obj1": 0.25103734439834025, "obj2": 0.5795545255112831}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / ( CS - RCSe ) ) ) ) / MUR )", "obj1": 0.27385892116182575, "obj2": 0.5374014699030858}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.529045643153527, "obj2": 0.2985896401929238}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.34854771784232363, "obj2": 0.47514884858296996}, {"determining": "( ( PN - ( ACS + Max( Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9190871369294605, "obj2": 0.030290588705394108}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( ( MUM / RMSe ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.4187190070095696}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.4087136929460581, "obj2": 0.4224911558194476}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.14730290456431536, "obj2": 0.6684770332270162}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,( BR * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - ( ACS + ( RRS * MDR ) ) ) + Max( ( DDR + ( ARS - FirstVNF_RAM ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / ( MUM / RMSe ) ) / DS ) / RMSe ) / MUM ) / CS )", "obj1": 0.12448132780082988, "obj2": 0.6901765000704639}, {"determining": "( ( PN - ( DDR + Min( ( ( DDR + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / DDR ) + FirstVNF_RAM ) - MDR ) ) ,DDR ) ) ) + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) )", "choosing": "( Min( MUC ,( ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.9647302904564315, "obj2": 0.018289552517507624}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( Max( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7676348547717843, "obj2": 0.095317748907279}, {"determining": "( ( BR - ( ACS + Max( ( FirstVNF_RAM / Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS + ( ( MLU - MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.8962655601659751, "obj2": 0.04018766275488121}], "34": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,MUR ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,PN ) - ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - CS ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( DS / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.8672199170124482, "obj2": 0.054058098502048575}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) / ( ( CS / ( ( ( MUM / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1840553150623448}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4170124481327801, "obj2": 0.39026552980304013}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / ( CS - RCSe ) ) ) ) / MUR )", "obj1": 0.27385892116182575, "obj2": 0.5374014699030858}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34024896265560167, "obj2": 0.47160634616801667}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR ) / MUR )", "obj1": 0.5850622406639004, "obj2": 0.25043589951183387}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( MLU + CS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3775933609958506, "obj2": 0.4433066459327202}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( ( DDR * DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUR ) / CS ) - ( ( MLU / MLU ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.524896265560166, "obj2": 0.31995450501154693}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6514522821576764, "obj2": 0.19231448185351713}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / CS ) / RMSe ) / MUM ) / CS )", "obj1": 0.26348547717842324, "obj2": 0.5660093821283247}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( ( DDR * DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUR ) / CS ) - ( ( MLU / MLU ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6410788381742739, "obj2": 0.21451030824576403}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) / ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + MDR )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM - RMSe ) / CS ) - ( ( ( MUM / RMSe ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3941908713692946, "obj2": 0.43443862052458776}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8153526970954357, "obj2": 0.06802216148121336}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RRSe ) / CS ) / DS ) / CS )", "obj1": 0.14730290456431536, "obj2": 0.6684770332270162}, {"determining": "( ( PN - ( FirstVNF_Mem + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / RMSe ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.32788166846654093}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RRSe ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6286307053941909, "obj2": 0.22084681238579068}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( ( DDR + ( ARS - CRS ) ) + ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - MDR ) ) ) ) * DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS - Min( ( ( CS / RMSe ) / DS ) ,( MLU / MLU ) ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7178423236514523, "obj2": 0.14451462021511846}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6141078838174274, "obj2": 0.23567113121877256}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.36799127661694303}, {"determining": "( ( ( DDR / PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUC ) / ( CS + MUM ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6804979253112033, "obj2": 0.18525438548505097}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.4149377593360996, "obj2": 0.41526645656500794}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS - RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6016597510373444, "obj2": 0.2400110707748541}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5643153526970954, "obj2": 0.26583203729179}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8838174273858921, "obj2": 0.047166229072720806}, {"determining": "( Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / CS )", "obj1": 0.2053941908713693, "obj2": 0.6088211552677703}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.18672199170124482, "obj2": 0.6268486230748792}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( CS / RMSe ) / DS ) / CS )", "obj1": 0.549792531120332, "obj2": 0.2872391241293384}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.34323215179115585}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / CS ) + DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.21991701244813278, "obj2": 0.6031570071972475}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Max( ( DDR * FirstVNF_Mem ),MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) * RRSe ) - CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.11618257261410789, "obj2": 0.6966350978576873}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.15352697095435686, "obj2": 0.6494977657741059}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.35892116182572614, "obj2": 0.4616785312781454}, {"determining": "( ( PN - ( ACS + Max( Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( MUM / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9190871369294605, "obj2": 0.030290588705394108}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUC ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.8008298755186722, "obj2": 0.07403285789416017}, {"determining": "( ( PN - ( ACS + Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / RMSe ) / DS ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) + CS ),RMSe ) )", "obj1": 0.7261410788381742, "obj2": 0.12005636979971059}, {"determining": "( ( PN - ( ACS + Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / RMSe ) / DS ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) + CS ),RMSe ) )", "obj1": 0.7219917012448133, "obj2": 0.12120257075272214}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( ACS ,PN ) ) ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - Max( ( MLU / MUC ),( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6742738589211619, "obj2": 0.18994509502633364}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3008298755186722, "obj2": 0.509980724340987}, {"determining": "( ( PN - ( ACS + Min( MDR ,Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( CS / RMSe ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.10077384376264226}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,BR ) + Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM * DS ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.529045643153527, "obj2": 0.2985896401929238}, {"determining": "( ( PN - ( ACS + Max( ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.7800829875518672, "obj2": 0.08204039432398473}], "35": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) / CS ) / RMSe ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Min( ( DDR + Min( AMS ,DDR ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM * RCSe ) / RMSe ) - CS ),RMSe ) / RMSe ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,MUR ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( ( DDR + ( ARS - CRS ) ) + ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - MDR ) ) ) ) * DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS - Min( ( ( CS / RMSe ) / DS ) ,( MLU / MLU ) ) ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7178423236514523, "obj2": 0.14451462021511846}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS / BR ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( RMSe ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6784232365145229, "obj2": 0.1711400144915654}, {"determining": "( ( PN - ( ACS + Min( ( Const + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( MDR - FirstVNF_RAM_Server ) ) ) ) ,DDR ) ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Min( MUM ,( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( MUM / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.18672199170124482, "obj2": 0.6268486230748792}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) ) ) / DS ) / CS )", "obj1": 0.9813278008298755, "obj2": 0.0060148646457118034}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5, "obj2": 0.30638211707157526}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( ACS + Min( MDR ,Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( CS / RMSe ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.10077384376264226}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.35892116182572614, "obj2": 0.4616785312781454}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( MLU + CS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3775933609958506, "obj2": 0.4433066459327202}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) / CS ) / CS ) / RMSe ) / MUM ) / CS )", "obj1": 0.26348547717842324, "obj2": 0.5660093821283247}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.2551867219917012, "obj2": 0.5772161317536334}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.491701244813278, "obj2": 0.3336370521939183}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.15975103734439833, "obj2": 0.6452969338263858}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.34323215179115585}, {"determining": "( Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / CS )", "obj1": 0.2053941908713693, "obj2": 0.6088211552677703}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR ) / MUR )", "obj1": 0.13900414937759337, "obj2": 0.6830378715205153}, {"determining": "( ( ( DDR / PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.1016597510373444, "obj2": 0.7063758983091779}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / FirstVNF_RAM ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,AMS ) ),DDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( ( ( MUM / RMSe ) / ( ( CS / MUC ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) / CS ) - ( ( MLU / CS ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.7614107883817427, "obj2": 0.08927837693927516}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( ( DDR * DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUR ) / CS ) - ( ( MLU / MLU ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6410788381742739, "obj2": 0.21451030824576403}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.8672199170124482, "obj2": 0.054058098502048575}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6141078838174274, "obj2": 0.23567113121877256}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,BR ) + Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM * DS ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR ) / MUR )", "obj1": 0.5850622406639004, "obj2": 0.25043589951183387}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,RCSe ) ) ) ) / MUR )", "obj1": 0.3132780082987552, "obj2": 0.5043922899198714}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4170124481327801, "obj2": 0.39026552980304013}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( RRS - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( CS / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.5477178423236515, "obj2": 0.2847813865482152}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUC ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.8008298755186722, "obj2": 0.07403285789416017}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.4149377593360996, "obj2": 0.415195018471361}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6514522821576764, "obj2": 0.19231448185351713}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,ARS ) )", "choosing": "( ( ( ( ( ( MUM * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,RCSe ) ) ) ) / RRSe )", "obj1": 0.27385892116182575, "obj2": 0.5374014699030858}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.36799127661694303}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS + BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.47469131682767596}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34024896265560167, "obj2": 0.47160634616801667}, {"determining": "( ( PN - ( DDR + Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.15352697095435686, "obj2": 0.6494977657741059}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS - RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6016597510373444, "obj2": 0.2400110707748541}, {"determining": "( ( ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( Max( ( RMSe / MUC ),CS ),RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.12240663900414937, "obj2": 0.6956569339901125}, {"determining": "( ( PN - ( ACS + Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / RMSe ) / DS ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) + CS ),RMSe ) )", "obj1": 0.7261410788381742, "obj2": 0.12005636979971059}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - ( ACS + Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / RMSe ) / DS ) / Max( ( ( ( RMSe * RRSe ) / RMSe ) + CS ),RMSe ) )", "obj1": 0.7219917012448133, "obj2": 0.12120257075272214}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4315352697095436, "obj2": 0.3828217581610628}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUC ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.533195020746888, "obj2": 0.29547542999500087}, {"determining": "( ( PN - ( DDR + Min( ( Min( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / ( CS - RCSe ) ) ) ) / MUR )", "obj1": 0.27385892116182575, "obj2": 0.5374014699030858}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) / Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RRSe ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6286307053941909, "obj2": 0.22084681238579068}], "36": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( Max( ( CRS - RRS ),ARS ) - ( DDR * ( Const + BR ) ) )", "choosing": "( ( MUM - Min( MUC ,( DS / ( ( RMSe * MLU ) + ( ( MUC - MUM ) / ( Min( MUC ,MUM ) / ( RMSe * MUR ) ) ) ) ) ) ) / Max( DS,Max( ( ( MUR / RCSe ) / ( MUR / MUR ) ),Min( ( DS + RCSe ) ,Min( MUM ,( RMSe * Min( ( DS - MUR ) ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) / CS ) / RMSe ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6099585062240664, "obj2": 0.2080234359526333}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( CRS / BR ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / MUR ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7136929460580913, "obj2": 0.15196569369760643}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.558091286307054, "obj2": 0.27240828447513143}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) ) ) / DS ) / CS )", "obj1": 0.9813278008298755, "obj2": 0.0060148646457118034}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5, "obj2": 0.30638211707157526}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5809128630705395, "obj2": 0.23563226117603417}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7157676348547718, "obj2": 0.11595484928273031}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,RCSe ) ) ) ) / MUR )", "obj1": 0.3132780082987552, "obj2": 0.5043922899198714}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUC ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.533195020746888, "obj2": 0.29547542999500087}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3962655601659751, "obj2": 0.4315907431751725}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / FirstVNF_RAM ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,AMS ) ),DDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( ( ( MUM / RMSe ) / ( ( CS / MUC ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) / CS ) - ( ( MLU / CS ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.9066390041493776, "obj2": 0.037538967509316144}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.2572614107883817, "obj2": 0.5594990053812314}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS / BR ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( RMSe ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6784232365145229, "obj2": 0.1711400144915654}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( Min( DDR ,PN ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) ) / MUR )", "obj1": 0.5871369294605809, "obj2": 0.23100680309161623}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / ( ( CS / Min( ( ( CS / RMSe ) / DS ) ,( MLU / MLU ) ) ) - DS ) ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.8713692946058091, "obj2": 0.05270027195390163}, {"determining": "( ( ( DDR / PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) ) ) ) + Min( CRS ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.13692946058091288, "obj2": 0.6802644623079679}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / Min( FirstVNF_Mem ,DDR ) ) + ( PN - FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / CS ) / CS ) / RRSe ) - ( ( RMSe * ( MUM / RMSe ) ) - ( ( CS / RMSe ) + MUR ) ) ),( ( ( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) / CS ) - ( ( MLU / MUC ) / ( CS + DS ) ) ) ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.7593360995850622, "obj2": 0.0890679507432298}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6514522821576764, "obj2": 0.19231448185351713}, {"determining": "( ( ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( Max( ( RMSe / MUC ),CS ),RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.12240663900414937, "obj2": 0.6956569339901125}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( BR * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / CS ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( MLU + CS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3775933609958506, "obj2": 0.4433066459327202}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1970954356846473, "obj2": 0.6084213363248633}, {"determining": "( ( ( DDR / PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,Min( DDR ,DDR ) ) ) ) + Min( CRS ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / ( CS / RMSe ) ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.15145228215767634, "obj2": 0.6706587367915514}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( RRS - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( CS / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.5477178423236515, "obj2": 0.2847813865482152}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.8672199170124482, "obj2": 0.054058098502048575}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( ACS + Min( ( FirstVNF_CPU + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / Max( MLU,MUC ) ) / CS ) / CS ) - ( CS / ( ( ( CS - RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.9232365145228216, "obj2": 0.03722903970136471}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.4149377593360996, "obj2": 0.415195018471361}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6721991701244814, "obj2": 0.17916292560766675}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.35892116182572614, "obj2": 0.4616785312781454}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.2551867219917012, "obj2": 0.5772161317536334}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.34323215179115585}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS - ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.495850622406639, "obj2": 0.3320421868318789}, {"determining": "( ( Min( DDR ,PN ) - Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / ( CS * RMSe ) ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.3630705394190871, "obj2": 0.4512864826491995}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( CRS * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.36799127661694303}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM / RMSe ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.23858921161825727, "obj2": 0.5816218129352169}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.470954356846473, "obj2": 0.3520922532640452}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6514522821576764, "obj2": 0.19231448185351713}, {"determining": "( ( PN - ( ACS + Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / RRSe ) / CS ) - ( CS / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7323651452282157, "obj2": 0.10342373981026931}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( RMSe / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.7780082987551867, "obj2": 0.08418022791871689}, {"determining": "( ( PN - ( ACS + Min( MDR ,Max( Min( Max( RRS,MDR ) ,Min( FirstVNF_Mem ,DDR ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( CS / RMSe ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7385892116182573, "obj2": 0.09984541750331241}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,BR ) + Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM * DS ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS + BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.47469131682767596}], "37": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) / CS ) / RMSe ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - RRS ),ARS ) - ( DDR * ( Const + BR ) ) )", "choosing": "( ( MUM - Min( MUC ,( DS / ( ( RMSe * MLU ) + ( ( MUC - MUM ) / ( Min( MUC ,MUM ) / ( RMSe * MUR ) ) ) ) ) ) ) / Max( DS,Max( ( ( MUR / RCSe ) / ( MUR / MUR ) ),Min( ( DS + RCSe ) ,Min( MUM ,( RMSe * Min( ( DS - MUR ) ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( CRS / BR ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / MUR ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7136929460580913, "obj2": 0.15196569369760643}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.4149377593360996, "obj2": 0.415195018471361}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.553941908713693, "obj2": 0.24794179150054496}, {"determining": "( Max( ACS,FirstVNF_Mem ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.15560165975103735, "obj2": 0.6544862045195614}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5, "obj2": 0.30638211707157526}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) / DS ) / CS )", "obj1": 0.25933609958506226, "obj2": 0.5539792975938306}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( ( CRS / BR ) * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.11618257261410789, "obj2": 0.6951161112269267}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( Min( BR ,( ( ( CRS / BR ) + Max( BR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU / RMSe ) / RMSe ) / MUC ) / CS ),RCSe ) - ( ( Min( ( ( RMSe / RMSe ) / DS ) ,MUR ) / Min( CS ,RRSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.529045643153527, "obj2": 0.29524960732257594}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS + BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.47469131682767596}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( BR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.23236514522821577, "obj2": 0.5674155662426437}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( RRS - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( ( CS / RRSe ) / CS ) / RMSe ) ) / DS ) ),( ( MUR / CS ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.5477178423236515, "obj2": 0.2847813865482152}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( CS / RMSe ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8589211618257261, "obj2": 0.05841733844867013}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / MUM ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6141078838174274, "obj2": 0.2009815925674786}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( ( DDR / PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) ) ) ) + Min( CRS ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.13692946058091288, "obj2": 0.6802644623079679}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( FirstVNF_RAM_Server + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUR ) / CS ),CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) ) / DS )", "obj1": 0.10580912863070539, "obj2": 0.7158660382044156}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS / BR ) ) - Max( ( MDR * MRS ),Min( MRS ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( RMSe ,CS ) ) ) ) / RMSe ) ,CS ) )", "obj1": 0.6825726141078838, "obj2": 0.1703975359223334}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4315352697095436, "obj2": 0.3828217581610628}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.35892116182572614, "obj2": 0.4616785312781454}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7157676348547718, "obj2": 0.11595484928273031}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,BR ) + Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM * DS ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / RRS ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( CS / ( ( MLU / MLU ) / Min( CS ,RCSe ) ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8070539419087137, "obj2": 0.07171789266767259}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - ( ( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( Max( ( MLU / MLU ),RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.21784232365145229, "obj2": 0.6015773873889996}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( Min( DDR ,PN ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + ( PN - ( DDR + Min( ( Max( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( CS ,RCSe ) / RMSe ) * RRSe ) / MLU ) / DS ) / RMSe ) / ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) ) / MUR )", "obj1": 0.966804979253112, "obj2": 0.01382705916501529}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( Min( ( BR * FirstVNF_Mem ) ,Const ) * MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( DS / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6016597510373444, "obj2": 0.2148563383506783}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( RMSe / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.7780082987551867, "obj2": 0.08418022791871689}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1970954356846473, "obj2": 0.6084213363248633}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2946058091286307, "obj2": 0.5055067309432651}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,RCSe ) ) ) ) / MUR )", "obj1": 0.3091286307053942, "obj2": 0.5029936815660185}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( CRS * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.36799127661694303}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS - ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.495850622406639, "obj2": 0.3320421868318789}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3962655601659751, "obj2": 0.4315907431751725}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUM / RMSe ) / CS )", "obj1": 0.6721991701244814, "obj2": 0.17916292560766675}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.2572614107883817, "obj2": 0.5594990053812314}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6514522821576764, "obj2": 0.19231448185351713}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( Min( DDR ,PN ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.578838174273859, "obj2": 0.23747038438429488}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.34323215179115585}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( Min( DDR ,PN ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) ) / MUR )", "obj1": 0.5871369294605809, "obj2": 0.23100680309161623}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6556016597510373, "obj2": 0.18804319969700695}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + ( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) ) )", "choosing": "( ( ( DS / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.9273858921161826, "obj2": 0.032246889152010315}], "38": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) )", "choosing": "( Max( ( RMSe / ( ( CS / MUR ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) / CS ) / RMSe ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( CRS / BR ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / MUR ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7136929460580913, "obj2": 0.15196569369760643}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.4149377593360996, "obj2": 0.415195018471361}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7157676348547718, "obj2": 0.11595484928273031}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.46887966804979253, "obj2": 0.33061356998710684}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.25933609958506226, "obj2": 0.546008037698731}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3962655601659751, "obj2": 0.4315907431751725}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / MUM ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6141078838174274, "obj2": 0.2009815925674786}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS + BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.47469131682767596}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) / Min( ACS ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( CS,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( RMSe / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.7551867219917012, "obj2": 0.09378179373168602}, {"determining": "( Max( ACS,FirstVNF_Mem ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.15560165975103735, "obj2": 0.6544862045195614}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.4315352697095436, "obj2": 0.3828217581610628}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.17634854771784234, "obj2": 0.6247569700746025}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( Min( BR ,( ( ( CRS / BR ) + Max( BR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU / RMSe ) / RMSe ) / MUC ) / CS ),RCSe ) - ( ( Min( ( ( RMSe / RMSe ) / DS ) ,MUR ) / Min( CS ,RRSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.529045643153527, "obj2": 0.29524960732257594}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + Min( DDR ,DDR ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.4979253112033195, "obj2": 0.32582889128427034}, {"determining": "( ( ( DDR / PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM * MRS ),Min( DDR ,PN ) ) ) ) ,( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) ) ) ) + Min( CRS ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.13692946058091288, "obj2": 0.6802644623079679}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU / RMSe ) / RMSe ) / MUC ) / CS ),CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( CS + DS ) ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.3796680497925311, "obj2": 0.4468589180843134}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6431535269709544, "obj2": 0.1807785285013748}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( DDR + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.16597510373443983, "obj2": 0.6496418612686585}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.35892116182572614, "obj2": 0.4616785312781454}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05946539839008526}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( CRS * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.43983402489626555, "obj2": 0.36799127661694303}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( Min( DDR ,PN ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) ) / MUR )", "obj1": 0.5871369294605809, "obj2": 0.23100680309161623}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,( BR * FirstVNF_Mem ) ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS / BR ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( MUM ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6659751037344398, "obj2": 0.1778192643965251}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5435684647302904, "obj2": 0.25329874621746656}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2966804979253112, "obj2": 0.5021263828277149}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.2572614107883817, "obj2": 0.5594990053812314}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.7925311203319502, "obj2": 0.0794938727988227}, {"determining": "( ( Min( DDR ,( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( BR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.1016597510373444, "obj2": 0.7019752534203829}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1970954356846473, "obj2": 0.6084213363248633}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( ( DDR / PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS / BR ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,MUM ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6825726141078838, "obj2": 0.1703975359223334}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( CRS / BR ) ) - Max( ( MDR * MRS ),Min( MRS ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RRSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( RMSe ,CS ) ) ) ) / RMSe ) ,CS ) )", "obj1": 0.6825726141078838, "obj2": 0.1703975359223334}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.508298755186722, "obj2": 0.3022127904993839}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,BR ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS + BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,DS ) ) ) ) / MUR )", "obj1": 0.36721991701244816, "obj2": 0.4556057627628639}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUR ) / CS ),CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) ) / DS )", "obj1": 0.8630705394190872, "obj2": 0.057222904326432726}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( ( ( MDR * RRS ) / Min( DDR ,PN ) ),FirstVNF_Mem ) ) + ( Min( Min( DDR ,PN ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( CS ,RCSe ) / RMSe ) * RRSe ) / CS ) / DS ) / ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) ) / ( ( ( Max( MUM,RRSe ) / RMSe ) / DS ) / RMSe ) ) / MUR )", "obj1": 0.9813278008298755, "obj2": 0.009694347319434271}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5995850622406639, "obj2": 0.21388737968287916}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5169933089587992}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2946058091286307, "obj2": 0.5055067309432651}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,BR ) + Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM * DS ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}], "39": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / ( MUM / RRSe ) ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) )", "choosing": "( Max( ( RMSe / ( ( CS / MUR ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7157676348547718, "obj2": 0.11595484928273031}, {"determining": "( ( PN - Min( FirstVNF_RAM ,Min( ( ( DDR + ( ARS - CRS ) ) + ( CRS / BR ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( CS / MUR ) - DS ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( ( RMSe / RMSe ) / Min( CS ,CS ) ) ) )", "obj1": 0.7136929460580913, "obj2": 0.15196569369760643}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUM,RRSe ) / MUM ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.6141078838174274, "obj2": 0.2009815925674786}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.2572614107883817, "obj2": 0.5594990053812314}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU / RMSe ) / RMSe ) / MUC ) / CS ),CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( CS + DS ) ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.3796680497925311, "obj2": 0.4468589180843134}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( Min( BR ,( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34232365145228216, "obj2": 0.4550570855283804}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) - ( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,PN ) ) ) ,Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR * FirstVNF_Mem ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5166891875349259}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.508298755186722, "obj2": 0.3022127904993839}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.23045891371318492}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5995850622406639, "obj2": 0.21388737968287916}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( ( CRS / BR ) + DDR ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7510373443983402, "obj2": 0.09448875635607946}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( Min( FirstVNF_RAM ,CRS ) ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( CRS * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.33402489626556015, "obj2": 0.47193935205969756}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( Min( BR ,( ( ( CRS / BR ) + Max( BR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU / RMSe ) / RMSe ) / MUC ) / CS ),RCSe ) - ( ( Min( ( ( RMSe / RMSe ) / DS ) ,MUR ) / Min( CS ,RRSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.529045643153527, "obj2": 0.29524960732257594}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.4190871369294606, "obj2": 0.38847367140119543}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05946539839008526}, {"determining": "( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.9564315352697096, "obj2": 0.02212187510078395}, {"determining": "( ( Min( DDR ,( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( BR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.1016597510373444, "obj2": 0.7019752534203829}, {"determining": "( Max( ACS,FirstVNF_Mem ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.15560165975103735, "obj2": 0.6544862045195614}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( DDR + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.16597510373443983, "obj2": 0.6496418612686585}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.26556016597510373, "obj2": 0.5429976165068712}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.8838174273858921, "obj2": 0.04708967833014089}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / ( MUM / RMSe ) )", "obj1": 0.6887966804979253, "obj2": 0.16535717361595575}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( Min( MDR ,RRS ),Min( DDR ,PN ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( DS / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.9771784232365145, "obj2": 0.007629642329701378}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.5684647302904564, "obj2": 0.24386797462025073}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + Min( DDR ,DDR ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.4979253112033195, "obj2": 0.32582889128427034}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.7738589211618258, "obj2": 0.08737831765809113}, {"determining": "( ( Min( DDR ,( ( ( FirstVNF_CPU_Server / BR ) + MRS ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( BR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( ( MUM / MLU ) / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.14315352697095435, "obj2": 0.6778233463929421}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / MUM ) * RRSe ) / CS ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.9107883817427386, "obj2": 0.03620438347627826}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3879668049792531, "obj2": 0.42806842763597347}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2966804979253112, "obj2": 0.5021263828277149}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,BR ) + Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) - ARS ) ) + BR ) )", "choosing": "( ( MUM * DS ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,FirstVNF_RAM ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MLU / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6431535269709544, "obj2": 0.1807785285013748}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( RRSe / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.17634854771784234, "obj2": 0.6247569700746025}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.46680497925311204, "obj2": 0.33544663469562536}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.23029045643153526, "obj2": 0.5901245072511295}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.2074688796680498, "obj2": 0.6007776125574085}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.4004149377593361, "obj2": 0.425325699944466}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5435684647302904, "obj2": 0.25329874621746656}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( ( MUM / RMSe ) / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.22406639004149378, "obj2": 0.6000001942248682}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.8008298755186722, "obj2": 0.07467130785319354}], "40": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) * Min( Min( FirstVNF_RAM_Server ,BR ) ,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( Max( ( RMSe / RCSe ),CS ) - RRSe ) ) - ( ( DS - MUM ) + Min( ( RCSe - MLU ) ,Min( ( ( MLU - MUC ) * Max( ( MUM * CS ),DS ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / ( MUM / RRSe ) ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) ) * DS ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.3595588156999437}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * DDR ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / MUM ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.13278008298755187, "obj2": 0.6732012763890893}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / ( MUM / RMSe ) )", "obj1": 0.6887966804979253, "obj2": 0.16535717361595575}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( ( AMS * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - ( FirstVNF_RAM - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / RMSe ) / DS ) * MUR ) ) ),( CS / RMSe ) ) / DS )", "obj1": 0.7136929460580913, "obj2": 0.11770187443371902}, {"determining": "( ( Min( DDR ,( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( BR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.1016597510373444, "obj2": 0.7019752534203829}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,CRS ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( MUM / RMSe ) / CS ),DS ) / CS )", "obj1": 0.4190871369294606, "obj2": 0.3884537696874597}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU / RMSe ) / RMSe ) / MUC ) / CS ),CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( CS + DS ) ) - ( ( MUC / CS ) / ( MUM + DS ) ) ) ) / DS )", "obj1": 0.3796680497925311, "obj2": 0.4468589180843134}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.46680497925311204, "obj2": 0.33544663469562536}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.4004149377593361, "obj2": 0.425325699944466}, {"determining": "( ( PN - ( DDR + Min( ( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ) - ( ( Const * RRS ) - Min( FirstVNF_Mem ,PN ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.26556016597510373, "obj2": 0.5429658455455605}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.2800829875518672, "obj2": 0.5166891875349259}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( ( MLU / MLU ) / ( ( ( MLU / RMSe ) / DS ) * MUR ) ) )", "obj1": 0.6514522821576764, "obj2": 0.16882599915028498}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,RRS ) )", "choosing": "( ( ( ( ( ( RMSe / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.2532743570661635}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( Min( FirstVNF_RAM ,CRS ) ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( CRS * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.33402489626556015, "obj2": 0.47193935205969756}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + Min( DDR ,DDR ) ) + ( ( ( CRS / BR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.4979253112033195, "obj2": 0.32582889128427034}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34232365145228216, "obj2": 0.4550570855283804}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2966804979253112, "obj2": 0.5021263828277149}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6307053941908713, "obj2": 0.18844275553014028}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( MRS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / ( MUM / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.24688796680497926, "obj2": 0.5626496042404987}, {"determining": "( PN - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),( ( ( MUM / RMSe ) * RRSe ) / CS ) ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Max( CS,DS ) ) ) ) / MUR )", "obj1": 0.24066390041493776, "obj2": 0.5881513889843811}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.23045891371318492}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / RMSe ) ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.1038071585769661}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05946539839008526}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,FirstVNF_RAM ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MLU / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6431535269709544, "obj2": 0.1807785285013748}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / MUM ) * RRSe ) / CS ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.9149377593360996, "obj2": 0.03409842725827995}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.508298755186722, "obj2": 0.3022127904993839}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.2572614107883817, "obj2": 0.5594990053812314}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( CS,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5269709543568465, "obj2": 0.285872361341647}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) * ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / ( ( MUM / RMSe ) * RRSe ) ) / DS ) * RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2053941908713693, "obj2": 0.6066126025531334}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU * ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( Min( MUM ,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5601659751037344, "obj2": 0.24041446687804707}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5850622406639004, "obj2": 0.22000600969826276}, {"determining": "( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - Min( DDR ,PN ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / Min( CS ,CS ) )", "obj1": 0.09336099585062241, "obj2": 0.7091060788398854}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( ( FirstVNF_Mem_Server * RRS ) ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / CS ) / DS ) * MUR ) ) ),( ( ( MLU * RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.7157676348547718, "obj2": 0.11592377161731635}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3879668049792531, "obj2": 0.42806842763597347}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5186721991701245, "obj2": 0.293901107135656}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2925311203319502, "obj2": 0.5114421718214047}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( CRS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( ( ( MUM / RRSe ) / MUM ) * RRSe ) / CS ) / ( Max( ( CS / RMSe ),DS ) * MUR ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.9107883817427386, "obj2": 0.03620438347627826}, {"determining": "( ( PN - ( ACS + Max( ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / MLU ) * DS ) / CS )", "obj1": 0.7883817427385892, "obj2": 0.0793887154823032}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.558091286307054, "obj2": 0.24083366512314372}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( CS / RMSe ) / DS ) * MUR ) ) ),( ( ( MLU / RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8734439834024896, "obj2": 0.05235609994086464}], "41": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR - FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / ( MUM / RRSe ) ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) * Min( Min( FirstVNF_RAM_Server ,BR ) ,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( Max( ( RMSe / RCSe ),CS ) - RRSe ) ) - ( ( DS - MUM ) + Min( ( RCSe - MLU ) ,Min( ( ( MLU - MUC ) * Max( ( MUM * CS ),DS ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( ( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,Min( DDR ,PN ) ) ) ) + DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.16804979253112035, "obj2": 0.6395218211339099}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / DS ) / CS )", "obj1": 0.44190871369294604, "obj2": 0.38383473891356973}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * DDR ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / MUM ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.13278008298755187, "obj2": 0.6732012763890893}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / RMSe ) ) / CS )", "obj1": 0.46265560165975106, "obj2": 0.33730218650611365}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( BR ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( Max( BR,FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ),( ( ( MLU * RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6929460580912863, "obj2": 0.1322334003397006}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,RRS ) )", "choosing": "( ( ( ( ( ( RMSe / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.9875518672199171, "obj2": 0.005783433688936005}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05946539839008526}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3879668049792531, "obj2": 0.42806842763597347}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( CS,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.48132780082987553, "obj2": 0.3201561521645384}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5753531483046993}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / MUM ),CS ) - ( Max( RMSe,DS ) / CS ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.6203319502074689, "obj2": 0.21318121544653573}, {"determining": "( PN - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - FirstVNF_Mem ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),( ( ( MUM / RMSe ) * RRSe ) / CS ) ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.22406639004149378, "obj2": 0.6005504300448076}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.35477178423236516, "obj2": 0.44638067294780287}, {"determining": "( ( PN - ( ACS + Max( ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUC ),CS ) / DS ) / RMSe ) / MLU ) * DS ) / CS )", "obj1": 0.7883817427385892, "obj2": 0.0793887154823032}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.25325430387786513}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.4004149377593361, "obj2": 0.425325699944466}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,CRS ) ) ,FirstVNF_RAM ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6742738589211619, "obj2": 0.15369041867143543}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( Const * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / Max( CS,( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.7593360995850622, "obj2": 0.09075302036466164}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( CS,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( MLU / MLU ) ) ) / CS )", "obj1": 0.5062240663900415, "obj2": 0.3046582373960004}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.17842323651452283, "obj2": 0.6267785531085016}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( MRS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / ( MUM / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.27800829875518673, "obj2": 0.5370874141478895}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( Min( FirstVNF_RAM ,CRS ) ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( CRS * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.33402489626556015, "obj2": 0.47193935205969756}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,FirstVNF_RAM ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MLU / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6431535269709544, "obj2": 0.1807785285013748}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,PN ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / ( CS / RMSe ) ) / CS )", "obj1": 0.7634854771784232, "obj2": 0.08853717277345934}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( RCSe / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6307053941908713, "obj2": 0.18844275553014028}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / RMSe ) ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.1038071585769661}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.3153526970954357, "obj2": 0.5005319049987971}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8029045643153527, "obj2": 0.07354544430124724}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5186721991701245, "obj2": 0.293901107135656}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5601659751037344, "obj2": 0.24041446687804707}, {"determining": "( ( Min( DDR ,( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( BR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.1016597510373444, "obj2": 0.7019752534203829}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - ( Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) / CS ) / DS ) / RMSe ) / ( CS / RMSe ) ) / CS )", "obj1": 0.11410788381742738, "obj2": 0.6908287078500428}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2966804979253112, "obj2": 0.5021263828277149}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.23045891371318492}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.8941908713692946, "obj2": 0.04354598899207575}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.2572614107883817, "obj2": 0.5594990053812314}, {"determining": "( ( PN - Min( ( ( PN - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( RMSe,MUM ) / CS ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.3257261410788382, "obj2": 0.4790073081547058}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.470954356846473, "obj2": 0.33350866167828536}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( CS / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / RMSe ) ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.1038071585769661}, {"determining": "( ( Min( DDR ,PN ) * Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / MUR ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34232365145228216, "obj2": 0.4550570855283804}], "42": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( PN ,( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,MUM ) / CS ) ,RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR - FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / ( MUM / RRSe ) ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.8568464730290456, "obj2": 0.05946539839008526}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,CRS ) ) ,FirstVNF_RAM ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6742738589211619, "obj2": 0.15369041867143543}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + BR )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) ) / CS )", "obj1": 0.4605809128630705, "obj2": 0.37734774924491227}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3941908713692946, "obj2": 0.42022767430746655}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.8941908713692946, "obj2": 0.04354598899207575}, {"determining": "( ( PN - ( ( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) + DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / Max( Min( ( Min( CS ,RMSe ) / DS ) ,MUR ),Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.24481327800829875, "obj2": 0.5577167975920384}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + Min( Min( ( CRS - BR ) ,Const ) ,MDR ) ) + ( DDR / PN ) )", "choosing": "( ( ( ( Min( ( MUM / RMSe ) ,MUR ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7282157676348547, "obj2": 0.1278088844604461}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.23045891371318492}, {"determining": "( ( PN * ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( RMSe / CS ) / CS ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.27593360995850624, "obj2": 0.5369234022612323}, {"determining": "( ( Max( DDR,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( MUM,RRSe ) / CS ),RRSe ) / CS ) / DS ) / MUC ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.5997626019912697}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.25325430387786513}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR / MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.6618257261410788, "obj2": 0.17532150000400445}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.46265560165975106, "obj2": 0.33556780988397644}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( RCSe / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6307053941908713, "obj2": 0.18844275553014028}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.5933609958506224, "obj2": 0.21590648016659078}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / DS ) / CS )", "obj1": 0.44190871369294604, "obj2": 0.38383473891356973}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / MUM ),CS ) - ( Max( RMSe,DS ) / CS ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.6203319502074689, "obj2": 0.21318121544653573}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / MUR )", "obj1": 0.8900414937759336, "obj2": 0.04554363765457108}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,RRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( CRS / BR ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * RRS ) / Min( ACS ,PN ) ) ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,MUR ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.2925311203319502, "obj2": 0.5112701282165623}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( ( Max( MUM,RRSe ) - CS ) / DS ) / RMSe ) ) ) / DS )", "obj1": 0.3651452282157676, "obj2": 0.4366163693736244}, {"determining": "( ( Max( Min( Min( ( BR * FirstVNF_Mem ) ,PN ) ,( BR / FirstVNF_Mem ) ),MDR ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + ( CS / RMSe ) ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.16182572614107885, "obj2": 0.6640119741004157}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.23029045643153526, "obj2": 0.5753531483046993}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( RMSe / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5062240663900415, "obj2": 0.3031562076456869}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3879668049792531, "obj2": 0.42806842763597347}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - Min( ( RCSe - MLU ) ,Min( ( ( MLU - MUC ) * Max( ( MUM * CS ),DS ) ) ,CS ) ) ) ) / MUR )", "obj1": 0.22406639004149378, "obj2": 0.5952311157751262}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( MDR * FirstVNF_Mem ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / CS ) / DS ) / RMSe ) / ( CS - ( Min( ( ( CS * RMSe ) / DS ) ,RRSe ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.27800829875518673, "obj2": 0.533335253030561}, {"determining": "( ( BR - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / MUC ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10300048415562724}, {"determining": "( ( Max( Min( ( Min( Max( Max( BR,PN ),Max( RRS,PN ) ) ,( ( ACS / ACS ) + ( MDR / Const ) ) ) * Max( ( ( ARS * ARS ) + ( ACS - FirstVNF_RAM ) ),Max( Max( ARS,DDR ),( FirstVNF_RAM_Server * PN ) ) ) ) ,( Max( Max( ( FirstVNF_RAM / DDR ),( AMS + BR ) ),( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem_Server * MRS ) ) ) * ( ( Max( RRS,FirstVNF_Mem_Server ) * Max( PN,ARS ) ) - ( ( PN * ARS ) + ( FirstVNF_CPU - MDR ) ) ) ) ),Min( ( Min( Min( Max( DDR,MDR ) ,Min( ACS ,FirstVNF_CPU ) ) ,Min( ( RRS + ARS ) ,( DDR - ACS ) ) ) - ( Max( ( FirstVNF_RAM_Server / AMS ),( FirstVNF_RAM_Server / ARS ) ) + Max( Max( MDR,Const ),Min( DDR ,CRS ) ) ) ) ,Min( ( ( ( MDR * BR ) * ( RRS / Const ) ) * Max( Max( CRS,ACS ),( Const - CRS ) ) ) ,( ( ( FirstVNF_Mem + DDR ) / ( AMS + RRS ) ) - ( ( ARS - PN ) - ( PN / FirstVNF_CPU ) ) ) ) ) ) * ( ( ( ( ( Max( CRS,Const ) - ( FirstVNF_Mem_Server / MRS ) ) - ( Max( BR,FirstVNF_CPU ) / ( ACS / RRS ) ) ) + Max( ( Max( MDR,ACS ) - ( BR + CRS ) ),Max( Min( ACS ,ARS ),Max( DDR,RRS ) ) ) ) - Min( ( ( ( Const - FirstVNF_Mem ) - Min( FirstVNF_Mem ,DDR ) ) / ( ( DDR * PN ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( CRS * FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_RAM ,MDR ) * ( PN / CRS ) ) ) ) ) + Min( Min( ( Max( ( Const * FirstVNF_RAM ),Min( RRS ,CRS ) ) + Min( ( Const / BR ) ,Min( FirstVNF_Mem_Server ,CRS ) ) ) ,( ( ( Const - FirstVNF_RAM_Server ) * Max( BR,FirstVNF_CPU ) ) / ( ( CRS + BR ) + ( PN * BR ) ) ) ) ,( ( ( ( MRS - DDR ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( ( Const + PN ) - Max( CRS,FirstVNF_Mem ) ) ) / Min( Max( Max( RRS,MDR ),( FirstVNF_CPU / FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_CPU / AMS ) ) ) ) ) ) ) + ( Min( ( Min( ( ( Max( PN,BR ) / Min( CRS ,RRS ) ) - ( ( MDR * RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_Mem + ACS ) * ( FirstVNF_Mem + PN ) ) / ( Max( CRS,BR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + Min( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),( Min( AMS ,FirstVNF_CPU ) * ( DDR + FirstVNF_Mem_Server ) ) ) ,( ( ( RRS - FirstVNF_RAM_Server ) / Min( PN ,RRS ) ) * ( Max( FirstVNF_CPU,ACS ) + Max( FirstVNF_RAM_Server,ACS ) ) ) ) ) ,Max( ( ( ( ( MDR + ARS ) + Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,RRS ),( ACS * FirstVNF_CPU ) ) ) * Max( ( ( PN * DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ),Min( ( FirstVNF_Mem * Const ) ,( FirstVNF_RAM_Server - ARS ) ) ) ),( ( ( Max( ACS,FirstVNF_Mem_Server ) * Max( CRS,Const ) ) * Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_Mem_Server / CRS ) ) ) + ( ( ( ARS / MDR ) * ( CRS - Const ) ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM / PN ) ) ) ) ) ) - ( ( ( ( ( ( FirstVNF_CPU_Server * DDR ) * ( RRS / CRS ) ) * ( ( FirstVNF_Mem / BR ) / ( ACS / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_CPU - DDR ) - ( MDR * FirstVNF_Mem_Server ) ) - ( ( CRS - RRS ) + ( FirstVNF_CPU / ACS ) ) ) ) * ( ( Max( Min( ARS ,FirstVNF_Mem ),( Const + RRS ) ) + ( Max( FirstVNF_Mem,MDR ) + ( FirstVNF_RAM - DDR ) ) ) / ( ( ( MRS * BR ) + ( ACS - BR ) ) - ( ( ACS - FirstVNF_RAM_Server ) + ( BR + MRS ) ) ) ) ) / ( ( ( ( ( RRS + CRS ) * ( MDR + PN ) ) / ( ( BR + ARS ) * ( ACS - Const ) ) ) - ( Max( ( BR - CRS ),( CRS + Const ) ) / ( ( ACS - MRS ) - ( ACS * Const ) ) ) ) + ( ( ( ( FirstVNF_RAM / RRS ) + ( DDR + RRS ) ) + ( ( CRS / FirstVNF_RAM_Server ) * ( MDR / BR ) ) ) - ( Min( Min( MDR ,ACS ) ,( FirstVNF_CPU * ARS ) ) - ( Min( ARS ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( CS - DS ) - MUR ),DS ) * ( CS + MUC ) )", "obj1": 0.9688796680497925, "obj2": 0.016369489842670035}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( BR ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( Max( BR,FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ),( ( ( MLU * RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6908713692946058, "obj2": 0.13307249430970108}, {"determining": "( ( Min( DDR ,PN ) * Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / MUR ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34232365145228216, "obj2": 0.4550570855283804}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( BR ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / CS ) / DS ) * MUR ) ) ),( ( ( MLU * RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.6970954356846473, "obj2": 0.13000975268134757}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( Min( Max( CRS,BR ) ,( PN - FirstVNF_RAM_Server ) ) * Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.14937759336099585, "obj2": 0.6675633950671402}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_Mem ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / MUM ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Max( CS,CS ) ) ) ) / CS )", "obj1": 0.16804979253112035, "obj2": 0.6395218211339099}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.3153526970954357, "obj2": 0.5005319049987971}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5601659751037344, "obj2": 0.24041446687804707}, {"determining": "( ( ( ( FirstVNF_RAM / CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( DS / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.533195020746888, "obj2": 0.2788499733612201}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( Min( DDR ,( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem,( PN - FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( BR * ARS ) + Min( DDR ,FirstVNF_Mem ) ) ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.1016597510373444, "obj2": 0.7019752534203829}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,MRS ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( CS,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.24066390041493776, "obj2": 0.5668881840959022}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM / RRSe ),CS ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.2966804979253112, "obj2": 0.5021263828277149}], "43": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - FirstVNF_RAM ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / ( MUM / RRSe ) ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( PN ,( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,MUM ) / CS ) ,RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( Min( Max( ( ( ( MUM / RMSe ) / RRSe ) / CS ),CS ) ,( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + BR )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) ) / CS )", "obj1": 0.4605809128630705, "obj2": 0.37734774924491227}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.9066390041493776, "obj2": 0.03754400989935412}, {"determining": "( ( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,CRS ) ) ,FirstVNF_RAM ) ) + Min( BR ,Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( ( ( ( ( MUM + RRSe ) / CS ) / DS ) / ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.9585062240663901, "obj2": 0.016245725739411965}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + Min( Min( ( CRS - BR ) ,Const ) ,MDR ) ) + ( DDR / PN ) )", "choosing": "( ( ( ( Min( ( MUM / RMSe ) ,MUR ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.7282157676348547, "obj2": 0.1278088844604461}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) - ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.4620750422181161}, {"determining": "( ( PN * ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( RMSe / CS ) / CS ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.27593360995850624, "obj2": 0.5369234022612323}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_Mem ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / MUM ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Max( CS,CS ) ) ) ) / CS )", "obj1": 0.16804979253112035, "obj2": 0.6395218211339099}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - ( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) - FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( CS / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / ( MUM / RRSe ) ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.9854771784232366, "obj2": 0.004839828455015273}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.25325430387786513}, {"determining": "( ( ( Min( BR ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ) + ( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.46265560165975106, "obj2": 0.33453065648512587}, {"determining": "( ( Max( DDR,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( MUM,RRSe ) / CS ),RRSe ) / CS ) / DS ) / MUC ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.5997626019912697}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( MDR ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / CS ) / DS ) * MUR ) ) ),( ( ( MLU * RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / ( MUR / MLU ) ) ) ) / DS )", "obj1": 0.6535269709543569, "obj2": 0.1677297181256585}, {"determining": "( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( Max( BR,FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ),( ( CS / RMSe ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.16182572614107885, "obj2": 0.65894686576382}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.8526970954356846, "obj2": 0.06148001506812657}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.22406639004149378, "obj2": 0.5795146682839982}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.23045891371318492}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.18464730290456433, "obj2": 0.6265828546379427}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6410788381742739, "obj2": 0.1815368768431804}, {"determining": "( ( Min( DDR ,PN ) * Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / MUR ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34232365145228216, "obj2": 0.4550570855283804}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) / CS )", "obj1": 0.7593360995850622, "obj2": 0.0901710677725088}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( RCSe / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6307053941908713, "obj2": 0.18844275553014028}, {"determining": "( ( Min( DDR ,PN ) - Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) ) ) / DS )", "obj1": 0.36099585062240663, "obj2": 0.4452095331439043}, {"determining": "( ( BR - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / MUC ) / CS )", "obj1": 0.7323651452282157, "obj2": 0.10300048415562724}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.5933609958506224, "obj2": 0.21590648016659078}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3941908713692946, "obj2": 0.42022767430746655}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( Max( RMSe,MUM ) / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.7966804979253111, "obj2": 0.07611000843366011}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6120331950207469, "obj2": 0.20654010235702075}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.24481327800829875, "obj2": 0.5577167975920384}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.5020746887966805, "obj2": 0.30899832279271955}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5601659751037344, "obj2": 0.24041446687804707}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,CRS ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ,CS ) ) ) ) / MUR )", "obj1": 0.6244813278008299, "obj2": 0.2062112758947023}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3879668049792531, "obj2": 0.42806842763597347}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.3153526970954357, "obj2": 0.5005319049987971}, {"determining": "( ( ( ( FirstVNF_RAM / CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( DS / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.533195020746888, "obj2": 0.2788499733612201}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / DS ) / CS )", "obj1": 0.44190871369294604, "obj2": 0.38383473891356973}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + Min( Min( ( CRS - BR ) ,Const ) ,MDR ) ) + ( DDR / PN ) )", "choosing": "( ( ( ( Min( ( MUM / RMSe ) ,MUR ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.12240663900414937, "obj2": 0.6903862564733962}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,CRS ) ) ,FirstVNF_RAM ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6680497925311203, "obj2": 0.15640206169827575}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( BR ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6970954356846473, "obj2": 0.1296199066924206}], "44": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( Max( Max( ( ( ( ( Max( MDR,MRS ) / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / Min( Max( MRS,CRS ) ,( DDR / MDR ) ) ) / ( Max( ( ACS + DDR ),( FirstVNF_RAM - CRS ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) + ( PN + BR ) ) ) ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) / Min( MDR ,CRS ) ) * ( Min( MRS ,PN ) - ( ACS * PN ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM * AMS ) ) + Max( ( MDR / PN ),( Const + ARS ) ) ) ) ),( ( Min( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_CPU ,MDR ) ) ,Min( Min( CRS ,FirstVNF_Mem_Server ) ,Min( MRS ,MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) + ( ARS * ACS ) ) / Max( Min( ARS ,MDR ),( DDR / ARS ) ) ) ) / ( Max( Max( ( RRS + AMS ),( RRS / FirstVNF_Mem ) ),( ( FirstVNF_CPU_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) + ( ( ( PN * DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) * ( ( DDR / PN ) - ( MRS * FirstVNF_CPU ) ) ) ) ) ),Min( ( ( ( Min( ( PN + RRS ) ,Min( PN ,BR ) ) / ( Max( BR,FirstVNF_CPU ) - ( BR * PN ) ) ) * Min( ( Min( DDR ,BR ) / ( AMS - ARS ) ) ,( Min( ACS ,MDR ) + ( ARS / BR ) ) ) ) + Min( Max( ( Max( CRS,MRS ) / Min( BR ,FirstVNF_CPU_Server ) ),Max( Min( ARS ,CRS ),Max( ACS,ARS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Min( Const ,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / ( DDR * FirstVNF_RAM ) ) ) ) ) ,( ( ( Min( Max( ACS,FirstVNF_RAM_Server ) ,( PN * FirstVNF_Mem ) ) + ( ( BR / CRS ) / ( MRS + AMS ) ) ) * ( ( Min( ACS ,ACS ) / Max( MDR,BR ) ) * Min( Min( ARS ,CRS ) ,( FirstVNF_Mem / CRS ) ) ) ) / ( ( ( ( PN - ACS ) - ( FirstVNF_RAM + MRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,CRS ) ) ) - Min( ( ( AMS * CRS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( Const + ARS ) / ( MRS - Const ) ) ) ) ) ) ) / ( ( ( Min( Max( ( Min( BR ,MDR ) / ( AMS - RRS ) ),Min( ( PN * MDR ) ,Max( CRS,ARS ) ) ) ,( ( ( MDR + ARS ) / Min( FirstVNF_Mem ,DDR ) ) - Min( Max( FirstVNF_CPU_Server,MDR ) ,Min( RRS ,FirstVNF_CPU ) ) ) ) - ( ( ( ( MRS + ARS ) / ( FirstVNF_RAM - RRS ) ) + Max( ( BR / RRS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / Max( ( ( MDR * MDR ) / ( ARS + FirstVNF_RAM ) ),( Max( FirstVNF_RAM,Const ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ) ) - Min( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,( FirstVNF_Mem_Server + MDR ) ) + ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_Mem / ARS ) ) ) - Min( Min( ( FirstVNF_CPU_Server / MRS ) ,( FirstVNF_RAM_Server - CRS ) ) ,Max( Min( FirstVNF_Mem_Server ,ARS ),( BR / FirstVNF_Mem_Server ) ) ) ) ,( Min( ( ( FirstVNF_RAM - Const ) * ( FirstVNF_RAM_Server + MDR ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( CRS * ARS ) ) ) / Max( Min( ( PN / MRS ) ,( PN + RRS ) ),( ( FirstVNF_CPU_Server + RRS ) / ( FirstVNF_RAM_Server - CRS ) ) ) ) ) ) / ( Max( ( ( Min( ( RRS + RRS ) ,Min( BR ,ARS ) ) / ( Min( FirstVNF_Mem ,Const ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( ( ( BR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,RRS ) ) ) ),Max( ( ( ( FirstVNF_RAM - PN ) / ( FirstVNF_RAM - ARS ) ) / Min( ( ARS * BR ) ,( RRS + MRS ) ) ),Max( Max( ( FirstVNF_RAM / Const ),( CRS * ARS ) ),( Min( RRS ,ARS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ) + ( Max( ( ( ( RRS - FirstVNF_Mem ) - ( ARS - FirstVNF_CPU ) ) / ( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * MDR ) ) ),( Min( Max( ACS,AMS ) ,( BR + MDR ) ) * ( Min( AMS ,AMS ) * ( FirstVNF_RAM_Server * BR ) ) ) ) + ( Min( ( Max( MDR,FirstVNF_CPU_Server ) * Min( ACS ,PN ) ) ,Min( ( FirstVNF_CPU + BR ) ,Max( MDR,MRS ) ) ) / Max( ( ( FirstVNF_Mem * AMS ) * ( ARS * ARS ) ),( Max( FirstVNF_CPU_Server,ARS ) - ( FirstVNF_Mem_Server * RRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( ( Max( MUM,CS ) - ( RMSe * RRSe ) ) ,Min( ( RCSe * DS ) ,Max( CS,CS ) ) ) + Max( Min( Min( MLU ,MUM ) ,Max( RMSe,RRSe ) ),( ( MUM * RMSe ) + Min( MUC ,MLU ) ) ) ) / Max( ( Min( ( RCSe / RRSe ) ,( RRSe * DS ) ) - ( ( DS + RMSe ) * ( RRSe / CS ) ) ),( Max( ( CS * MLU ),( RCSe * MUR ) ) + ( Min( MUC ,RMSe ) - Min( DS ,MUC ) ) ) ) ) * ( Min( Max( ( Max( MLU,MUM ) - ( MUR * MUM ) ),( ( DS * RCSe ) - ( CS * MUR ) ) ) ,( ( ( MLU / RRSe ) * Min( DS ,MUC ) ) - ( ( MUC - MUR ) - Max( CS,RMSe ) ) ) ) * Max( Max( ( ( MLU / RMSe ) + ( MLU + RRSe ) ),( Min( RCSe ,MUR ) / ( RCSe - RMSe ) ) ),( Min( ( RMSe - RRSe ) ,( CS / MUR ) ) * Max( ( MLU * RCSe ),( RRSe * MUC ) ) ) ) ) ),( ( ( ( ( ( RRSe / MUM ) / Min( MLU ,MUC ) ) + Min( ( MLU * RRSe ) ,( RRSe + CS ) ) ) - Min( Min( ( MLU - MUR ) ,Max( MUR,MLU ) ) ,( ( MUM / MLU ) * Min( CS ,DS ) ) ) ) - Max( Max( ( Min( RCSe ,DS ) * ( MLU / MUC ) ),Max( ( RMSe + DS ),( MUR * DS ) ) ),( Min( Min( RCSe ,RMSe ) ,( DS - CS ) ) - ( ( MUC * MUR ) / ( RMSe - RCSe ) ) ) ) ) + ( ( ( ( Max( MUR,MUC ) - Min( RCSe ,RCSe ) ) / ( Min( MLU ,MUR ) * Min( RCSe ,RMSe ) ) ) - ( ( ( RMSe * RRSe ) / ( RMSe / MLU ) ) + ( Min( CS ,MUR ) / ( CS + MUM ) ) ) ) * ( ( ( ( MLU + DS ) * ( MUC - RRSe ) ) / ( ( RRSe * MUR ) * ( RRSe / CS ) ) ) * ( ( ( MUC + RCSe ) / ( MLU - MUC ) ) - Max( ( RRSe + DS ),( MUR * MUM ) ) ) ) ) ) ) / Min( ( ( Min( ( ( ( CS + RCSe ) + ( RCSe - MLU ) ) + ( ( RMSe - MLU ) - Max( CS,MLU ) ) ) ,( ( ( MUC / MUM ) - ( DS + MUC ) ) - Min( Min( RCSe ,RCSe ) ,( MUC + MLU ) ) ) ) + ( ( ( Min( MUR ,RRSe ) + Max( RCSe,CS ) ) * ( ( MUC / MUC ) - ( MLU * MUR ) ) ) - ( Max( ( RCSe * MUC ),( RCSe - CS ) ) - Max( ( MUR * RCSe ),( MUC + MUR ) ) ) ) ) / ( Min( ( ( ( DS / RMSe ) * ( MUR / CS ) ) + ( Max( RMSe,CS ) + ( RMSe / RCSe ) ) ) ,Min( ( ( RMSe / MUR ) * ( MUR - RMSe ) ) ,( Min( RRSe ,MUM ) / ( DS * RCSe ) ) ) ) - ( Min( Max( ( RMSe + MLU ),Min( MUM ,MUR ) ) ,( ( DS + RMSe ) + ( DS * RMSe ) ) ) - Min( Min( Max( DS,DS ) ,( RMSe - DS ) ) ,( ( MUC - RRSe ) * ( MUM / RCSe ) ) ) ) ) ) ,Min( ( ( Max( ( Min( RCSe ,RRSe ) + Max( CS,CS ) ),Min( Max( RCSe,RMSe ) ,Min( MUM ,CS ) ) ) - Min( ( ( MUM + MUC ) / Max( RMSe,RCSe ) ) ,Min( ( DS + RRSe ) ,( MUC - CS ) ) ) ) - ( ( ( ( RMSe / RRSe ) - Max( RMSe,MUC ) ) * ( Max( RMSe,MUC ) - ( CS * DS ) ) ) + ( ( Max( MLU,MLU ) / ( RRSe * CS ) ) - ( ( MUC - RRSe ) / Min( MUR ,MLU ) ) ) ) ) ,Max( Min( Max( Min( ( MUC / RMSe ) ,( MUC + MLU ) ),( Max( MUC,MLU ) / ( MUR / MUC ) ) ) ,( ( ( MUM - RCSe ) + Min( MUC ,CS ) ) - ( Max( DS,RRSe ) - ( CS + MLU ) ) ) ),( ( Max( ( MUM + MLU ),Max( MLU,MUM ) ) / ( Min( MUM ,MLU ) / Min( RRSe ,RRSe ) ) ) * ( ( ( DS - RRSe ) * Min( RMSe ,MUM ) ) - ( Max( CS,RMSe ) + Min( RRSe ,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - FirstVNF_RAM ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / ( MUM / RRSe ) ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( Min( Max( ( ( ( MUM / RMSe ) / RRSe ) / CS ),CS ) ,( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( BR ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6970954356846473, "obj2": 0.1296199066924206}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM + RRSe ) / CS ) / DS ) / ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.8755186721991701, "obj2": 0.05151443957253974}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.8526970954356846, "obj2": 0.06148001506812657}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - BR ) ,Const ) ,MDR ) ) + ( DDR / PN ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( ( MUM / RMSe ) ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.13485477178423236, "obj2": 0.6817779494745398}, {"determining": "( ( ( Min( CRS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.45643153526970953, "obj2": 0.3380875704856986}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / DS ) / CS )", "obj1": 0.44190871369294604, "obj2": 0.38383473891356973}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7282157676348547, "obj2": 0.10513451421957583}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.5020746887966805, "obj2": 0.30899832279271955}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.24481327800829875, "obj2": 0.5577167975920384}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( PN ,( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( BR / FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,MUM ) / CS ) ,RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.529045643153527, "obj2": 0.30169054020483477}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) ) )", "obj1": 0.6846473029045643, "obj2": 0.15345308245108388}, {"determining": "( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( Max( BR,FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ),( ( CS / RMSe ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.16182572614107885, "obj2": 0.65894686576382}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + Min( Min( ( CRS - BR ) ,Const ) ,MDR ) ) + ( DDR / PN ) )", "choosing": "( ( ( ( Min( ( MUM / RMSe ) ,MUR ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.12240663900414937, "obj2": 0.6903862564733962}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.9066390041493776, "obj2": 0.03754400989935412}, {"determining": "( ( PN * ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( RMSe / CS ) / CS ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.2946058091286307, "obj2": 0.5208364121156871}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.18464730290456433, "obj2": 0.6265828546379427}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.9066390041493776, "obj2": 0.03754400989935412}, {"determining": "( Min( Min( DDR ,MDR ) ,Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + Min( MDR ,FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( RCSe / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3755186721991701, "obj2": 0.43089625263674924}, {"determining": "( ( Min( DDR ,PN ) * Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / MUR ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.34232365145228216, "obj2": 0.4550570855283804}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.23651452282157676, "obj2": 0.5690076254821649}, {"determining": "( ( PN - ( ACS + Max( Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.7842323651452282, "obj2": 0.08250470137643608}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) + ( ( MDR * MRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / CS ) / DS ) * MUR ) ) ),( ( ( MLU * RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( MLU ,MUR ) ) / ( MUR / MLU ) ) ) ) / DS )", "obj1": 0.3029045643153527, "obj2": 0.5110394357997509}, {"determining": "( ( Max( DDR,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( MUM,RRSe ) / CS ),RRSe ) / CS ) / DS ) / MUC ) / CS )", "obj1": 0.21161825726141079, "obj2": 0.5997626019912697}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3941908713692946, "obj2": 0.42022767430746655}, {"determining": "( ( Min( DDR ,PN ) * Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.11203319502074689, "obj2": 0.7037116023589535}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,CRS ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ,CS ) ) ) ) / MUR )", "obj1": 0.6244813278008299, "obj2": 0.2062112758947023}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( FirstVNF_RAM - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( MUC * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.16804979253112035, "obj2": 0.6395218211339099}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.27800829875518673, "obj2": 0.5311075961387923}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.4620750422181161}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5601659751037344, "obj2": 0.24041446687804707}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.22406639004149378, "obj2": 0.5795146682839982}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.5933609958506224, "obj2": 0.21590648016659078}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.25325430387786513}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6410788381742739, "obj2": 0.1815368768431804}, {"determining": "( ( Min( DDR ,PN ) - Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( Max( ( ( ( ( ( MUM / CS ) / CS ) / CS ) / CS ) - ( ( RMSe * ( MUM / ( MUM / RMSe ) ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / ( ( CS / RMSe ) / DS ) ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ),( ( ( MUM / MLU ) / CS ) - ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) ) ) / DS )", "obj1": 0.36099585062240663, "obj2": 0.4452095331439043}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.475103734439834, "obj2": 0.3258918002801337}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RMSe ) / CS )", "obj1": 0.7655601659751037, "obj2": 0.0884163346645708}, {"determining": "( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( Max( BR,FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ),( ( CS / RMSe ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( CS ,DS ) ) / Min( CS ,DS ) ) ) ) / DS )", "obj1": 0.16182572614107885, "obj2": 0.65894686576382}], "45": [{"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( CS / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( ( Max( MDR,MRS ) / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / Min( Max( MRS,CRS ) ,( DDR / MDR ) ) ) / ( Max( ( ACS + DDR ),( FirstVNF_RAM - CRS ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) + ( PN + BR ) ) ) ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) / Min( MDR ,CRS ) ) * ( Min( MRS ,PN ) - ( ACS * PN ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM * AMS ) ) + Max( ( MDR / PN ),( Const + ARS ) ) ) ) ),( ( Min( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_CPU ,MDR ) ) ,Min( Min( CRS ,FirstVNF_Mem_Server ) ,Min( MRS ,MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) + ( ARS * ACS ) ) / Max( Min( ARS ,MDR ),( DDR / ARS ) ) ) ) / ( Max( Max( ( RRS + AMS ),( RRS / FirstVNF_Mem ) ),( ( FirstVNF_CPU_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) + ( ( ( PN * DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) * ( ( DDR / PN ) - ( MRS * FirstVNF_CPU ) ) ) ) ) ),Min( ( ( ( Min( ( PN + RRS ) ,Min( PN ,BR ) ) / ( Max( BR,FirstVNF_CPU ) - ( BR * PN ) ) ) * Min( ( Min( DDR ,BR ) / ( AMS - ARS ) ) ,( Min( ACS ,MDR ) + ( ARS / BR ) ) ) ) + Min( Max( ( Max( CRS,MRS ) / Min( BR ,FirstVNF_CPU_Server ) ),Max( Min( ARS ,CRS ),Max( ACS,ARS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Min( Const ,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / ( DDR * FirstVNF_RAM ) ) ) ) ) ,( ( ( Min( Max( ACS,FirstVNF_RAM_Server ) ,( PN * FirstVNF_Mem ) ) + ( ( BR / CRS ) / ( MRS + AMS ) ) ) * ( ( Min( ACS ,ACS ) / Max( MDR,BR ) ) * Min( Min( ARS ,CRS ) ,( FirstVNF_Mem / CRS ) ) ) ) / ( ( ( ( PN - ACS ) - ( FirstVNF_RAM + MRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,CRS ) ) ) - Min( ( ( AMS * CRS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( Const + ARS ) / ( MRS - Const ) ) ) ) ) ) ) / ( ( ( Min( Max( ( Min( BR ,MDR ) / ( AMS - RRS ) ),Min( ( PN * MDR ) ,Max( CRS,ARS ) ) ) ,( ( ( MDR + ARS ) / Min( FirstVNF_Mem ,DDR ) ) - Min( Max( FirstVNF_CPU_Server,MDR ) ,Min( RRS ,FirstVNF_CPU ) ) ) ) - ( ( ( ( MRS + ARS ) / ( FirstVNF_RAM - RRS ) ) + Max( ( BR / RRS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / Max( ( ( MDR * MDR ) / ( ARS + FirstVNF_RAM ) ),( Max( FirstVNF_RAM,Const ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ) ) - Min( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,( FirstVNF_Mem_Server + MDR ) ) + ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_Mem / ARS ) ) ) - Min( Min( ( FirstVNF_CPU_Server / MRS ) ,( FirstVNF_RAM_Server - CRS ) ) ,Max( Min( FirstVNF_Mem_Server ,ARS ),( BR / FirstVNF_Mem_Server ) ) ) ) ,( Min( ( ( FirstVNF_RAM - Const ) * ( FirstVNF_RAM_Server + MDR ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( CRS * ARS ) ) ) / Max( Min( ( PN / MRS ) ,( PN + RRS ) ),( ( FirstVNF_CPU_Server + RRS ) / ( FirstVNF_RAM_Server - CRS ) ) ) ) ) ) / ( Max( ( ( Min( ( RRS + RRS ) ,Min( BR ,ARS ) ) / ( Min( FirstVNF_Mem ,Const ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( ( ( BR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,RRS ) ) ) ),Max( ( ( ( FirstVNF_RAM - PN ) / ( FirstVNF_RAM - ARS ) ) / Min( ( ARS * BR ) ,( RRS + MRS ) ) ),Max( Max( ( FirstVNF_RAM / Const ),( CRS * ARS ) ),( Min( RRS ,ARS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ) + ( Max( ( ( ( RRS - FirstVNF_Mem ) - ( ARS - FirstVNF_CPU ) ) / ( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * MDR ) ) ),( Min( Max( ACS,AMS ) ,( BR + MDR ) ) * ( Min( AMS ,AMS ) * ( FirstVNF_RAM_Server * BR ) ) ) ) + ( Min( ( Max( MDR,FirstVNF_CPU_Server ) * Min( ACS ,PN ) ) ,Min( ( FirstVNF_CPU + BR ) ,Max( MDR,MRS ) ) ) / Max( ( ( FirstVNF_Mem * AMS ) * ( ARS * ARS ) ),( Max( FirstVNF_CPU_Server,ARS ) - ( FirstVNF_Mem_Server * RRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( ( Max( MUM,CS ) - ( RMSe * RRSe ) ) ,Min( ( RCSe * DS ) ,Max( CS,CS ) ) ) + Max( Min( Min( MLU ,MUM ) ,Max( RMSe,RRSe ) ),( ( MUM * RMSe ) + Min( MUC ,MLU ) ) ) ) / Max( ( Min( ( RCSe / RRSe ) ,( RRSe * DS ) ) - ( ( DS + RMSe ) * ( RRSe / CS ) ) ),( Max( ( CS * MLU ),( RCSe * MUR ) ) + ( Min( MUC ,RMSe ) - Min( DS ,MUC ) ) ) ) ) * ( Min( Max( ( Max( MLU,MUM ) - ( MUR * MUM ) ),( ( DS * RCSe ) - ( CS * MUR ) ) ) ,( ( ( MLU / RRSe ) * Min( DS ,MUC ) ) - ( ( MUC - MUR ) - Max( CS,RMSe ) ) ) ) * Max( Max( ( ( MLU / RMSe ) + ( MLU + RRSe ) ),( Min( RCSe ,MUR ) / ( RCSe - RMSe ) ) ),( Min( ( RMSe - RRSe ) ,( CS / MUR ) ) * Max( ( MLU * RCSe ),( RRSe * MUC ) ) ) ) ) ),( ( ( ( ( ( RRSe / MUM ) / Min( MLU ,MUC ) ) + Min( ( MLU * RRSe ) ,( RRSe + CS ) ) ) - Min( Min( ( MLU - MUR ) ,Max( MUR,MLU ) ) ,( ( MUM / MLU ) * Min( CS ,DS ) ) ) ) - Max( Max( ( Min( RCSe ,DS ) * ( MLU / MUC ) ),Max( ( RMSe + DS ),( MUR * DS ) ) ),( Min( Min( RCSe ,RMSe ) ,( DS - CS ) ) - ( ( MUC * MUR ) / ( RMSe - RCSe ) ) ) ) ) + ( ( ( ( Max( MUR,MUC ) - Min( RCSe ,RCSe ) ) / ( Min( MLU ,MUR ) * Min( RCSe ,RMSe ) ) ) - ( ( ( RMSe * RRSe ) / ( RMSe / MLU ) ) + ( Min( CS ,MUR ) / ( CS + MUM ) ) ) ) * ( ( ( ( MLU + DS ) * ( MUC - RRSe ) ) / ( ( RRSe * MUR ) * ( RRSe / CS ) ) ) * ( ( ( MUC + RCSe ) / ( MLU - MUC ) ) - Max( ( RRSe + DS ),( MUR * MUM ) ) ) ) ) ) ) / Min( ( ( Min( ( ( ( CS + RCSe ) + ( RCSe - MLU ) ) + ( ( RMSe - MLU ) - Max( CS,MLU ) ) ) ,( ( ( MUC / MUM ) - ( DS + MUC ) ) - Min( Min( RCSe ,RCSe ) ,( MUC + MLU ) ) ) ) + ( ( ( Min( MUR ,RRSe ) + Max( RCSe,CS ) ) * ( ( MUC / MUC ) - ( MLU * MUR ) ) ) - ( Max( ( RCSe * MUC ),( RCSe - CS ) ) - Max( ( MUR * RCSe ),( MUC + MUR ) ) ) ) ) / ( Min( ( ( ( DS / RMSe ) * ( MUR / CS ) ) + ( Max( RMSe,CS ) + ( RMSe / RCSe ) ) ) ,Min( ( ( RMSe / MUR ) * ( MUR - RMSe ) ) ,( Min( RRSe ,MUM ) / ( DS * RCSe ) ) ) ) - ( Min( Max( ( RMSe + MLU ),Min( MUM ,MUR ) ) ,( ( DS + RMSe ) + ( DS * RMSe ) ) ) - Min( Min( Max( DS,DS ) ,( RMSe - DS ) ) ,( ( MUC - RRSe ) * ( MUM / RCSe ) ) ) ) ) ) ,Min( ( ( Max( ( Min( RCSe ,RRSe ) + Max( CS,CS ) ),Min( Max( RCSe,RMSe ) ,Min( MUM ,CS ) ) ) - Min( ( ( MUM + MUC ) / Max( RMSe,RCSe ) ) ,Min( ( DS + RRSe ) ,( MUC - CS ) ) ) ) - ( ( ( ( RMSe / RRSe ) - Max( RMSe,MUC ) ) * ( Max( RMSe,MUC ) - ( CS * DS ) ) ) + ( ( Max( MLU,MLU ) / ( RRSe * CS ) ) - ( ( MUC - RRSe ) / Min( MUR ,MLU ) ) ) ) ) ,Max( Min( Max( Min( ( MUC / RMSe ) ,( MUC + MLU ) ),( Max( MUC,MLU ) / ( MUR / MUC ) ) ) ,( ( ( MUM - RCSe ) + Min( MUC ,CS ) ) - ( Max( DS,RRSe ) - ( CS + MLU ) ) ) ),( ( Max( ( MUM + MLU ),Max( MLU,MUM ) ) / ( Min( MUM ,MLU ) / Min( RRSe ,RRSe ) ) ) * ( ( ( DS - RRSe ) * Min( RMSe ,MUM ) ) - ( Max( CS,RMSe ) + Min( RRSe ,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - ( ACS + Min( MDR ,( ( CRS / BR ) - Min( BR ,Min( FirstVNF_Mem ,PN ) ) ) ) ) ) + Max( ACS,( ( Min( FirstVNF_RAM ,Min( DDR ,PN ) ) / Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.6970954356846473, "obj2": 0.12912622621504452}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / BR ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / ( ( ( ( MUM + RRSe ) / CS ) / DS ) / ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ) ) / DS ) / CS )", "obj1": 0.9605809128630706, "obj2": 0.017700991947793832}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7282157676348547, "obj2": 0.10513451421957583}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6680497925311203, "obj2": 0.16615146542481385}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) ) )", "obj1": 0.6846473029045643, "obj2": 0.15345308245108388}, {"determining": "( ( ( Min( CRS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.45643153526970953, "obj2": 0.3380875704856986}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,CRS ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ,CS ) ) ) ) / MUR )", "obj1": 0.6244813278008299, "obj2": 0.2062112758947023}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( ARS + DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) / CS ) / DS ) - RMSe ) / DS ) / CS )", "obj1": 0.4460580912863071, "obj2": 0.38308598202649247}, {"determining": "( ( Max( DDR,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( MUM,RRSe ) / CS ),RRSe ) / CS ) / DS ) / MUC ) / CS )", "obj1": 0.15145228215767634, "obj2": 0.6622818006829191}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( FirstVNF_CPU / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( MLU / DS ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.26141078838174275, "obj2": 0.5562702951086137}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6410788381742739, "obj2": 0.1815368768431804}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.4620750422181161}, {"determining": "( ( Const - Max( ACS,Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Min( RRS ,PN ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / ( ( RMSe / Min( ( ( CS / RMSe ) / DS ) ,MUR ) ) / DS ) ),( ( MUR - MLU ) - ( MLU + MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8174273858921162, "obj2": 0.06760537250836253}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR / FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.4024896265560166, "obj2": 0.41927981609853643}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( CRS ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + RCSe ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.5850622406639004, "obj2": 0.22112019339029745}, {"determining": "( ( PN - ( ACS + Max( Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.7842323651452282, "obj2": 0.08250470137643608}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.529045643153527, "obj2": 0.28566423930451257}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS + BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,ARS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / CS ) / RRSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.5103734439834025, "obj2": 0.299305374920582}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( Min( Max( ( ( ( MUM / RMSe ) / RRSe ) / CS ),CS ) ,( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,Min( ( Max( CRS,BR ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,CRS ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,RMSe ) / CS )", "obj1": 0.7427385892116183, "obj2": 0.10248743684361766}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8029045643153527, "obj2": 0.07319687362687315}, {"determining": "( ( PN - Min( ( ( Min( DDR ,DDR ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / ( MLU / MUR ) ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.5020746887966805, "obj2": 0.3089100190474645}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM + RRSe ) / CS ) / DS ) / ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.8506224066390041, "obj2": 0.06323340141171259}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / DS ) / RMSe ) / ( MLU / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.5394190871369294, "obj2": 0.2775488767367561}, {"determining": "( ( PN * ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * MRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( RMSe / CS ) / CS ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.13278008298755187, "obj2": 0.6745079639491938}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( CRS - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( MRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RCSe ) / CS ) - ( ( MLU / MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.27800829875518673, "obj2": 0.5311075961387923}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.5933609958506224, "obj2": 0.21590648016659078}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6307053941908713, "obj2": 0.18844275553014028}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( Const - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,ACS ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( Max( MUM,RRSe ) / CS ) + RRSe ) / MUC ) / MUC ) / RMSe ) / CS )", "obj1": 0.9004149377593361, "obj2": 0.039435064016170765}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( MDR * RRS ) - ( ( MDR * MRS ) - ( DDR * PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( Max( ( CS * RMSe ),DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.3132780082987552, "obj2": 0.5053040616181035}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / ( ( ( MUM / RMSe ) / MUC ) / CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.15975103734439833, "obj2": 0.641478059510006}, {"determining": "( Min( Min( DDR ,MDR ) ,Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + Min( MDR ,FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( RCSe / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3755186721991701, "obj2": 0.43089625263674924}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( Min( ( CRS - RRS ) ,ARS ) * MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5601659751037344, "obj2": 0.24041446687804707}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.24481327800829875, "obj2": 0.5577167975920384}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.5601659751037344, "obj2": 0.24041446687804707}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.8775933609958506, "obj2": 0.050228905692177264}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.1887966804979253, "obj2": 0.6165730290092438}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) + ( ( MDR * MRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( MUR / MUC ) / MUC ) / CS ) - ( ( MLU / MLU ) / ( ( ( MLU / CS ) / DS ) * MUR ) ) ),( ( ( MLU * RMSe ) / CS ) - ( ( Min( ( ( CS / RMSe ) / DS ) ,MUR ) / Min( MLU ,MUR ) ) / ( MUR / MLU ) ) ) ) / DS )", "obj1": 0.3029045643153527, "obj2": 0.5110394357997509}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RMSe ) / CS )", "obj1": 0.7614107883817427, "obj2": 0.09001769082344556}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( CRS ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / MLU ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.21369294605809128, "obj2": 0.5936022649489817}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.25325430387786513}], "46": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,DDR ) ,MDR ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( MUM ,RRSe ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( CS / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR / FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.4024896265560166, "obj2": 0.41927981609853643}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( Min( ( CRS - RRS ) ,ARS ) * MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / RRSe ) - CS )", "obj1": 0.6576763485477178, "obj2": 0.16458358780403576}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS / ( ( MLU / ( ( MLU / RMSe ) / ( CS + CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.33402489626556015, "obj2": 0.4620750422181161}, {"determining": "( ( ( Min( CRS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.45643153526970953, "obj2": 0.3380875704856986}, {"determining": "( Min( Min( DDR ,MDR ) ,Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + Min( MDR ,FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( RCSe / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3755186721991701, "obj2": 0.43089625263674924}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / ( ( ( MUM / RMSe ) / MUC ) / CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.15975103734439833, "obj2": 0.641478059510006}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - Min( ( ( ( FirstVNF_RAM_Server * CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ARS ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) * CS ) - DS ) / RMSe ) / RCSe ) / CS )", "obj1": 0.45020746887966806, "obj2": 0.38053798286694257}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( RCSe / RMSe ) / MLU ) ,MUR ) / ( ( ( MUM / RMSe ) / MUC ) / CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.13070539419087138, "obj2": 0.6717073106165671}, {"determining": "( ( PN - Min( ( ( Min( DDR ,DDR ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / Max( BR,FirstVNF_Mem ) ) ) ,( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( RMSe ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUC ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.966804979253112, "obj2": 0.01308503788359268}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( BR ,FirstVNF_Mem ) ) ) + Min( MRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( ( MUM / RMSe ) + CS ) / ( Max( RMSe,CS ) / CS ) ) / CS ) / RMSe ) / RMSe ),( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.12033195020746888, "obj2": 0.6919946946927948}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,( ( MDR * MRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( ( ( ( MUM / MUC ) * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( RRSe / RMSe ) )", "obj1": 0.7157676348547718, "obj2": 0.12708176291165274}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.23651452282157676, "obj2": 0.5690076254821649}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7282157676348547, "obj2": 0.10513451421957583}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / ( MLU / MUR ) ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.11203319502074689, "obj2": 0.7069321308171851}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6410788381742739, "obj2": 0.1815368768431804}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.9066390041493776, "obj2": 0.03755056417919847}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.22406639004149378, "obj2": 0.5885468948126594}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS + BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,ARS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / CS ) / RRSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.37344398340248963, "obj2": 0.4528992781849112}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.3506224066390041, "obj2": 0.4536391549252732}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) ) )", "obj1": 0.6846473029045643, "obj2": 0.15345308245108388}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.6120331950207469, "obj2": 0.20182687633335578}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( MLU / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.47717842323651455, "obj2": 0.3279883106860505}, {"determining": "( ( PN - Min( ( ( Min( DDR ,DDR ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( ( ( DDR * Min( MDR ,FirstVNF_Mem ) ) + MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / RMSe ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / MUC ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.3067911763804684}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( PN - ( Min( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) + ( ( MDR * RRS ) - ( ( MDR * MRS ) - Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,( ( ( MUM / RMSe ) / MUR ) / CS ) ) ) ) ) / CS )", "obj1": 0.17842323651452283, "obj2": 0.6272518976832443}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( Min( MDR ,FirstVNF_Mem ) / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( Max( MUM,RRSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.58298755186722, "obj2": 0.2230894264957871}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8029045643153527, "obj2": 0.07319687362687315}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( ARS + DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) / CS ) / DS ) - RMSe ) / DS ) / CS )", "obj1": 0.4460580912863071, "obj2": 0.38308598202649247}, {"determining": "( ( CRS - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( MRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RCSe ) / CS ) - ( ( MLU / MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.27800829875518673, "obj2": 0.5311075961387923}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( FirstVNF_CPU_Server - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.23956170190408624}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.25325430387786513}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.8775933609958506, "obj2": 0.050228905692177264}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / BR ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.8526970954356846, "obj2": 0.06148001506812657}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( Const - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,ACS ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( Max( MUM,RRSe ) / CS ) + RRSe ) / MUC ) / MUC ) / RMSe ) / CS )", "obj1": 0.9004149377593361, "obj2": 0.039435064016170765}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,FirstVNF_Mem ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RRSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM * RMSe ) ) )", "obj1": 0.8215767634854771, "obj2": 0.06615901212718597}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( FirstVNF_RAM,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( ( ( CS / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.8755186721991701, "obj2": 0.05151443957253974}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM + RRSe ) / CS ) / DS ) / ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.8506224066390041, "obj2": 0.06323340141171259}, {"determining": "( ( Max( DDR,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( MUM,RRSe ) / CS ),RRSe ) / CS ) / DS ) / MUC ) / CS )", "obj1": 0.15145228215767634, "obj2": 0.6622818006829191}, {"determining": "( Max( Const,FirstVNF_CPU ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( ( MUM * RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( Min( Max( ( ( ( MUM / RMSe ) / RRSe ) / CS ),CS ) ,( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( MDR - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( DS / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,MUR ) ) ) ) / CS )", "obj1": 0.6058091286307054, "obj2": 0.2097099731751363}, {"determining": "( ( ( Min( ACS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.516597510373444, "obj2": 0.2945752609928576}], "47": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,DDR ) ,MDR ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( MUM ,RRSe ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS + BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,ARS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / CS ) / RRSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.3070539419087137, "obj2": 0.5268870460902252}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR / FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.4024896265560166, "obj2": 0.41927981609853643}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.26348547717842324, "obj2": 0.5448913440898232}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.6410788381742739, "obj2": 0.1815368768431804}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5414937759336099, "obj2": 0.25412131080481426}, {"determining": "( ( ( Min( CRS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.45643153526970953, "obj2": 0.3380875704856986}, {"determining": "( Min( Min( DDR ,MDR ) ,Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + Min( MDR ,FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( RCSe / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3755186721991701, "obj2": 0.43089625263674924}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.6120331950207469, "obj2": 0.20182687633335578}, {"determining": "( Max( Const,FirstVNF_CPU ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( ( ( ( ( MUM * RRSe ) / CS ) / DS ) / RMSe ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7232053882162394}, {"determining": "( ( CRS - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( MRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RCSe ) / CS ) - ( ( MLU / MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.27800829875518673, "obj2": 0.5311075961387923}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.23651452282157676, "obj2": 0.5690076254821649}, {"determining": "( ( PN - Min( ( ( ( FirstVNF_RAM_Server * CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ARS ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) * CS ) - DS ) / RMSe ) / RCSe ) / CS )", "obj1": 0.45020746887966806, "obj2": 0.38053798286694257}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( ( Min( ACS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.516597510373444, "obj2": 0.2945752609928576}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,( ( MDR * RRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,( ( ( MUM / RMSe ) / MUR ) / CS ) ) ) ) ) / CS )", "obj1": 0.6825726141078838, "obj2": 0.14896920976912909}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( Min( Max( ( ( ( MUM / RMSe ) / RRSe ) / CS ),CS ) ,( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( MLU / RMSe ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.7821576763485477, "obj2": 0.08222539438064952}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( Min( ( DDR * Min( MDR ,FirstVNF_Mem ) ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS + BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,ARS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / CS ) / RRSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.37344398340248963, "obj2": 0.4528992781849112}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7282157676348547, "obj2": 0.10513451421957583}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.5962767819867012}, {"determining": "( ( PN / ( ACS + Max( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * MLU ) / MUR ) / DS ) / CS )", "obj1": 0.7572614107883817, "obj2": 0.09415312096552701}, {"determining": "( ( PN - Min( ( ( Min( DDR ,DDR ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( ( ( DDR * Min( MDR ,FirstVNF_Mem ) ) + MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / RMSe ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / MUC ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.3067911763804684}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8029045643153527, "obj2": 0.07319687362687315}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9273858921161826, "obj2": 0.029286976152646804}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,( ( MDR * MRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( ( ( ( MUM / MUC ) * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( RRSe / RMSe ) )", "obj1": 0.7157676348547718, "obj2": 0.12708176291165274}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) - CS )", "obj1": 0.33195020746887965, "obj2": 0.4739706943159054}, {"determining": "( ( ( Min( ACS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( MDR,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUC,RRSe ) / RMSe ) + Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / ( MLU / ( ( CS / Min( MUM ,MUR ) ) / DS ) ) ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6265136596886612}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( ARS + DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) / CS ) / DS ) - RMSe ) / DS ) / CS )", "obj1": 0.4460580912863071, "obj2": 0.38308598202649247}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( RCSe / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.10150735562609652}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( Max( MUM,RRSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.6659751037344398, "obj2": 0.15989334283139667}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( FirstVNF_CPU_Server - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.23956170190408624}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7697095435684648, "obj2": 0.0889306180662031}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( ( MUM / RMSe ) + CS ) / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / RMSe ),( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5809128630705395, "obj2": 0.22936128671389075}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( MUM / RMSe ) ,MUR ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.22406639004149378, "obj2": 0.5861192489522572}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( BR ,FirstVNF_Mem ) ) ) + Min( MRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( ( MUM / RMSe ) + CS ) / ( Max( RMSe,CS ) / CS ) ) / CS ) / RMSe ) / RMSe ),( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.12033195020746888, "obj2": 0.6919946946927948}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( DDR ,PN ) ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / MLU ) ) ) ) / CS )", "obj1": 0.6514522821576764, "obj2": 0.17063970724076463}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5435684647302904, "obj2": 0.25325430387786513}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.15560165975103735, "obj2": 0.6527623964758831}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,FirstVNF_Mem ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RRSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM * RMSe ) ) )", "obj1": 0.8215767634854771, "obj2": 0.06615901212718597}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM + RRSe ) / CS ) / DS ) / ( ( MLU / MLU ) / ( ( ( MLU / MLU ) / DS ) * MUR ) ) ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.8506224066390041, "obj2": 0.06319998354922672}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( Min( MDR ,FirstVNF_Mem ) / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / ( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) ) )", "obj1": 0.5975103734439834, "obj2": 0.2190427372995445}, {"determining": "( ( ( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) * Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( ( MUM / RMSe ) / CS ) ) ) / CS )", "obj1": 0.0975103734439834, "obj2": 0.7039744413191594}], "48": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - ( ACS + Max( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RMSe ) / MUR ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( ( CS / RMSe ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8630705394190872, "obj2": 0.059777564751333064}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.15560165975103735, "obj2": 0.6527623964758831}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / CS ) / RRSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.3008298755186722, "obj2": 0.5183428442056732}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.34439834024896265, "obj2": 0.4533533382466098}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.23651452282157676, "obj2": 0.5690076254821649}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9273858921161826, "obj2": 0.029286976152646804}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.5352697095435685, "obj2": 0.277462466418951}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,( ( MDR * RRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,( ( ( MUM / RMSe ) / MUR ) / CS ) ) ) ) ) / CS )", "obj1": 0.6825726141078838, "obj2": 0.14896920976912909}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.17634854771784234, "obj2": 0.6366850057933625}, {"determining": "( ( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) / CS ) / DS ) / CS )", "obj1": 0.12655601659751037, "obj2": 0.6750579345654936}, {"determining": "( ( ( Min( ACS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.516597510373444, "obj2": 0.2945752609928576}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.26348547717842324, "obj2": 0.5448913440898232}, {"determining": "( ( ( Min( CRS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.45643153526970953, "obj2": 0.3380875704856986}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) - CS )", "obj1": 0.33195020746887965, "obj2": 0.4739706943159054}, {"determining": "( ( PN - Min( ( ( ( FirstVNF_RAM_Server * CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ARS ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) * CS ) - DS ) / RMSe ) / RCSe ) / CS )", "obj1": 0.45020746887966806, "obj2": 0.38053798286694257}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR / FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.4024896265560166, "obj2": 0.41927981609853643}, {"determining": "( ( PN - Min( ( ( Min( DDR ,DDR ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( ( ( DDR * Min( MDR ,FirstVNF_Mem ) ) + MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / RMSe ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / MUC ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.3067911763804684}, {"determining": "( Min( Min( DDR ,MDR ) ,Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + Min( MDR ,FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( RCSe / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3755186721991701, "obj2": 0.43089625263674924}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Max( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) - RMSe ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.36929460580912865, "obj2": 0.4429722102352768}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( ( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) * Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( ( MUM / RMSe ) / CS ) ) ) / CS )", "obj1": 0.0975103734439834, "obj2": 0.7039744413191594}, {"determining": "( ( CRS - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( MRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RCSe ) / CS ) - ( ( MLU / MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.27800829875518673, "obj2": 0.5311075961387923}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( FirstVNF_CPU_Server - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.6327800829875518, "obj2": 0.1877147586268819}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.6120331950207469, "obj2": 0.20182687633335578}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) ) / ( MUM / RMSe ) )", "obj1": 0.9647302904564315, "obj2": 0.0171990562359901}, {"determining": "( ( ( Min( ACS ,( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.8423236514522822, "obj2": 0.06181247687080299}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( BR ,FirstVNF_Mem ) ) ) + Min( MRS ,PN ) )", "choosing": "( Max( ( ( ( ( ( ( MUM / RMSe ) + CS ) / ( Max( RMSe,CS ) / CS ) ) / CS ) / RMSe ) / RMSe ),( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.12033195020746888, "obj2": 0.6919946946927948}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9273858921161826, "obj2": 0.029286976152646804}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( DDR ,PN ) ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / MLU ) ) ) ) / CS )", "obj1": 0.6514522821576764, "obj2": 0.17063970724076463}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( ARS + DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) / CS ) / DS ) - RMSe ) / DS ) / CS )", "obj1": 0.4460580912863071, "obj2": 0.38308598202649247}, {"determining": "( ( PN - ( ACS + Max( ( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) * ( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( CS / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) * ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / RMSe )", "obj1": 0.7551867219917012, "obj2": 0.09204465574294739}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) - CS )", "obj1": 0.08921161825726141, "obj2": 0.7296791561304633}, {"determining": "( ( ( Min( ACS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( MDR,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUC,RRSe ) / RMSe ) + Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / ( MLU / ( ( CS / Min( MUM ,MUR ) ) / DS ) ) ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6265136596886612}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5414937759336099, "obj2": 0.2539553127887665}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( RCSe / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.10150735562609652}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( FirstVNF_CPU_Server - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.23956170190408624}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( ( BR * Min( ( Max( CRS,BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( MUM / RMSe ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.9854771784232366, "obj2": 0.006690425107482663}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,CS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.2157676348547718, "obj2": 0.5967041455190746}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,( ( MDR * MRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( ( ( ( MUM / MUC ) * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( RRSe / RMSe ) )", "obj1": 0.7157676348547718, "obj2": 0.12708176291165274}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / RMSe ) ,MUR ) / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.558091286307054, "obj2": 0.24049375804571116}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,( ( ( MUM / RMSe ) / MUR ) / CS ) ) ) ) ) / CS )", "obj1": 0.6058091286307054, "obj2": 0.20920829290958154}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) * CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM * RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU + ( ( MLU / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5933609958506224, "obj2": 0.21480369279360437}], "49": [{"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,( ( ( MUM / RMSe ) / MUR ) / CS ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS + Max( ( ( ( FirstVNF_CPU_Server / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RMSe ) / MUR ) / DS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_RAM ,( CRS / BR ) ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.08506224066390042, "obj2": 0.7937326825615048}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,( ( MDR * MRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( ( ( ( MUM / MUC ) * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( RRSe / RMSe ) )", "obj1": 0.7157676348547718, "obj2": 0.12708176291165274}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR / FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.4024896265560166, "obj2": 0.41927981609853643}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU + ( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR * FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( MRS * FirstVNF_Mem ) ) ) - ARS ) ) + BR ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.08713692946058091, "obj2": 0.75250157992755}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( RRS ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9066390041493776, "obj2": 0.03780766849548866}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( RCSe / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.10150735562609652}, {"determining": "( ( ( Min( ACS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.516597510373444, "obj2": 0.2945752609928576}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.15560165975103735, "obj2": 0.6527623964758831}, {"determining": "( ( ( Min( CRS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.45643153526970953, "obj2": 0.3380875704856986}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( FirstVNF_CPU_Server - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.23956170190408624}, {"determining": "( ( PN - Min( ( ( ( FirstVNF_RAM_Server * CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ARS ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) * CS ) - DS ) / RMSe ) / RCSe ) / CS )", "obj1": 0.45020746887966806, "obj2": 0.38053798286694257}, {"determining": "( ( PN - Min( ( ( Min( DDR ,DDR ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( ( ( DDR * Min( MDR ,FirstVNF_Mem ) ) + MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / RMSe ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / MUC ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.3067911763804684}, {"determining": "( Min( Min( DDR ,MDR ) ,Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + Min( MDR ,FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( RCSe / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3755186721991701, "obj2": 0.43089625263674924}, {"determining": "( ( PN - ( Const + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RMSe ) / MUR ) / DS ) / CS )", "obj1": 0.8112033195020747, "obj2": 0.07937561845183798}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.17634854771784234, "obj2": 0.6366850057933625}, {"determining": "( ( ( Min( ACS ,( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.8423236514522822, "obj2": 0.061505937505158266}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.8775933609958506, "obj2": 0.050228905692177264}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / CS ) / RRSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.3008298755186722, "obj2": 0.5183428442056732}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * FirstVNF_Mem ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( MRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,( MUM / RMSe ) ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.25933609958506226, "obj2": 0.5569673112540627}, {"determining": "( ( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) / CS ) / DS ) / ( Max( ( MUM - RRSe ),CS ) * RRSe ) )", "obj1": 0.14730290456431536, "obj2": 0.6708871920566627}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( FirstVNF_CPU_Server - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.6327800829875518, "obj2": 0.1877147586268819}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( DDR ,PN ) ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.6929460580912863, "obj2": 0.1448960848214577}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.8174273858921162, "obj2": 0.07055185728760956}, {"determining": "( ( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) / CS ) / DS ) / CS )", "obj1": 0.12655601659751037, "obj2": 0.6750579345654936}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) / CS ) / DS ) / CS )", "obj1": 0.23443983402489627, "obj2": 0.5672689724326011}, {"determining": "( ( ( Min( ACS ,( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( MDR ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.46265560165975106, "obj2": 0.3327340112261317}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + DS ) ) ) ) / DS )", "obj1": 0.5352697095435685, "obj2": 0.277462466418951}, {"determining": "( ( PN - ( ACS + Max( ( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) * ( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( CS / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) * ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / RMSe )", "obj1": 0.7738589211618258, "obj2": 0.0846173157884541}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( ARS,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ARS ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - Max( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ),( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.44398340248962653, "obj2": 0.38142266602743824}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.6120331950207469, "obj2": 0.20112081626131564}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.34439834024896265, "obj2": 0.4533533382466098}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.579537762853824}, {"determining": "( ( ( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) * Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( ( MUM / RMSe ) / CS ) ) ) / CS )", "obj1": 0.0975103734439834, "obj2": 0.7039744413191594}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.6410788381742739, "obj2": 0.17971617587565455}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5414937759336099, "obj2": 0.2539553127887665}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + Min( DDR ,PN ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / CS ) ) / CS )", "obj1": 0.2821576763485477, "obj2": 0.5300821422390838}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( ( MUM / MUM ) * RRSe ) ) / MUR )", "obj1": 0.36721991701244816, "obj2": 0.44467404111139475}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( MRS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / ( CS * CS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.11618257261410789, "obj2": 0.6949118803712288}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) - CS )", "obj1": 0.33195020746887965, "obj2": 0.4739706943159054}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( MLU / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5933609958506224, "obj2": 0.21480369279360437}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8630705394190872, "obj2": 0.059777564751333064}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) * CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM * RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU + ( ( MLU / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.5933609958506224, "obj2": 0.21480369279360437}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + ( DDR / PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / ( MUR / MUC ) ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( CS + MUR ) ) ),( ( ( MUM / RMSe ) + CS ) - ( ( MLU / MUR ) / ( CS + RMSe ) ) ) ) / DS )", "obj1": 0.5394190871369294, "obj2": 0.27618666368703365}], "50": [{"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,( ( ( MUM / RMSe ) / MUR ) / CS ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_RAM,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / Min( CS ,( ( ( MUM / RMSe ) / MUR ) / CS ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * FirstVNF_Mem ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * ( RCSe + MUR ) ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.08298755186721991, "obj2": 0.742001482561353}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.17634854771784234, "obj2": 0.6366850057933625}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,( ( MDR * MRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( ( ( ( MUM / MUC ) * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( RRSe / RMSe ) )", "obj1": 0.7157676348547718, "obj2": 0.12708176291165274}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( RCSe / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.7365145228215768, "obj2": 0.10150735562609652}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( FirstVNF_CPU_Server - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / CS ) ,MUR ) / RMSe ) + CS ) / DS ) / CS )", "obj1": 0.5622406639004149, "obj2": 0.23956170190408624}, {"determining": "( ( PN + Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,( FirstVNF_Mem / DDR ) ) ) + Min( ( ( DDR + ( ARS - ( ARS - FirstVNF_RAM ) ) ) + ( ( ( CRS / BR ) - ( PN - FirstVNF_RAM_Server ) ) / ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,PN ) )", "choosing": "( ( ( ( ( ( Max( ( MUM - RRSe ),CS ) * RRSe ) - CS ) - DS ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.31742738589211617, "obj2": 0.48641589772313243}, {"determining": "( ( PN - ( ACS / Max( ( ( ( FirstVNF_RAM / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( RRS,RRS ) / Min( DDR ,PN ) ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( RCSe,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9377593360995851, "obj2": 0.022461939276014673}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * Min( DDR ,PN ) ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( Min( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) ,( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( MLU + DS ) ) ) ) / MUR )", "obj1": 0.6929460580912863, "obj2": 0.1448960848214577}, {"determining": "( ( PN - ( ACS + Max( Min( Min( ( BR * FirstVNF_Mem ) ,RRS ) ,( PN / FirstVNF_Mem ) ),FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( RCSe / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.9875518672199171, "obj2": 0.007908911362621366}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( ARS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * FirstVNF_Mem ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( MRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( BR ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,( MUM / RMSe ) ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS / DS ) ) ) ) / DS )", "obj1": 0.25933609958506226, "obj2": 0.5569673112540627}, {"determining": "( ( ( DDR * PN ) * Min( FirstVNF_RAM ,( Min( BR ,( FirstVNF_RAM - FirstVNF_Mem ) ) / MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( ( Max( CS,MUM ) / CS ),RRSe ) / MUC ) * RCSe ) / RMSe ) / CS )", "obj1": 0.2033195020746888, "obj2": 0.6106431965454556}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.22199170124481327, "obj2": 0.579537762853824}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / DS ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.4170124481327801, "obj2": 0.38926896114158355}, {"determining": "( Min( Min( DDR ,MDR ) ,Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + Min( MDR ,FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / RMSe ) / ( MUR / ( ( MLU / ( ( RCSe / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.3755186721991701, "obj2": 0.43089625263674924}, {"determining": "( ( PN - Min( ( ( ( FirstVNF_RAM_Server * CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ARS ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + DS ) ) * CS ) - DS ) / RMSe ) / RCSe ) / CS )", "obj1": 0.45020746887966806, "obj2": 0.38053798286694257}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.483402489626556, "obj2": 0.3186820942885797}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) / CS ) / DS ) / CS )", "obj1": 0.23443983402489627, "obj2": 0.5672689724326011}, {"determining": "( ( PN - Min( ( ( Min( DDR ,DDR ) - Max( MDR,( ( MDR * RRS ) + Min( DDR ,PN ) ) ) ) + ( ( ( DDR * Min( MDR ,FirstVNF_Mem ) ) + MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,PN ) ) ,DDR ) ) ) + Min( DDR ,BR ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( CS,DS ) / CS ) ) ,CS ) / RMSe ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / MUC ) ,MUR ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.5, "obj2": 0.3067911763804684}, {"determining": "( ( PN - ( Const + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RMSe ) / MUR ) / DS ) / CS )", "obj1": 0.8112033195020747, "obj2": 0.07937561845183798}, {"determining": "( ( PN - ( ACS + Max( ( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) * ( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( ACS ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( CS / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,CS ) / Min( CS ,CS ) ) * ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / RMSe )", "obj1": 0.7634854771784232, "obj2": 0.08771959930608676}, {"determining": "( ( ( Min( CRS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( ( ( ( DDR * Min( MDR ,FirstVNF_Mem ) ) + MDR ) / ( BR * FirstVNF_Mem ) ) ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( Max( CS,DS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.45643153526970953, "obj2": 0.3380875704856986}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( MUM,RRSe ) / CS ) / CS ) / RRSe ) / CS ) / ( MUM / RMSe ) )", "obj1": 0.3008298755186722, "obj2": 0.5183428442056732}, {"determining": "( ( PN - ( ACS + Max( ( Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) * ( PN / FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / ( CS / RMSe ) ) / RCSe ) / CS ) - CS ) - ( ( Min( ( Min( CS ,CS ) / MLU ) ,MUR ) / Min( CS ,CS ) ) * ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / Min( CS ,DS ) ) ) ) / RMSe )", "obj1": 0.7738589211618258, "obj2": 0.08383657586160959}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) - CS )", "obj1": 0.2095435684647303, "obj2": 0.6051046895855626}, {"determining": "( ( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) / CS ) / DS ) / ( Max( ( MUM - RRSe ),CS ) * RRSe ) )", "obj1": 0.14730290456431536, "obj2": 0.6708871920566627}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( DDR ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.8775933609958506, "obj2": 0.050228905692177264}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + Min( DDR ,PN ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,DDR ) + Min( ( ( Max( BR,ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( Const ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUM / CS ) / Min( ( ( CS * RMSe ) / DS ) ,MUR ) ) / DS ) / MUM ) / ( CS / CS ) ) / CS )", "obj1": 0.27593360995850624, "obj2": 0.5394076929596479}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR / FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.4024896265560166, "obj2": 0.41927981609853643}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,DS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.5850622406639004, "obj2": 0.21960505665886604}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,DS ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( Min( CS ,RMSe ) / DS ) ,MUC ) / Min( CS ,CS ) ) ) ) / CS )", "obj1": 0.6120331950207469, "obj2": 0.20112081626131564}, {"determining": "( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR / FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( Max( ( Max( ( ( ( MUM / RMSe ) * MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ),CS ) / MUR )", "obj1": 0.41286307053941906, "obj2": 0.4160839821819593}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( RRS ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( Max( ( MLU / ( ( CS / Min( ( ( CS / RMSe ) / CS ) ,MUR ) ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9066390041493776, "obj2": 0.03780766849548866}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( CRS - RRS ) ,Const ) ,MRS ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / RMSe ) ,MUR ) / RMSe ) + CS ) / DS ) / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) )", "obj1": 0.6721991701244814, "obj2": 0.1576908683810959}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.5414937759336099, "obj2": 0.2539553127887665}, {"determining": "( ( ( PN - Min( ( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) + Min( DDR ,PN ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( ( ( ( MUM / RMSe ) / MUC ) / CS ),CS ) - ( ( RMSe * ( MUM - RMSe ) ) - ( RCSe + MUR ) ) ) / CS ) / DS ) / CS )", "obj1": 0.12655601659751037, "obj2": 0.6750579345654936}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) - CS )", "obj1": 0.33195020746887965, "obj2": 0.4739706943159054}, {"determining": "( ( Min( DDR ,PN ) - ( FirstVNF_RAM * Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / Const ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ( MDR * MRS ),Min( DDR ,PN ) ) ) ) ,FirstVNF_Mem_Server ) ) ) + ( DDR - PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( CS + ( ( MLU / ( ( MLU / RMSe ) / Min( CS ,CS ) ) ) / Min( CS ,MUM ) ) ) ) / MUR )", "obj1": 0.0954356846473029, "obj2": 0.7131818994457709}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( Min( Min( ( BR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,( ( MDR * MRS ) / Min( CRS ,PN ) ) ) * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( Min( ( ( ( MUM / MUC ) * RMSe ) / CS ) ,MUR ) / ( CS / CS ) ) / CS ) / ( RRSe / RMSe ) )", "obj1": 0.6556016597510373, "obj2": 0.17308683440229664}, {"determining": "( ( PN - ( Min( ( ( Min( DDR ,DDR ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - Max( ARS,MDR ) ) ) ,DDR ) + Min( ( ( ( BR * ARS ) + ( ARS - FirstVNF_RAM ) ) + ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.15560165975103735, "obj2": 0.6527623964758831}, {"determining": "( ( PN - ( ACS + Min( ( ( ( BR * ARS ) + ( ARS - Min( RRS ,PN ) ) ) + ( Min( FirstVNF_RAM ,CRS ) - ( ( MDR * RRS ) / Min( CRS ,PN ) ) ) ) ,DDR ) ) ) + Max( ACS,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( Max( ( MLU / ( ( CS / ( ( ( CS / RRSe ) / CS ) * MUR ) ) / DS ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.9294605809128631, "obj2": 0.028435122888285598}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( ( MUM / MUM ) * RRSe ) / CS ) / DS ) / RMSe ) / ( ( MUM / MUM ) * RRSe ) ) / MUR )", "obj1": 0.36721991701244816, "obj2": 0.44467404111139475}, {"determining": "( ( ( Min( ACS ,( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( MDR ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) / CS ) / DS ) / RMSe ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.46473029045643155, "obj2": 0.3314907366054619}, {"determining": "( ( Min( DDR ,PN ) - Min( FirstVNF_RAM ,Min( ( BR + ( ( ( CRS / BR ) + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ,DDR ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( MUM / RMSe ) / CS ) / DS ) / CS )", "obj1": 0.33402489626556015, "obj2": 0.4620750422181161}, {"determining": "( ( PN - ( ACS + Max( ( ( ( CRS / BR ) + ( PN - FirstVNF_RAM_Server ) ) - ( ( MDR + ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ),MDR ) ) ) + Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU / ( ( Min( RCSe ,RMSe ) / CS ) / ( MUM / RMSe ) ) ),( ( DS / MLU ) - Max( MLU,MUC ) ) ) - ( CS / ( MUM / RMSe ) ) )", "obj1": 0.8630705394190872, "obj2": 0.059777564751333064}, {"determining": "( ( ( Min( ACS ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( MUM / RMSe ) / CS ) / Min( ( ( ( ( ( Max( MUR,RRSe ) / RMSe ) / Min( RCSe ,RMSe ) ) / RMSe ) / ( CS / ( ( MLU / MLU ) / Min( CS ,CS ) ) ) ) / CS ) ,CS ) )", "obj1": 0.516597510373444, "obj2": 0.2945752609928576}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( AMS ,FirstVNF_Mem ) ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( Min( ( MUM / ( Max( MUR,DS ) / CS ) ) ,CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * RMSe ) / DS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.0912863070539419, "obj2": 0.7364374281876547}, {"determining": "( ( PN - Min( ( ( ( FirstVNF_RAM_Server * CRS ) - Max( MDR,FirstVNF_Mem ) ) + ( Min( ( CRS * FirstVNF_Mem ) ,MDR ) / ( BR * FirstVNF_Mem ) ) ) ,Min( ARS ,DDR ) ) ) + Min( Min( ( DDR * FirstVNF_Mem ) ,RRS ) ,PN ) )", "choosing": "( Max( ( ( ( ( ( MUM / RMSe ) / MUR ) / CS ) - CS ) - ( ( Min( ( ( CS / MUR ) / MLU ) ,MUR ) / Min( CS ,CS ) ) - ( RCSe + MUR ) ) ),( ( ( MUM / RMSe ) / CS ) - ( ( MLU / MUR ) / ( CS - DS ) ) ) ) / DS )", "obj1": 0.44190871369294604, "obj2": 0.3847386858161711}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Min( ( ( ( AMS - FirstVNF_RAM_Server ) / BR ) + ( AMS - FirstVNF_RAM_Server ) ) ,CRS ) ) ,MDR ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) * RRSe ) / CS ) / DS ) / ( MUR / ( ( MLU / ( ( MLU / RMSe ) / ( ( RCSe / RMSe ) / CS ) ) ) / Min( CS ,CS ) ) ) ) / MUR )", "obj1": 0.6639004149377593, "obj2": 0.1618394200770841}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + ( ( ( Min( FirstVNF_RAM ,CRS ) - Min( MDR ,FirstVNF_Mem ) ) + Min( Min( ( BR * FirstVNF_Mem ) ,Const ) ,MDR ) ) + Min( DDR ,PN ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( ( ( MUM / ( Max( RMSe,MUM ) / CS ) ) / CS ) / DS ) / RMSe ) / ( CS / ( Min( ( ( CS * Max( RMSe,MUM ) ) / CS ) ,MUR ) / ( CS / CS ) ) ) ) / CS )", "obj1": 0.6058091286307054, "obj2": 0.20777948591004908}]}