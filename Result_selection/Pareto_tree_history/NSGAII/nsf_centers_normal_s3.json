{"1": [{"determining": "( Max( ( FirstVNF_RAM_Server - Const ),FirstVNF_CPU ) * ( CRS + ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( DS - CS ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUC * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / ACS ) )", "choosing": "( Min( RRSe ,MUC ) + ( CS * MUC ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,MUC ) )", "obj1": 0.6094890510948905, "obj2": 0.397982692762312}, {"determining": "Max( Min( BR ,BR ),( MRS * FirstVNF_CPU ) )", "choosing": "Max( ( RMSe - MUC ),( CS + MLU ) )", "obj1": 0.5967153284671532, "obj2": 0.4383877298597608}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * ( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS * MUM ),( CS + ( ( CS - DS ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ACS ) - Max( RRS,RRS ) )", "choosing": "( Max( MLU,RCSe ) / ( Min( Max( ( MLU / ( DS / ( Max( RMSe,DS ) * MLU ) ) ),Min( MLU ,MUC ) ) ,DS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,MRS ) ) + ( ( FirstVNF_RAM - ACS ) + Min( Const ,FirstVNF_Mem ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( DS / RMSe ) ) ,Min( ( MUR - RCSe ) ,( MUM - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.46096492986539717}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MLU + RCSe ) * ( DS * RMSe ) ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * Max( ( MUM * DS ),( RRSe - MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.209418209949028}, {"determining": "( ( FirstVNF_Mem_Server * ( RRS / BR ) ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MLU ) + ( RCSe * CS ) ) - ( MUC * RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5684779422683098}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( ( ARS + DDR ) - Max( AMS,FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * ( MUC + MLU ) ),Min( MLU ,( Max( Min( MLU ,( MUC + DS ) ),RCSe ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) * ( CRS - ACS ) ) / ( ( RRS / Const ) + DDR ) )", "choosing": "( ( Min( MUR ,MUM ) + Max( MLU,RRSe ) ) + Max( ( RMSe * MLU ),( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN / ARS ),Min( ( PN + FirstVNF_RAM ) ,( ( ( Const * FirstVNF_RAM ) - MDR ) / MDR ) ) )", "choosing": "( ( ( MUC / ( RRSe - Min( ( ( RCSe + MUM ) / RCSe ) ,RRSe ) ) ) / ( RMSe / MUR ) ) + Min( Min( DS ,MUC ) ,( RCSe * MUM ) ) )", "obj1": 0.572992700729927, "obj2": 0.45514784915710105}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( MUR - Min( MUR ,MUM ) ) * Min( RRSe ,( MUC * CS ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2991316347364943}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe + CS ) - MUM ) + Min( RRSe ,MUC ) )", "obj1": 0.5967153284671532, "obj2": 0.4383877298597608}, {"determining": "( ( ( ( CRS - Const ) * ( FirstVNF_CPU_Server - Const ) ) * ( ( Min( RRS ,Max( MRS,Min( Const ,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / MRS ) - ( PN / AMS ) ) ) - ( ( ( MDR * CRS ) + Min( PN ,Const ) ) - Min( ( BR / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / MRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( MUC + CS ) ) - ( Min( RRSe ,RRSe ) + ( RCSe / CS ) ) ) / ( ( ( CS - RCSe ) * ( MUC + DS ) ) + ( RCSe - ( Max( ( DS * ( RCSe - RRSe ) ),Min( Min( RCSe ,MUC ) ,Max( MUM,RRSe ) ) ) / ( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU + MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) )", "choosing": "( Min( Max( ( RMSe - DS ),( MLU * CS ) ) ,Max( ( RCSe - RCSe ),( MLU / MLU ) ) ) * ( Max( Max( MUM,DS ),( MUM + RRSe ) ) * Min( Min( RCSe ,RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.46398328410428097}, {"determining": "( Min( ( ( BR * FirstVNF_CPU ) * Max( Const,DDR ) ) ,( Min( ACS ,FirstVNF_RAM_Server ) + Min( AMS ,FirstVNF_Mem ) ) ) - ( ( ( DDR / RRS ) - ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( Max( FirstVNF_RAM,( BR * ( FirstVNF_Mem_Server + AMS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( RCSe - CS ) ) + Min( ( Max( CS,RMSe ) - ( DS * MUC ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / ( ( BR + CRS ) + Max( ARS,FirstVNF_RAM_Server ) ) ),( CRS + MDR ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - Min( CS ,DS ) ) - ( ( CS / DS ) / ( MUM + RMSe ) ) ) * Max( Min( Min( DS ,RRSe ) ,( MUM + MUR ) ),( Max( DS,MUR ) - Max( CS,RCSe ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6611461226886509}, {"determining": "Min( ( Max( ARS,BR ) - FirstVNF_CPU ) ,( ( AMS / ( FirstVNF_RAM_Server / MDR ) ) * MDR ) )", "choosing": "Max( Max( ( MUR + RCSe ),MUM ),( Max( ( CS + MUC ),RRSe ) + CS ) )", "obj1": 0.6021897810218978, "obj2": 0.3997433212378914}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * MDR ) - Max( ( FirstVNF_RAM - PN ),BR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) * RCSe ) + ( ( ( MLU / DS ) + ( RCSe - DS ) ) + ( ( RMSe / MUC ) / ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ( ARS / DDR ) ,PN ) )", "choosing": "Max( ( RMSe / MLU ),( MUR * MUC ) )", "obj1": 0.4470802919708029, "obj2": 0.6574436740498834}, {"determining": "( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) )", "choosing": "( ( ( ( RCSe * MLU ) + Max( CS,CS ) ) + ( ( MUC / RMSe ) * ( MUC - MLU ) ) ) / Max( ( ( MUC + ( RCSe - MLU ) ) - ( Min( RMSe ,RMSe ) * Min( DS ,Max( Max( ( DS * RRSe ),MUM ),MUC ) ) ) ),( ( RMSe / RRSe ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5580508236738821}, {"determining": "( Max( Max( ( RRS * DDR ),( DDR * MRS ) ),( ( FirstVNF_CPU / PN ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( Max( FirstVNF_Mem_Server,BR ) + ( BR + MRS ) ) + Max( ( PN / FirstVNF_RAM_Server ),Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( ( MUC / CS ) / CS ) + MUR ) * Min( ( Min( RRSe ,MUC ) - ( MUM / MUM ) ) ,MUR ) )", "obj1": 0.4726277372262774, "obj2": 0.5291399793155404}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - MLU ) - Min( RMSe ,( Max( DS,MLU ) / RCSe ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( ( Min( MRS ,MDR ) - PN ),( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( Max( MUR,RMSe ),( MLU + MUM ) ) ,( ( RCSe - RRSe ) + ( MLU - MUC ) ) ) / ( Max( ( RRSe - MUC ),( RMSe - MUM ) ) / Max( ( MUM * MUR ),( RMSe / RMSe ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4576736680801373}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * CS ) ) )", "obj1": 0.4908759124087591, "obj2": 0.48955268936027435}], "2": [{"determining": "( ( FirstVNF_Mem_Server * MDR ) - ( ( ARS + DDR ) - Max( AMS,DDR ) ) )", "choosing": "( ( RMSe / MUM ) + ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / ( ( BR + CRS ) + Max( ARS,FirstVNF_RAM_Server ) ) ),( CRS + MDR ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - Min( CS ,DS ) ) - ( ( CS / DS ) / ( MUM + RMSe ) ) ) * Max( Min( Min( DS ,RRSe ) ,( MUM + MUR ) ),( Max( DS,MUR ) - Max( CS,RCSe ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6611461226886509}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * ( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS * MUM ),( CS + ( ( CS - DS ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / PN ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - Min( CS ,DS ) ) - ( ( CS / DS ) / ( MUM + RMSe ) ) ) * Max( Min( Min( DS ,RRSe ) ,( MUM + MUR ) ),( Max( DS,MUR ) - Max( CS,RCSe ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6611461226886509}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_RAM / ( ( ( MDR + Min( CRS ,( BR * ( AMS + FirstVNF_Mem ) ) ) ) * FirstVNF_Mem_Server ) - ( Const - Const ) ) ) )", "choosing": "( Max( RRSe,( ( DS + RRSe ) - MUM ) ) - ( MUC - CS ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ARS )", "choosing": "( Min( RRSe ,MUC ) + ( CS * ( RCSe * MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.05489994802446998}, {"determining": "Min( Max( ( FirstVNF_Mem_Server - ACS ),Min( Const ,Const ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( RRSe + CS ) ,Min( ( RCSe * MUC ) ,( CS + MUR ) ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * Max( ( MUM * DS ),( RRSe - MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.20941820994902793}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( MUR - Min( MUR ,MUM ) ) * Min( RRSe ,( MUC * CS ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2991316347364943}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( ARS * FirstVNF_Mem_Server ) + ( DDR * ACS ) ) )", "choosing": "( ( MUR / MUM ) - Min( MUM ,( Max( MLU,RCSe ) / ( ( RMSe / Min( RRSe ,MUM ) ) * ( MUM / MUR ) ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) ) ,( Max( DS,MLU ) / RCSe ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2991316347364943}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( FirstVNF_Mem_Server,( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + DS ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.26638987808903564}, {"determining": "( ( AMS + FirstVNF_RAM ) / ( AMS - MRS ) )", "choosing": "( ( RMSe / RMSe ) - ( RRSe / MUC ) )", "obj1": 0.43613138686131386, "obj2": 0.6263294978410063}, {"determining": "( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) )", "choosing": "( ( ( ( RCSe * MLU ) + Max( CS,CS ) ) + ( ( MUC / RMSe ) * ( MUC - MLU ) ) ) / Max( ( ( MUC + ( RCSe - MLU ) ) - ( Min( RMSe ,RMSe ) * Min( DS ,Max( Max( ( DS * RRSe ),MUM ),MUC ) ) ) ),( ( RMSe / RRSe ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.4437215421435864}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU_Server,CRS ) ) / ( FirstVNF_CPU - Max( Const,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * ( RCSe * MLU ) ) ,( ( ( MUR / Min( MUC ,( RRSe * DS ) ) ) + DS ) - ( MUR + MLU ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( Max( Max( ( DDR - FirstVNF_RAM_Server ),( FirstVNF_RAM * MRS ) ),FirstVNF_Mem_Server ) - ( Min( ( ( FirstVNF_CPU - ( FirstVNF_Mem * DDR ) ) * Min( Max( ACS,PN ) ,AMS ) ) ,( MRS * Const ) ) - BR ) )", "choosing": "( ( ( CS + MUM ) + ( RRSe - RCSe ) ) - Min( Max( CS,DS ) ,MUC ) )", "obj1": 0.5802919708029197, "obj2": 0.4258301762913075}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Max( CRS,( ( DDR - RRS ) / PN ) ) )", "choosing": "Max( ( RCSe * MUR ),( MUR - Max( Min( MUM ,MUC ),( RRSe / ( MLU * ( CS / MLU ) ) ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,( CRS - CRS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) / ( MLU * CS ) )", "obj1": 0.4726277372262774, "obj2": 0.5220032418473657}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( ( ( ( FirstVNF_RAM + ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( Min( MUM ,MUC ),( RMSe * CS ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4996183226288262}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / ACS ) )", "choosing": "( Min( RRSe ,MUC ) + ( CS * MUC ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "Min( Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU + MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( RMSe,DS ) )", "obj1": 0.46715328467153283, "obj2": 0.5286351856814767}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "( ( CRS / Max( PN,Max( FirstVNF_RAM_Server,Max( ARS,Const ) ) ) ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( RRSe / RCSe ) * Max( ( ( Min( ( RCSe - MUC ) ,CS ) * Max( Min( MUR ,MUC ),RRSe ) ) - Min( ( ( RMSe - ( ( MLU / MUR ) - MUR ) ) + Min( ( RMSe / ( MUR * MUR ) ) ,Max( ( MLU + CS ),RCSe ) ) ) ,( CS + ( ( CS * ( DS / DS ) ) - CS ) ) ) ),MUC ) )", "obj1": 0.4653284671532847, "obj2": 0.5516119836939946}, {"determining": "( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) )", "choosing": "( ( ( ( RCSe * MLU ) + Max( CS,CS ) ) + ( ( MUC / RMSe ) * ( MUC - MLU ) ) ) / Max( ( ( MUC + ( RCSe - MLU ) ) - ( Min( RMSe ,RMSe ) * Min( DS ,Max( Max( ( DS * RRSe ),MUM ),MUC ) ) ) ),( ( RMSe / RRSe ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.4437215421435864}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - MLU ) - Min( RMSe ,( Max( DS,MLU ) / RCSe ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( FirstVNF_Mem_Server * ( RRS / BR ) ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MLU ) + ( RCSe * CS ) ) - ( MUC * RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5684779422683098}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) )", "choosing": "( Min( Max( ( RMSe - DS ),( MLU * CS ) ) ,Max( ( RCSe - RCSe ),( MLU / MLU ) ) ) * ( Max( Max( MUM,DS ),( MUM + RRSe ) ) * Min( Min( RCSe ,RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.46398328410428097}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * CS ) ) )", "obj1": 0.4908759124087591, "obj2": 0.48955268936027435}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( DDR + ARS ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( RCSe - Max( DS,MUM ) ) )", "obj1": 0.458029197080292, "obj2": 0.5645359708483552}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * ( ( RMSe - MUR ) - CS ) ) * ( MUC - MUR ) )", "obj1": 0.45985401459854014, "obj2": 0.5536591984999599}, {"determining": "Max( Max( CRS,( FirstVNF_Mem_Server + ( MDR + PN ) ) ),( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) + ( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( Max( MLU,( RMSe * CS ) ) ,( ( ( MUC / DS ) / RRSe ) * RCSe ) )", "obj1": 0.4908759124087591, "obj2": 0.48955268936027435}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( ( CS + ( CS / CS ) ) - Min( ( MUM / MUC ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( ( DS * RCSe ) - Max( DS,MUM ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5684779422683098}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * ( ( RMSe - MUR ) - CS ) ) * ( MUC - MUR ) )", "obj1": 0.45985401459854014, "obj2": 0.5536591984999599}, {"determining": "( Max( ( FirstVNF_RAM_Server - Const ),FirstVNF_CPU ) * ( CRS + ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( DS - CS ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUC * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( ( Const + ACS ) - Max( RRS,RRS ) )", "choosing": "( Max( MLU,RCSe ) / ( Min( Max( ( MLU / ( DS / ( Max( RMSe,DS ) * MLU ) ) ),Min( MLU ,MUC ) ) ,DS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MLU + RCSe ) * ( DS * RMSe ) ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( ( ARS + DDR ) - Max( AMS,FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * ( MUC + MLU ) ),Min( MLU ,( Max( Min( MLU ,( MUC + DS ) ),RCSe ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) * ( CRS - ACS ) ) / ( ( RRS / Const ) + DDR ) )", "choosing": "( ( Min( MUR ,MUM ) + Max( MLU,RRSe ) ) + Max( ( RMSe * MLU ),( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Const ) * ( FirstVNF_CPU_Server - Const ) ) * ( ( Min( RRS ,Max( MRS,Min( Const ,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / MRS ) - ( PN / AMS ) ) ) - ( ( ( MDR * CRS ) + Min( PN ,Const ) ) - Min( ( BR / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / MRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( MUC + CS ) ) - ( Min( RRSe ,RRSe ) + ( RCSe / CS ) ) ) / ( ( ( CS - RCSe ) * ( MUC + DS ) ) + ( RCSe - ( Max( ( DS * ( RCSe - RRSe ) ),Min( Min( RCSe ,MUC ) ,Max( MUM,RRSe ) ) ) / ( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_CPU ) * Max( Const,DDR ) ) ,( Min( ACS ,FirstVNF_RAM_Server ) + Min( AMS ,FirstVNF_Mem ) ) ) - ( ( ( DDR / RRS ) - ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( Max( FirstVNF_RAM,( BR * ( FirstVNF_Mem_Server + AMS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( RCSe - CS ) ) + Min( ( Max( CS,RMSe ) - ( DS * MUC ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * MDR ) - Max( ( FirstVNF_RAM - PN ),BR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) * RCSe ) + ( ( ( MLU / DS ) + ( RCSe - DS ) ) + ( ( RMSe / MUC ) / ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR - MDR ),Const ) * ( CRS - ( FirstVNF_Mem - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) - ( ACS + ACS ) )", "choosing": "( Max( RCSe,MLU ) / ( ( MUC / RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem ) + BR ) - ( ACS + ACS ) )", "choosing": "( ( Max( RMSe,( ( Min( ( RMSe * DS ) ,( ( RRSe + DS ) * MLU ) ) - RCSe ) - ( ( Min( MUR ,RRSe ) / CS ) - MLU ) ) ) * DS ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) ) - Min( ( FirstVNF_Mem - BR ) ,PN ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( MDR * ( ( RRS * Max( MRS,MRS ) ) * ACS ) ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,( ( MUR * RMSe ) - MUR ) ) ) + Max( MUM,MUR ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,( ( MUR * RMSe ) - MUR ) ) ) + Max( MUM,MUR ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * PN ) + ( ( PN * ( ARS * FirstVNF_CPU ) ) * ARS ) )", "choosing": "Min( ( MUM / ( ( ( MUM / Max( RCSe,MUC ) ) / ( MUM - ( ( MLU + ( MUR + MUM ) ) / Min( MUM ,MUR ) ) ) ) + MLU ) ) ,( ( MUC / MUC ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) + ( ( MRS - FirstVNF_Mem_Server ) * ARS ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ( ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) / DDR ) + AMS ) )", "choosing": "( ( CS / CS ) / Max( RRSe,( Min( MUM ,( MUR - MUR ) ) - Max( RMSe,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( ACS + ACS ) )", "choosing": "( Max( MLU,RCSe ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Max( Min( ( FirstVNF_Mem_Server - MDR ) ,( Min( RRS ,MDR ) - AMS ) ),( Min( RRS ,FirstVNF_RAM ) * ( ACS / RRS ) ) ),Max( ( Min( ACS ,ARS ) / ( FirstVNF_RAM * BR ) ),( Max( Const,AMS ) + ( CRS / MDR ) ) ) ) ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN + RRS ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( MUM / MUC ) + Max( MLU,Max( ( MUR * MUR ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * DDR ) / AMS ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS / ( RRSe / ( CS - MLU ) ) ) - DS ) * Min( ( MUM - Max( MLU,DS ) ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Const ) * FirstVNF_RAM_Server ) * Max( AMS,FirstVNF_CPU ) )", "choosing": "( ( DS * RCSe ) / ( MLU / ( ( ( CS + DS ) * ( CS - ( MLU + ( RCSe - MUC ) ) ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ( ARS / DDR ) ,PN ) ) - FirstVNF_Mem_Server ) + ( CRS * BR ) )", "choosing": "Max( ( MUR * MUC ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( Const - FirstVNF_Mem ) ) - ( ( ( DDR / RRS ) / ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( MRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + DS ) + Min( ( ( DS * MUC ) - Max( CS,( MLU - ( ( ( MUM * MUR ) - MLU ) - CS ) ) ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ACS ,FirstVNF_RAM_Server ) + Min( AMS ,FirstVNF_Mem ) ) ,( ( BR * FirstVNF_CPU ) * Max( Const,DDR ) ) ) - ( ( ( DDR / RRS ) / ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( MRS + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( MDR / FirstVNF_RAM ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( CS + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( ACS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUC ) + ( ( CS - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,BR ),( MRS * FirstVNF_CPU ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MLU + RCSe ) * ( DS * RMSe ) ) * ( ( CS + MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem_Server ) - ( ( FirstVNF_RAM / DDR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( RRSe + RCSe ) * ( DS * RMSe ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( ACS + ACS ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( Min( MLU ,( DS - ( RCSe + DS ) ) ) - Min( MUM ,MUR ) ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * AMS ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MRS ,ACS ) + ( MDR * Const ) ) ,ARS ) / ( ( ( CRS / Const ) + ( AMS * ACS ) ) * Max( ( PN - FirstVNF_CPU_Server ),( MRS - ARS ) ) ) )", "choosing": "( Min( MUC ,( ( CS / RRSe ) + ( MUM * DS ) ) ) + ( RMSe - ( ( MUM * DS ) * ( RRSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( Min( ( CS / DS ) ,MUC ),Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,( FirstVNF_CPU_Server * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU ) / ( ( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( RMSe,( ( Max( Max( MUM,( MLU + CS ) ),DS ) / Max( ( MUC + ( MUR + MUC ) ),MUM ) ) + MLU ) ) + Min( MLU ,RCSe ) ) * MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MRS ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS / Const ) ,( ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * DDR ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( Max( DS,RRSe ) - ( DS - MUC ) ) * ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Const + ACS ) / ( Min( MDR ,RRS ) + PN ) ) )", "choosing": "( ( RMSe / MUM ) - ( ( RCSe / MUM ) + ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( MDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( Max( RCSe,RRSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ARS ) + BR ) - ( FirstVNF_CPU_Server - ( FirstVNF_CPU + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( MUR + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( RMSe + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) - ( Min( MUC ,MUR ) + ( MUR / MLU ) ) ) + ( MUR + Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( RRS - FirstVNF_Mem ) / Const ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( MLU / DS ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / Const ) * MDR ) - Max( ( FirstVNF_RAM - ARS ),BR ) )", "choosing": "( ( Min( ( RRSe - RMSe ) ,Max( MUR,DS ) ) - ( Min( MUC ,MUR ) + ( MUR / MLU ) ) ) + ( Max( ( MLU / DS ),( RCSe - DS ) ) + ( ( RMSe / MUC ) / ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Max( FirstVNF_CPU_Server,CRS ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MUM / MLU ) + Min( RMSe ,CS ) ) ) ),Min( MLU ,( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS / RRS ) - Min( BR ,FirstVNF_Mem ) ) ,( ( PN - MRS ) - ( FirstVNF_RAM - ARS ) ) ) + Min( ( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( ( ( MUR * RRSe ) * Max( RMSe,RRSe ) ) ,Min( ( RCSe - DS ) ,Max( RMSe,MLU ) ) ) ,( RRSe - Max( ( RMSe - DS ),( MUC - RRSe ) ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2991316347364943}, {"determining": "( Max( BR,MDR ) / ( Max( ARS,DDR ) + PN ) )", "choosing": "Min( Min( ( ( MUR * RRSe ) * Max( RMSe,RRSe ) ) ,Min( ( RCSe - DS ) ,Max( RMSe,MLU ) ) ) ,( ( ( RMSe - DS ) - Min( RCSe ,MUR ) ) - Max( ( RMSe - ( MUR / RMSe ) ),( MUC * RRSe ) ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2991316347364943}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2991316347364943}, {"determining": "( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) )", "choosing": "( ( ( ( RCSe * MLU ) + Max( CS,CS ) ) + ( ( MUC / RMSe ) * ( MUC - MLU ) ) ) / Max( ( ( MUC + ( RCSe - MLU ) ) - ( Min( RMSe ,RMSe ) * Min( DS ,Max( Max( ( DS * RRSe ),MUM ),MUC ) ) ) ),( ( RMSe / RRSe ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.4437215421435864}, {"determining": "( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) )", "choosing": "( ( ( ( RCSe * MLU ) + Max( CS,CS ) ) + ( ( MUC / RMSe ) * ( MUC - MLU ) ) ) / Max( ( ( MUC + ( RCSe - MLU ) ) - ( Min( RMSe ,RMSe ) * Min( DS ,Max( Max( ( DS * RRSe ),MUM ),MUC ) ) ) ),( ( RMSe / RRSe ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.4437215421435864}, {"determining": "( Max( RRS,DDR ) * ( AMS * RRS ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * CS ) ) )", "obj1": 0.4908759124087591, "obj2": 0.48955268936027435}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( ( ( RMSe / RMSe ) / ( MUM + RCSe ) ) * ( ( MUC * RCSe ) + ( DS / RRSe ) ) ) ,( Max( Max( RCSe,RRSe ),( MUR + MUR ) ) * ( Max( RMSe,MLU ) + Min( MUR ,MUR ) ) ) )", "obj1": 0.4908759124087591, "obj2": 0.48955268936027435}], "3": [{"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( RRS - FirstVNF_Mem ) / Const ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) - ( ( ARS + DDR ) - Max( AMS,DDR ) ) )", "choosing": "( ( RMSe / MUM ) + ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( PN + PN ),Min( ( BR / AMS ) ,( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( ARS - RRS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUM - ( RRSe / ( RMSe - MUM ) ) ) ,Max( RCSe,( RMSe * CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6265557329262261}, {"determining": "( ( Const * ACS ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM * RMSe ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Max( ( MLU - MLU ),( MUR / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6879562043795621, "obj2": 0.28002665139667277}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.3652787236624482}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15492480078757656}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( ACS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUC ) + ( ( CS - MUM ) / DS ) )", "obj1": 0.9379562043795621, "obj2": 0.07678234524564112}, {"determining": "( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * Max( ( MUM * DS ),( RRSe - MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.20941820994902793}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( ( DS - MUR ) + ( MUM + ( MUM / MUC ) ) ) ,( ( RCSe * MUC ) / ( CS + MUR ) ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - MLU )", "obj1": 0.5346715328467153, "obj2": 0.4412580090239585}, {"determining": "( Max( ( DDR - FirstVNF_RAM_Server ),( FirstVNF_RAM * MRS ) ) + Min( CRS ,MDR ) )", "choosing": "( Max( MUC,RRSe ) + ( RCSe + RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.40294741344632234}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.38757491068160493}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ARS )", "choosing": "( Min( RRSe ,MUC ) + ( CS * ( RCSe * MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.05489994802446998}, {"determining": "Min( Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU + MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "Max( Max( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ),( PN * ( ARS / ARS ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RRSe,( ( MUR / ( MUC * ( MUC / RRSe ) ) ) + CS ) ) ,( RRSe - ( RMSe * DS ) ) ) ,( RCSe * CS ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( MRS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + Min( MDR ,CRS ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( ( DS * RCSe ) - Max( DS,MUM ) ) )", "obj1": 0.9379562043795621, "obj2": 0.07678234524564112}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( ARS * FirstVNF_Mem_Server ) + ( DDR * ACS ) ) )", "choosing": "( ( MUR / MUM ) - Min( MUM ,( Max( MLU,RCSe ) / ( ( RMSe / Min( RRSe ,MUM ) ) * ( MUM / MUR ) ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "Min( Max( ( FirstVNF_Mem_Server - ACS ),Min( Const ,Const ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( RRSe + CS ) ,Min( ( RCSe * MUC ) ,( CS + MUR ) ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "Min( ( Min( ( ( AMS / RRS ) - Min( BR ,FirstVNF_Mem ) ) ,( ( PN - MRS ) - ( FirstVNF_RAM - ARS ) ) ) + Min( ( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( ( DS - MUR ) + ( RRSe - Max( ( RMSe - DS ),( MUC - RRSe ) ) ) ) ,Min( ( RCSe * MUC ) ,( CS + MUR ) ) )", "obj1": 0.7645985401459854, "obj2": 0.24583489276532722}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.968978102189781, "obj2": 0.016725644860579512}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( FirstVNF_Mem_Server,( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + DS ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.26638987808903564}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Max( CRS,( ( DDR - RRS ) / PN ) ) )", "choosing": "Max( ( RCSe * MUR ),( MUR - Max( Min( MUM ,MUC ),( RRSe / ( MLU * ( CS / MLU ) ) ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / MRS ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) * Max( AMS,ARS ) )", "choosing": "Min( ( Min( RCSe ,MUR ) * Min( RRSe ,( Min( RRSe ,MUM ) / Max( MUM,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( DDR + ARS ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( RCSe - Max( DS,MUM ) ) )", "obj1": 0.458029197080292, "obj2": 0.5645359708483552}, {"determining": "( ( CRS / Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server * ACS ),AMS ) ) ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( CS + DS ) )", "obj1": 0.47992700729927007, "obj2": 0.5219884528329045}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( ( ( ( Max( ( FirstVNF_CPU - DDR ),AMS ) - ( FirstVNF_RAM / MRS ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( RCSe ,Max( Min( MUM ,MUC ),( Max( ( RCSe - RMSe ),DS ) * CS ) ) )", "obj1": 0.4854014598540146, "obj2": 0.5028293303933241}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU_Server,CRS ) ) / ( FirstVNF_CPU - Max( Const,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * ( RCSe * MLU ) ) ,( ( ( MUR / Min( MUC ,( RRSe * DS ) ) ) + DS ) - ( MUR + MLU ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( Min( ( ( Const - BR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( FirstVNF_CPU_Server * ( ( AMS + ARS ) * ( RRS * PN ) ) ) )", "choosing": "( Min( ( RCSe - CS ) ,Min( MLU ,( ( MUC - RMSe ) / ( ( ( CS * Min( RCSe ,CS ) ) * RRSe ) * ( ( ( MUM * RCSe ) * MLU ) / Max( MUM,Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( RCSe - Max( DS,MUM ) ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_RAM / ( ( ( MDR + Min( CRS ,( BR * ( AMS + FirstVNF_Mem ) ) ) ) * FirstVNF_Mem_Server ) - ( Const - Const ) ) ) )", "choosing": "( Max( RRSe,( ( DS + RRSe ) - MUM ) ) - ( MUC - CS ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "( ( FirstVNF_Mem_Server * ( RRS / BR ) ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MLU ) + ( RCSe * CS ) ) - ( MUC * RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5684779422683098}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / ACS ) )", "choosing": "( Min( RRSe ,MUC ) + ( CS * MUC ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) )", "choosing": "( Min( Max( ( RMSe - DS ),( MLU * CS ) ) ,Max( ( RCSe - RCSe ),( MLU / MLU ) ) ) * ( Max( Max( MUM,DS ),( MUM + RRSe ) ) * Min( Min( RCSe ,RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.46398328410428097}, {"determining": "( ( ARS - MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( ( RMSe / MUM ) + ( RMSe / CS ) ) / MLU ) + MLU ) ) * MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "( Min( ( ( ARS - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * CS ) ) )", "obj1": 0.4908759124087591, "obj2": 0.48955268936027435}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.968978102189781, "obj2": 0.016725644860579512}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( Min( MLU ,( DS - ( RCSe + DS ) ) ) - Min( MUM ,MUR ) ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUR * DS ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( Min( MUM ,MUC ),( RMSe * CS ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( ( ( ( FirstVNF_RAM + ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( Min( MUM ,MUC ),( RMSe * CS ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4996183226288262}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * CS ) ) )", "obj1": 0.4908759124087591, "obj2": 0.48955268936027435}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,( CRS - CRS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) / ( MLU * CS ) )", "obj1": 0.4726277372262774, "obj2": 0.5220032418473657}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUC ) + ( Max( Min( ( Min( DS ,RCSe ) + CS ) ,( MUM + MUM ) ),RRSe ) + ( RRSe / DS ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5684779422683098}, {"determining": "( Max( ( FirstVNF_RAM_Server - Const ),FirstVNF_CPU ) * ( CRS + ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( DS - CS ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUC * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,ACS ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5220032418473657}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( Min( Min( ( ( MUR * RRSe ) * Max( RMSe,RRSe ) ) ,Min( ( RCSe - DS ) ,Max( RMSe,MLU ) ) ) ,( ( ( RMSe - DS ) - Min( RCSe ,MUR ) ) - Max( ( RMSe - DS ),( MUC - RRSe ) ) ) ) - Max( DS,MUM ) ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - MLU ) - Min( RMSe ,( Max( DS,MLU ) / RCSe ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( DDR + ARS ) ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * MUR )", "obj1": 0.458029197080292, "obj2": 0.5645359708483552}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( ( ( ( FirstVNF_RAM + ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,MUC ) )", "obj1": 0.48905109489051096, "obj2": 0.4996183226288262}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( ( CS + ( CS / CS ) ) - Min( ( MUM / MUC ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * ( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS * MUM ),( CS + ( ( CS - DS ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ACS ) - Max( RRS,RRS ) )", "choosing": "( Max( MLU,RCSe ) / ( Min( Max( ( MLU / ( DS / ( Max( RMSe,DS ) * MLU ) ) ),Min( MLU ,MUC ) ) ,DS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MLU + RCSe ) * ( DS * RMSe ) ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( ( ARS + DDR ) - Max( AMS,FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * ( MUC + MLU ) ),Min( MLU ,( Max( Min( MLU ,( MUC + DS ) ),RCSe ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) * ( CRS - ACS ) ) / ( ( RRS / Const ) + DDR ) )", "choosing": "( ( Min( MUR ,MUM ) + Max( MLU,RRSe ) ) + Max( ( RMSe * MLU ),( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Const ) * ( FirstVNF_CPU_Server - Const ) ) * ( ( Min( RRS ,Max( MRS,Min( Const ,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / MRS ) - ( PN / AMS ) ) ) - ( ( ( MDR * CRS ) + Min( PN ,Const ) ) - Min( ( BR / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / MRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( MUC + CS ) ) - ( Min( RRSe ,RRSe ) + ( RCSe / CS ) ) ) / ( ( ( CS - RCSe ) * ( MUC + DS ) ) + ( RCSe - ( Max( ( DS * ( RCSe - RRSe ) ),Min( Min( RCSe ,MUC ) ,Max( MUM,RRSe ) ) ) / ( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_CPU ) * Max( Const,DDR ) ) ,( Min( ACS ,FirstVNF_RAM_Server ) + Min( AMS ,FirstVNF_Mem ) ) ) - ( ( ( DDR / RRS ) - ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( Max( FirstVNF_RAM,( BR * ( FirstVNF_Mem_Server + AMS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( RCSe - CS ) ) + Min( ( Max( CS,RMSe ) - ( DS * MUC ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * MDR ) - Max( ( FirstVNF_RAM - PN ),BR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) * RCSe ) + ( ( ( MLU / DS ) + ( RCSe - DS ) ) + ( ( RMSe / MUC ) / ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR - MDR ),Const ) * ( CRS - ( FirstVNF_Mem - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) - ( ACS + ACS ) )", "choosing": "( Max( RCSe,MLU ) / ( ( MUC / RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem ) + BR ) - ( ACS + ACS ) )", "choosing": "( ( Max( RMSe,( ( Min( ( RMSe * DS ) ,( ( RRSe + DS ) * MLU ) ) - RCSe ) - ( ( Min( MUR ,RRSe ) / CS ) - MLU ) ) ) * DS ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) ) - Min( ( FirstVNF_Mem - BR ) ,PN ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( MDR * ( ( RRS * Max( MRS,MRS ) ) * ACS ) ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,( ( MUR * RMSe ) - MUR ) ) ) + Max( MUM,MUR ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,( ( MUR * RMSe ) - MUR ) ) ) + Max( MUM,MUR ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * PN ) + ( ( PN * ( ARS * FirstVNF_CPU ) ) * ARS ) )", "choosing": "Min( ( MUM / ( ( ( MUM / Max( RCSe,MUC ) ) / ( MUM - ( ( MLU + ( MUR + MUM ) ) / Min( MUM ,MUR ) ) ) ) + MLU ) ) ,( ( MUC / MUC ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) + ( ( MRS - FirstVNF_Mem_Server ) * ARS ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ( ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) / DDR ) + AMS ) )", "choosing": "( ( CS / CS ) / Max( RRSe,( Min( MUM ,( MUR - MUR ) ) - Max( RMSe,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( ACS + ACS ) )", "choosing": "( Max( MLU,RCSe ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Max( Min( ( FirstVNF_Mem_Server - MDR ) ,( Min( RRS ,MDR ) - AMS ) ),( Min( RRS ,FirstVNF_RAM ) * ( ACS / RRS ) ) ),Max( ( Min( ACS ,ARS ) / ( FirstVNF_RAM * BR ) ),( Max( Const,AMS ) + ( CRS / MDR ) ) ) ) ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN + RRS ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( MUM / MUC ) + Max( MLU,Max( ( MUR * MUR ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * DDR ) / AMS ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS / ( RRSe / ( CS - MLU ) ) ) - DS ) * Min( ( MUM - Max( MLU,DS ) ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Const ) * FirstVNF_RAM_Server ) * Max( AMS,FirstVNF_CPU ) )", "choosing": "( ( DS * RCSe ) / ( MLU / ( ( ( CS + DS ) * ( CS - ( MLU + ( RCSe - MUC ) ) ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ( ARS / DDR ) ,PN ) ) - FirstVNF_Mem_Server ) + ( CRS * BR ) )", "choosing": "Max( ( MUR * MUC ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( Const - FirstVNF_Mem ) ) - ( ( ( DDR / RRS ) / ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( MRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + DS ) + Min( ( ( DS * MUC ) - Max( CS,( MLU - ( ( ( MUM * MUR ) - MLU ) - CS ) ) ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ACS ,FirstVNF_RAM_Server ) + Min( AMS ,FirstVNF_Mem ) ) ,( ( BR * FirstVNF_CPU ) * Max( Const,DDR ) ) ) - ( ( ( DDR / RRS ) / ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( MRS + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( MDR / FirstVNF_RAM ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( CS + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( ACS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUC ) + ( ( CS - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,BR ),( MRS * FirstVNF_CPU ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MLU + RCSe ) * ( DS * RMSe ) ) * ( ( CS + MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem_Server ) - ( ( FirstVNF_RAM / DDR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( RRSe + RCSe ) * ( DS * RMSe ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( ACS + ACS ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( Min( MLU ,( DS - ( RCSe + DS ) ) ) - Min( MUM ,MUR ) ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * AMS ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MRS ,ACS ) + ( MDR * Const ) ) ,ARS ) / ( ( ( CRS / Const ) + ( AMS * ACS ) ) * Max( ( PN - FirstVNF_CPU_Server ),( MRS - ARS ) ) ) )", "choosing": "( Min( MUC ,( ( CS / RRSe ) + ( MUM * DS ) ) ) + ( RMSe - ( ( MUM * DS ) * ( RRSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( Min( ( CS / DS ) ,MUC ),Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,( FirstVNF_CPU_Server * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU ) / ( ( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( RMSe,( ( Max( Max( MUM,( MLU + CS ) ),DS ) / Max( ( MUC + ( MUR + MUC ) ),MUM ) ) + MLU ) ) + Min( MLU ,RCSe ) ) * MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MRS ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS / Const ) ,( ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * DDR ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( Max( DS,RRSe ) - ( DS - MUC ) ) * ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Max( Max( ( PN + PN ),Min( ( BR / AMS ) ,( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( ARS - RRS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUM - ( RRSe / ( RMSe - MUM ) ) ) ,Max( RCSe,( RMSe * CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6265557329262261}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( ACS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUC ) + ( ( CS - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( RRS - FirstVNF_Mem ) / Const ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( DS ,Max( MLU,( RMSe * CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6265557329262261}, {"determining": "( ( Const * ACS ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM * RMSe ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Max( ( MLU - MLU ),( MUR / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6879562043795621, "obj2": 0.28002665139667277}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15492480078757656}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.666058394160584, "obj2": 0.3410701245315595}, {"determining": "( ( ( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) ) * MDR ) - Max( ( FirstVNF_RAM - ARS ),BR ) )", "choosing": "( ( Min( ( RRSe - RMSe ) ,Max( MUR,DS ) ) - ( Min( MUC ,MUR ) + ( MUR / MLU ) ) ) + ( Max( ( MLU / DS ),( MLU - DS ) ) + ( ( RMSe / MUC ) / ( MLU / RRSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.09119630916129}, {"determining": "( Min( PN ,DDR ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * MUR ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.8795620437956204, "obj2": 0.11127341259330731}, {"determining": "( Max( ( ARS * ARS ),( ( FirstVNF_RAM_Server - CRS ) + FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( Min( MLU ,MUR ) + ( RCSe * MUM ) ) * Min( RRSe ,MLU ) )", "obj1": 0.7700729927007299, "obj2": 0.20847604237670808}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.36294292315137977}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ARS )", "choosing": "( Min( RRSe ,MUC ) + ( CS * ( RCSe * MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.05489994802446998}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.1120516586403426}, {"determining": "( ( ( ( BR * Const ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) * Max( FirstVNF_RAM_Server,( MRS - CRS ) ) )", "choosing": "( Min( MLU ,( ( RCSe * MUC ) - Min( ( Max( CS,( Min( DS ,MUM ) * RRSe ) ) + MUR ) ,Max( RMSe,RCSe ) ) ) ) / ( ( DS * MLU ) / RRSe ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,BR ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7427007299270073, "obj2": 0.27892956383210404}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.3574192196136681}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( ( ( ( RCSe / ( RMSe - RRSe ) ) * ( ( RRSe / RCSe ) + RRSe ) ) + CS ) * RMSe ) * RCSe ) * MUM ) - MLU )", "obj1": 0.5346715328467153, "obj2": 0.4412580090239585}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - FirstVNF_CPU )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( Min( ( CS / DS ) ,MUC ),( MUC / RCSe ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.38415475347898137}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - MLU )", "obj1": 0.5346715328467153, "obj2": 0.4412580090239585}, {"determining": "( Max( ( DDR - FirstVNF_RAM_Server ),( FirstVNF_RAM * MRS ) ) + Min( CRS ,MDR ) )", "choosing": "( Max( MUC,RRSe ) + ( RCSe + RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.40294741344632234}, {"determining": "( Max( ( DDR - FirstVNF_RAM_Server ),( FirstVNF_RAM * MRS ) ) + Min( CRS ,MDR ) )", "choosing": "( Max( MUC,RRSe ) + ( RCSe + RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.40294741344632234}, {"determining": "Min( ( Min( ( ( AMS / RRS ) - Min( BR ,FirstVNF_Mem ) ) ,( ( PN - MRS ) - ( FirstVNF_RAM - ARS ) ) ) + Min( ( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( ( DS - MUR ) + ( RRSe - Max( ( RMSe - DS ),( MUC - RRSe ) ) ) ) ,Min( ( RCSe * MUC ) ,( CS + MUR ) ) )", "obj1": 0.7645985401459854, "obj2": 0.24583489276532722}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( MDR ,CRS ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * RRSe ) ) )", "obj1": 0.4854014598540146, "obj2": 0.49813884641069367}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),MUC ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( ACS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUC ) + ( ( CS - MUM ) / DS ) )", "obj1": 0.9379562043795621, "obj2": 0.07678234524564112}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - ( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( ( DS * RCSe ) - Max( DS,MUM ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.01060621877422027}, {"determining": "( ( ACS / ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * Max( ( MUM * DS ),( RRSe - Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.21147831217106494}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.38757491068160493}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( FirstVNF_Mem_Server,( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + DS ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.26638987808903564}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Max( CRS,( ( DDR - RRS ) / PN ) ) )", "choosing": "Max( ( RCSe * MUR ),( MUR - Max( Min( MUM ,MUC ),( RRSe / ( MLU * ( CS / MLU ) ) ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / MRS ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) * Max( AMS,ARS ) )", "choosing": "Min( ( Min( RCSe ,MUR ) * Min( RRSe ,( Min( RRSe ,MUM ) / Max( MUM,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( ( PN - ( ( ( DDR * Const ) - Min( FirstVNF_Mem_Server ,CRS ) ) + BR ) ) - Max( FirstVNF_RAM_Server,( CRS * ( Min( MRS ,DDR ) + BR ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( MUR,( MLU - MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS / Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server * ACS ),AMS ) ) ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( CS + DS ) )", "obj1": 0.47992700729927007, "obj2": 0.5219884528329045}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( MRS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + Min( MDR ,CRS ) )", "choosing": "( ( MLU * ( RCSe * DS ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 0.9379562043795621, "obj2": 0.07678234524564112}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU + MUM ) / ( Min( RRSe ,CS ) * RMSe ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( Min( MLU ,( DS - ( RCSe + DS ) ) ) - Min( MUM ,MUR ) ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUR * DS ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( ( ( FirstVNF_CPU - AMS ) / ( ( BR * Const ) - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - ( MUR + MUC ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_RAM / ( ( ( MDR + Min( CRS ,( BR * ( AMS + FirstVNF_Mem ) ) ) ) * FirstVNF_Mem_Server ) - ( Const - Const ) ) ) )", "choosing": "( Max( RRSe,( ( DS + RRSe ) - MUM ) ) - ( MUC - CS ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,( AMS + CRS ) ),CRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * ( RCSe * MLU ) ) ,( Min( ( MUR - ( ( ( MUM - MUR ) * DS ) * ( MLU - RRSe ) ) ) ,( Min( ( Max( Min( MUM ,MLU ),MLU ) / DS ) ,MUC ) - MUM ) ) - ( MUR + MLU ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "Max( Max( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ),( PN * ( ARS / ARS ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RRSe,( ( MUR / ( MUC * ( MUC / RRSe ) ) ) + CS ) ) ,( RRSe - ( RMSe * DS ) ) ) ,( RCSe * CS ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,RCSe ) / Max( RRSe,RRSe ) )", "obj1": 0.968978102189781, "obj2": 0.016725644860579512}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( MUC * RMSe ) + ( CS * MUC ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( ( DS - MUR ) + ( MUM + ( MUM / MUC ) ) ) ,( ( RCSe * MUC ) / ( CS + MUR ) ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( Min( ( Max( Const,( PN * CRS ) ) / Const ) ,( ( PN * AMS ) * DDR ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( FirstVNF_CPU / ARS ) ) ) )", "choosing": "( ( MLU / MUC ) + Max( CS,( ( RMSe / Min( RCSe ,RCSe ) ) + MLU ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.9708029197080292, "obj2": 0.015612740109357096}, {"determining": "( ( CRS / ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( MUM / ( Min( MUR ,DS ) + MLU ) ) ,( ( MUC - MUC ) / MUC ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( DS - MUR ) + ( MUM + ( MUM / MUC ) ) ) ,( ( RCSe * MUC ) / ( CS + MUR ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) )", "choosing": "( Min( Max( ( RMSe - DS ),( MLU * CS ) ) ,Max( ( RCSe - RCSe ),( MLU / MLU ) ) ) * ( Max( Max( MUM,DS ),( MUM + RRSe ) ) * Min( Min( RCSe ,RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.46398328410428097}, {"determining": "( ( ( ACS * Max( FirstVNF_CPU_Server,( BR - ACS ) ) ) + ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( PN - RRS ) ) ) * AMS ) ) - Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( MUM * ( Max( Max( ( Min( RRSe ,Max( RRSe,DS ) ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "Min( Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU + MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,( CRS - CRS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) / ( MLU * CS ) )", "obj1": 0.4726277372262774, "obj2": 0.5220032418473657}, {"determining": "Max( Max( Min( ( BR / AMS ) ,Min( AMS ,MDR ) ),Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ) ),( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server - AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( Min( ( RCSe / ( ( Max( ( RCSe + Min( MUC ,RRSe ) ),MUR ) + ( DS / DS ) ) - CS ) ) ,MUC ) ,( MUR * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( Min( ( ( ARS - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + DS ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( ( CS + ( CS / CS ) ) - Min( ( MUM / MUC ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,ACS ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5220032418473657}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( ARS * FirstVNF_Mem_Server ) + ( DDR * ACS ) ) )", "choosing": "( ( MUR / MUM ) - Min( MUM ,( Max( MLU,RCSe ) / ( ( RMSe / Min( RRSe ,MUM ) ) * ( MUM / MUR ) ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( ACS / MDR ) ) ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * ( Max( Max( MUM,DS ),( MUM + RRSe ) ) * Min( Min( RCSe ,RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.46398328410428097}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( RCSe - Max( DS,MUM ) ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * Max( ( MUM * DS ),( RRSe - MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.20941820994902793}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * CS ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5219884528329045}, {"determining": "( Min( ( ( Const - BR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( FirstVNF_CPU_Server * ( ( AMS + ARS ) * ( RRS * PN ) ) ) )", "choosing": "( Min( ( RCSe - CS ) ,Min( MLU ,( ( MUC - RMSe ) / ( ( ( CS * Min( RCSe ,CS ) ) * RRSe ) * ( ( ( MUM * RCSe ) * MLU ) / Max( MUM,Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ( FirstVNF_RAM_Server - Const ),FirstVNF_CPU ) * ( CRS + ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( DS - CS ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUC * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.968978102189781, "obj2": 0.016725644860579512}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) - ( ( ARS + DDR ) - Max( AMS,DDR ) ) )", "choosing": "( ( RMSe / MUM ) + ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * ( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS * MUM ),( CS + ( ( CS - DS ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ACS ) - Max( RRS,RRS ) )", "choosing": "( Max( MLU,RCSe ) / ( Min( Max( ( MLU / ( DS / ( Max( RMSe,DS ) * MLU ) ) ),Min( MLU ,MUC ) ) ,DS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MLU + RCSe ) * ( DS * RMSe ) ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( ( ARS + DDR ) - Max( AMS,FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * ( MUC + MLU ) ),Min( MLU ,( Max( Min( MLU ,( MUC + DS ) ),RCSe ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) * ( CRS - ACS ) ) / ( ( RRS / Const ) + DDR ) )", "choosing": "( ( Min( MUR ,MUM ) + Max( MLU,RRSe ) ) + Max( ( RMSe * MLU ),( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Const ) * ( FirstVNF_CPU_Server - Const ) ) * ( ( Min( RRS ,Max( MRS,Min( Const ,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / MRS ) - ( PN / AMS ) ) ) - ( ( ( MDR * CRS ) + Min( PN ,Const ) ) - Min( ( BR / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / MRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( MUC + CS ) ) - ( Min( RRSe ,RRSe ) + ( RCSe / CS ) ) ) / ( ( ( CS - RCSe ) * ( MUC + DS ) ) + ( RCSe - ( Max( ( DS * ( RCSe - RRSe ) ),Min( Min( RCSe ,MUC ) ,Max( MUM,RRSe ) ) ) / ( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_CPU ) * Max( Const,DDR ) ) ,( Min( ACS ,FirstVNF_RAM_Server ) + Min( AMS ,FirstVNF_Mem ) ) ) - ( ( ( DDR / RRS ) - ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( Max( FirstVNF_RAM,( BR * ( FirstVNF_Mem_Server + AMS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( RCSe - CS ) ) + Min( ( Max( CS,RMSe ) - ( DS * MUC ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * MDR ) - Max( ( FirstVNF_RAM - PN ),BR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) * RCSe ) + ( ( ( MLU / DS ) + ( RCSe - DS ) ) + ( ( RMSe / MUC ) / ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR - MDR ),Const ) * ( CRS - ( FirstVNF_Mem - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) - ( ACS + ACS ) )", "choosing": "( Max( RCSe,MLU ) / ( ( MUC / RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem ) + BR ) - ( ACS + ACS ) )", "choosing": "( ( Max( RMSe,( ( Min( ( RMSe * DS ) ,( ( RRSe + DS ) * MLU ) ) - RCSe ) - ( ( Min( MUR ,RRSe ) / CS ) - MLU ) ) ) * DS ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) ) - Min( ( FirstVNF_Mem - BR ) ,PN ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( MDR * ( ( RRS * Max( MRS,MRS ) ) * ACS ) ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,( ( MUR * RMSe ) - MUR ) ) ) + Max( MUM,MUR ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,( ( MUR * RMSe ) - MUR ) ) ) + Max( MUM,MUR ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * PN ) + ( ( PN * ( ARS * FirstVNF_CPU ) ) * ARS ) )", "choosing": "Min( ( MUM / ( ( ( MUM / Max( RCSe,MUC ) ) / ( MUM - ( ( MLU + ( MUR + MUM ) ) / Min( MUM ,MUR ) ) ) ) + MLU ) ) ,( ( MUC / MUC ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) + ( ( MRS - FirstVNF_Mem_Server ) * ARS ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ( ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) / DDR ) + AMS ) )", "choosing": "( ( CS / CS ) / Max( RRSe,( Min( MUM ,( MUR - MUR ) ) - Max( RMSe,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( ACS + ACS ) )", "choosing": "( Max( MLU,RCSe ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Max( Min( ( FirstVNF_Mem_Server - MDR ) ,( Min( RRS ,MDR ) - AMS ) ),( Min( RRS ,FirstVNF_RAM ) * ( ACS / RRS ) ) ),Max( ( Min( ACS ,ARS ) / ( FirstVNF_RAM * BR ) ),( Max( Const,AMS ) + ( CRS / MDR ) ) ) ) ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * BR ) )", "choosing": "Max( ( CS * MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN + RRS ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( MUM / MUC ) + Max( MLU,Max( ( MUR * MUR ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * DDR ) / AMS ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS / ( RRSe / ( CS - MLU ) ) ) - DS ) * Min( ( MUM - Max( MLU,DS ) ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Const ) * FirstVNF_RAM_Server ) * Max( AMS,FirstVNF_CPU ) )", "choosing": "( ( DS * RCSe ) / ( MLU / ( ( ( CS + DS ) * ( CS - ( MLU + ( RCSe - MUC ) ) ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( CRS - RRS ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),RMSe ),( DS / Max( MUC,RMSe ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6076022354383709}, {"determining": "( ( Const - Max( ( FirstVNF_CPU_Server * DDR ),Max( ( Min( ACS ,FirstVNF_CPU ) / ( FirstVNF_RAM * BR ) ),( Max( Const,AMS ) + ( CRS / MDR ) ) ) ) ) + ( CRS * BR ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( ( Max( RRSe,( Max( MUC,MUR ) - ( RRSe * ( ( DS - RRSe ) - MLU ) ) ) ) + MLU ) - Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,CRS ) - Min( ( ACS / FirstVNF_RAM ) ,( MDR / MRS ) ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUC ) + ( ( CS - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - RRS ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( RRSe * DS ),RMSe ),( DS / ( ( ( CS - MUR ) + ( MLU * RRSe ) ) * RMSe ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6076022354383709}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,DS ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9105839416058394, "obj2": 0.043186860676877936}, {"determining": "( ( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * ( RMSe / MUM ) ) ) - ( RCSe - Max( DS,MUM ) ) )", "obj1": 0.8795620437956204, "obj2": 0.11005702788455461}, {"determining": "( ( Const * ACS ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM * RMSe ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Max( ( MLU - MLU ),( MUR / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6879562043795621, "obj2": 0.28002665139667277}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( ( ARS + DDR ) - Max( AMS,Max( Const,AMS ) ) ) )", "choosing": "Max( ( MUM * ( MUC + MLU ) ),Max( ( CS * MUM ),Min( MUC ,RMSe ) ) )", "obj1": 0.5748175182481752, "obj2": 0.43459996114657096}, {"determining": "( ( ( DDR + ( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RMSe * MUM ) )", "obj1": 0.6478102189781022, "obj2": 0.3508128351091396}, {"determining": "( ( ( ( ( ARS * ACS ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) - BR ) - ( ACS + ACS ) )", "choosing": "( ( ( RCSe * RCSe ) * DS ) / Max( RMSe,RRSe ) )", "obj1": 0.9470802919708029, "obj2": 0.042294666291423394}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,ACS ) ) ) / MRS ) ) ,BR ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.7427007299270073, "obj2": 0.27883695185828666}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - FirstVNF_CPU )", "choosing": "( ( RMSe * CS ) / Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.6076642335766423, "obj2": 0.3835285855099148}, {"determining": "( Max( ( ARS * ARS ),( ( FirstVNF_RAM_Server - CRS ) + FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( Min( MLU ,MUR ) + ( RCSe * MUM ) ) * Min( RRSe ,MLU ) )", "obj1": 0.7700729927007299, "obj2": 0.20847604237670808}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.5346715328467153, "obj2": 0.4412580090239585}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( PN,BR ) / MDR ) + Max( ( ( ( ( RRS - FirstVNF_Mem ) / Const ) * MDR ) - Max( ( FirstVNF_RAM - ARS ),BR ) ),AMS ) ) )", "choosing": "( ( Max( MUM,RMSe ) + ( ( MUC * RMSe ) * RCSe ) ) - ( RCSe - Max( Max( ( DS / MLU ),( RCSe - DS ) ),MUM ) ) )", "obj1": 0.7627737226277372, "obj2": 0.24309860034136652}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( BR,FirstVNF_RAM_Server ) ),AMS ),( FirstVNF_CPU_Server / ( PN + AMS ) ) ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * Min( ( DS - ( Max( ( MUR - ( MUR / MUR ) ),DS ) / CS ) ) ,MUC ) ) ,( ( ( MUR / MLU ) + MUC ) - ( MUR + MLU ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4836084411233649}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( ( CRS / Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server * ACS ),AMS ) ) ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( CS + DS ) )", "obj1": 0.47992700729927007, "obj2": 0.5219884528329045}, {"determining": "( Max( ( DDR - FirstVNF_RAM_Server ),( FirstVNF_Mem - ACS ) ) + Min( CRS ,MDR ) )", "choosing": "( Min( RMSe ,MLU ) + ( MUC + RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.40294741344632234}, {"determining": "Max( FirstVNF_RAM_Server,( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5526669927492912}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Max( CRS,( ( DDR - RRS ) / PN ) ) )", "choosing": "Max( ( RCSe * MUR ),( MUR - Max( Min( MUM ,MUC ),( RRSe / ( MLU * ( CS / MLU ) ) ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.36294292315137977}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.11267837676623921}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.36294292315137977}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / MRS ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) * Max( AMS,ARS ) )", "choosing": "Min( ( Min( RCSe ,MUR ) * Min( RRSe ,( Min( RRSe ,MUM ) / Max( MUM,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM + FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM + ( AMS / CRS ) ),( MRS - ( ARS + RRS ) ) ) ) * ( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM_Server ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( DS / MLU ) * Min( MLU ,RRSe ) )", "obj1": 0.7664233576642335, "obj2": 0.2114783121710649}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.1120516586403426}, {"determining": "Max( Max( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ),( PN * ( ARS / ARS ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RRSe,( ( MUR / ( MUC * ( MUC / RRSe ) ) ) + CS ) ) ,( RRSe - ( RMSe * DS ) ) ) ,( RCSe * CS ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * RCSe ) / ( MLU / ( ( ( CS + DS ) * ( CS - ( MLU + ( RCSe - MUC ) ) ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "( ( ARS + PN ) * ( ( ( ARS * AMS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( RRSe - MUM ) ,( ( DS + RRSe ) + ( RMSe * RMSe ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.01060621877422027}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( FirstVNF_Mem_Server,( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + DS ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.26638987808903564}, {"determining": "( Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 0.7700729927007299, "obj2": 0.20847604237670808}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( ( ( ( RCSe / ( RMSe - RRSe ) ) * ( ( RRSe / RCSe ) + RRSe ) ) + CS ) * RMSe ) * RCSe ) * MUM ) - MLU )", "obj1": 0.5346715328467153, "obj2": 0.4412580090239585}, {"determining": "( ( PN - ( ( ( DDR * Const ) - Min( FirstVNF_Mem_Server ,CRS ) ) + BR ) ) - Max( FirstVNF_RAM_Server,( CRS * ( Min( MRS ,DDR ) + BR ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( MUR,( MLU - MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( MUM / MUC ) + Max( MLU,Max( ( MUR * MUR ),MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),MUC ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "Max( ( CS * MUM ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / MUC ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.49635036496350365, "obj2": 0.46345901495826136}, {"determining": "Max( Max( Min( ( DDR / DDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ),Min( ARS ,FirstVNF_RAM_Server ) ),( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU * PN ) ,( FirstVNF_CPU_Server / ( ( MDR + ( ( PN + DDR ) - FirstVNF_Mem ) ) + ( BR * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) / ( ( ( Max( ( ( DS - MUR ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( ( MLU - MLU ) + ( CS / MUR ) ) ) ) - CS ) / ( MUC + MUM ) ) ) / Max( Max( RMSe,Max( RMSe,( RRSe * RMSe ) ) ),( DS * CS ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "( Max( FirstVNF_Mem_Server,( ( Const * BR ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( RMSe / Max( ( RMSe * MUC ),CS ) ) - Min( MUM ,Max( ( ( RCSe / MLU ) / Max( CS,MUM ) ),( Max( DS,( RRSe * DS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.593065693430657, "obj2": 0.39313265695652855}, {"determining": "( ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) * ( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( Min( MLU ,( DS - ( RCSe + DS ) ) ) - Min( MUM ,MUR ) ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUR * DS ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "Min( ( MRS * ACS ) ,( ( FirstVNF_Mem_Server - PN ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( MUC / DS ) ,( MLU + ( RMSe * Max( Max( ( ( ( RCSe + DS ) + ( RRSe * DS ) ) - ( MLU * ( RMSe * MLU ) ) ),MUM ),MUC ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.26973161532445183}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU_Server * RRS ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( MLU / MUM ) - ( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - Max( ( MUC * ( MUM - MUR ) ),RCSe ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13481292966587513}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU + MUM ) / ( Min( RRSe ,CS ) * RMSe ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_RAM / ( ( ( MDR + Min( CRS ,( BR * ( AMS + FirstVNF_Mem ) ) ) ) * FirstVNF_Mem_Server ) - ( Const - Const ) ) ) )", "choosing": "( Max( RRSe,( ( DS + RRSe ) - MUM ) ) - ( MUC - CS ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Min( Const ,FirstVNF_RAM_Server ) / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - ( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( ( DS * RCSe ) - Max( DS,MUM ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.01060621877422027}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.9708029197080292, "obj2": 0.015612740109357096}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.38757491068160493}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ,Max( ( BR + DDR ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe * Max( Max( ( DS * Min( MUR ,RRSe ) ),MUM ),MUC ) ) + Min( RMSe ,MUR ) ) - ( Min( DS ,RRSe ) / Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( Min( RMSe ,Min( MLU ,RCSe ) ) + ( RCSe - DS ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.2758889265809941}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( MUM / ( Min( MUR ,DS ) + MLU ) ) ,( ( MUC - MUC ) / MUC ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( ( ( ( BR * Const ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) * Max( FirstVNF_RAM_Server,( MRS - CRS ) ) )", "choosing": "( Min( MLU ,( ( RCSe * MUC ) - Min( ( Max( CS,( Min( DS ,MUM ) * RRSe ) ) + MUR ) ,Max( RMSe,RCSe ) ) ) ) / ( ( DS * MLU ) / RRSe ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,( CRS - CRS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) / ( MLU * CS ) )", "obj1": 0.4726277372262774, "obj2": 0.5220032418473657}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( Min( RMSe ,( MLU * MUC ) ) * Max( Min( RRSe ,Min( MLU ,DS ) ),Min( ( ( MUM - MUM ) * CS ) ,MUC ) ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( Min( ( ( ARS - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( Max( CRS,FirstVNF_CPU ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,ACS ) ) ) )", "choosing": "( ( RMSe * CS ) / Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.4726277372262774, "obj2": 0.5220032418473657}, {"determining": "( ( ( FirstVNF_CPU - AMS ) / ( ( BR * Const ) - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - ( MUR + MUC ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.38757491068160493}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.1120516586403426}, {"determining": "( Max( ( ( Const / FirstVNF_Mem ) - FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( DS * RMSe ) - Min( MUM ,( ( MLU / RCSe ) / Max( RRSe,RRSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM / ( ( ( MUM / Max( RCSe,MUC ) ) / ( MUM - ( ( MLU + ( MUR + MUM ) ) / Min( MUM ,MUR ) ) ) ) + MLU ) ) ,( ( MUC / MUC ) / MUC ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "( Max( ( DDR - FirstVNF_RAM_Server ),( FirstVNF_RAM * MRS ) ) + Min( CRS ,MDR ) )", "choosing": "( Max( MUC,RRSe ) + ( RCSe + RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.40294741344632234}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( ( CS + ( CS / CS ) ) - Min( ( MUM / MUC ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / ACS ) )", "choosing": "( Min( RRSe ,MUC ) + ( CS * MUC ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( Max( ( FirstVNF_RAM_Server - Const ),FirstVNF_CPU ) * ( CRS + ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( DS - CS ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUC * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( ( ( ACS * Max( FirstVNF_CPU_Server,( BR - ACS ) ) ) + ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( PN - RRS ) ) ) * AMS ) ) - Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( MUM * ( Max( Max( ( Min( RRSe ,Max( RRSe,DS ) ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "( Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( RMSe * CS ) / Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.7664233576642335, "obj2": 0.2114783121710649}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( CS + DS ) )", "obj1": 0.47992700729927007, "obj2": 0.5219884528329045}, {"determining": "( Min( ( Max( Const,( PN * CRS ) ) / Const ) ,( ( PN * AMS ) * DDR ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( FirstVNF_CPU / ARS ) ) ) )", "choosing": "( ( MLU / MUC ) + Max( CS,( ( RMSe / Min( RCSe ,RCSe ) ) + MLU ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Max( Max( Min( ( BR / AMS ) ,Min( AMS ,MDR ) ),Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ) ),( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server - AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( Min( ( RCSe / ( ( Max( ( RCSe + Min( MUC ,RRSe ) ),MUR ) + ( DS / DS ) ) - CS ) ) ,MUC ) ,( MUR * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( ( ACS / ( ( FirstVNF_Mem - BR ) * Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( CRS - RRS ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * Max( Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),RMSe ),( DS / Max( MUC,RMSe ) ) ) ) ),( RRSe - Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.20941820994902793}, {"determining": "Min( Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU + MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( DS - MUR ) + ( MUM + ( MUM / MUC ) ) ) ,( ( RCSe * MUC ) / ( CS + MUR ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( RMSe * MUM ) + Min( MLU ,RCSe ) ) * Max( ( MUM * DS ),( RRSe - MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.20941820994902793}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( RRS - FirstVNF_Mem ) / Const ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) - ( ( ARS + DDR ) - Max( AMS,DDR ) ) )", "choosing": "( ( RMSe / MUM ) + ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( CRS * ( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS * MUM ),( CS + ( ( CS - DS ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ACS ) - Max( RRS,RRS ) )", "choosing": "( Max( MLU,RCSe ) / ( Min( Max( ( MLU / ( DS / ( Max( RMSe,DS ) * MLU ) ) ),Min( MLU ,MUC ) ) ,DS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MLU + RCSe ) * ( DS * RMSe ) ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( ( ARS + DDR ) - Max( AMS,FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * ( MUC + MLU ) ),Min( MLU ,( Max( Min( MLU ,( MUC + DS ) ),RCSe ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) * ( CRS - ACS ) ) / ( ( RRS / Const ) + DDR ) )", "choosing": "( ( Min( MUR ,MUM ) + Max( MLU,RRSe ) ) + Max( ( RMSe * MLU ),( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Const ) * ( FirstVNF_CPU_Server - Const ) ) * ( ( Min( RRS ,Max( MRS,Min( Const ,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / MRS ) - ( PN / AMS ) ) ) - ( ( ( MDR * CRS ) + Min( PN ,Const ) ) - Min( ( BR / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / MRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( MUC + CS ) ) - ( Min( RRSe ,RRSe ) + ( RCSe / CS ) ) ) / ( ( ( CS - RCSe ) * ( MUC + DS ) ) + ( RCSe - ( Max( ( DS * ( RCSe - RRSe ) ),Min( Min( RCSe ,MUC ) ,Max( MUM,RRSe ) ) ) / ( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_CPU ) * Max( Const,DDR ) ) ,( Min( ACS ,FirstVNF_RAM_Server ) + Min( AMS ,FirstVNF_Mem ) ) ) - ( ( ( DDR / RRS ) - ( MRS - RRS ) ) - ( ( AMS - ARS ) / ( Max( FirstVNF_RAM,( BR * ( FirstVNF_Mem_Server + AMS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( RCSe - CS ) ) + Min( ( Max( CS,RMSe ) - ( DS * MUC ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / AMS ) * MDR ) - Max( ( FirstVNF_RAM - PN ),BR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) * RCSe ) + ( ( ( MLU / DS ) + ( RCSe - DS ) ) + ( ( RMSe / MUC ) / ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR - MDR ),Const ) * ( CRS - ( FirstVNF_Mem - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) - ( ACS + ACS ) )", "choosing": "( Max( RCSe,MLU ) / ( ( MUC / RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem ) + BR ) - ( ACS + ACS ) )", "choosing": "( ( Max( RMSe,( ( Min( ( RMSe * DS ) ,( ( RRSe + DS ) * MLU ) ) - RCSe ) - ( ( Min( MUR ,RRSe ) / CS ) - MLU ) ) ) * DS ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - MRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) ) - Min( ( FirstVNF_Mem - BR ) ,PN ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - ( MDR * ( ( RRS * Max( MRS,MRS ) ) * ACS ) ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( CRS / FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * ARS ) + ( PN * MDR ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,( ( MUR * RMSe ) - MUR ) ) ) + Max( MUM,MUR ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( ( BR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + MLU ) ) * MUC ) ) ),( RMSe + ( ( RCSe / Min( RCSe ,DS ) ) * RRSe ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( ( FirstVNF_CPU_Server * DDR ),Max( ( Min( ACS ,FirstVNF_CPU ) / ( FirstVNF_RAM * BR ) ),( Max( Const,AMS ) + ( CRS / MDR ) ) ) ) ) + ( CRS * BR ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( ( Max( RRSe,( Max( MUC,MUR ) - ( RRSe * ( ( DS - RRSe ) - MLU ) ) ) ) + MLU ) - Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem / AMS ) + ACS ) ,Min( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU / AMS ) ) ,BR ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( MUR * Max( Max( ( ( ( RCSe + DS ) + ( RRSe * DS ) ) - ( Max( MUR,CS ) * MUM ) ),MUM ),MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6310205050061412}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( ( RMSe - ( MUR + RMSe ) ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( CRS + FirstVNF_CPU ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / ( CS - DS ) ) )", "obj1": 0.8686131386861314, "obj2": 0.10422471418779428}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,RRSe ) + ( RCSe + RCSe ) )", "obj1": 0.5711678832116789, "obj2": 0.4231028877494138}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( FirstVNF_RAM / Const ) )", "choosing": "Max( MUC,( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.781021897810219, "obj2": 0.20475391490741715}, {"determining": "( ( Const * ACS ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM * RMSe ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Max( ( MLU - MLU ),( MUR / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6879562043795621, "obj2": 0.28002665139667277}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS - ACS ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RRSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( ( RCSe + ( ( Min( RMSe ,MUM ) / MUM ) + MUC ) ),MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687793}, {"determining": "( ( ( ( ( ACS / ( ( PN - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM ) ) + DDR ) * ( AMS + FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MUC * MUR ) * ( Min( DS ,Min( RCSe ,( ( RRSe + ( MUR + MUC ) ) / ( MUR / DS ) ) ) ) + RRSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3317858838280082}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) / ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,( ( DS * MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.5328467153284672, "obj2": 0.43563617193512133}, {"determining": "( ( ( ( ( ARS * ACS ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) - BR ) - ( ACS + ACS ) )", "choosing": "( ( ( RCSe * RCSe ) * DS ) / Max( RMSe,RRSe ) )", "obj1": 0.9470802919708029, "obj2": 0.042294666291423394}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.28962283831804186}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( BR / AMS ) + Max( MDR,ACS ) ) ) / MRS ) ) ,BR ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.7427007299270073, "obj2": 0.27883695185828666}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( FirstVNF_Mem / ( Const * RRS ) ) + ( BR * PN ) ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Max( RCSe,( MLU / ( MLU * ( ( RRSe - Max( MUM,MUR ) ) / MUM ) ) ) ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - Min( Min( CS ,RMSe ) ,MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.7609489051094891, "obj2": 0.23904678674255894}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( RRSe * DS ) / RMSe ) - Min( CS ,MUM ) ) ,( ( ( MUR / RRSe ) + DS ) / ( MUC * Min( RMSe ,MLU ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 0.635036496350365, "obj2": 0.36179980847346277}, {"determining": "( Max( Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( FirstVNF_Mem_Server,( ARS * FirstVNF_CPU_Server ) ) ) ),AMS ) - FirstVNF_CPU )", "choosing": "( ( RMSe * CS ) / Min( ( MUC / ( ( RCSe - DS ) + ( CS - RRSe ) ) ) ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3695168089584935}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.4726277372262774, "obj2": 0.518094940860821}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.7937956204379562, "obj2": 0.15319585809259134}, {"determining": "Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Max( CRS,( ( DDR - RRS ) / PN ) ) )", "choosing": "Max( ( RCSe * MUR ),( MUR - Max( Min( MUM ,MUC ),( RRSe / ( MLU * ( CS / MLU ) ) ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "( Max( ( ARS - FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) )", "choosing": "( ( CS / ( CS + CS ) ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( CS,MLU ) ),( Max( DS,( DS * RRSe ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.40294741344632234}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * ( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5899570581323365}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / MRS ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) * Max( AMS,ARS ) )", "choosing": "Min( ( Min( RCSe ,MUR ) * Min( RRSe ,( Min( RRSe ,MUM ) / Max( MUM,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( Min( ( FirstVNF_Mem * ( Min( FirstVNF_RAM_Server ,Const ) / FirstVNF_RAM ) ) ,AMS ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( MLU ,( ( MUR * MUC ) - Min( ( Max( CS,( ( CS - DS ) * ( MUC + DS ) ) ) + MUR ) ,Max( RMSe,RCSe ) ) ) ) / ( ( DS * MLU ) / RRSe ) )", "obj1": 0.5237226277372263, "obj2": 0.4414667814021406}, {"determining": "( Max( ( ( Min( FirstVNF_Mem ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),( MRS - MRS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( MLU * MUR ) * ( RMSe * MUM ) )", "obj1": 0.7664233576642335, "obj2": 0.2114783121710649}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8503649635036497, "obj2": 0.1111094910680227}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,Max( MLU,( RMSe * Max( MUM,Max( ( ( RRSe - RMSe ) - Min( DS ,Max( RMSe,RMSe ) ) ),MUM ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6143844335307892}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RMSe ) )", "obj1": 0.9945255474452555, "obj2": 0.003527899759412633}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( FirstVNF_Mem - BR ) * ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * RCSe ) / ( MLU / ( ( ( CS + DS ) * ( CS - ( MLU + ( RCSe - MUC ) ) ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - FirstVNF_CPU )", "choosing": "( ( RMSe * CS ) / Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.6076642335766423, "obj2": 0.3835285855099148}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - RRS ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( RRSe * DS ),RMSe ),( DS / ( ( ( CS - MUR ) + ( MLU * RRSe ) ) * RMSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ARS + PN ) * ( ( ( ARS * AMS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( RRSe - MUM ) ,( ( DS + RRSe ) + ( RMSe * RMSe ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) ),RMSe ),( DS / Max( MUC,RMSe ) ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6013603114955323}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( ( ( RMSe * Max( Max( ( DS * Min( MUR ,RRSe ) ),MUM ),MUC ) ) + Min( RMSe ,MUR ) ) - ( Min( DS ,RRSe ) / Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( Min( RMSe ,Min( MLU ,RCSe ) ) + ( RCSe - DS ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - Max( ( Max( ( PN * FirstVNF_RAM ),MDR ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( CS * RCSe ) ) - ( RCSe - Max( MLU,RMSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5183029982386513}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( MUM / MUC ) + Max( MLU,Max( ( MUR * MUR ),MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( Min( MLU ,( DS - ( RCSe + DS ) ) ) - Min( MUM ,MUR ) ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUR * DS ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( FirstVNF_Mem_Server,( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + DS ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.26638987808903564}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_RAM / ( ( ( MDR + Min( CRS ,( BR * ( AMS + FirstVNF_Mem ) ) ) ) * FirstVNF_Mem_Server ) - ( Const - Const ) ) ) )", "choosing": "( Max( RRSe,( ( DS + RRSe ) - MUM ) ) - ( MUC - CS ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( Min( DDR ,PN ),ARS ) / Min( ARS ,FirstVNF_Mem ) ) ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / DS ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "( ( ( ( DDR * DDR ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) * ( MRS + FirstVNF_RAM ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( ( RCSe + Min( ( MUM / Max( Max( RRSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - FirstVNF_CPU )", "choosing": "( ( RMSe * CS ) / Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.6076642335766423, "obj2": 0.3835285855099148}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( MDR * FirstVNF_RAM_Server ) - ( Const + Max( PN,PN ) ) ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( RMSe,RRSe ) / Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( Max( MUR,RCSe ) / MLU ) + MUM ) + DS ) )", "obj1": 0.5985401459854015, "obj2": 0.38757491068160493}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "Max( ( CS * MUM ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.7572992700729927, "obj2": 0.25136985263317146}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - ( Max( ( ( RCSe / MLU ) / Max( CS,MUM ) ),( Max( DS,( RRSe * DS ) ) - Min( MUC ,RMSe ) ) ) - ( ( DS * RCSe ) - Max( DS,MUM ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.01478226796689684}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU + MUM ) / ( Min( RRSe ,CS ) * RMSe ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( MUM / ( Min( MUR ,DS ) + MLU ) ) ,( ( MUC - MUC ) / MUC ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.36294292315137977}, {"determining": "( Max( ( DDR - FirstVNF_RAM_Server ),( FirstVNF_Mem - ACS ) ) + Min( CRS ,MDR ) )", "choosing": "( Min( RMSe ,MLU ) + ( MUC + RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.40294741344632234}, {"determining": "( Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 0.7700729927007299, "obj2": 0.20847604237670808}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.6295620437956204, "obj2": 0.36294292315137977}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - ( MUR + MUC ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( Min( RMSe ,( MLU * MUC ) ) * Max( Min( RRSe ,Min( MLU ,DS ) ),Min( ( ( MUM - MUM ) * CS ) ,MUC ) ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( Max( ( BR + DDR ),Min( ( FirstVNF_CPU_Server * Max( ACS,CRS ) ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( DDR * FirstVNF_CPU ) )", "choosing": "Min( DS ,( DS * Min( Max( ( MUC / ( MUM + ( MUC - RRSe ) ) ),( DS / ( ( CS + ( CS / CS ) ) - ( ( MUM / MUC ) / MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( Min( ( ( ARS - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6076022354383709}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_RAM ) - ( Const * FirstVNF_RAM ) ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( Max( MUC,Min( Min( ( DS / RRSe ) ,( MUR * RCSe ) ) ,RMSe ) ) - Min( ( RRSe - RCSe ) ,CS ) ) / MLU ),RRSe ) + ( RCSe + RCSe ) )", "obj1": 0.593065693430657, "obj2": 0.39313265695652855}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_RAM_Server * MDR ) - ( Const + FirstVNF_Mem ) ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.38757491068160493}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.11267837676623921}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Max( ( Max( ( PN * FirstVNF_RAM ),MDR ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe * Max( Max( ( DS * RRSe ),MUM ),MUC ) ) + Min( RMSe ,MUR ) ) - Max( Min( DS ,RRSe ),Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( ( RCSe - DS ) + Min( RMSe ,Min( MLU ,RCSe ) ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.2730176253006978}, {"determining": "( Max( FirstVNF_Mem_Server,( ( Const * BR ) / Const ) ) - ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( RMSe / Max( ( RMSe * MUC ),CS ) ) - Min( MUM ,Max( ( ( RCSe / MLU ) / Max( CS,MUM ) ),( Max( DS,( RRSe * DS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.593065693430657, "obj2": 0.39313265695652855}, {"determining": "( ( ( ACS * Max( FirstVNF_CPU_Server,( BR - ACS ) ) ) + ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( PN - RRS ) ) ) * AMS ) ) - Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( MUM * ( Max( Max( ( Min( RRSe ,Max( RRSe,DS ) ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU_Server * RRS ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( MLU / MUM ) - ( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - Max( ( MUC * ( MUM - MUR ) ),RCSe ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13481292966587513}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13481292966587513}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM / ( ( ( MUM / Max( RCSe,MUC ) ) / ( MUM - ( ( MLU + ( MUR + MUM ) ) / Min( MUM ,MUR ) ) ) ) + MLU ) ) ,( ( MUC / MUC ) / MUC ) )", "obj1": 0.5894160583941606, "obj2": 0.3978873320489065}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),( DDR / ( AMS + Max( RRS,PN ) ) ) )", "choosing": "( Min( ( Max( CS,RMSe ) - ( RCSe * MUC ) ) ,( ( DS + RRSe ) + ( ( ( RRSe + Min( MUM ,Max( MLU,RMSe ) ) ) / Min( MLU ,RMSe ) ) * RRSe ) ) ) + ( MLU + ( RCSe - CS ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) * ( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / BR ) + ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.1120516586403426}, {"determining": "Max( Max( Min( ( DDR / DDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ),Min( ARS ,FirstVNF_RAM_Server ) ),( Min( Min( FirstVNF_CPU ,ARS ) ,( RRS - ARS ) ) + Min( ( FirstVNF_CPU * PN ) ,( FirstVNF_CPU_Server / ( ( MDR + ( ( PN + DDR ) - FirstVNF_Mem ) ) + ( BR * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) / ( ( ( Max( ( ( DS - MUR ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( ( MLU - MLU ) + ( CS / MUR ) ) ) ) - CS ) / ( MUC + MUM ) ) ) / Max( Max( RMSe,Max( RMSe,( RRSe * RMSe ) ) ),( DS * CS ) ) )", "obj1": 0.5200729927007299, "obj2": 0.45216544606924763}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( CRS - RRS ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),RMSe ),( DS / Max( MUC,RMSe ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6076022354383709}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / ACS ) )", "choosing": "Max( ( RCSe * MUR ),( MUR - RCSe ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM + FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM + ( AMS / CRS ) ),( MRS - ( ARS + RRS ) ) ) ) * ( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM_Server ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( DS / MLU ) * Min( MLU ,RRSe ) )", "obj1": 0.7664233576642335, "obj2": 0.2114783121710649}, {"determining": "Min( ( MRS * ACS ) ,( ( FirstVNF_Mem_Server - PN ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( MUC / DS ) ,( MLU + ( RMSe * Max( Max( ( ( ( RCSe + DS ) + ( RRSe * DS ) ) - ( MLU * ( RMSe * MLU ) ) ),MUM ),MUC ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.26973161532445183}, {"determining": "Max( Max( Min( ( BR / AMS ) ,Min( AMS ,MDR ) ),Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ) ),( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server - AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( Min( ( RCSe / ( ( Max( ( RCSe + Min( MUC ,RRSe ) ),MUR ) + ( DS / DS ) ) - CS ) ) ,MUC ) ,( MUR * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU / MRS ) ) ,Max( FirstVNF_Mem_Server,( ARS * ( DDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + DS ) - Min( MUC ,MUC ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.2680202676135894}, {"determining": "( Max( ( ( Const / FirstVNF_Mem ) - FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( DS * RMSe ) - Min( MUM ,( ( MLU / RCSe ) / Max( RRSe,RRSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( BR,FirstVNF_RAM_Server ) ),AMS ),( FirstVNF_CPU_Server / ( PN + AMS ) ) ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * Min( ( DS - ( Max( ( MUR - ( MUR / MUR ) ),DS ) / CS ) ) ,MUC ) ) ,( ( ( MUR / MLU ) + MUC ) - ( MUR + MLU ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4836084411233649}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,BR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4836084411233649}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.9708029197080292, "obj2": 0.015612740109357096}, {"determining": "Min( Min( Max( ( Const * FirstVNF_RAM ),( FirstVNF_CPU + MRS ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 0.7445255474452555, "obj2": 0.2768408884529964}, {"determining": "( Max( ( ARS * ARS ),( ( FirstVNF_RAM_Server - CRS ) + FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( Min( MLU ,MUR ) + ( RCSe * MUM ) ) * Min( RRSe ,MLU ) )", "obj1": 0.7700729927007299, "obj2": 0.20847604237670808}, {"determining": "Max( Max( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ),( PN * ( ARS / ARS ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RRSe,( ( MUR / ( MUC * ( MUC / RRSe ) ) ) + CS ) ) ,( RRSe - ( RMSe * DS ) ) ) ,( RCSe * CS ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe * Max( Max( ( DS * RRSe ),MUM ),MUC ) ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.26973161532445183}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,Max( ( Max( ( PN * FirstVNF_RAM ),MDR ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe * Max( Max( ( DS * RRSe ),MUM ),MUC ) ) + Min( RMSe ,MUR ) ) - Max( Min( DS ,RRSe ),Max( ( CS * MUM ),( CS + MUM ) ) ) ) + Min( ( ( RCSe - DS ) + Min( RMSe ,Min( MLU ,RCSe ) ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.2730176253006978}, {"determining": "( ( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( ( PN - ( ( ( DDR * Const ) - Min( FirstVNF_Mem_Server ,CRS ) ) + BR ) ) - Max( FirstVNF_RAM_Server,( CRS * ( Min( MRS ,DDR ) + BR ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( MUR,( MLU - MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / MUC ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.49635036496350365, "obj2": 0.46345901495826136}, {"determining": "( Max( ( FirstVNF_RAM_Server - Const ),FirstVNF_CPU ) * ( CRS + ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,Max( DS,( RMSe + MLU ) ) ) ) ) * ( ( ( DS - CS ) * Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUC * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}], "7": [{"determining": "( ( PN - ( ( ( DDR * Const ) - Min( CRS ,FirstVNF_Mem_Server ) ) + ( BR + AMS ) ) ) - Max( FirstVNF_RAM_Server,( CRS * Min( Min( MRS ,DDR ) ,BR ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( Max( ( DS - MUC ),CS ) / MUR ),( MLU - MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + MLU ) ) * MUC ) ) ),( RMSe + ( ( RCSe / Min( RCSe ,DS ) ) * RRSe ) ) ) ,Max( Max( MUR,MLU ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Max( ( Max( CRS,BR ) * ( DDR + ACS ) ),( Max( Min( DDR ,PN ),ARS ) / Min( ARS ,FirstVNF_Mem ) ) ),( DDR / FirstVNF_CPU ) ) / AMS ) + ACS ) ,Min( Max( ( Min( FirstVNF_Mem ,Const ) - Const ),Max( FirstVNF_CPU,AMS ) ) ,BR ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( ( CS + Max( ( RCSe * Min( MUM ,RRSe ) ),( MLU * ( Max( Min( MUR ,MUC ),Min( RCSe ,RCSe ) ) / RRSe ) ) ) ),( MUR * ( DS / ( DS - Min( ( MUM / DS ) ,MUR ) ) ) ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6697930767527581}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / DDR ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) * ( AMS - FirstVNF_Mem ) ) - Min( AMS ,RRS ) )", "choosing": "( ( MLU * MUR ) * ( Min( MUR ,RCSe ) * Min( RRSe ,( ( DS - RRSe ) / Max( MUM,( ( MUM / CS ) / ( Max( CS,MUR ) + RCSe ) ) ) ) ) ) )", "obj1": 0.7408759124087592, "obj2": 0.248284690564145}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.5875912408759124, "obj2": 0.36265473779048973}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( ( Const * ACS ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM * RMSe ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Max( ( MLU - MLU ),( MUR / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6879562043795621, "obj2": 0.28002665139667277}, {"determining": "( ( FirstVNF_CPU - ACS ) - Min( ( CRS + ( Min( ( AMS / AMS ) ,RRS ) / PN ) ) ,( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( RCSe ,MUR ),( Min( MLU ,RRSe ) / Min( DS ,( ( ( Min( RRSe ,Max( MUC,MUC ) ) + MUC ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.10422471418779425}, {"determining": "Min( ( ACS / ( FirstVNF_Mem / CRS ) ) ,( ( ( FirstVNF_Mem_Server + AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUR * RRSe ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.5583941605839416, "obj2": 0.4069170047458051}, {"determining": "( Max( FirstVNF_RAM_Server,BR ) - ( FirstVNF_RAM / Const ) )", "choosing": "Max( MUC,( ( MUM / MUC ) + ( ( DS + ( ( ( MUM * RCSe ) * DS ) / MLU ) ) * MUM ) ) )", "obj1": 0.781021897810219, "obj2": 0.20475391490741715}, {"determining": "Max( Max( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ),( Max( Min( DDR ,PN ),ARS ) / Min( ARS ,FirstVNF_Mem ) ) ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / DS ) ,MUR ) ) ) ) ,Max( ( DS * ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) ),RMSe ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.4011901826952925}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Max( CRS,( ( DDR - RRS ) / PN ) ) )", "choosing": "Max( ( RCSe * MUR ),( MUR - Max( Min( MUM ,MUC ),( RRSe / ( MLU * ( CS / MLU ) ) ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.0361255405826285}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03788349222022115}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.28962283831804186}, {"determining": "( ( ( ( ( ACS / ( ( PN - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM ) ) + DDR ) * ( AMS + FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MUC * MUR ) * ( Min( DS ,Min( RCSe ,( ( RRSe + ( MUR + MUC ) ) / ( MUR / DS ) ) ) ) + RRSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3317858838280082}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 0.635036496350365, "obj2": 0.36179980847346277}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( PN - ( ( ( FirstVNF_CPU * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * ( ( ( CS / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6638111608618601}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( PN + ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( FirstVNF_Mem / ( Const * RRS ) ) + ( BR * PN ) ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Max( RCSe,( MLU / ( MLU * ( ( RRSe - Max( MUM,MUR ) ) / MUM ) ) ) ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - Min( Min( CS ,RMSe ) ,MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.7609489051094891, "obj2": 0.23904678674255894}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( MDR,ACS ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5077978082098495}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS - ACS ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RRSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( ( RCSe + ( ( Min( RMSe ,MUM ) / MUM ) + MUC ) ),MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687793}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( ( MRS - ARS ) - ( ( ( Min( Max( ACS,ACS ) ,( MDR * ACS ) ) * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) + ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( Min( ( RMSe * Max( ( RMSe / MUR ),MUC ) ) ,CS ) * Min( RRSe ,( Min( RRSe ,MUM ) / Max( MUM,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( ( ( FirstVNF_RAM_Server * ACS ) * FirstVNF_CPU_Server ) - ( FirstVNF_RAM / Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / FirstVNF_CPU ),AMS ) ) )", "choosing": "( Min( CS ,RRSe ) / ( ( ( ( DS * RCSe ) + RRSe ) * MUR ) / Max( RRSe,RRSe ) ) )", "obj1": 0.6405109489051095, "obj2": 0.35483728292480293}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - ARS ) ,Max( Max( Min( FirstVNF_Mem_Server ,MRS ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,( MUC * Min( ( MUM - MUC ) ,( RRSe / ( ( DS * MLU ) * CS ) ) ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( ( RMSe - ( MUR + RMSe ) ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) / ( Const - FirstVNF_RAM ) )", "choosing": "( Min( ( ( ( MUM - MUR ) + ( Min( Min( CS ,CS ) ,Max( MLU,Max( CS,RRSe ) ) ) * RCSe ) ) - CS ) ,MUR ) * ( MUM * RMSe ) )", "obj1": 0.7664233576642335, "obj2": 0.2114783121710649}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( AMS + FirstVNF_CPU ) / MRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / MUM ) * MUM ) - ( ( Max( CS,MLU ) * ( MUR - RCSe ) ) / ( DS * MLU ) ) ) * DS ) ,Min( ( RCSe * DS ) ,( ( CS - ( RRSe / RRSe ) ) + ( MUM / ( CS + RMSe ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ACS ) / Max( FirstVNF_RAM_Server,( DDR + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( ( RMSe + RRSe ) ,( MUR / MLU ) ),( Max( Max( RMSe,Max( CS,CS ) ),RRSe ) + MUC ) )", "obj1": 0.7937956204379562, "obj2": 0.15319585809259134}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / MRS ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) * Max( AMS,ARS ) )", "choosing": "Min( ( Min( RCSe ,MUR ) * Min( RRSe ,( Min( RRSe ,MUM ) / Max( MUM,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( Min( ( ( ARS - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Max( DDR,( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ) ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6204490111196758}, {"determining": "Max( FirstVNF_RAM_Server,( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( MRS ,( Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) * PN ) ) ) )", "choosing": "Max( Min( Max( ( MUC / RCSe ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( MUC + MUC ) + ( ( ( CS * RRSe ) / MUR ) * RRSe ) ) ) * MUC ) ) )", "obj1": 0.4343065693430657, "obj2": 0.585648535948431}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( Const + ( FirstVNF_RAM + MRS ) ) )", "choosing": "( ( DS * RCSe ) / ( MLU / ( ( ( CS - ( MLU + ( MLU * ( MLU * RRSe ) ) ) ) * ( CS / DS ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.8503649635036497, "obj2": 0.1111094910680227}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( ( RMSe - ( MUR + RMSe ) ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.8978102189781022, "obj2": 0.061631926461082995}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RMSe ) )", "obj1": 0.9945255474452555, "obj2": 0.003527899759412633}, {"determining": "( ( ( ( DDR * DDR ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) * ( MRS + FirstVNF_RAM ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( ( RCSe + Min( ( MUM / Max( Max( RRSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.7937956204379562, "obj2": 0.15319585809259134}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * Min( RMSe ,MLU ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / RRSe ) * MUR ) - ( Min( CS ,RMSe ) * MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.7609489051094891, "obj2": 0.23904678674255894}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( ( RMSe - ( MUR + RMSe ) ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.8978102189781022, "obj2": 0.061631926461082995}, {"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem_Server,AMS ) ) - ACS )", "choosing": "( ( RMSe / MUM ) - Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.8284671532846716, "obj2": 0.1252565871025104}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) - ( ( FirstVNF_RAM / ( Min( BR ,( FirstVNF_Mem_Server + Const ) ) + ( BR / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - ( Max( ( ( RCSe / MLU ) / Max( CS,( Max( MUM,Max( RMSe,RRSe ) ) * Min( RMSe ,( DS / CS ) ) ) ) ),( Max( DS,( RRSe * DS ) ) - Min( MUC ,RMSe ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUM ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.014782267966896839}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU + MUM ) / ( Min( RRSe ,CS ) * RMSe ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.7700729927007299, "obj2": 0.20847604237670808}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,Max( MLU,( RMSe * Max( MUM,Max( ( ( RRSe - RMSe ) - Min( DS ,Max( RMSe,RMSe ) ) ),MUM ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6143844335307892}, {"determining": "Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.12071039257139092}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - ( MUR + MUC ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) ),RMSe ),( DS / Max( MUC,RMSe ) ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6013603114955323}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( Min( RMSe ,( MLU * MUC ) ) * Max( Min( RRSe ,Min( MLU ,DS ) ),Min( ( ( MUM - MUM ) * CS ) ,MUC ) ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + DS ) - Max( ( DS * RRSe ),( CS + RRSe ) ) ) + Min( ( ( RCSe - DS ) + ( CS - RRSe ) ) ,( Max( MLU,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.13238001060398896}, {"determining": "Max( Max( ( BR + DDR ),Min( ( FirstVNF_CPU_Server * Max( ACS,CRS ) ) ,( Min( PN ,FirstVNF_CPU ) + ( FirstVNF_Mem + Max( ( ARS + ( FirstVNF_RAM / FirstVNF_RAM ) ),Const ) ) ) ) ),( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( DS ,( DS * Min( Max( ( MUC / ( MUM + ( RRSe - DS ) ) ),( MUM / RMSe ) ) ,MLU ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "( Min( ( Const * MRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * Max( DDR,DDR ) ) ) * ( ( ( ( FirstVNF_Mem / Const ) * ACS ) / Min( AMS ,RRS ) ) * Max( Min( ACS ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + Max( MLU,( ( MLU - RRSe ) + Max( MUR,RRSe ) ) ) ) ) / DS ) ) * ( Max( MUM,RCSe ) / Min( Max( ( ( MUM + CS ) + Min( Max( ( RRSe - MUR ),MUR ) ,( Min( RCSe ,RCSe ) - Max( MUC,RMSe ) ) ) ),RRSe ) ,MUM ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6076022354383709}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.833941605839416, "obj2": 0.12071039257139092}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.8412408759124088, "obj2": 0.11267837676623921}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5899570581323365}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "Min( ( ( FirstVNF_Mem / AMS ) + ACS ) ,Min( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU / AMS ) ) ,BR ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / DS ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "Max( ( ( ACS / Min( ( PN / RRS ) ,CRS ) ) - FirstVNF_CPU_Server ),( BR / FirstVNF_CPU ) )", "choosing": "( ( MUC - CS ) - ( MUM / DS ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.1120516586403426}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8503649635036497, "obj2": 0.1111094910680227}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RMSe ) )", "obj1": 0.9945255474452555, "obj2": 0.003527899759412633}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( RRSe * DS ) / RMSe ) - Min( CS ,MUM ) ) ,( ( ( MUR / RRSe ) + DS ) / ( MUC * Min( RMSe ,MLU ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * ( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5899570581323365}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( PN + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( Min( MUM ,RCSe ) / MUC ) + ( ( CS + RMSe ) * Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.8266423357664233, "obj2": 0.126534713859917}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RCSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6013603114955323}, {"determining": "( Min( ( ( ARS - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Max( DDR,DDR ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6076022354383709}, {"determining": "( Max( ( ( Min( FirstVNF_Mem ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),( MRS - MRS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( MLU * MUR ) * ( RMSe * MUM ) )", "obj1": 0.7664233576642335, "obj2": 0.2114783121710649}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,MUM ) + ( CS * RCSe ) ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6143844335307892}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "Max( Max( Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ),Min( ( BR / AMS ) ,( ARS + FirstVNF_RAM_Server ) ) ),( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( MUR * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( Min( DDR ,PN ),ARS ) / Min( ARS ,FirstVNF_Mem ) ) ),( DDR / FirstVNF_CPU ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / DS ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "( Max( AMS,Max( FirstVNF_Mem,MDR ) ) - ACS )", "choosing": "( ( MUM / RMSe ) - ( Max( MUM,RCSe ) * MUM ) )", "obj1": 0.8175182481751825, "obj2": 0.13680899307116542}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( BR,FirstVNF_RAM_Server ) ),AMS ),( FirstVNF_CPU_Server / ( PN + AMS ) ) ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * Min( ( DS - ( Max( ( MUR - ( MUR / MUR ) ),DS ) / CS ) ) ,MUC ) ) ,( ( ( MUR / MLU ) + MUC ) - ( MUR + MLU ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4836084411233649}, {"determining": "( ( ( ACS * Max( FirstVNF_CPU_Server,( BR - ACS ) ) ) + ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( PN - RRS ) ) ) * AMS ) ) - Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( MUM * ( Max( Max( ( Min( RRSe ,Max( RRSe,DS ) ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM * RRSe ) + MUR ) ) * ( ( ( RMSe / RCSe ) + MUR ) + MLU ) )", "obj1": 0.635036496350365, "obj2": 0.36179980847346277}, {"determining": "( Max( ( FirstVNF_RAM_Server - Const ),FirstVNF_CPU ) * ( CRS + ( FirstVNF_CPU_Server * Min( Min( ( FirstVNF_CPU - MRS ) ,Max( RRS,Min( MDR ,CRS ) ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MUC,Max( MUM,Max( RRSe,( Min( DS ,RCSe ) / RCSe ) ) ) ) * ( ( ( DS - CS ) + Min( ( ( ( MLU * MUR ) * RMSe ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( MUC * DS ) )", "obj1": 0.4854014598540146, "obj2": 0.4836084411233649}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + DS ) * ( CS - RMSe ) ) * Min( Max( MUM,RRSe ) ,Min( ( ( MUM + ( ( Min( RRSe ,MUR ) * ( DS / DS ) ) * Max( ( MLU + RMSe ),RRSe ) ) ) * Max( Min( RCSe ,Max( RMSe,RRSe ) ),MLU ) ) ,RMSe ) ) )", "obj1": 0.9708029197080292, "obj2": 0.015612740109357096}, {"determining": "( Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ),( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server * BR ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 0.7700729927007299, "obj2": 0.20847604237670808}, {"determining": "Max( ( Max( ( PN * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( MDR,ACS ) ) ) )", "choosing": "( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - ( MUR + MUC ) )", "obj1": 0.4251824817518248, "obj2": 0.5936385433020828}, {"determining": "( ( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ACS )", "choosing": "( Max( MUC,RRSe ) + ( RCSe + RCSe ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU_Server * RRS ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( MLU / MUM ) - ( ( Max( MLU,MUM ) + ( CS * RCSe ) ) - Max( ( MUC * ( MUM - MUR ) ),RCSe ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13481292966587513}, {"determining": "( ( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "Max( ( PN - MRS ),( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / CRS ) + Min( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( ( Const + BR ) / FirstVNF_CPU_Server ) ) / MRS ) ,( ACS / AMS ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( Max( RCSe,MUR ),Min( ( ( ( RRSe * RCSe ) / MUC ) / ( ( MUR + ( DS * ( MLU * MUR ) ) ) / RCSe ) ) ,( ( Min( MUC ,Max( CS,( MUM * RRSe ) ) ) / RCSe ) / ( Min( MUM ,MLU ) + MLU ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.46345901495826136}, {"determining": "Max( Max( Min( ( BR / AMS ) ,Min( AMS ,MDR ) ),Min( ( DDR - DDR ) ,( FirstVNF_Mem - BR ) ) ),( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) + Min( ( FirstVNF_CPU_Server - AMS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "Min( Min( ( RCSe / ( ( Max( ( RCSe + Min( MUC ,RRSe ) ),MUR ) + ( DS / DS ) ) - CS ) ) ,MUC ) ,( MUR * DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM + FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM + ( AMS / CRS ) ),( MRS - ( ARS + RRS ) ) ) ) * ( Max( ( FirstVNF_RAM_Server - Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM_Server ) + ( MDR - MDR ) ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( ( DS / MLU ) * Min( MLU ,RRSe ) )", "obj1": 0.7682481751824818, "obj2": 0.20941820994902793}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13481292966587513}], "8": [{"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( RMSe - CS ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ( DDR * Const ) - Min( CRS ,FirstVNF_Mem_Server ) ) + ( BR + AMS ) ) ) - Max( FirstVNF_RAM_Server,( CRS * Min( Min( MRS ,DDR ) ,BR ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( Max( ( DS - MUC ),CS ) / MUR ),( MLU - MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( RRSe * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.19680682319792003}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.7135036496350365, "obj2": 0.26006069736718956}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / DDR ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) * ( AMS - FirstVNF_Mem ) ) - Min( AMS ,RRS ) )", "choosing": "( ( MLU * MUR ) * ( Min( MUR ,RCSe ) * Min( RRSe ,( ( DS - RRSe ) / Max( MUM,( ( MUM / CS ) / ( Max( CS,MUR ) + RCSe ) ) ) ) ) ) )", "obj1": 0.7408759124087592, "obj2": 0.248284690564145}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * BR ) ) + MDR ) * FirstVNF_CPU ) - ( ( RRS + FirstVNF_CPU_Server ) - CRS ) ) + BR ) ) - ( ( ARS * ACS ) * ( ( ( CRS / ( ( DDR * ( FirstVNF_RAM * MRS ) ) - MRS ) ) + MRS ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,DS ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( Max( RCSe,RMSe ) - CS ) / ( Max( RCSe,Min( ( ( ( MUR / MUC ) * RRSe ) * ( MLU + Max( RRSe,MUR ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( Max( RCSe,MUR ),Min( ( ( ( RRSe * RCSe ) / MUC ) / ( ( MUR + ( DS * ( MLU * MUR ) ) ) / RCSe ) ) ,( ( Min( MUC ,Max( CS,( MUM * RRSe ) ) ) / RCSe ) / ( Min( MUM ,MLU ) + MLU ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,Max( MLU,( RMSe * Max( MUM,Max( RCSe,MUM ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6186131386861314, "obj2": 0.3539311083913313}, {"determining": "( ( Const * ACS ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM * RMSe ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Max( ( MLU - MLU ),( MUR / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6879562043795621, "obj2": 0.28002665139667277}, {"determining": "Min( ( ACS / ( FirstVNF_Mem / CRS ) ) ,( ( ( FirstVNF_Mem_Server + AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUR * RRSe ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.5583941605839416, "obj2": 0.4069170047458051}, {"determining": "( ( FirstVNF_CPU - ACS ) - Min( ( CRS + ( Min( ( AMS / AMS ) ,RRS ) / PN ) ) ,( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( RCSe ,MUR ),( Min( MLU ,RRSe ) / Min( DS ,( ( ( Min( RRSe ,Max( MUC,MUC ) ) + MUC ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.10422471418779425}, {"determining": "Min( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ),( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03211930080927554}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( FirstVNF_RAM_Server * MDR ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe / RCSe ) ) ) + MUR ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03381408641775559}, {"determining": "( ( ( ( ( ACS / ( ( PN - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM ) ) + DDR ) * ( AMS + FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MUC * MUR ) * ( Min( DS ,Min( RCSe ,( ( RRSe + ( MUR + MUC ) ) / ( MUR / DS ) ) ) ) + RRSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3317858838280082}, {"determining": "( Min( ( ( Const - RRS ) * ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.36265473779048973}, {"determining": "( ( RRS - FirstVNF_RAM ) * ( CRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( MUC,Max( RCSe,Max( RRSe,( Min( DS ,RCSe ) / RCSe ) ) ) ) * ( ( ( DS - CS ) + Min( ( ( ( RRSe + RCSe ) - Max( RRSe,RMSe ) ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( ( MUM / Max( RCSe,MUC ) ) * DS ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "Min( ( ACS / MDR ) ,( Min( ( MRS / ARS ) ,ARS ) * ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( DS / MLU ) * MUR ) - ( Min( CS ,RMSe ) / MLU ) ) * ( ( RCSe - ( MUR / CS ) ) - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.6751824817518248, "obj2": 0.2918598272833204}, {"determining": "Min( ( ( Min( Const ,FirstVNF_RAM_Server ) / CRS ) + AMS ) ,( ( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_Mem_Server,AMS ) ) * ( Min( FirstVNF_RAM ,PN ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( RCSe - MUM ) ) + MLU ) ) ,( RRSe / ( ( ( CS + CS ) - ( RCSe - MUC ) ) + ( ( ( CS + MLU ) + DS ) + Max( RRSe,Min( MUC ,Min( ( RMSe - CS ) ,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "( Min( ( ( ARS - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Max( DDR,( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_RAM + AMS ) ) + Max( Min( BR ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,AMS ) ) ) ) ) ) * ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,PN ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( MUR,RRSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6204490111196758}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( ( RMSe - ( MUR + RMSe ) ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( PN + BR ) ),AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC - RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( Max( CS,MLU ) - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6058394160583942, "obj2": 0.35787544576836505}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( DDR + ACS ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - ( CRS * FirstVNF_Mem_Server ) ) ) + BR ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( DDR + ACS ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * ( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( Max( ( ( MUM - MUR ) + Min( MUR ,MUR ) ),DS ) + ( RMSe * RRSe ) ) ) ) ) / Max( ( ( RCSe / CS ) / ( ( CS + DS ) * DS ) ),( Max( DS,DS ) - Max( MUC,RMSe ) ) ) )", "obj1": 0.7956204379562044, "obj2": 0.150449716286979}, {"determining": "( ( ( DDR + ( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) ) ) * ( AMS - FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.6423357664233577, "obj2": 0.3317858838280082}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) * ( ( DS + ( ( RRSe + RRSe ) + MLU ) ) * MUM ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5203972776704283}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "Max( ( ( ( ACS + AMS ) - ( MDR - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem / Const ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( RCSe * DS ) ,( ( RMSe - MUC ) + ( MUM * ( CS + DS ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.594075426060347}, {"determining": "( ( ( ( FirstVNF_CPU_Server * DDR ) * FirstVNF_CPU_Server ) * Const ) - ( ( DDR + FirstVNF_Mem_Server ) + ( AMS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( Max( ( RMSe * DS ),( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Min( RMSe ,CS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.10422471418779425}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - ARS ) ,Max( Max( Min( FirstVNF_Mem_Server ,MRS ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,( MUC * Min( ( MUM - MUC ) ,( RRSe / ( ( DS * MLU ) * CS ) ) ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM - DDR ) + ( ARS + ( DDR + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( RRSe / ( DS / MUR ) ) ),RCSe ),( ( RRSe * CS ) + RRSe ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "( ( ( ( MRS - ARS ) - ( ( ( Min( Max( ACS,ACS ) ,( MDR * ACS ) ) * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) + ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( Min( ( RMSe * Max( ( RMSe / MUR ),MUC ) ) ,CS ) * Min( RRSe ,( Min( RRSe ,MUM ) / Max( MUM,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.5875912408759124, "obj2": 0.36265473779048973}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,Max( FirstVNF_CPU,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_CPU ) + Max( MRS,ACS ) ) )", "choosing": "( Max( MLU,Min( Min( RMSe ,DS ) ,MUC ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( BR * Max( BR,CRS ) ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * RCSe )", "obj1": 0.8978102189781022, "obj2": 0.06163192646108299}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) / Min( ( Const * Max( ARS,BR ) ) ,MRS ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( Max( Min( MUM ,CS ),RRSe ) / ( ( DS + MLU ) / RRSe ) ) ) ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.10825158383589627}, {"determining": "Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "( ( ( ( Max( ACS,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_RAM_Server * AMS ),( BR / MRS ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( CRS ,Const ) / BR ) * ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUR,MLU ) * ( RRSe + RMSe ) )", "obj1": 0.7408759124087592, "obj2": 0.248284690564145}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03788349222022115}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5077978082098495}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( AMS + FirstVNF_CPU ) / MRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / MUM ) * MUM ) - ( ( Max( CS,MLU ) * ( MUR - RCSe ) ) / ( DS * MLU ) ) ) * DS ) ,Min( ( RCSe * DS ) ,( ( CS - ( RRSe / RRSe ) ) + ( MUM / ( CS + RMSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.594075426060347}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( ( CRS - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + RMSe ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( CS / RCSe ) / Max( CS,MUM ) ),( ( ( CS - MUR ) - RRSe ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.5583941605839416, "obj2": 0.4069170047458051}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( MDR,ACS ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5077978082098495}, {"determining": "Max( FirstVNF_RAM_Server,( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( MRS ,( Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( AMS * FirstVNF_CPU ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) * PN ) ) ) )", "choosing": "Max( Min( Max( ( MUC + RCSe ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( MUC + MUC ) + ( RMSe * RRSe ) ) ) * MUC ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5735930586889778}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RMSe ) )", "obj1": 0.9945255474452555, "obj2": 0.003527899759412633}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( AMS + FirstVNF_CPU ) / MRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / MUM ) * MUM ) - ( ( Max( CS,MLU ) * ( MUR - RCSe ) ) / ( DS * MLU ) ) ) * DS ) ,Min( ( RCSe * DS ) ,( ( CS - ( RRSe / RRSe ) ) + ( MUM / ( CS + RMSe ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( Max( FirstVNF_Mem_Server,DDR ),ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( RMSe / MUM ) - Min( MUM ,( ( MLU / RCSe ) / Max( Max( RMSe,MLU ),RRSe ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5759988536409336}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.28962283831804186}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU * ( ( RMSe - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( Min( ( CS - ( ( MUM * ( MUC - ( RRSe - MUM ) ) ) + Min( MUM ,( Min( RMSe ,Min( MLU ,MUC ) ) * RCSe ) ) ) ) ,( MUC * Max( RRSe,RMSe ) ) ) - Min( ( ( RRSe * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Min( Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Max( ( Const / ARS ),( ARS * FirstVNF_CPU_Server ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,Max( Max( MUR,Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) ) ),( RCSe / Max( CS,( ( ( MLU / MUR ) / Min( MLU ,RCSe ) ) / MUM ) ) ) ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03788349222022115}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU + MUM ) / ( Min( RRSe ,CS ) * RMSe ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.8412408759124088, "obj2": 0.11267837676623921}, {"determining": "( ( PN - ( ( Min( ARS ,RRS ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( Min( RCSe ,( ( MLU - ( CS - RRSe ) ) + Min( ( RCSe - MUC ) ,MUR ) ) ) / DS ) - ( CS - MUC ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687793}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( Min( RMSe ,( MLU * MUC ) ) * Max( Min( RRSe ,Min( MLU ,DS ) ),Min( ( ( MUM - MUM ) * CS ) ,MUC ) ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,MUR ) ,DS ) )", "obj1": 0.8211678832116789, "obj2": 0.1321812207990867}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS - ACS ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RRSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( ( RCSe + ( ( Min( RMSe ,MUM ) / MUM ) + MUC ) ),MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687793}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),( ( FirstVNF_CPU_Server * MDR ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - ( MUC - MUC ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * Min( RMSe ,MLU ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "Max( Max( FirstVNF_CPU_Server,AMS ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,Min( Max( MDR,ACS ) ,( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Max( RMSe,( ( MUC - ( MUR + ( Max( RCSe,DS ) - CS ) ) ) - MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "Min( ( ( FirstVNF_Mem / AMS ) + ACS ) ,Min( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU / AMS ) ) ,BR ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / DS ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( Const + ( FirstVNF_RAM + MRS ) ) )", "choosing": "( ( DS * RCSe ) / ( MLU / ( ( ( CS - ( MLU + ( MLU * ( MLU * RRSe ) ) ) ) * ( CS / DS ) ) * Min( ( MUM - RRSe ) ,Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),( DDR / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - ( MUC - CS ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.1120516586403426}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "( ( Max( FirstVNF_RAM,Const ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) * ( ( Min( Max( ( MUM - ( ( MUR + RRSe ) * MUM ) ),Min( Max( RMSe,( MUC - DS ) ) ,RCSe ) ) ,MUM ) * MLU ) / RMSe ) )", "obj1": 0.9945255474452555, "obj2": 0.003527899759412633}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.28962283831804186}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( PN + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( Min( MUM ,RCSe ) / MUC ) + ( ( CS + RMSe ) * Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.8266423357664233, "obj2": 0.126534713859917}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( DDR / RRS ) + ( MRS - RRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "Max( ( AMS - FirstVNF_CPU_Server ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,CS ) * RMSe ) - ( MUC - CS ) )", "obj1": 0.49452554744525545, "obj2": 0.46581520181472263}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * Min( RMSe ,MLU ) ) ) )", "obj1": 0.8302919708029197, "obj2": 0.1234594056790806}, {"determining": "Min( ( ( FirstVNF_Mem / AMS ) + ACS ) ,Min( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU / AMS ) ) ,BR ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( DS - Min( ( MUM / DS ) ,MUR ) ) ) ) ,MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1361831608277203}, {"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem_Server,AMS ) ) - ACS )", "choosing": "( ( RMSe / MUM ) - Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.8284671532846716, "obj2": 0.1252565871025104}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( BR,FirstVNF_RAM_Server ) ),AMS ),( FirstVNF_CPU_Server / ( PN + AMS ) ) ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * Min( ( DS - ( Max( ( MUR - ( MUR / MUR ) ),DS ) / CS ) ) ,MUC ) ) ,( ( ( MUR / MLU ) + MUC ) - ( MUR + MLU ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4836084411233649}, {"determining": "( ( ( ACS * Max( FirstVNF_CPU_Server,( BR - ACS ) ) ) + ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( PN - RRS ) ) ) * AMS ) ) - Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( MUM * ( Max( Max( ( Min( RRSe ,Max( RRSe,DS ) ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM / ( Min( AMS ,BR ) + ( BR / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.014782267966896839}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) - ( ( FirstVNF_RAM / ( Min( BR ,( FirstVNF_Mem_Server + Const ) ) + ( BR / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUM ) - ( Max( ( ( RCSe / MLU ) / Max( CS,( Max( MUM,Max( RMSe,RRSe ) ) * Min( RMSe ,( DS / CS ) ) ) ) ),( Max( DS,( RRSe * DS ) ) - Min( MUC ,RMSe ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUM ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.014782267966896839}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( ( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,PN ) * BR ) / PN ) * ACS ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * ( RCSe * MLU ) ) ,( ( ( MUR / RCSe ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12197137997702974}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,( Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,BR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) * Max( FirstVNF_CPU_Server,( BR - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * ( RCSe * MLU ) ) ,( ( ( MUR / MLU ) + DS ) - ( Min( ( CS / MUC ) ,( MLU * DS ) ) / MLU ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4836084411233649}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.12071039257139092}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / CRS ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,( ( MUM * RRSe ) / ( ( DS * MLU ) / RRSe ) ) ) ),( ( MUM / MUC ) + ( ( DS + RMSe ) * MUM ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( MDR * PN ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,( ( MUM / MUC ) + ( ( DS + ( ( RRSe + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.12071039257139092}, {"determining": "( ( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( Min( RCSe ,CS ) * ( RCSe * MLU ) ) ,( ( ( MUR / RCSe ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) ) )", "obj1": 0.8503649635036497, "obj2": 0.1111094910680227}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.8503649635036497, "obj2": 0.1111094910680227}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ACS ) / Max( FirstVNF_RAM_Server,( DDR + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( ( RMSe + RRSe ) ,( MUR / MLU ) ),( Max( Max( RMSe,Max( CS,CS ) ),RRSe ) + MUC ) )", "obj1": 0.7937956204379562, "obj2": 0.15319585809259134}], "9": [{"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( ( ( ( FirstVNF_CPU_Server * DDR ) * FirstVNF_CPU_Server ) * Const ) - ( ( DDR + FirstVNF_Mem_Server ) + ( AMS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( Max( ( RMSe * DS ),( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Min( RMSe ,CS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( RMSe - CS ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_Mem_Server,MDR ) ) + ( PN * BR ) ),( ARS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( DS - RRSe ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( ( AMS + Const ) - ( ( CRS + FirstVNF_CPU ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + Min( MUM ,RRSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( ( RMSe - ( MLU + MUR ) ) - Max( DS,CS ) ) / Max( CS,MUM ) ),( Max( MUM,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8813868613138686, "obj2": 0.09374556045041313}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "( ( Const * ACS ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM * RMSe ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Max( ( MLU - MLU ),( MUR / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6879562043795621, "obj2": 0.28002665139667277}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * BR ) ) + MDR ) * FirstVNF_CPU ) - ( ( RRS + FirstVNF_CPU_Server ) - CRS ) ) + BR ) ) - ( ( ARS * ACS ) * ( ( ( CRS / ( ( DDR * ( FirstVNF_RAM * MRS ) ) - MRS ) ) + MRS ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,DS ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( Max( RCSe,RMSe ) - CS ) / ( Max( RCSe,Min( ( ( ( MUR / MUC ) * RRSe ) * ( MLU + Max( RRSe,MUR ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),FirstVNF_Mem ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Max( MUC,CS ),RCSe ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.7427007299270073, "obj2": 0.22406551982879824}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( RRSe * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.19680682319792003}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6751824817518248, "obj2": 0.2890216944591213}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM,( BR / DDR ) ) + FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) * ( AMS - FirstVNF_Mem ) ) - Min( AMS ,RRS ) )", "choosing": "( ( MLU * MUR ) * ( Min( MUR ,RCSe ) * Min( RRSe ,( ( DS - RRSe ) / Max( MUM,( ( MUM / CS ) / ( Max( CS,MUR ) + RCSe ) ) ) ) ) ) )", "obj1": 0.7408759124087592, "obj2": 0.248284690564145}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + BR ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ) * DS ) - Max( CS,MLU ) ) ,( ( DS + RRSe ) + ( MLU - MLU ) ) ) )", "obj1": 0.7135036496350365, "obj2": 0.26006069736718956}, {"determining": "( Max( FirstVNF_CPU_Server,( MDR - ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( PN ,Min( FirstVNF_RAM_Server ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * PN ) ) ) ) ) ) ) - ( AMS * ACS ) )", "choosing": "( MUR - ( RMSe / ( ( RRSe / DS ) * ( DS + Min( ( MUR / RRSe ) ,MUR ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( ( ( ( ( ACS / ( ( PN - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM ) ) + DDR ) * ( AMS + FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MUC * MUR ) * ( Min( DS ,Min( RCSe ,( ( RRSe + ( MUR + MUC ) ) / ( MUR / DS ) ) ) ) + RRSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3317858838280082}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( RRS * FirstVNF_CPU ) + FirstVNF_Mem ) )", "choosing": "( ( RMSe / DS ) - Max( Min( RCSe ,CS ),MUC ) )", "obj1": 0.5875912408759124, "obj2": 0.36265473779048973}, {"determining": "Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( RRSe * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.19680682319792003}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Min( ( ACS / ( FirstVNF_Mem / CRS ) ) ,( ( ( FirstVNF_Mem_Server + AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUR * RRSe ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.5583941605839416, "obj2": 0.4069170047458051}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Max( FirstVNF_RAM_Server,PN ) ,PN ) * DDR ) / PN ) * ACS ) ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * MUC ) ) ) ) ) + DS ) ) )", "obj1": 0.8558394160583942, "obj2": 0.1038920588561282}, {"determining": "Min( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ),( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03211930080927554}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5164233576642335, "obj2": 0.42782434811913017}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( Max( ( ( PN + FirstVNF_RAM ) * ACS ),CRS ) * FirstVNF_CPU_Server ) ) * ( Min( AMS ,FirstVNF_RAM ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Max( RMSe,RRSe ) * ( Min( MUM ,Max( RMSe,RMSe ) ) + MUR ) ) )", "obj1": 0.6587591240875912, "obj2": 0.30645931843353047}, {"determining": "( ( RRS - FirstVNF_RAM ) * ( CRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( MUC,Max( RCSe,Max( RRSe,( Min( DS ,RCSe ) / RCSe ) ) ) ) * ( ( ( DS - CS ) + Min( ( ( ( RRSe + RCSe ) - Max( RRSe,RMSe ) ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( ( MUM / Max( RCSe,MUC ) ) * DS ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.7135036496350365, "obj2": 0.26006069736718956}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR - MDR ) ) * FirstVNF_Mem ),( ( Max( ACS,CRS ) + FirstVNF_CPU_Server ) * ( Max( MDR,( ( CRS / Const ) / BR ) ) + Min( MRS ,AMS ) ) ) )", "choosing": "Min( ( ( MLU - RRSe ) * DS ) ,( ( RCSe * RMSe ) * ( ( MUM * ( DS + DS ) ) + ( RMSe * ( RMSe * RMSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "( ( ( DDR + ( ( ACS / MDR ) / ( Const - FirstVNF_RAM ) ) ) * ( AMS - FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.6423357664233577, "obj2": 0.3317858838280082}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6186131386861314, "obj2": 0.3539311083913313}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "( Min( ( ( Const - RRS ) * ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.36265473779048973}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6186131386861314, "obj2": 0.3539311083913313}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / MUM ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03381408641775559}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( ( RMSe - ( MUR + RMSe ) ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,MUR ) ,DS ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( ( MUR / RCSe ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( ( DS + RMSe ) + CS ),RCSe ) ,RRSe ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301133}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( AMS + FirstVNF_CPU ) / MRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / MUM ) * MUM ) - ( ( Max( CS,MLU ) * ( MUR - RCSe ) ) / ( DS * MLU ) ) ) * DS ) ,Min( ( RCSe * DS ) ,( ( CS - ( RRSe / RRSe ) ) + ( MUM / ( CS + RMSe ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,Max( MLU,MUR ) ) + MUR ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.7956204379562044, "obj2": 0.150449716286979}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( PN + BR ) ),AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC - RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( Max( CS,MLU ) - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6058394160583942, "obj2": 0.35787544576836505}, {"determining": "( ( AMS - ( PN - Min( FirstVNF_RAM ,DDR ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( ( RCSe * CS ) / ( Min( RMSe ,CS ) - RRSe ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( Min( ( FirstVNF_CPU_Server + Max( Max( Const,ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - Const ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ,( ACS / MDR ) ) / Max( PN,AMS ) )", "choosing": "( ( ( RCSe + CS ) + Max( Max( ( DS + CS ),RMSe ),Max( ( Max( CS,RRSe ) + ( RRSe + MLU ) ),( Min( CS ,Max( MLU,( MUR - RCSe ) ) ) - MLU ) ) ) ) / Min( ( MUM + RCSe ) ,Max( CS,RRSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5042849641040327}, {"determining": "Min( ( ( FirstVNF_Mem / AMS ) + ACS ) ,Min( Min( CRS ,( BR * MRS ) ) ,BR ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( MUC - CS ) ) ) ,MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.45901499633663795}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_CPU_Server ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS * MUC ) - Max( CS,DS ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9233576642335767, "obj2": 0.03561865899666781}, {"determining": "Max( ( ( ( AMS * ACS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + ( MLU * MUR ) ) ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46881502334957986}, {"determining": "( Min( ( ( Const - RRS ) * ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( PN * ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( MLU / DS ) * MUR ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5602189781021898, "obj2": 0.40369060098133447}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM - DDR ) + ( ARS + ( DDR + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( RRSe / ( DS / MUR ) ) ),RCSe ),( ( RRSe * CS ) + RRSe ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( Max( MDR,ACS ) + ( ( CRS - ( ( AMS / CRS ) * AMS ) ) + FirstVNF_CPU ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,( ( RMSe * MUC ) + ( MUM * ( CS + DS ) ) ) ) ,DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4654129581498669}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RMSe ) )", "obj1": 0.9945255474452555, "obj2": 0.003527899759412633}, {"determining": "Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,Max( MLU,( RMSe * Max( MUM,Max( RCSe,MUM ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.6058394160583942, "obj2": 0.35787544576836505}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( Max( RCSe,MUR ),Min( ( ( ( RRSe * RCSe ) / MUC ) / ( ( MUR + ( DS * ( MLU * MUR ) ) ) / RCSe ) ) ,( ( Min( MUC ,Max( CS,( MUM * RRSe ) ) ) / RCSe ) / ( Min( MUM ,MLU ) + MLU ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "Min( ( BR / FirstVNF_RAM ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + ( FirstVNF_CPU + MRS ) ) ) )", "choosing": "( ( CS * DS ) * ( MUM * ( MUR * MUC ) ) )", "obj1": 0.5583941605839416, "obj2": 0.4069170047458051}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( PN * ( ( RRS + ARS ) / Max( FirstVNF_Mem,MDR ) ) ) ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( Min( ( RMSe + RCSe ) ,Max( MLU,( RRSe / DS ) ) ) * Max( Min( MUM ,MUM ),CS ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5203972776704283}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Max( FirstVNF_RAM_Server,( Min( ( FirstVNF_CPU * ARS ) ,( RRS - ARS ) ) + Min( MRS ,( Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( AMS * FirstVNF_CPU ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) * PN ) ) ) )", "choosing": "Max( Min( Max( ( MUC + RCSe ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) + ( ( DS + ( ( MUC + MUC ) + ( RMSe * RRSe ) ) ) * MUC ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5735930586889778}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( MUR - MUM ) ) + MLU ) ) ,( RRSe / MUC ) )", "obj1": 0.8412408759124088, "obj2": 0.11267837676623921}, {"determining": "Min( ( ( Min( Const ,FirstVNF_RAM_Server ) / CRS ) + AMS ) ,( ( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_Mem_Server,AMS ) ) * ( Min( FirstVNF_RAM ,PN ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUM ,( ( ( MUM / Max( RCSe,MUC ) ) + ( RCSe - MUM ) ) + MLU ) ) ,( RRSe / ( ( ( CS + CS ) - ( RCSe - MUC ) ) + ( ( ( CS + MLU ) + DS ) + Max( RRSe,Min( MUC ,Min( ( RMSe - CS ) ,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.308170362920958}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( FirstVNF_RAM_Server * MDR ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe / RCSe ) ) ) + MUR ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03381408641775559}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,MUR ) ,DS ) )", "obj1": 0.8211678832116789, "obj2": 0.1321812207990867}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( DDR + ACS ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - ( CRS * FirstVNF_Mem_Server ) ) ) + BR ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( DDR + ACS ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * ( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( Max( ( ( MUM - MUR ) + Min( MUR ,MUR ) ),DS ) + ( RMSe * RRSe ) ) ) ) ) / Max( ( ( RCSe / CS ) / ( ( CS + DS ) * DS ) ),( Max( DS,DS ) - Max( MUC,RMSe ) ) ) )", "obj1": 0.7956204379562044, "obj2": 0.150449716286979}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( ( BR / ( CRS * Const ) ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( Min( RCSe ,( Max( CS,Max( RMSe,( DS + MUM ) ) ) + MLU ) ) * Min( RRSe ,( Min( RRSe ,MUM ) / Min( MUM ,Max( ( MUM / CS ),( Max( CS,MUR ) + RCSe ) ) ) ) ) ) )", "obj1": 0.7408759124087592, "obj2": 0.248284690564145}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( AMS,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Min( Min( MRS ,AMS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MLU - CS ) / ( ( ( Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) / Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU + MUM ) / ( Min( RRSe ,CS ) * RMSe ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - ARS ) ,Max( Max( Min( FirstVNF_Mem_Server ,MRS ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,( MUC * Min( ( MUM - MUC ) ,( RRSe / ( ( DS * MLU ) * CS ) ) ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( Max( FirstVNF_Mem_Server,DDR ),ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( RMSe / MUM ) - Min( MUM ,( ( MLU / RCSe ) / Max( Max( RMSe,MLU ),( Min( CS ,RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5759988536409336}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03788349222022115}, {"determining": "Max( FirstVNF_RAM_Server,Min( RRS ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) * ( ( DS + ( ( RCSe / CS ) / Max( CS,MUM ) ) ) * MUM ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5147217284916918}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,CRS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe / RCSe ) ) ) + MUR ) + MLU ) * RRSe ) / ( MUR * DS ) ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1360222179485002}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ( FirstVNF_CPU - MRS ) + CRS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5156536645983216}, {"determining": "( ( ( ACS * Max( FirstVNF_CPU_Server,( BR - ACS ) ) ) + ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( PN - RRS ) ) ) * AMS ) ) - Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( MUM * ( Max( Max( ( Min( RRSe ,Max( RRSe,DS ) ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12946504363695516}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) * ( ( DS + ( ( RRSe + RRSe ) + MLU ) ) * MUM ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5077978082098495}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / MRS ) ,Max( Max( FirstVNF_CPU_Server,CRS ),Max( ( ( FirstVNF_Mem - RRS ) + Const ),AMS ) ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( MUR,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - ( RCSe - MLU ) ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,Max( FirstVNF_CPU,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_CPU ) + Max( MRS,ACS ) ) )", "choosing": "( Max( MLU,Min( Min( RMSe ,DS ) ,MUC ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( Min( RRSe ,CS ) * RMSe ) - ( MUC - CS ) )", "obj1": 0.8503649635036497, "obj2": 0.11056307678980516}, {"determining": "Max( Max( FirstVNF_CPU_Server,AMS ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,Min( Max( MDR,ACS ) ,( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Max( RMSe,( ( MUC - ( MUR + ( Max( RCSe,DS ) - CS ) ) ) - MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "( ( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.1120516586403426}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03788349222022115}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( ARS - AMS ) / FirstVNF_CPU_Server ) - ( CRS + FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem * BR ) ) ) )", "choosing": "( ( RCSe * ( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( Min( RMSe ,CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) ) / Max( ( ( MUM + MUC ) - RMSe ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7901459854014599, "obj2": 0.15692086419286683}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( Max( CRS,( FirstVNF_RAM / Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) - Const ) / BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MLU ) * ( ( Min( ( DS * Min( Max( Min( DS ,DS ),MUM ) ,RMSe ) ) ,MLU ) * MLU ) / RMSe ) )", "obj1": 0.9945255474452555, "obj2": 0.003527899759412633}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) / Min( ( Const * Max( ARS,BR ) ) ,MRS ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( Max( Min( MUM ,CS ),RRSe ) / ( ( DS + MLU ) / RRSe ) ) ) ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.10825158383589627}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * Min( RMSe ,MLU ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( PN + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( MUR,MLU ) ),( ( Min( MUM ,RCSe ) / MUC ) + ( ( CS + RMSe ) * Max( MUR,( ( DS * RCSe ) / ( ( DS * MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.8266423357664233, "obj2": 0.126534713859917}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * ( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,Max( RCSe,( ( RRSe / MLU ) + ( RRSe / RCSe ) ) ) ) ) ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7937956204379562, "obj2": 0.15244577969226927}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) / ( PN + Max( PN,DDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( MUR,( ( DS * RCSe ) / ( ( MUR * MLU ) * RRSe ) ) ) ,Max( RMSe,RRSe ) ) ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( ( ( MLU * MUR ) + Min( RMSe ,MUR ) ) - Max( ( DS * RRSe ),( RRSe + CS ) ) ) + Min( Max( Max( DS,( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) ),( RMSe + Min( MUM ,MLU ) ) ) ,( ( MUM / MUC ) + ( ( DS + ( ( RRSe + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03211930080927554}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Max( PN,DDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS * MLU ) / RRSe ) ) ) ) ) ) )", "obj1": 0.8302919708029197, "obj2": 0.12299130096890853}], "10": [{"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / FirstVNF_Mem ) * Max( ( ( ACS * Max( ACS,MDR ) ) + BR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / MUM ) + MUM ) * MUR ) * ( Max( DS,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( ( ( ( FirstVNF_CPU_Server * DDR ) * FirstVNF_CPU_Server ) * Const ) - ( ( DDR + FirstVNF_Mem_Server ) + ( AMS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( Max( ( RMSe * DS ),( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( DS * MUC ) ) ,Min( RMSe ,CS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( MUR,( MLU - MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( MUC - CS ) ) ) + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.6313868613138686, "obj2": 0.3061535337707608}, {"determining": "Min( ( ( ( ( DDR + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) ) / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + RRSe ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.8722627737226277, "obj2": 0.08615227177827159}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3951185399150238}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,( ( ( FirstVNF_CPU - CRS ) / ( ( FirstVNF_Mem_Server - ACS ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + MLU ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6186131386861314, "obj2": 0.35314934093927297}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + BR ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ) * DS ) - Max( CS,MLU ) ) ,( ( DS + RRSe ) + ( MLU - MLU ) ) ) )", "obj1": 0.7135036496350365, "obj2": 0.26006069736718956}, {"determining": "( ( PN - ( ( ( ( ( FirstVNF_CPU_Server * Max( MRS,RRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / DDR ) ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( RMSe - CS ) / ( MUC + CS ) ) / ( ( DS + MUR ) + ( ( Min( ( MUC - Min( RRSe ,MLU ) ) ,Min( ( RRSe + MLU ) ,MLU ) ) + DS ) + ( CS / MUC ) ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.09134837177892746}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) * ( ( DS + ( ( RRSe + RRSe ) + MLU ) ) * MUM ) ) )", "obj1": 0.7372262773722628, "obj2": 0.23146452479932575}, {"determining": "Min( ( ACS / ( CRS + MRS ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( ACS * FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM ,( Max( ( FirstVNF_CPU - CRS ),( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( MUC + CS ) / ( ( Max( ( ( RMSe * DS ) / ( RRSe * RCSe ) ),( ( DS + RMSe ) / MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.19680682319792003}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),FirstVNF_Mem ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Max( MUC,CS ),RCSe ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.7427007299270073, "obj2": 0.22406551982879824}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( BR * FirstVNF_CPU_Server ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS * MUC ) - Max( CS,DS ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( ( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) ) / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.026221533588861645}, {"determining": "( Min( ( ( Const - RRS ) * ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.36265473779048973}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * BR ) ) + MDR ) * FirstVNF_CPU ) - ( ( RRS + FirstVNF_CPU_Server ) - CRS ) ) + BR ) ) - ( ( ARS * ACS ) * ( ( ( CRS / ( ( DDR * ( FirstVNF_RAM * MRS ) ) - MRS ) ) + MRS ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,DS ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( Max( RCSe,RMSe ) - CS ) / ( Max( RCSe,Min( ( ( ( MUR / MUC ) * RRSe ) * ( MLU + Max( RRSe,MUR ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( RRSe * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.19680682319792003}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( ( ( Min( Max( ACS,ACS ) ,( MDR * ACS ) ) * ( Const / FirstVNF_Mem ) ) * ACS ) + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) - ( ( CRS + FirstVNF_CPU ) + ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,RCSe ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6677693778723481}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) + Max( PN,ACS ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( ARS,FirstVNF_CPU_Server ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( MDR,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - Max( ACS,FirstVNF_CPU_Server ) ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( Max( ( MLU * ( RRSe - RRSe ) ),Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.7135036496350365, "obj2": 0.26006069736718956}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ACS ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( Min( PN ,Const ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + RCSe ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0021086110367792123}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( MRS * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) / ( PN + Max( PN,DDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( MUR,( ( DS * RCSe ) / ( ( MUR * MLU ) * RRSe ) ) ) ,Max( RMSe,RRSe ) ) ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( RRS * FirstVNF_CPU ) + FirstVNF_Mem ) )", "choosing": "( ( RMSe / DS ) - Max( Min( RCSe ,CS ),MUC ) )", "obj1": 0.5875912408759124, "obj2": 0.36265473779048973}, {"determining": "( ( PN - ( ( ( ( Min( ( BR * FirstVNF_CPU ) ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,( RMSe / RCSe ) ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) )", "obj1": 0.40875912408759124, "obj2": 0.6252852451715984}, {"determining": "( Max( FirstVNF_CPU_Server,( MDR - ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( PN ,Min( FirstVNF_RAM_Server ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * PN ) ) ) ) ) ) ) - ( AMS * ACS ) )", "choosing": "( MUR - ( RMSe / ( ( RRSe / DS ) * ( DS + Min( ( MUR / RRSe ) ,MUR ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( ( MUR / RCSe ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( ( DS + RMSe ) + CS ),RCSe ) ,RRSe ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301133}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5164233576642335, "obj2": 0.42782434811913017}, {"determining": "( ( RRS - FirstVNF_RAM ) * ( CRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( MUC,Max( RCSe,Max( RRSe,( Min( DS ,RCSe ) / RCSe ) ) ) ) * ( ( ( DS - CS ) + Min( ( ( ( RRSe + RCSe ) - Max( RRSe,RMSe ) ) + CS ) ,( MUR + MUM ) ) ) * MUR ) ) ,( ( MUM / Max( RCSe,MUC ) ) * DS ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( PN * ( ( RRS + ARS ) / Max( FirstVNF_Mem,MDR ) ) ) ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( Min( ( RMSe + RCSe ) ,Max( MLU,( RRSe / DS ) ) ) * Max( Min( MUM ,MUM ),CS ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5203972776704283}, {"determining": "( ( ( ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RCSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Min( MDR ,DDR ) ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( MDR - FirstVNF_CPU_Server ) ,Max( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( CS,MUM ) - ( ( CS * Min( Min( MUR ,MUR ) ,RMSe ) ) / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( PN + BR ) ),AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC - RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( Max( CS,MLU ) - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.6058394160583942, "obj2": 0.35787544576836505}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe / RCSe ) ) ) + MUR ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.7956204379562044, "obj2": 0.150449716286979}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR - MDR ) ) * FirstVNF_Mem ),( ( Max( ACS,CRS ) + FirstVNF_CPU_Server ) * ( Max( MDR,( ( CRS / Const ) / BR ) ) + Min( MRS ,AMS ) ) ) )", "choosing": "Min( ( ( MLU - RRSe ) * DS ) ,( ( RCSe * RMSe ) * ( ( MUM * ( DS + DS ) ) + ( RMSe * ( RMSe * RMSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - DDR ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5516200656908188}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,( ( PN * AMS ) * DDR ) ) ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5721694650529106}, {"determining": "Min( Max( ( ARS - AMS ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR - ( CRS - FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( MUR ,( MUM / ( ( ( DS + MUC ) + ( MUR * RRSe ) ) - MUR ) ) ),( RRSe - MUR ) ) ) * ( ( ( RMSe - RCSe ) + MUR ) + MLU ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,FirstVNF_Mem_Server ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127453587198783}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / MUM ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03381408641775559}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( Min( Min( MRS ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ),Max( FirstVNF_CPU,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_CPU ) / Max( MRS,ACS ) ) )", "choosing": "( Max( RRSe,Min( Max( Max( MUR,Max( MUC,MUM ) ),RMSe ) ,MUC ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,Max( MLU,( RMSe * Max( MUM,Max( RCSe,MUM ) ) ) ) )", "obj1": 0.6058394160583942, "obj2": 0.35787544576836505}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( PN - ( Min( ( ( Min( CRS ,( Const * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( MUR / ( Max( MLU,RMSe ) / DS ) ) - Min( ( ( DS * Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ) ) - Max( CS,MLU ) ) ,( ( DS * RRSe ) + ( RRSe * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03536471337658175}, {"determining": "Max( ( ( ( AMS * ACS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + ( MLU * MUR ) ) ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46881502334957986}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5164233576642335, "obj2": 0.42782434811913017}, {"determining": "Max( ( ( ( ACS + AMS ) - ( MDR - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,( ( CRS / Const ) / BR ) ) + ( ( CRS - ( ( AMS / CRS ) * AMS ) ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( RCSe * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( Max( MDR,ACS ) + ( ( CRS - ( ( AMS / CRS ) * AMS ) ) + FirstVNF_CPU ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,( ( RMSe * MUC ) + ( MUM * ( CS + DS ) ) ) ) ,DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4654129581498669}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( AMS + FirstVNF_CPU ) / MRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / MUM ) * MUM ) - ( ( Max( CS,MLU ) * ( MUR - RCSe ) ) / ( DS * MLU ) ) ) * DS ) ,Min( ( RCSe * DS ) ,( ( CS - ( RRSe / RRSe ) ) + ( MUM / ( CS + RMSe ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,MUR ) ,DS ) )", "obj1": 0.8211678832116789, "obj2": 0.1321812207990867}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,Max( Max( Max( ( FirstVNF_Mem_Server * MDR ),Const ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + Max( ( FirstVNF_CPU_Server * RRS ),AMS ) ) ) ) / ( PN + Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) / ( ( MRS * MDR ) + ( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "Max( MUR,( Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS + MLU ) / RRSe ) ) ) ) ) / Min( MLU ,RRSe ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12167208611596313}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,Max( MLU,MUR ) ) + MUR ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.7956204379562044, "obj2": 0.150449716286979}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,Max( MLU,MUR ) ) + MUR ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "Max( Max( FirstVNF_CPU_Server,AMS ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,Min( Max( MDR,ACS ) ,( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Max( RMSe,( ( MUC - ( MUR + ( Max( RCSe,DS ) - CS ) ) ) - MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( ACS,CRS ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( CS / MUR ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.4835766423357664, "obj2": 0.4832472039665603}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU + MUM ) / ( Min( RRSe ,CS ) * RMSe ) )", "obj1": 0.45985401459854014, "obj2": 0.5332359890605364}, {"determining": "Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "Max( ( ( MDR - ARS ) + ( PN * BR ) ),( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( CS / ( ( MUM - DS ) - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.3905109489051095, "obj2": 0.6747037262680188}, {"determining": "( ( Min( PN ,ARS ) / ( MDR - DDR ) ) - ( AMS * ACS ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( Max( RCSe,MUR ),Min( ( ( ( RRSe * RCSe ) / MUC ) / ( ( DS - ( RRSe + ( CS + RCSe ) ) ) / RCSe ) ) ,( ( Min( MUC ,Max( CS,( MUM * RRSe ) ) ) / MUM ) / ( Min( MLU ,MUM ) + MLU ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4615694360776153}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem - CRS ) ) + BR ) ) - ( Const / ARS ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - Max( Min( DS ,RMSe ),( ( MUC - RMSe ) - ( MUC / RCSe ) ) ) ) / ( MUC + CS ) ) ) / Min( Min( RCSe ,MUM ) ,Max( CS,RRSe ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "Min( Max( ( Max( CRS,Min( FirstVNF_RAM ,AMS ) ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / FirstVNF_CPU_Server ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * ( ( ( Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) ) ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8175182481751825, "obj2": 0.13602221794850017}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498875}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( Min( MUC ,MUC ) * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( ( RMSe - ( MUR + RMSe ) ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.9361313868613139, "obj2": 0.03381408641775559}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,DDR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( CS / Min( ( RCSe + MUM ) ,Max( CS,RRSe ) ) )", "obj1": 0.4744525547445255, "obj2": 0.49873667290247287}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03788349222022115}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Min( ( ( FirstVNF_Mem / AMS ) + ACS ) ,Min( Min( CRS ,( BR * MRS ) ) ,BR ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( MUC - CS ) ) ) ,MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.45901499633663795}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( Min( ( FirstVNF_CPU_Server + Max( Max( Const,ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - Const ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ,( ACS / MDR ) ) / Max( PN,AMS ) )", "choosing": "( ( ( RCSe + CS ) + Max( Max( ( DS + CS ),RMSe ),Max( ( Max( CS,RRSe ) + ( RRSe + MLU ) ),( Min( CS ,Max( MLU,( MUR - RCSe ) ) ) - MLU ) ) ) ) / Min( ( MUM + RCSe ) ,Max( CS,RRSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5042849641040327}, {"determining": "( ( AMS - ( PN - Min( FirstVNF_RAM ,DDR ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( ( RCSe * CS ) / ( Min( RMSe ,CS ) - RRSe ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5077978082098495}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( AMS,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Min( Min( MRS ,AMS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MLU - CS ) / ( ( ( Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) / Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / MRS ) ,Max( Max( FirstVNF_CPU_Server,CRS ),Max( ( ( FirstVNF_Mem - RRS ) + Const ),AMS ) ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( MUR,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - ( RCSe - MLU ) ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( ( ( CRS / Const ) / BR ) + FirstVNF_RAM_Server ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * ( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( ( MLU * MUR ) * ( ( DS * MLU ) / RMSe ) ) + ( RMSe * RRSe ) ) ) ) ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.1546406329024619}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - AMS ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + ( ( DS * MLU ) / RRSe ) ) ) ) / ( ( ( MUR / RCSe ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) ) )", "obj1": 0.906934306569343, "obj2": 0.04546709196728289}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( Max( FirstVNF_Mem_Server,DDR ),ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( RMSe / MUM ) - Min( MUM ,( ( MLU / RCSe ) / Max( Max( RMSe,MLU ),( Min( CS ,RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5759988536409336}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM - DDR ) + ( ARS + ( DDR + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( RRSe / ( DS / MUR ) ) ),RCSe ),( ( RRSe * CS ) + RRSe ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( Max( Min( ( FirstVNF_Mem * ARS ) ,AMS ),MRS ) + CRS ) / Min( AMS ,RRS ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ) )", "obj1": 0.4762773722627737, "obj2": 0.49676818207261886}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( Max( FirstVNF_Mem_Server,DDR ),ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( RMSe / MUM ) - Min( MUM ,( ( MLU / RCSe ) / Max( Max( RMSe,MLU ),( Min( CS ,RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5759988536409336}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + ( AMS - FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Min( RRSe ,CS ) ),Min( Min( RCSe ,MUR ) ,DS ) )", "obj1": 0.8266423357664233, "obj2": 0.126353973462436}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( MUR,MLU ) ),( ( MUM / MUC ) * ( ( DS + ( ( RRSe + RRSe ) + MLU ) ) * MUM ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5077978082098495}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * ( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),( Max( RMSe,MUM ) / ( RMSe / MUR ) ) ) + Min( ( ( DS * MUC ) - Max( CS,RMSe ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) ) ) / Max( ( ( RCSe / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8284671532846716, "obj2": 0.1252565871025104}], "11": [{"determining": "( ( Min( PN ,ARS ) / ( MDR - DDR ) ) - ( AMS * ACS ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( Max( RCSe,MUR ),Min( ( ( ( RRSe * RCSe ) / MUC ) / ( ( DS - ( RRSe + ( CS + RCSe ) ) ) / RCSe ) ) ,( ( Min( MUC ,Max( CS,( MUM * RRSe ) ) ) / MUM ) / ( Min( MLU ,MUM ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / FirstVNF_Mem ) * Max( ( ( ACS * Max( ACS,MDR ) ) + BR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / MUM ) + MUM ) * MUR ) * ( Max( DS,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( MUR,( MLU - MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30867151418700867}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * BR ) ) + MDR ) * FirstVNF_CPU ) - ( ( RRS + FirstVNF_CPU_Server ) - CRS ) ) + BR ) ) - ( ( ARS * ACS ) * ( ( ( CRS / ( ( DDR * ( FirstVNF_RAM * MRS ) ) - MRS ) ) + MRS ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,DS ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( Max( RCSe,RMSe ) - CS ) / ( Max( RCSe,Min( ( ( ( MUR / MUC ) * RRSe ) * ( MLU + Max( RRSe,MUR ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "Min( Max( ( ( Min( ( ( Const - RRS ) * ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) * ( ACS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( DS / MLU ) + ( RRSe / RCSe ) ) ) + MUR ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928314}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3951185399150238}, {"determining": "Min( ( ACS / FirstVNF_CPU ) ,( BR - BR ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MUC - CS ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( Max( CS,MUM ) / ( RCSe / CS ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( MUC - CS ) ) ) + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.6313868613138686, "obj2": 0.3061535337707608}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( ( ( ARS + BR ) / Const ),CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RCSe + ( MUR - MLU ) ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( Max( ( ( RMSe + DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( Min( ( ( Const - RRS ) * ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS * MLU ) / RRSe ) ) ) ) ) ) )", "obj1": 0.7372262773722628, "obj2": 0.22523143463910467}, {"determining": "( ( PN - ( ( ( ( Min( ( BR * FirstVNF_CPU ) ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,( RMSe / RCSe ) ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.086115818550307}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( MUC - CS ) ) ) + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.6313868613138686, "obj2": 0.3061535337707608}, {"determining": "Min( ( ACS / MDR ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( Min( FirstVNF_RAM ,( ( ( FirstVNF_CPU - CRS ) / ( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( RRSe * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.19680682319792003}, {"determining": "Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( PN - ( ( ( ( Min( ( BR * FirstVNF_CPU ) ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( CS,( RMSe / RCSe ) ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.086115818550307}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( Max( MRS,Max( FirstVNF_RAM_Server,BR ) ),AMS ) * ACS ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) - Min( MRS ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( ( RMSe * RMSe ) + ( MUC * RCSe ) ),( ( MUC + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) + MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) / ( ( MUC - DS ) * RMSe ) ) - MUR )", "obj1": 0.5072992700729927, "obj2": 0.43967412192754685}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Max( RCSe,CS ),Max( MLU,MUR ) ) + MUR ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.7518248175182481, "obj2": 0.20744103201183461}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.09568870529136943}, {"determining": "Min( ( ACS / ( CRS + MRS ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( ACS * FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM ,( Max( ( FirstVNF_CPU - CRS ),( AMS - FirstVNF_RAM_Server ) ) / ( ( Max( BR,RRS ) + FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( MUC + CS ) / ( ( Max( ( ( RMSe * DS ) / ( RRSe * RCSe ) ),( ( DS + RMSe ) / MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.19680682319792003}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( ( ARS - MRS ) - ( ( ( ( ACS * ARS ) * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( RMSe,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1474268630860229}, {"determining": "( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),FirstVNF_Mem ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Max( MUC,CS ),RCSe ) + MUR ) + MLU ) * MUC ) / RRSe ) )", "obj1": 0.7427007299270073, "obj2": 0.22406551982879824}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "Max( ( ( ( RRS + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,( ( ( MRS * MDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / Min( ( ARS + Max( FirstVNF_RAM_Server,( PN - FirstVNF_Mem_Server ) ) ) ,Const ) ) ) )", "choosing": "Min( Max( CS,MUR ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Min( ( ( MUM / RCSe ) + CS ) ,CS ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + Max( ( FirstVNF_CPU_Server * RRS ),AMS ) ) ) ) / ( PN + Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) / ( ( MRS * MDR ) + ( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "Max( MUR,( Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS + MLU ) / RRSe ) ) ) ) ) / Min( MLU ,RRSe ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12167208611596313}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + ( MLU * MUR ) ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( PN - ( ( ( ( Min( FirstVNF_RAM ,BR ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( ( ( CS / RMSe ) - RCSe ) * MUC ) + ( MUM * ( MUR + CS ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.026221533588861638}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( Min( FirstVNF_RAM ,AMS ) + Min( FirstVNF_CPU ,MRS ) ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) )", "obj1": 0.40875912408759124, "obj2": 0.6252852451715984}, {"determining": "( ( Min( MRS ,ACS ) - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) * BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( ( Max( ( ( MUR - RCSe ) - ( MUR * Max( RMSe,( MUR / ( CS * RRSe ) ) ) ) ),RRSe ) - Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301131}, {"determining": "( ( ( ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RCSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( PN - ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) + BR ) ) - ( ( ACS / ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( MLU / MUR ) ) ) ) ) - Min( ( RMSe * ( ( MUM + MUM ) + ( ( Max( RMSe,Min( MUR ,MUC ) ) * ( MUR * CS ) ) + RCSe ) ) ) ,MUM ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( PN * ( ( RRS + ARS ) / Max( FirstVNF_Mem,MDR ) ) ) ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( Min( ( RMSe + RCSe ) ,Max( MLU,( RRSe / DS ) ) ) * Max( Min( MUM ,MUM ),CS ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5203972776704283}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR - MDR ) ) * FirstVNF_Mem ),( ( Max( ACS,CRS ) + FirstVNF_CPU_Server ) * ( Max( MDR,( ( CRS / Const ) / BR ) ) + Min( MRS ,AMS ) ) ) )", "choosing": "Min( ( ( MLU - RRSe ) * DS ) ,( ( RCSe * RMSe ) * ( ( MUM * ( DS + DS ) ) + ( RMSe * ( RMSe * RMSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - DDR ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5516200656908188}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,FirstVNF_Mem_Server ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127453587198783}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( Min( ACS ,FirstVNF_CPU ) * ARS ) * ( ( ( ACS * MDR ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUM / Min( MUC ,DS ) ) + ( ( ( RMSe + Min( MUR ,DS ) ) + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,RRSe ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.09134837177892746}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / MUM ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03381408641775559}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,( Max( ACS,CRS ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5294706947079203}, {"determining": "( ARS - ( MRS / MRS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.677007299270073, "obj2": 0.26739214828877206}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5294706947079203}, {"determining": "Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( RMSe,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - DS ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( Min( PN ,Const ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + RCSe ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0021086110367792123}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( AMS + FirstVNF_CPU ) / MRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / MUM ) * MUM ) - ( ( Max( CS,MLU ) * ( MUR - RCSe ) ) / ( DS * MLU ) ) ) * DS ) ,Min( ( RCSe * DS ) ,( ( CS - ( RRSe / RRSe ) ) + ( MUM / ( CS + RMSe ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5444568852886515}, {"determining": "Min( Min( ( ( Max( BR,AMS ) * ( DDR / Max( BR,( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) ,Max( ( Max( PN,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe * RCSe ) ) ) + ( ( MLU / CS ) + RMSe ) ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.7956204379562044, "obj2": 0.150449716286979}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "( ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem_Server,( Max( MRS,( FirstVNF_Mem_Server / ACS ) ) + MDR ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + FirstVNF_Mem ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / ( RMSe / ( ( ( MUC + MUC ) - RMSe ) / ( MUC + CS ) ) ) ) ) * MUR ) * Min( ( DS * MLU ) ,RRSe ) )", "obj1": 0.9726277372262774, "obj2": 0.015016219999377967}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46881502334957986}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( MRS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( MUR,( MLU - MLU ) ) ) ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( MUM * ( MUM * CS ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( ( MUR / RCSe ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.03980912270210217}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( Max( MDR,ACS ) + ( ( CRS - ( ( AMS / CRS ) * AMS ) ) + FirstVNF_CPU ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,( ( RMSe * MUC ) + ( MUM * ( CS + DS ) ) ) ) ,DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4654129581498669}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM + ( FirstVNF_Mem_Server * BR ) ) + Max( PN,ACS ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM - DDR ) + ( ARS + ( DDR + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( RRSe / ( DS / MUR ) ) ),RCSe ),( ( RRSe * CS ) + RRSe ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( ACS * ARS ) * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),Max( CS,RMSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0021086110367792123}, {"determining": "Max( Max( FirstVNF_CPU_Server,AMS ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,Min( Max( MDR,ACS ) ,( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Max( RMSe,( ( MUC - ( MUR + ( Max( RCSe,DS ) - CS ) ) ) - MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MUC - Min( ( ( DS * Min( Max( RMSe,RRSe ) ,( MLU / MUR ) ) ) + Max( CS,MLU ) ) ,( ( DS + RRSe ) + ( RRSe * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03536471337658175}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03788349222022115}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,MUR ) ,DS ) )", "obj1": 0.8211678832116789, "obj2": 0.1321812207990867}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498875}, {"determining": "( Min( ( ( Const - MRS ) * ( ( CRS - ( FirstVNF_CPU * ( ( RRS / BR ) - ( FirstVNF_Mem + PN ) ) ) ) + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC + ( ( Min( RMSe ,Max( Max( RMSe,MUR ),Max( MUM,RRSe ) ) ) / RMSe ) * MUC ) ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,RCSe ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / MUM ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03381408641775559}, {"determining": "Max( ( ( MDR - ARS ) + ( PN * BR ) ),( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( CS / ( ( MUM - DS ) - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.3905109489051095, "obj2": 0.6747037262680188}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( DS * Min( Max( RRSe,( DS / ( MUC - CS ) ) ) ,MLU ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( ( PN - ( ( ( ( ( FirstVNF_CPU_Server * Max( MRS,RRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / DDR ) ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( RMSe - CS ) / ( MUC + CS ) ) / ( ( DS + MUR ) + ( ( Min( ( MUC - Min( RRSe ,MLU ) ) ,Min( ( RRSe + MLU ) ,MLU ) ) + DS ) + ( CS / MUC ) ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.09134837177892746}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,( ( PN * AMS ) * DDR ) ) ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5721694650529106}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Min( ( ( FirstVNF_Mem / AMS ) + ACS ) ,Min( Min( CRS ,( BR * MRS ) ) ,BR ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,Max( MLU,MUR ) ) + MUR ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4981751824817518, "obj2": 0.45901499633663795}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( Min( Min( MRS ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ),Max( FirstVNF_CPU,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_CPU ) / Max( MRS,ACS ) ) )", "choosing": "( Max( RRSe,Min( Max( Max( MUR,Max( MUC,MUM ) ),RMSe ) ,MUC ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),CRS ) / MRS ) ,( ( PN * AMS ) * DDR ) ) ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5721694650529106}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( Min( MUC ,MUC ) * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - Min( MUM ,MUC ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( MRS * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( MDR,( FirstVNF_RAM * ( ( MDR - AMS ) * ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) - ACS ) )", "choosing": "Min( Min( CS ,MUM ) ,( DS * ( Min( ( Min( Min( MLU ,Max( MUC,RRSe ) ) ,( Min( RRSe ,RMSe ) / ( RMSe / RCSe ) ) ) - ( CS + RCSe ) ) ,MUC ) + RRSe ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( AMS,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Min( Min( MRS ,AMS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MLU - CS ) / ( ( ( Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) / Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / MRS ) ,Max( Max( FirstVNF_CPU_Server,CRS ),Max( ( ( FirstVNF_Mem - RRS ) + Const ),AMS ) ) ) ) ) )", "choosing": "Max( Min( Max( ( DS - ( Max( MUR,( MUR / ( CS * RRSe ) ) ) * MUR ) ),RRSe ) ,Max( ( ( ( ( MUM - ( RCSe - MLU ) ) - ( ( MLU / MUR ) / ( MLU + RMSe ) ) ) + ( ( RCSe - Max( DS,RRSe ) ) - ( MLU / MUC ) ) ) / ( MUM * ( MUM * CS ) ) ),MLU ) ),( ( ( DS + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) * MUM ) * ( MUM / MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.48792292585450764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,ACS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9233576642335767, "obj2": 0.035618658996667794}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( BR * FirstVNF_CPU_Server ) ) + MDR ) * ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS * MUC ) - Max( CS,DS ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( ( RMSe - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * ( RMSe * MUC ) ) ) / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.015753912390991748}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ACS ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - AMS ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + ( ( DS * MLU ) / RRSe ) ) ) ) / ( ( ( MUR / RCSe ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) ) )", "obj1": 0.906934306569343, "obj2": 0.04546709196728289}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( Max( FirstVNF_Mem_Server,DDR ),ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( RMSe / MUM ) - Min( MUM ,( ( MLU / RCSe ) / Max( Max( RMSe,MLU ),( Min( CS ,RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5759988536409336}, {"determining": "( ( RRS - ( ( ( ( Min( ( RRS / DDR ) ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MLU * ( ( ( ( MUR / MUM ) - MUC ) - ( MUM + CS ) ) * DS ) ) * ( RRSe + ( ( RMSe - RCSe ) + MUR ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Min( ( ( ( ( PN + Max( PN,DDR ) ) - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( Max( FirstVNF_Mem_Server,DDR ),ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( RMSe / MUM ) - Min( MUM ,( ( MLU / RCSe ) / Max( Max( RMSe,MLU ),( Min( CS ,RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5759988536409336}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8302919708029197, "obj2": 0.12345940567908058}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + Max( ( FirstVNF_Mem - ARS ),ACS ) ) ) ) ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,DDR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( CS / Min( ( RCSe + MUM ) ,DS ) )", "obj1": 0.4744525547445255, "obj2": 0.49873667290247287}, {"determining": "( Min( ( FirstVNF_CPU_Server + Max( Max( Const,ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - Const ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ,( ACS / MDR ) ) / Max( PN,AMS ) )", "choosing": "( ( ( RCSe + CS ) + Max( Max( ( DS + CS ),RMSe ),Max( ( Max( CS,RRSe ) + ( RRSe + MLU ) ),( Min( CS ,Max( MLU,( MUR - RCSe ) ) ) - MLU ) ) ) ) / Min( ( MUM + RCSe ) ,Max( CS,RRSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5042849641040327}, {"determining": "Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) / Min( ( MDR / ( ( ( Max( FirstVNF_Mem_Server,PN ) / CRS ) * ( ARS / PN ) ) + RRS ) ) ,MRS ) ) )", "choosing": "Min( Min( Min( MUC ,DS ) ,Max( ( RCSe * DS ),( ( ( DS + MUM ) * ( DS + DS ) ) + ( RMSe * ( CS * ( ( MLU - CS ) * ( DS - RCSe ) ) ) ) ) ) ) ,( ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) * DS ) )", "obj1": 0.4708029197080292, "obj2": 0.5072391580599243}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( RRS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + CRS ) ) - ( ( ARS - AMS ) / ( DDR * BR ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( MLU / RRSe ) + ( MUC / MUR ) ) ) + MUR ) + RCSe ) * RRSe ) / ( MUR * MUM ) ) )", "obj1": 0.7901459854014599, "obj2": 0.1569208641928668}], "12": [{"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ACS ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( ( Min( PN ,ARS ) / ( MDR - DDR ) ) - ( AMS * ACS ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( Max( RCSe,MUR ),Min( ( ( ( RRSe * RCSe ) / MUC ) / ( ( DS - ( RRSe + ( CS + RCSe ) ) ) / RCSe ) ) ,( ( Min( MUC ,Max( CS,( MUM * RRSe ) ) ) / MUM ) / ( Min( MLU ,MUM ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * PN ) ),( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( MUR,( MLU - MUM ) ) ),( ( MUM * RRSe ) + ( Min( ( MUR / Max( MLU,( RCSe - RCSe ) ) ) ,Max( ( Max( MUR,Min( CS ,RCSe ) ) / ( ( RMSe + RMSe ) - Min( MUM ,RRSe ) ) ),( RMSe * CS ) ) ) - Max( RRSe,( CS / Max( RMSe,( CS * MUM ) ) ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( ( PN - ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16787253995558113}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( DS + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.572992700729927, "obj2": 0.37992282970055086}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3951185399150238}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS / Const ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Max( RCSe,CS ),Max( MLU,Min( MUR ,MUR ) ) ) + MUR ) + MLU ) * RRSe ) + ( Max( MUR,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) * DS ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( ( ( ( ( ( Min( Max( BR,FirstVNF_CPU ) ,PN ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - PN ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe + CS ) - Min( Min( ( RMSe + RCSe ) ,Max( ( ( DS * Min( ( RRSe - MUR ) ,( MUM - MUR ) ) ) + RMSe ),( RRSe / MUC ) ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.8667883211678832, "obj2": 0.07944592144749087}, {"determining": "Min( ( ACS / FirstVNF_CPU ) ,( BR - BR ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MUC - CS ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( Max( CS,MUM ) / ( RCSe / CS ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30867151418700867}, {"determining": "( ( PN - ( ( ( ( Min( ( BR * MRS ) ,CRS ) + MDR ) * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ( BR / ( ARS * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( ( Max( ( RMSe - MLU ),Min( RMSe ,CS ) ) + ( MUC * ( DS + CS ) ) ) ,MLU ) )", "obj1": 0.6094890510948905, "obj2": 0.30867151418700867}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( ( ( BR - ( ( AMS / CRS ) * AMS ) ) + FirstVNF_CPU ) + ( Max( ACS,Max( Min( PN ,Min( ARS ,ARS ) ),PN ) ) - FirstVNF_CPU ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( Min( Min( MRS ,ACS ) ,( CRS / AMS ) ) + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "( Max( ( ( Max( CS,MLU ) * MUC ) / ( RCSe / ( RCSe * RMSe ) ) ),MUR ) + ( ( RRSe / ( RMSe + Min( MUR ,DS ) ) ) - Max( ( MUR + RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5072992700729927, "obj2": 0.43956630182425177}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4767966883457764}, {"determining": "( Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,CRS ) ) / ( Const / AMS ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( MLU * MUR ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( RRSe * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + ( CS - DS ) ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5294506374946552}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * BR ) ) + MDR ) * FirstVNF_CPU ) - ( ( RRS + FirstVNF_CPU_Server ) - CRS ) ) + BR ) ) - ( ( ARS * ACS ) * ( ( ( CRS / ( ( DDR * ( FirstVNF_RAM * MRS ) ) - MRS ) ) + MRS ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,DS ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( Max( RCSe,RMSe ) - CS ) / ( Max( RCSe,Min( ( ( ( MUR / MUC ) * RRSe ) * ( MLU + Max( RRSe,MUR ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( RRSe * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9361313868613139, "obj2": 0.030901702730709968}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.09568870529136943}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( MUC - CS ) ) ) + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( ( PN + MRS ) / ( Min( ARS ,MDR ) * ( ( RRS - FirstVNF_CPU ) / ( ( ARS - ACS ) - Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( RRSe,Min( RMSe ,( ( RMSe + ( Min( ( RRSe - MUR ) ,MUC ) - MLU ) ) * MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( CS - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.619722187450246}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + Max( ( FirstVNF_CPU_Server * RRS ),AMS ) ) ) ) / ( PN + Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) / ( ( MRS * MDR ) + ( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "Max( MUR,( Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS + MLU ) / RRSe ) ) ) ) ) / Min( MLU ,RRSe ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12167208611596313}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "Min( Min( ( ( Max( BR,AMS ) * ( DDR / Max( BR,( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) ,Max( ( Max( PN,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe * RCSe ) ) ) + ( ( MLU / CS ) + RMSe ) ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.7956204379562044, "obj2": 0.150449716286979}, {"determining": "( Max( MRS,ARS ) - ( Max( Max( MRS,Max( Min( DDR ,Const ),BR ) ),AMS ) * ACS ) )", "choosing": "( ( ( ( ( CS / MUC ) + ( MUC + MUR ) ) / ( ( RMSe - CS ) + ( Max( RCSe,MUM ) / ( DS - CS ) ) ) ) / Min( ( RCSe + MUM ) ,Max( CS,RRSe ) ) ) - RMSe )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( ( ( ARS + BR ) / Const ),CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RCSe + ( MUR - MLU ) ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( Max( ( ( RMSe + DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN / ( ( ( BR * Min( ( ARS * ( FirstVNF_CPU_Server / MRS ) ) ,MDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( ( RMSe / ( DS - Max( ( CS + MUC ),Min( MUM ,MUC ) ) ) ),CS ) ) ,( ( DS * MLU ) / RRSe ) ) )", "obj1": 0.8558394160583942, "obj2": 0.08430966194835601}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( ACS * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( DS + MUR ) + ( CS / ( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8485401459854015, "obj2": 0.08575820015844898}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Min( DS ,DS ) ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5177538973990609}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) - DDR ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + ( CS + CS ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5434230621597794}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ( ( CRS / Const ) / BR ) ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - DS ) / DS ) + MLU ) ) )", "obj1": 0.9872262773722628, "obj2": 0.003304724229185155}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46881502334957986}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR - MDR ) ) * FirstVNF_Mem ),( ( Max( ACS,CRS ) + FirstVNF_CPU_Server ) * ( Max( MDR,( ( CRS / Const ) / BR ) ) + Min( MRS ,AMS ) ) ) )", "choosing": "Min( ( ( MLU - RRSe ) * DS ) ,( ( RCSe * RMSe ) * ( ( MUM * ( DS + DS ) ) + ( RMSe * ( RMSe * RMSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_Mem_Server - ACS ) ) ,Const ) / ( ( MRS * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS / ( ( DS * MLU ) + Max( CS,RCSe ) ) ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( AMS,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Min( Min( MRS ,AMS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MLU - CS ) / ( ( ( Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) / Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( ( ( AMS - FirstVNF_Mem ) * ( ( ARS - MRS ) * ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) ) - ( Max( Max( ARS,BR ),AMS ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( ( ( Max( MUC,( RMSe + MUR ) ) / CS ) - ( ( ( DS * RMSe ) - ( MUR - RMSe ) ) / RMSe ) ) / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.019374066404774567}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) + MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301131}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( RRS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + CRS ) ) - ( ( ARS - AMS ) / ( DDR * BR ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( MLU / RRSe ) + ( MUC / MUR ) ) ) + MUR ) + RCSe ) * RRSe ) / ( MUR * MUM ) ) )", "obj1": 0.7901459854014599, "obj2": 0.1569208641928668}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( ( ARS - MRS ) - ( ( ( ( ACS * ARS ) * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe / RCSe ) ) ) + MUR ) + RCSe ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.8102189781021898, "obj2": 0.14406394930942418}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( Min( Min( MRS ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ),Max( FirstVNF_CPU,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_CPU ) / Max( MRS,ACS ) ) )", "choosing": "( Max( RRSe,Min( Max( Max( MUR,Max( MUC,MUM ) ),RMSe ) ,MUC ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( ARS - ( MRS / MRS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.677007299270073, "obj2": 0.26739214828877206}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5703501290849954}, {"determining": "( ( ( ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) * ( ( ( ACS * ARS ) / Min( AMS ,FirstVNF_Mem_Server ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127453587198783}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MUC - Min( ( ( DS * Min( Max( RMSe,RRSe ) ,( MLU / MUR ) ) ) + Max( CS,MLU ) ) ,( ( DS + RRSe ) + ( RRSe * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03536471337658175}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe * RCSe ) ) ) + ( ( MLU / CS ) + RMSe ) ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "Max( Max( FirstVNF_CPU_Server,AMS ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,Min( Max( MDR,ACS ) ,( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Max( RMSe,( ( MUC - ( MUR + ( Max( RCSe,DS ) - CS ) ) ) - MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( Min( ( ( FirstVNF_CPU - MRS ) + ( MRS * MDR ) ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( RCSe * CS ) ,( ( Min( MLU ,MLU ) * ( DS + DS ) ) + ( RMSe * MUC ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( FirstVNF_CPU_Server + RRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( BR + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( ( ACS / RRS ),Max( Max( PN,RRS ),Min( MRS ,FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - DS ) ,( MUR - ( RCSe * ( ( MLU * Max( MUR,( RRSe - MLU ) ) ) * ( MUM * RRSe ) ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + Max( ( FirstVNF_Mem - ARS ),ACS ) ) ) ) ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,DDR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( CS / Min( ( RCSe + MUM ) ,DS ) )", "obj1": 0.4744525547445255, "obj2": 0.49873667290247287}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( ( ARS - MRS ) - ( ( ( ( ACS * ARS ) * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( RMSe,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1474268630860229}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RCSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.916058394160584, "obj2": 0.039809122702102163}, {"determining": "Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( Min( ( ( Const - MRS ) * ( ( CRS - ( FirstVNF_CPU * ( ( RRS / BR ) - ( FirstVNF_Mem + PN ) ) ) ) + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC + ( ( Min( RMSe ,Max( Max( RMSe,MUR ),Max( MUM,RRSe ) ) ) / RMSe ) * MUC ) ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,RCSe ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( Max( FirstVNF_CPU_Server,ARS ) / Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498875}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM - DDR ) + ( ARS + ( DDR + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( RRSe / ( DS / MUR ) ) ),RCSe ),( ( RRSe * CS ) + RRSe ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "( ( PN - ( ( ( ( Min( FirstVNF_RAM ,BR ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( ( ( CS / RMSe ) - RCSe ) * MUC ) + ( MUM * ( MUR + CS ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.026221533588861638}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + ( MLU * MUR ) ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( ( RMSe + Min( MUR ,DS ) ) + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.09134837177892746}, {"determining": "( ( PN - ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) + BR ) ) - ( ( ACS / ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( MLU / MUR ) ) ) ) ) - Min( ( RMSe * ( ( MUM + MUM ) + ( ( Max( RMSe,Min( MUR ,MUC ) ) * ( MUR * CS ) ) + RCSe ) ) ) ,MUM ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( BR * FirstVNF_CPU_Server ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.026221533588861638}, {"determining": "Min( ( ( RRS / AMS ) + ACS ) ,Min( Min( CRS ,( ( ( CRS + Min( ( FirstVNF_Mem_Server * CRS ) ,MRS ) ) + Min( MDR ,( Max( RRS,MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) ) ) * MRS ) ) ,BR ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( MLU ,RCSe ) ) + CS ) ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4981751824817518, "obj2": 0.45901499633663795}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * MDR ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( ( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ,DS ) )", "obj1": 0.8175182481751825, "obj2": 0.13602221794850017}, {"determining": "Max( ( ( MDR - ARS ) + ( PN * BR ) ),( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( CS / ( ( MUM - DS ) - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.3905109489051095, "obj2": 0.6747037262680188}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_Mem_Server * PN ) ,( ( PN * AMS ) * DDR ) ) ) ) )", "choosing": "Min( ( Min( CS ,MUM ) - MUR ) ,( ( ( MUR / RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + CRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( RMSe,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "Max( ( Max( ( FirstVNF_CPU * Max( MRS,PN ) ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( RMSe ,RRSe ) / Min( RCSe ,Max( Min( ( RMSe * DS ) ,CS ),( CS + DS ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Max( ( CRS * FirstVNF_Mem ),Min( ( Max( ACS,( AMS / AMS ) ) * FirstVNF_CPU_Server ) ,( Min( MDR ,ACS ) + ( ( CRS - DDR ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( ( MUC - MUR ) + CS ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5440399788240241}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( ( ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) - ( ( ( ( Min( CRS ,ACS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( DS,MLU ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.00025394562008604024}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( FirstVNF_RAM_Server / ACS ) * AMS ) * DDR ) ) * ( ARS * ACS ) )", "choosing": "( ( Max( ( MUM - DS ),Max( DS,( Max( Min( DS ,RMSe ),MUM ) - ( DS + RCSe ) ) ) ) / RCSe ) * ( RRSe / ( MLU * Min( ( MUM / RMSe ) ,Min( MUM ,Max( Min( MUR ,MUM ),( Max( DS,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Max( ( ( ( RRS + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,( ( ( MRS * MDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / Min( ( ARS + Max( FirstVNF_RAM_Server,( PN - FirstVNF_Mem_Server ) ) ) ,Const ) ) ) )", "choosing": "Min( Max( CS,MUR ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Min( ( ( MUM / RCSe ) + CS ) ,CS ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( Min( ACS ,FirstVNF_CPU ) * ARS ) * ( ( ( ACS * MDR ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUM / Min( MUC ,DS ) ) + ( ( ( RMSe + Min( MUR ,DS ) ) + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,RRSe ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.09134837177892746}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Max( MLU,RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem_Server,( Max( MRS,( FirstVNF_Mem_Server / ACS ) ) + MDR ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + FirstVNF_Mem ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / ( RMSe / ( ( ( MUC + MUC ) - RMSe ) / ( MUC + CS ) ) ) ) ) * MUR ) * Min( ( DS * MLU ) ,RRSe ) )", "obj1": 0.9726277372262774, "obj2": 0.015016219999377967}, {"determining": "Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) / Min( ( MDR / ( ( ( Max( FirstVNF_Mem_Server,PN ) / CRS ) * ( ARS / PN ) ) + RRS ) ) ,MRS ) ) )", "choosing": "Min( Min( Min( MUC ,DS ) ,Max( ( RCSe * DS ),( ( ( DS + MUM ) * ( DS + DS ) ) + ( RMSe * ( CS * ( ( MLU - CS ) * ( DS - RCSe ) ) ) ) ) ) ) ,( ( Min( ( Max( MLU,RMSe ) - ( DS * MLU ) ) ,RRSe ) + RRSe ) * DS ) )", "obj1": 0.4708029197080292, "obj2": 0.5072391580599243}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( MDR,( FirstVNF_RAM * ( ( MDR - AMS ) * ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) - ACS ) )", "choosing": "Min( Min( CS ,MUM ) ,( DS * ( Min( ( Min( Min( MLU ,Max( MUC,RRSe ) ) ,( Min( RRSe ,RMSe ) / ( RMSe / RCSe ) ) ) - ( CS + RCSe ) ) ,MUC ) + RRSe ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,FirstVNF_RAM ) + Const ) / AMS ) ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.49635036496350365, "obj2": 0.46345901495826136}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,MUR ) ,DS ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "Min( ( ( ACS - Const ) * Max( CRS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM - ( ( ( Min( Min( ( ARS + FirstVNF_RAM ) ,Max( CRS,Const ) ) ,PN ) * Min( ( ARS - ( DDR / MRS ) ) ,FirstVNF_CPU ) ) / PN ) * ACS ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * Min( RCSe ,( MUR / RCSe ) ) ) ,( ( ( MUC / RCSe ) / ( Min( Min( MUM ,MLU ) ,RCSe ) - Min( Max( ( Max( RCSe,CS ) + CS ),RCSe ) ,RRSe ) ) ) - ( ( MUR / ( Max( MUC,MLU ) + ( MUM * ( ( CS * RCSe ) / MUR ) ) ) ) + DS ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,( FirstVNF_Mem_Server - CRS ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( Max( DS,DS ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( Min( PN ,Const ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + RCSe ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0021086110367792123}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( DDR + FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.1321812207990867}, {"determining": "( Min( ( FirstVNF_CPU_Server + Max( Max( Const,ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - Const ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ,( ACS / MDR ) ) / Max( PN,AMS ) )", "choosing": "( ( ( RCSe + CS ) + Max( Max( ( DS + CS ),RMSe ),Max( ( Max( CS,RRSe ) + ( RRSe + MLU ) ),( Min( CS ,Max( MLU,( MUR - RCSe ) ) ) - MLU ) ) ) ) / Min( ( MUM + RCSe ) ,Max( CS,RRSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5042849641040327}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5758626777529999}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( Max( MDR,ACS ) + ( ( CRS - ( ( AMS / CRS ) * AMS ) ) + FirstVNF_CPU ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( Min( RCSe ,( ( RMSe * MUC ) + ( MUM * ( CS + DS ) ) ) ) ,DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4654129581498669}, {"determining": "( ( RRS - ( ( ( ( Min( ( RRS / DDR ) ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MLU * ( ( ( ( MUR / MUM ) - MUC ) - ( MUM + CS ) ) * DS ) ) * ( RRSe + ( ( RMSe - RCSe ) + MUR ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}], "13": [{"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ACS ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( BR + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( MRS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( MUR,( RRSe - MLU ) ) ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6747626174784809}, {"determining": "( ( PN - ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16787253995558113}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895443}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( DS + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.572992700729927, "obj2": 0.37992282970055086}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS / Const ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Max( RCSe,CS ),Max( MLU,Min( MUR ,MUR ) ) ) + MUR ) + MLU ) * RRSe ) + ( Max( MUR,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) * DS ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.09568870529136943}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( ( ( DDR * Const ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Min( FirstVNF_CPU_Server ,CRS ) ) / ( ( BR * MDR ) + CRS ) ) - ( ( ARS - AMS ) / ( MRS + FirstVNF_CPU ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( RCSe * MUC ) / Max( ( ( ( ( MLU * MUR ) * Min( MLU ,MUR ) ) / CS ) / ( Max( MLU,RMSe ) / ( DS * RMSe ) ) ),( Max( RMSe,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( PN - ( ( ( ( Min( ( BR * FirstVNF_Mem_Server ) ,PN ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( Min( ( RMSe + RCSe ) ,Max( MLU,( RRSe / DS ) ) ) ,( ( DS + ( ( RMSe - CS ) + ( MUC + ( MUC + DS ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.07863822561532696}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40128274051084956}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Max( RCSe,( CS + CS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5948905109489051, "obj2": 0.32503525356048596}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + ( DDR / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( ( ( MRS / Const ) / BR ) * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * ( ( ( Min( RMSe ,Max( MUR,( RMSe + MUR ) ) ) - Max( DS,DS ) ) * ( ( ( CS * ( MUR - MUR ) ) - MUR ) * MUC ) ) * DS ) ) * ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( RRSe ,Max( ( CS + MUC ),RCSe ) ) ) ) )", "obj1": 0.6897810218978102, "obj2": 0.25290889583203174}, {"determining": "Min( ( ( RRS + AMS ) + ( CRS + RRS ) ) ,Min( Min( CRS ,( ( FirstVNF_Mem - ( DDR - Min( RRS ,MDR ) ) ) - AMS ) ) ,BR ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Min( ( MLU / RCSe ) ,MUR ),Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( MLU ,RCSe ) ) + MLU ) ) + MLU ) * ( CS - ( MUM + RMSe ) ) ) * ( MUR * MUC ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3951185399150238}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30867151418700867}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( DS * ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) )", "obj1": 0.7025547445255474, "obj2": 0.24269871924245107}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * BR ) ) + MDR ) * FirstVNF_CPU ) - ( ( RRS + FirstVNF_CPU_Server ) - CRS ) ) + BR ) ) - ( ( ARS * ACS ) * ( ( ( CRS / ( ( DDR * ( FirstVNF_RAM * MRS ) ) - MRS ) ) + MRS ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,DS ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( ( Max( RCSe,RMSe ) - CS ) / ( Max( RCSe,Min( ( ( ( MUR / MUC ) * RRSe ) * ( MLU + Max( RRSe,MUR ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30867151418700867}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( CS - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.619722187450246}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( Max( MRS,Max( FirstVNF_RAM_Server,BR ) ),AMS ) * ACS ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + ( ( MUC + RRSe ) + ( RMSe * RRSe ) ) ) + MUM ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301131}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( ( PN / ( ( ( BR * Min( ( ARS * ( FirstVNF_CPU_Server / MRS ) ) ,MDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( ( RMSe / ( DS - Max( ( CS + MUC ),Min( MUM ,MUC ) ) ) ),CS ) ) ,( ( DS * MLU ) / RRSe ) ) )", "obj1": 0.8558394160583942, "obj2": 0.08430966194835601}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5845870902948435}, {"determining": "( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * ( ( ( ACS * ARS ) / Min( AMS ,FirstVNF_Mem_Server ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( MUC * RCSe ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5341416831951703}, {"determining": "Max( ( Max( ( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS + FirstVNF_Mem_Server ) ) ) + ( PN * BR ) ),( ARS - RRS ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.3320032604612572}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( AMS,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Min( Min( MRS ,AMS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MLU - CS ) / ( ( ( Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) / Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4767966883457764}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( MUC - CS ) ) ) + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),( Min( PN ,BR ) + RRS ) )", "choosing": "Min( ( RMSe - CS ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5253957053278209}, {"determining": "( ARS - ( MRS / MRS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.677007299270073, "obj2": 0.26739214828877206}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_Mem_Server - ACS ) ) ,Const ) / ( ( MRS * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ),Min( ( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ,DS ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5072992700729927, "obj2": 0.43956630182425177}, {"determining": "( ( ( ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) + FirstVNF_CPU_Server ) ,Min( ( Max( FirstVNF_RAM_Server,( Max( Const,ACS ) * ACS ) ) + ARS ) ,Const ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + ( CS + CS ) ) ) ,Min( ( ( RMSe * MUC ) + ( DS - MUM ) ) ,MLU ) )", "obj1": 0.45072992700729925, "obj2": 0.540476056353547}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( ACS * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( DS + MUR ) + ( CS / ( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8485401459854015, "obj2": 0.08575820015844898}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.019374066404774567}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "( ( PN - ( ( ( Min( Min( ( BR * MRS ) ,CRS ) ,MDR ) * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Max( Max( MRS,Min( CRS ,( FirstVNF_CPU_Server + ( CRS * Const ) ) ) ),AMS ) )", "choosing": "Min( Min( ( RCSe + MUM ) ,DS ) ,Min( ( Max( ( RMSe - MLU ),Min( RMSe ,MUC ) ) + ( MUC * ( DS + ( MUM * DS ) ) ) ) ,MLU ) )", "obj1": 0.9306569343065694, "obj2": 0.032911350911638534}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( BR / Min( AMS ,PN ) ) + Min( DDR ,FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,PN ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,( DS / RCSe ) ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.47380089032892736}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.5985272755823101}, {"determining": "( ( PN - ( ( ACS - ( ACS - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( ACS * FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( DS ,MUR ) ),RRSe ) - ( MUC / Min( Max( Max( RCSe,CS ),( DS * ( MLU - ( MUC * RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.843065693430657, "obj2": 0.08803684225992726}, {"determining": "Max( ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( ( CRS + Const ) - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( BR,RRS ),( MRS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUM ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.43956630182425177}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ACS ) / ( ( ( BR - ( ( AMS / CRS ) * AMS ) ) + FirstVNF_CPU ) + ( Max( ACS,Max( Min( PN ,Min( ARS ,ARS ) ),PN ) ) - FirstVNF_CPU ) ) ) ,( FirstVNF_RAM + ( ( Const * ( ( Min( Min( MRS ,ACS ) ,( CRS / AMS ) ) + MRS ) - FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "( Max( ( ( Max( CS,MLU ) * MUC ) / ( RCSe / ( RCSe * RMSe ) ) ),MUR ) + ( ( RRSe / ( RMSe + Min( MUR ,DS ) ) ) - Max( ( MUR + RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( Min( PN ,Const ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + RCSe ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0021086110367792123}, {"determining": "( Min( ( ( Const - MRS ) * ( ( CRS - ( FirstVNF_CPU * ( ( RRS / BR ) - ( FirstVNF_Mem + PN ) ) ) ) + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC + ( ( Min( RMSe ,Max( Max( RMSe,MUR ),Max( MUM,RRSe ) ) ) / RMSe ) * MUC ) ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,RCSe ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( PN - ( ( ( ( ( Const / CRS ) + MDR ) * FirstVNF_Mem_Server ) - ( ARS - FirstVNF_Mem_Server ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( ( RMSe - CS ) * Max( ( Max( Max( CS,( Max( MLU,MUC ) / RMSe ) ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.029783768080992867}, {"determining": "Min( ( ACS / FirstVNF_CPU ) ,( BR - BR ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MUC - CS ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( Max( CS,MUM ) / ( RCSe / CS ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "( Max( ( ( Max( PN,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),AMS ) - Max( BR,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "Min( ( ( RRS / AMS ) + ACS ) ,Min( Min( CRS ,( ( ( CRS + Min( ( FirstVNF_Mem_Server * CRS ) ,MRS ) ) + Min( MDR ,( Max( RRS,MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) ) ) * MRS ) ) ,BR ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( MLU ,RCSe ) ) + CS ) ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4981751824817518, "obj2": 0.45901499633663795}, {"determining": "Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( AMS + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MLU + MUC ) ,( MUC * MUM ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "Max( Max( FirstVNF_CPU_Server,AMS ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,Min( Max( MDR,ACS ) ,( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Max( RMSe,( ( MUC - ( MUR + ( Max( RCSe,DS ) - CS ) ) ) - MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.039809122702102163}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,CRS ) - ( MDR - MDR ) ) * FirstVNF_Mem ),( ( Max( ACS,CRS ) + FirstVNF_CPU_Server ) * ( Max( MDR,( ( CRS / Const ) / BR ) ) + Min( MRS ,AMS ) ) ) )", "choosing": "Min( ( ( MLU - RRSe ) * DS ) ,( ( RCSe * RMSe ) * ( ( MUM * ( DS + DS ) ) + ( RMSe * ( RMSe * RMSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "( ( PN - ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) + BR ) ) - ( ( ACS / ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( MLU / MUR ) ) ) ) ) - Min( ( RMSe * ( ( MUM + MUM ) + ( ( Max( RMSe,Min( MUR ,MUC ) ) * ( MUR * CS ) ) + RCSe ) ) ) ,MUM ) )", "obj1": 0.5638686131386861, "obj2": 0.3921389933198096}, {"determining": "( ( PN - ( ( ( ( Min( ( BR * FirstVNF_CPU ) ,PN ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( Max( DS,DS ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8667883211678832, "obj2": 0.07944592144749085}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ( ( CRS / Const ) / BR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9872262773722628, "obj2": 0.003304724229185155}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MUC - Min( ( ( DS * Min( Max( RMSe,RRSe ) ,( MLU / MUR ) ) ) + Max( CS,MLU ) ) ,( ( DS + RRSe ) + ( RRSe * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03536471337658175}, {"determining": "( ( ( ( ARS * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RCSe,( ( RRSe / MLU ) + ( RRSe * RCSe ) ) ) + ( ( MLU / CS ) + RMSe ) ) + MLU ) * RRSe ) / ( MUR * DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Min( DS ,DS ) ) + Min( MUR ,MUR ) ) ) ,( MUC + ( ( MUM - CS ) + MUR ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5177538973990609}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( BR * FirstVNF_CPU_Server ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( CS,RRSe ) ) ) - ( ( ( RRSe / ( MUR * MUR ) ) + DS ) / ( CS * Max( RCSe,RCSe ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.026221533588861638}, {"determining": "Max( ( ( MDR - ARS ) + ( PN * BR ) ),( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( CS / ( ( MUM - DS ) - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.3905109489051095, "obj2": 0.6747037262680188}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5758626777529999}, {"determining": "( ( PN - ( ( ( ( Min( FirstVNF_RAM ,BR ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( ( ( CS / RMSe ) - RCSe ) * MUC ) + ( MUM * ( MUR + CS ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.026221533588861638}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,( ( Min( MRS ,( RRS + FirstVNF_RAM ) ) + Const ) / AMS ) ) ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,( ( ( MUR / ( MUR / ( RCSe * CS ) ) ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5702657049834851}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ( ( CRS / Const ) / BR ) ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - DS ) / DS ) + MLU ) ) )", "obj1": 0.9872262773722628, "obj2": 0.003304724229185155}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( ( RMSe + Min( MUR ,DS ) ) + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "( ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem_Server,( Max( MRS,( FirstVNF_Mem_Server / ACS ) ) + MDR ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + FirstVNF_Mem ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / ( RMSe / ( ( ( MUC + MUC ) - RMSe ) / ( MUC + CS ) ) ) ) ) * MUR ) * Min( ( DS * MLU ) ,RRSe ) )", "obj1": 0.9726277372262774, "obj2": 0.015016219999377967}, {"determining": "Max( ( Max( ( ( ( ( Max( PN,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_Mem_Server,MDR ) ) + ( PN * BR ) ),( ARS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.41788321167883213, "obj2": 0.5936125071716619}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MUC - Min( ( ( DS * Min( Max( RMSe,RRSe ) ,( MUR / MLU ) ) ) - Max( CS,MLU ) ) ,( ( DS + RRSe ) + ( RRSe * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03536471337658175}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RCSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.916058394160584, "obj2": 0.039809122702102163}, {"determining": "( ( PN - ( ( ( ( Min( PN ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( ( RMSe + Min( MUR ,DS ) ) + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8357664233576643, "obj2": 0.09447941700874443}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM - DDR ) + ( ARS + ( DDR + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( RRSe / ( DS / MUR ) ) ),RCSe ),( ( RRSe * CS ) + RRSe ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_Mem ,( PN * MRS ) ),FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MLU * MUR ) - MUR )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "( Min( ( FirstVNF_CPU_Server + Max( Max( Const,ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - Const ) * FirstVNF_CPU ) + Max( MDR,ACS ) ) ) ) ) ,( ACS / MDR ) ) / Max( PN,AMS ) )", "choosing": "( ( ( RCSe + CS ) + Max( Max( ( DS + CS ),RMSe ),Max( ( Max( CS,RRSe ) + ( RRSe + MLU ) ),( Min( CS ,Max( MLU,( MUR - RCSe ) ) ) - MLU ) ) ) ) / Min( ( MUM + RCSe ) ,Max( CS,RRSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5042849641040327}, {"determining": "( Min( ( ( ( AMS + Min( FirstVNF_CPU ,MRS ) ) - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Max( ( CRS * FirstVNF_Mem ),Min( ( Max( ACS,( AMS / AMS ) ) * FirstVNF_CPU_Server ) ,( Min( MDR ,ACS ) + ( ( CRS - DDR ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( ( MUC - MUR ) + CS ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5440399788240241}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( Max( Max( Max( PN,Max( FirstVNF_RAM_Server,DDR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( MUC * RMSe ) + ( MUM * ( ( ( ( MUM + MUC ) / MUM ) + MUM ) + CS ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.49873667290247287}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "Max( ( Max( ( ( ( ( Max( PN,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,AMS ) ) ) * FirstVNF_RAM ),Max( FirstVNF_Mem_Server,MDR ) ) + ( PN * BR ) ),( ARS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.48905109489051096, "obj2": 0.46881502334957986}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127453587198783}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) ) ) )", "choosing": "( ( MUM * MLU ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( MUC + ( ( MUM - CS ) + MUR ) ) * RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4635036496350365, "obj2": 0.5175506300393913}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( CS / Min( ( RCSe + MUM ) ,DS ) )", "obj1": 0.4708029197080292, "obj2": 0.5048508686321052}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + RRS ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / ( RMSe / ( ( RMSe - CS ) / ( MUC + CS ) ) ) ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.9726277372262774, "obj2": 0.015016219999377967}], "14": [{"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * MDR ) * ( ARS - Min( MRS ,DDR ) ) ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( ( MUR / DS ) * ( MLU * ( Min( Min( Min( RRSe ,RCSe ) ,( RCSe / MUR ) ) ,MUM ) - RCSe ) ) ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6725036665876521}, {"determining": "Min( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + FirstVNF_RAM ) ,( Min( ( ARS / Const ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) ) ,( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Max( RCSe,CS ),Max( MLU,Min( MUR ,MUR ) ) ) + MUR ) + MLU ) * RRSe ) + ( Max( MUR,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) * DS ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( ( PN - ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) )", "obj1": 0.7299270072992701, "obj2": 0.1703598962431382}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( RRS * ( Const / FirstVNF_Mem ) ) ) + MDR ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( MUM * ( DS + CS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139926}, {"determining": "( ( PN - ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16787253995558113}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.09568870529136943}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.3817351428765583}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895443}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.36272514778014664}, {"determining": "Min( ( ( RRS / AMS ) + ACS ) ,Min( Min( CRS ,( ( ( CRS + Min( ( FirstVNF_Mem_Server * CRS ) ,MRS ) ) + Min( MDR ,( Max( RRS,MDR ) + Max( FirstVNF_RAM_Server,ARS ) ) ) ) * MRS ) ) ,BR ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( MLU ,RCSe ) ) + CS ) ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.5364963503649635, "obj2": 0.4024718235574916}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.06313669600179234}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3951185399150238}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( ( MUC * ( ( MUM - Min( DS ,DS ) ) + Min( MUR ,MUR ) ) ) * ( DS + CS ) ) ) ) )", "obj1": 0.5821167883211679, "obj2": 0.35807936062137796}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( ( Const * BR ) ,CRS ) ) ) + BR ) ) - ( ( FirstVNF_Mem * ARS ) * ( Max( ( ( FirstVNF_RAM + ( Max( MRS,Const ) + ACS ) ) - Min( ARS ,MRS ) ),FirstVNF_Mem ) * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( MUR + ( CS / CS ) ) ) )", "obj1": 0.6076642335766423, "obj2": 0.31085913350359623}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5039489568385831}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( RCSe + MUM ) ,DS ) ,Min( ( Max( ( RMSe - MLU ),Min( RMSe ,MUC ) ) + ( MUC * ( DS + ( MUM * DS ) ) ) ) ,MLU ) )", "obj1": 0.6113138686131386, "obj2": 0.3066114119649716}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( Max( MRS,Max( FirstVNF_RAM_Server,BR ) ),AMS ) * ACS ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( DS * MUC ) - Max( CS,DS ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2951939799833536}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( CRS / Const ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( DS + MUR ) + ( CS / ( ( DS + RRSe ) + MLU ) ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8576642335766423, "obj2": 0.07628349589389866}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( MUC - CS ) ) ) + CS ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( FirstVNF_RAM / ( ( ( MDR / Min( MDR ,DDR ) ) * Const ) / CRS ) ) - ( ( BR / ( FirstVNF_RAM_Server / Const ) ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( DS * MLU ) / RRSe ) * ( DS / RMSe ) )", "obj1": 0.698905109489051, "obj2": 0.24279640808985767}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( AMS,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Min( Min( MRS ,AMS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MLU - CS ) / ( ( ( Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) / Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( RMSe,RRSe ) ,Max( MUR,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4767966883457764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MLU * MUR ) - MUR )", "obj1": 0.5948905109489051, "obj2": 0.32503525356048596}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( Min( CRS ,( FirstVNF_RAM * MDR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * MUR ) + ( MUC * RCSe ) ),MUM ) * Min( ( Max( ( ( CS + RCSe ) / RMSe ),RCSe ) - MUM ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301131}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,Min( ( MLU + MUC ) ,( MUC * DS ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.3600785635555166}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( CS - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.619722187450246}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( MUR ,MUR ) ) ) ,( MUC + ( ( MUM - CS ) + MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5208505591534435}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) ) ) )", "choosing": "( ( MUM * MLU ) - Min( ( ( DS * MUC ) - Max( CS,DS ) ) ,( ( ( MUC + ( ( MUM - CS ) + MUR ) ) * RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.4635036496350365, "obj2": 0.5175506300393913}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,( CRS / DDR ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MLU * ( DS + DS ) ) ) ) * Min( ( MLU * MLU ) ,( MLU - MLU ) ) ) - CS ) / ( Min( MLU ,( ( MLU * MUC ) + ( RRSe * MUC ) ) ) + CS ) ) )", "obj1": 0.8722627737226277, "obj2": 0.07587822333177205}, {"determining": "( ARS - ( MRS / MRS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.677007299270073, "obj2": 0.26739214828877206}, {"determining": "( ( ( ( Max( AMS,Const ) * ACS ) / Min( AMS ,RRS ) ) + FirstVNF_CPU_Server ) - ( Min( ( BR * ( BR / CRS ) ) ,FirstVNF_CPU ) + Max( MDR,ACS ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.019374066404774567}, {"determining": "( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * ( ( ( ACS * ARS ) / Min( AMS ,FirstVNF_Mem_Server ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( MUC * RCSe ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5341416831951703}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.3320032604612572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( DS ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.8740875912408759, "obj2": 0.07492288066923307}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( ( ( CRS / Const ) / BR ) * MDR ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.2543552668968492}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Max( RCSe,( CS + CS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5948905109489051, "obj2": 0.32503525356048596}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - FirstVNF_Mem ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5, "obj2": 0.45751714490121165}, {"determining": "( ( PN / ( ( ( BR * Min( ( ARS * ( FirstVNF_CPU_Server / MRS ) ) ,MDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( ( RMSe / ( DS - Max( ( CS + MUC ),Min( MUM ,MUC ) ) ) ),CS ) ) ,( ( DS * MLU ) / RRSe ) ) )", "obj1": 0.8558394160583942, "obj2": 0.08430966194835601}, {"determining": "( Max( ( ( Max( PN,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),AMS ) - ( AMS * ACS ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "( Max( ( ( Max( PN,AMS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),AMS ) - Max( BR,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "Min( ( ( RRS + AMS ) + ( CRS + RRS ) ) ,Min( Min( CRS ,( ( FirstVNF_Mem - ( DDR - Min( RRS ,MDR ) ) ) - AMS ) ) ,BR ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( Min( ( MLU / RCSe ) ,MUR ),Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( MLU ,RCSe ) ) + MLU ) ) + MLU ) * ( CS - ( MUM + RMSe ) ) ) * ( MUR * MUC ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5864164220179074}, {"determining": "( Min( ( ( Const - MRS ) * ( ( CRS - ( FirstVNF_CPU * ( ( RRS / BR ) - ( FirstVNF_Mem + PN ) ) ) ) + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC + ( ( Min( RMSe ,Max( Max( RMSe,MUR ),Max( MUM,RRSe ) ) ) / RMSe ) * MUC ) ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,RCSe ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( Min( PN ,Const ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( DS ,DS ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + RCSe ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0021086110367792123}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + ( DDR / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( ( ( MRS / Const ) / BR ) * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * ( ( ( Min( RMSe ,Max( MUR,( RMSe + MUR ) ) ) - Max( DS,DS ) ) * ( ( ( CS * ( MUR - MUR ) ) - MUR ) * MUC ) ) * DS ) ) * ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( RRSe ,Max( ( CS + MUC ),RCSe ) ) ) ) )", "obj1": 0.6897810218978102, "obj2": 0.25290889583203174}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( Max( Max( Max( PN,Max( FirstVNF_RAM_Server,DDR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( MUC * RMSe ) + ( MUM * ( ( ( ( MUM + MUC ) / MUM ) + MUM ) + CS ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.49873667290247287}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "Min( ( ACS / FirstVNF_CPU ) ,( BR - BR ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MUC - CS ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( Max( CS,MUM ) / ( RCSe / CS ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ( ( CRS / Const ) / BR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9872262773722628, "obj2": 0.003304724229185155}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.843065693430657, "obj2": 0.08803684225992726}, {"determining": "Max( ( CRS * FirstVNF_Mem ),Min( ( Max( ( ( CRS - DDR ) + FirstVNF_CPU ),CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - DDR ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5359379389721393}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.578293207398348}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + RCSe ) ) )", "obj1": 0.9215328467153284, "obj2": 0.036736593646384916}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40128274051084956}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) + FirstVNF_CPU_Server ) ,Min( ( Max( FirstVNF_RAM_Server,( Max( Const,ACS ) * ACS ) ) + ARS ) ,Const ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + ( CS + CS ) ) ) ,Min( ( ( RMSe * MUC ) + ( DS - MUM ) ) ,MLU ) )", "obj1": 0.45072992700729925, "obj2": 0.540476056353547}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895443}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5758626777529999}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( ( ACS * ARS ) / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( ( ( CRS / Const ) / BR ) * MDR ) ) )", "choosing": "( ( ( DS + RRSe ) * MUR ) * ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) )", "obj1": 0.6897810218978102, "obj2": 0.25290889583203174}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ( ( CRS / Const ) / BR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9872262773722628, "obj2": 0.003304724229185155}, {"determining": "Max( ( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( ( RMSe + Min( MUR ,DS ) ) + MUR ) + ( CS / MUC ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "( ( PN - ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( MRS ,CRS ) + MDR ) * FirstVNF_CPU_Server ) ) + BR ) ) - ( ( MRS + BR ) - MDR ) )", "choosing": "Min( Min( ( MUM + RCSe ) ,DS ) ,Min( ( Min( MLU ,MUM ) + ( MUC * Max( DS,CS ) ) ) ,MLU ) )", "obj1": 0.9361313868613139, "obj2": 0.030037713701078897}, {"determining": "( ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem_Server,( Max( MRS,( FirstVNF_Mem_Server / ACS ) ) + MDR ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + FirstVNF_Mem ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / ( RMSe / ( ( ( MUC + MUC ) - RMSe ) / ( MUC + CS ) ) ) ) ) * MUR ) * Min( ( DS * MLU ) ,RRSe ) )", "obj1": 0.9726277372262774, "obj2": 0.015016219999377967}, {"determining": "Max( ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) ),Min( ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ,( Min( ( ARS + ( ( CRS + Const ) - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( BR,RRS ),( Const - Const ) ) ) * MDR ) + ( RRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( ( MUR * RMSe ) * ( CS * Max( Min( MUR ,MLU ),( MUM / MUM ) ) ) ) / Min( DS ,( Min( MUC ,RMSe ) + Min( ( DS - RRSe ) ,( MUC * DS ) ) ) ) ) ,RMSe ) - ( RCSe * MUC ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4612518039702279}, {"determining": "( ( PN - ( ( ( ( ( Const / CRS ) + MDR ) * FirstVNF_Mem_Server ) - ( ARS - FirstVNF_Mem_Server ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( ( RMSe - CS ) * Max( ( Max( Max( CS,( Max( MLU,MUC ) / RMSe ) ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.029783768080992867}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM - DDR ) + ( ARS + ( DDR + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( RRSe / ( DS / MUR ) ) ),RCSe ),( ( RRSe * CS ) + RRSe ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( ACS * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.8485401459854015, "obj2": 0.08575820015844898}, {"determining": "( ( PN - ( ( ACS - ( ACS - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( ACS * FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( DS ,MUR ) ),RRSe ) - ( MUC / Min( Max( Max( RCSe,CS ),( DS * ( MLU - ( MUC * RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.843065693430657, "obj2": 0.08803684225992726}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5072992700729927, "obj2": 0.43956630182425177}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_Mem ,( PN * MRS ) ),FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( RCSe ,MLU ) ) + MLU ) ) + MLU ) * ( CS - ( MUM + RMSe ) ) ) * ( MUR * DS ) ) )", "obj1": 0.9051094890510949, "obj2": 0.04550905371072535}, {"determining": "Min( ( ACS / Min( FirstVNF_Mem_Server ,( MDR * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) - Min( FirstVNF_RAM_Server ,ACS ) ) * ( Max( FirstVNF_Mem,RRS ) + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( ( MUM * MLU ) - ( MLU + MUR ) ) * Min( Min( ( RCSe + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) - Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * RRSe ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "Max( Max( FirstVNF_CPU_Server,AMS ),Min( ( Max( CRS,ACS ) * FirstVNF_CPU_Server ) ,Min( Max( MDR,ACS ) ,( ( CRS - RRS ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Max( RMSe,( ( MUC - ( MUR + ( Max( RCSe,DS ) - CS ) ) ) - MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5670113595202629}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,( ACS / AMS ) ) ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5702657049834851}, {"determining": "Max( ( CRS * FirstVNF_Mem ),Min( ( Max( ACS,( AMS / AMS ) ) * FirstVNF_CPU_Server ) ,( Min( MDR ,ACS ) + ( ( CRS - DDR ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( ( MUC - MUR ) + CS ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5440399788240241}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.43956630182425177}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( ( FirstVNF_RAM_Server * ARS ) * ( ACS * ARS ) ) )", "choosing": "( ( ( MLU - CS ) / ( RMSe - ( RCSe + RMSe ) ) ) / ( MUC - MLU ) )", "obj1": 0.916058394160584, "obj2": 0.039809122702102163}, {"determining": "Max( ( ( ( PN * FirstVNF_RAM ) - FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,BR ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Max( ( RCSe + RCSe ),( MLU - RCSe ) ) ),Min( ( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ,DS ) )", "obj1": 0.43795620437956206, "obj2": 0.5699727009416298}], "15": [{"determining": "( ( ( FirstVNF_RAM * MDR ) * ( ARS - Min( MRS ,DDR ) ) ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( ( MUR / DS ) * ( MLU * ( Min( Min( Min( RRSe ,RCSe ) ,( RCSe / MUR ) ) ,MUM ) - RCSe ) ) ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6725036665876521}, {"determining": "( ( PN / ( ( ( BR * Min( ( ARS * ( FirstVNF_CPU_Server / MRS ) ) ,MDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( ( RMSe / ( DS - Max( ( CS + MUC ),Min( MUM ,MUC ) ) ) ),CS ) ) ,( ( DS * MLU ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( ( MUC * ( ( MUM - Min( DS ,DS ) ) + Min( MUR ,MUR ) ) ) * ( DS + CS ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6725036665876521}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * BR ) ) ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.7737226277372263, "obj2": 0.13246666987866532}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / ( MUM * ( DS + DS ) ) ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.7208029197080292, "obj2": 0.1693892543770674}, {"determining": "( ( PN - ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16787253995558113}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.09568870529136943}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Max( RRSe,MUM ) ) ) ) - MUR )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895442}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.3817351428765583}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.06313669600179234}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * ( CRS - Min( MRS ,MDR ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.395985401459854, "obj2": 0.6577129923467914}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3936528541802835}, {"determining": "( ( PN / ( ( ( ( Min( ( Const * MRS ) ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( Max( MLU,Max( ( ( DS + RCSe ) + ( MUM + Max( MUC,RCSe ) ) ),Min( ( MUC / Min( MUR ,MUM ) ) ,CS ) ) ) / RCSe ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3524531258633091}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( MLU ,RCSe ) ) + CS ) ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5675182481751825, "obj2": 0.36272514778014664}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Max( Max( MRS,Max( FirstVNF_RAM_Server,BR ) ),AMS ) * ACS ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.2705646272791466}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_Mem_Server,Max( AMS,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Min( Min( MRS ,AMS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MLU - CS ) / ( ( ( Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) / Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4947518067984889}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Max( RCSe,( CS + CS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.531021897810219, "obj2": 0.41432208345135557}, {"determining": "( ( PN - ( ( ( ( ( Const / CRS ) + MDR ) * FirstVNF_Mem_Server ) - ( ARS - FirstVNF_Mem_Server ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( ( RMSe - CS ) * Max( ( Max( Max( CS,( Max( MLU,MUC ) / RMSe ) ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.029783768080992867}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) - ( AMS * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RCSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5151198613934971}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.48905109489051096, "obj2": 0.46881502334957986}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Max( RCSe,( CS + CS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.30486154856048786}, {"determining": "( ( PN - ( ( ( ( Min( MRS ,CRS ) + MDR ) * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Max( Max( MRS,( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) ),AMS ) )", "choosing": "Min( Min( ( RCSe + MUM ) ,DS ) ,Min( ( Max( ( CS / MUC ),Min( RMSe ,CS ) ) + ( MUC * ( DS + CS ) ) ) ,MLU ) )", "obj1": 0.9288321167883211, "obj2": 0.033599572863872405}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,( ACS / AMS ) ) ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5702657049834851}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5039489568385831}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( DS * MUC ) - Max( CS,DS ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2951939799833536}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( Min( CRS ,( FirstVNF_RAM * MDR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * MUR ) + ( MUC * RCSe ) ),MUM ) * Min( ( Max( ( ( CS + RCSe ) / RMSe ),RCSe ) - MUM ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301131}, {"determining": "( ( FirstVNF_RAM / ( ( ( MDR / Min( MDR ,DDR ) ) * Const ) / CRS ) ) - ( ( BR / ( FirstVNF_RAM_Server / Const ) ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( DS * MLU ) / RRSe ) * ( DS / RMSe ) )", "obj1": 0.698905109489051, "obj2": 0.24279640808985767}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.6970802919708029, "obj2": 0.2490020733507869}, {"determining": "( ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem_Server,( Max( MRS,( FirstVNF_Mem_Server / ACS ) ) + MDR ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Min( ( ( Const - RRS ) * ( Min( PN ,BR ) + FirstVNF_Mem ) ) ,( ( PN * AMS ) * Max( DDR,DDR ) ) ) ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / ( RMSe / ( ( ( MUC + MUC ) - RMSe ) / ( MUC + CS ) ) ) ) ) * MUR ) * Min( ( DS * MLU ) ,RRSe ) )", "obj1": 0.9726277372262774, "obj2": 0.015016219999377967}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( CRS / Const ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) + ( ( DS + MUR ) + ( CS / ( ( DS + RRSe ) + MLU ) ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8576642335766423, "obj2": 0.07628349589389866}, {"determining": "( ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( DDR - CRS ) ) + BR ) - PN ) - ( Const - FirstVNF_Mem ) )", "choosing": "( ( MUM + MLU ) / ( ( RRSe * MUM ) * MUC ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6184824263946995}, {"determining": "( ARS - ( MRS / MRS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.677007299270073, "obj2": 0.26739214828877206}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40128274051084956}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MLU * MUR ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5346715328467153, "obj2": 0.40568557932050764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5164233576642335, "obj2": 0.42379434946248273}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * BR ) ) + ( FirstVNF_RAM_Server * CRS ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) + BR ) ) - Max( PN,AMS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - ( Max( MLU,RMSe ) - ( MLU * ( MLU / MUR ) ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8412408759124088, "obj2": 0.09380036546343593}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,Min( ( MLU + MUC ) ,( MUC * DS ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.3600785635555166}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( DS * MUC ) + RCSe ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03673659364638491}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.019374066404774567}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( MUR ,MUR ) ) ) ,( MUC + ( ( MUM - CS ) + MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5208505591534435}, {"determining": "( ( ( ACS + AMS ) - ( FirstVNF_Mem_Server - MDR ) ) * ( ( ( ACS * ARS ) / Min( AMS ,FirstVNF_Mem_Server ) ) * Max( Min( DDR ,MDR ),( MDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) + ( CS / MUC ) ) / ( MUC * RCSe ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( ( ( CS - RCSe ) - ( MUM - MUM ) ),DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5341416831951703}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,( CRS / DDR ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MLU * ( DS + DS ) ) ) ) * Min( ( MLU * MLU ) ,( MLU - MLU ) ) ) - CS ) / ( Min( MLU ,( ( MLU * MUC ) + ( RRSe * MUC ) ) ) + CS ) ) )", "obj1": 0.8722627737226277, "obj2": 0.07587822333177205}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.3320032604612572}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5864164220179074}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( DS ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.8740875912408759, "obj2": 0.07492288066923307}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.36272514778014664}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( ( ACS * ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( DS / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.9799270072992701, "obj2": 0.008249536157477193}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( CS - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( MLU,Max( RCSe,RCSe ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,Min( Const ,CRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( RCSe / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.8485401459854015, "obj2": 0.0848390553136342}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - FirstVNF_Mem ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5, "obj2": 0.45751714490121165}, {"determining": "( ( ( ( Min( MRS ,Min( Min( ( PN * FirstVNF_Mem_Server ) ,MDR ) ,( CRS * Min( FirstVNF_Mem ,DDR ) ) ) ) * ACS ) / Min( RRS ,AMS ) ) + FirstVNF_CPU_Server ) - Min( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ,Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( MUR / MUC ) ) / ( ( ( ( MUM - ( ( RMSe / MUC ) + Min( RRSe ,CS ) ) ) / RRSe ) - CS ) / ( MUM + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( Max( Max( Max( PN,Max( FirstVNF_RAM_Server,DDR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( MUC * RMSe ) + ( MUM * ( ( ( ( MUM + MUC ) / MUM ) + MUM ) + CS ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.49873667290247287}, {"determining": "( Min( PN ,( BR + ( ( FirstVNF_RAM_Server / ( PN * ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - ( AMS - PN ) ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( MLU + ( ( ( ( CS / DS ) * RMSe ) - Min( ( ( CS - MUR ) / MUC ) ,MLU ) ) / ( MUM * ( CS + Max( MLU,( CS + MUR ) ) ) ) ) ) )", "obj1": 0.6040145985401459, "obj2": 0.31614638211913704}, {"determining": "Min( ( ACS / FirstVNF_CPU ) ,( BR - BR ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MUC - CS ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( Max( CS,MUM ) / ( RCSe / CS ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5712153530815742}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5864164220179074}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.5364963503649635, "obj2": 0.4024718235574916}, {"determining": "( ( PN + ( ( ( ( Min( CRS ,( Const * PN ) ) + ( MRS + DDR ) ) * Min( MRS ,Max( FirstVNF_RAM_Server,DDR ) ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( MUR - ( RMSe / ( Max( MUR,Max( ( MUC - ( RMSe - ( RRSe - MUM ) ) ),( RCSe * ( Min( RMSe ,CS ) + ( CS * MLU ) ) ) ) ) * Min( Max( ( RMSe - MLU ),( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) ,Min( ( MLU + MUC ) ,( MUC / DS ) ) ) ) ) )", "obj1": 0.9014598540145985, "obj2": 0.047789285001130305}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( CRS / FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) + ( ( DS + MUR ) + ( CS / ( ( DS + RRSe ) + MLU ) ) ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Max( ( ( RCSe / CS ) / Max( CS,MUM ) ),( Max( DS,DS ) - Min( MUC ,RMSe ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.07961426114510799}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( Min( ( PN - ( BR + ( ( DDR * MDR ) - ( AMS - FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ,Min( MRS ,( MDR / Max( MRS,RRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,( Min( RMSe ,MLU ) / Min( MUR ,RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5858521274900418}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * Max( BR,Max( CRS,MDR ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( BR * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUM ,RMSe ) - Max( CS,DS ) ) ,( ( ( DS - RRSe ) + RRSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.6040145985401459, "obj2": 0.31614638211913704}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN - ACS ) ) + MDR ) * BR ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.843065693430657, "obj2": 0.08803684225992726}, {"determining": "Max( ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) ),Min( ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ,( Min( ( ARS + ( ( CRS + Const ) - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( BR,RRS ),( Const - Const ) ) ) * MDR ) + ( RRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( ( MUR * RMSe ) * ( CS * Max( Min( MUR ,MLU ),( MUM / MUM ) ) ) ) / Min( DS ,( Min( MUC ,RMSe ) + Min( ( DS - RRSe ) ,( MUC * DS ) ) ) ) ) ,RMSe ) - ( RCSe * MUC ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4612518039702279}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4612518039702279}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) - ( ( FirstVNF_RAM * MDR ) * ( ARS - RRS ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * ( MUR * ( Min( Min( Max( MUC,RMSe ) ,( RCSe / MUR ) ) ,MUM ) - RCSe ) ) ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( ACS * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.8521897810218978, "obj2": 0.0824466706394488}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( Min( PN ,MDR ) * MDR ) ) - ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.6861313868613139, "obj2": 0.2543552668968492}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ( ( CRS / Const ) / BR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9872262773722628, "obj2": 0.003304724229185155}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5072992700729927, "obj2": 0.43956630182425177}, {"determining": "Max( ( Max( ( ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6283258247408923}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( Max( AMS,( ( Max( PN,AMS ) - ( FirstVNF_RAM / ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * MRS ) ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) - ( AMS * ACS ) )", "choosing": "( ( MLU * MUR ) * ( ( MUM * ( ( CS - MLU ) * MUM ) ) / ( MUR * DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.42743724574041275}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6184824263946995}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6263217647601861}, {"determining": "Min( ( ACS / Min( ( AMS * ( FirstVNF_RAM / MRS ) ) ,FirstVNF_Mem_Server ) ) ,( ( Max( RRS,AMS ) - ( FirstVNF_RAM_Server * ACS ) ) * ( AMS + Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( MUM ,MUC ) ,Min( ( RCSe + MUM ) ,CS ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}], "16": [{"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( MDR - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( ( ( BR * Min( ( ARS * ( FirstVNF_CPU_Server / MRS ) ) ,MDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - Min( ( ACS * ARS ) ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe + CS ) - Min( ( ( DS * MUC ) - Max( ( RMSe / ( DS - Max( ( CS + MUC ),Min( MUM ,MUC ) ) ) ),CS ) ) ,( ( DS * MLU ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( ( MUC * ( ( MUM - Min( DS ,DS ) ) + Min( MUR ,MUR ) ) ) * ( DS + CS ) ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6778593727672756}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( ARS + AMS ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_RAM ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + ( ( MUR / ( MUR * RRSe ) ) - CS ) ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.1324666698786653}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6715328467153284, "obj2": 0.2646691227731555}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM ) - DDR ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( MUM + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.718978102189781, "obj2": 0.17043136985706492}, {"determining": "( ( PN - ( ( ( Min( CRS ,Min( CRS ,Min( MRS ,FirstVNF_CPU ) ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ARS - ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( RMSe - ( Min( ( MUM - Max( ( ( MUC + MUM ) * MLU ),RCSe ) ) ,MUM ) - MUM ) ) ,( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * RCSe ) ) )", "obj1": 0.7354014598540146, "obj2": 0.16775790895831527}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( MUM - ( MUC / MUR ) ) * MUR ) * ( ( DS * MLU ) / RRSe ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.09568870529136943}, {"determining": "( ( ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - PN ) - ( ( ACS * ARS ) * Max( MDR,( ( FirstVNF_RAM / PN ) * BR ) ) ) )", "choosing": "( ( ( RCSe - MUC ) * MLU ) - ( MLU + MUR ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "( ( PN * Min( MRS ,MDR ) ) - ( ( ( Min( ARS ,MRS ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( Min( MUM ,RRSe ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( DS - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895442}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + ( RCSe / MUR ) ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3774024918711923}, {"determining": "( ( ( ( Max( Min( Max( FirstVNF_CPU,DDR ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server - ( AMS - FirstVNF_RAM_Server ) ) ) - PN ) - ( ( ( RRS * ( Const / FirstVNF_Mem ) ) * ( FirstVNF_RAM * AMS ) ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( Min( Const ,CRS ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( RCSe - ( CS / MUM ) ) - MUR ) - DS ) / ( MLU - RCSe ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06257409403340289}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * ( CRS - Min( MRS ,MDR ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.395985401459854, "obj2": 0.6577129923467914}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU_Server + CRS ) - ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + Const ) * FirstVNF_Mem_Server ) ) + BR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + Max( MUR,MLU ) ) ) ,MUC ) ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.06313669600179234}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9105839416058394, "obj2": 0.04318686067687792}, {"determining": "( ( PN / ( ( ( ( Min( ( Const * MRS ) ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( Max( MLU,Max( ( ( DS + RCSe ) + ( MUM + Max( MUC,RCSe ) ) ),Min( ( MUC / Min( MUR ,MUM ) ) ,CS ) ) ) / RCSe ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3524531258633091}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6240875912408759, "obj2": 0.29381476377969007}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( DS * MUC ) + RCSe ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03673659364638491}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( MLU,Max( RCSe,RCSe ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ),ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( ( ( RCSe - MUR ) - DS ) ,MUR ) ) ) ,( MUC + ( ( MUM - CS ) + MUR ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5316310204018683}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( Min( PN ,MDR ) * MDR ) ) - ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.6861313868613139, "obj2": 0.2543552668968492}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6354769456505948}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + Max( ( Const / ARS ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( ( ( CRS - RRS ) * FirstVNF_CPU ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) ) ) / Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM_Server,Min( Max( Max( Max( PN,Max( FirstVNF_RAM_Server,DDR ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) ) ,Min( MLU ,( ( MUC * RMSe ) + ( MUM * ( ( ( ( MUM + MUC ) / MUM ) + MUM ) + CS ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.49873667290247287}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,MUC ) / Min( RCSe ,Min( Max( CS,RRSe ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( CS / CS ) ) ) ) ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.48198371651030186}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( BR - CRS ) ) + BR ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MLU,RCSe ) - ( ( ( Min( RMSe ,CS ) / ( MLU / Min( Max( RMSe,MUR ) ,CS ) ) ) / CS ) * ( DS * MUR ) ) )", "obj1": 0.5291970802919708, "obj2": 0.40850332741521383}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.3320032604612572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,Min( ( MLU + MUC ) ,( MUC * DS ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.3600785635555166}, {"determining": "( ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( DDR - CRS ) ) + BR ) - PN ) - ( Const - FirstVNF_Mem ) )", "choosing": "( ( MUM + MLU ) / ( ( RRSe * MUM ) * MUC ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( Min( MUM ,CS ) / MLU ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46204676735169004}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( Max( ( CS / MUC ),Min( RMSe ,CS ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.8576642335766423, "obj2": 0.07628349589389863}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( CS / ( RMSe - DS ) ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6131386861313869, "obj2": 0.3064419548165819}, {"determining": "( ( AMS * ACS ) - ( ( ( CRS / ( BR * MRS ) ) + MDR ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RRSe ) / ( RMSe * RRSe ) ) ) ,Min( MLU ,( ( RMSe * ( ( ( Min( RRSe ,MUC ) + MUM ) * RRSe ) + MUC ) ) / ( MUM * ( DS + ( DS - CS ) ) ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.026210631591707938}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,( MUM * ( DS + CS ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5357750961091352}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * BR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.02978376808099286}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( Max( ACS,CRS ) + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * ( DS * ( ( RCSe - MUR ) - DS ) ) ) ) ) - MUR ) )", "obj1": 0.4197080291970803, "obj2": 0.5844015188360422}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( Min( CRS ,( FirstVNF_RAM * MDR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * MUR ) + ( MUC * RCSe ) ),MUM ) * Min( ( Max( ( ( CS + RCSe ) / RMSe ),RCSe ) - MUM ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.8978102189781022, "obj2": 0.04971491548301131}, {"determining": "( ( PN + ( ( ( ( Min( CRS ,( Const * PN ) ) + ( MRS + DDR ) ) * Min( MRS ,Max( FirstVNF_RAM_Server,DDR ) ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( MUR - ( RMSe / ( Max( MUR,Max( ( MUC - ( RMSe - ( RRSe - MUM ) ) ),( RCSe * ( Min( RMSe ,CS ) + ( CS * MLU ) ) ) ) ) * Min( Max( ( RMSe - MLU ),( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) ,Min( ( MLU + MUC ) ,( MUC / DS ) ) ) ) ) )", "obj1": 0.9014598540145985, "obj2": 0.047789285001130305}, {"determining": "( ( FirstVNF_RAM / ( ( ( MDR / Min( MDR ,DDR ) ) * Const ) / CRS ) ) - ( ( BR / ( FirstVNF_RAM_Server / Const ) ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( ( ( DS * MLU ) / RRSe ) * ( DS / RMSe ) )", "obj1": 0.698905109489051, "obj2": 0.24279640808985767}, {"determining": "Min( Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM ) ,( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + CRS ) ) / Min( FirstVNF_Mem ,( PN * MRS ) ) ) )", "choosing": "( ( MLU * ( ( ( MLU * MUR ) - ( MUM + CS ) ) * DS ) ) * ( ( ( RMSe - RCSe ) + CS ) + Min( MUC ,( CS * RCSe ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3936528541802835}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,( CRS / DDR ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MLU * ( DS + DS ) ) ) ) * Min( ( MLU * MLU ) ,( MLU - MLU ) ) ) - CS ) / ( Min( MLU ,( ( MLU * MUC ) + ( RRSe * MUC ) ) ) + CS ) ) )", "obj1": 0.8722627737226277, "obj2": 0.07587822333177205}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5039489568385831}, {"determining": "( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "Min( ( ACS / FirstVNF_CPU ) ,( BR - BR ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MUC - CS ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( Max( CS,MUM ) / ( RCSe / CS ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6184824263946995}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server - MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( DS * MUC ) - Max( CS,DS ) ),( ( MUC + RRSe ) + ( MUR / RMSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.6186131386861314, "obj2": 0.3025767589865451}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.6970802919708029, "obj2": 0.2490020733507869}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_RAM_Server / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.7062043795620438, "obj2": 0.23863159692134764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8394160583941606, "obj2": 0.0913364550296179}, {"determining": "( ( ( ( ARS - MRS ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.9543795620437956, "obj2": 0.019374066404774567}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,( ACS / AMS ) ) ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5702657049834851}, {"determining": "Max( ( Max( ( ( ( ( ( DDR - FirstVNF_Mem ) / ( BR - PN ) ) * ( FirstVNF_RAM_Server * ACS ) ) * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,Min( RCSe ,Min( MLU ,MLU ) ) ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RCSe ) / MUR ) ) * ( MUR - ( CS + MUM ) ) ) * Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6291769819404794}, {"determining": "( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),AMS ) - ( AMS * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) )", "obj1": 0.5, "obj2": 0.4526397755261473}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3176994102346253}, {"determining": "( ( PN - ( ( ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + RRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( MUC ,RCSe ) ,Min( MLU ,( ( RMSe * Min( RMSe ,MLU ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5456204379562044, "obj2": 0.3936528541802835}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( ( CS + MUM ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.4635036496350365, "obj2": 0.5133645263030703}, {"determining": "( ( FirstVNF_Mem - ARS ) - ( ( ( Const / Max( ( Max( MRS,CRS ) / MRS ),( ( ( FirstVNF_RAM * BR ) + ( Const / FirstVNF_Mem ) ) + Max( MDR,FirstVNF_RAM ) ) ) ) / BR ) + ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.9781021897810219, "obj2": 0.00995924843541294}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / ( FirstVNF_RAM_Server + ( ( Const / ACS ) * AMS ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.458029197080292, "obj2": 0.5208505591534435}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Max( RCSe,( CS + CS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2940134326259663}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + ( Min( PN ,BR ) + RRS ) ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( CS / DS ) * DS ) ,( ( ( RMSe / ( ( RMSe - CS ) / ( MUC + CS ) ) ) * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5486125585902363}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( DS ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.8740875912408759, "obj2": 0.07492288066923307}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( MUR ,MUR ) ) ) ,( MUC + ( ( MUM - CS ) + MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5208505591534435}, {"determining": "( Min( PN ,( BR + ( ( FirstVNF_RAM_Server / ( PN * ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - ( AMS - PN ) ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( MLU + ( ( ( ( CS / DS ) * RMSe ) - Min( ( ( CS - MUR ) / MUC ) ,MLU ) ) / ( MUM * ( CS + Max( MLU,( CS + MUR ) ) ) ) ) ) )", "obj1": 0.6040145985401459, "obj2": 0.31614638211913704}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40128274051084956}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.09568870529136943}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) - ( AMS * ACS ) )", "choosing": "( ( RCSe + CS ) - Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( DS + RCSe ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5151198613934971}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.36272514778014664}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7208029197080292, "obj2": 0.1693892543770674}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * Max( FirstVNF_Mem_Server,AMS ) ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6265996444058964}, {"determining": "( ( ( ( Min( MRS ,Min( Min( ( PN * FirstVNF_Mem_Server ) ,MDR ) ,( CRS * Min( FirstVNF_Mem ,DDR ) ) ) ) * ACS ) / Min( RRS ,AMS ) ) + FirstVNF_CPU_Server ) - Min( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ,Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( MUR / MUC ) ) / ( ( ( ( MUM - ( ( RMSe / MUC ) + Min( RRSe ,CS ) ) ) / RRSe ) - CS ) / ( MUM + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "Max( ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) ),Min( ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ,( Min( ( ARS + ( ( CRS + Const ) - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( BR,RRS ),( Const - Const ) ) ) * MDR ) + ( RRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( ( MUR * RMSe ) * ( CS * Max( Min( MUR ,MLU ),( MUM / MUM ) ) ) ) / Min( DS ,( Min( MUC ,RMSe ) + Min( ( DS - RRSe ) ,( MUC * DS ) ) ) ) ) ,RMSe ) - ( RCSe * MUC ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4612518039702279}, {"determining": "( ( PN - ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16787253995558113}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + ( FirstVNF_CPU_Server * MRS ) ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * PN ) ) ) ) )", "choosing": "Min( ( RRSe - Min( ( ( DS - Max( ( Min( RMSe ,MLU ) - RMSe ),MUM ) ) * MUC ) ,( MUC * DS ) ) ) ,( Min( ( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,DS ) ) ) ) ,( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) - MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6203331624453242}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Max( RRSe,MUM ) ) ) ) - MUR )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895442}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * ( ( ( Min( RRSe ,MUC ) + MUM ) * RRSe ) + MUC ) ) / ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.6040145985401459, "obj2": 0.31614638211913704}, {"determining": "Max( ( ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( PN,RRS ),( AMS - FirstVNF_Mem ) ) ) * MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( MUC * ( ( MLU - ( RCSe / RRSe ) ) - MUC ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) - ( ( FirstVNF_RAM * MDR ) * ( ARS - RRS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.39233576642335766, "obj2": 0.665125128609572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( ACS * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.8521897810218978, "obj2": 0.08244667063944877}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "Min( ( MUC * ( ( MUM - MUR ) + Min( MUR ,MUR ) ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5712153530815742}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( FirstVNF_RAM_Server / BR ) * ( ( CRS / Const ) / BR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / CS ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.9872262773722628, "obj2": 0.003304724229185155}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9343065693430657, "obj2": 0.030993056363617866}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( CS ,RCSe ) ) + CS ) ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5844015188360422}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( Max( ( MUM + MLU ),RCSe ) - Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,RRSe ) ) + ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ( PN - ACS ) ) ) * FirstVNF_CPU_Server ) * ACS ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.5072992700729927, "obj2": 0.43956630182425177}], "17": [{"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * MUC ) + ( ( MUC * ( ( MUM - Min( DS ,DS ) ) + Min( MUR ,MUR ) ) ) * ( DS + CS ) ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6778593727672756}, {"determining": "( ( PN - ( ( ( AMS / Const ) - Min( FirstVNF_Mem_Server ,( MDR * Min( FirstVNF_CPU ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( ( MUM * MLU ) - ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( MDR - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.38686131386861317, "obj2": 0.6778593727672756}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.6934306569343066, "obj2": 0.194658207527067}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( CS / ( RMSe - DS ) ) - ( ( ( RCSe - ( ( MUR / CS ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2915951023730677}, {"determining": "( ( PN - ( ( ( Min( CRS ,( FirstVNF_RAM * MDR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) ) - ( AMS - BR ) )", "choosing": "( ( RMSe * MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.24710459871088455}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( ACS * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RMSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.7554744525547445, "obj2": 0.16438740843353952}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6715328467153284, "obj2": 0.2646691227731555}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8321167883211679, "obj2": 0.09784233078534318}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM ) - DDR ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( MUM + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.718978102189781, "obj2": 0.17043136985706492}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - CS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6554690702878587}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895442}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( ARS + AMS ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_RAM ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + ( ( MUR / ( MUR * RRSe ) ) - CS ) ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) / ( MLU / RCSe ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.1324666698786653}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * BR ) ) ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.1324666698786653}, {"determining": "( ( ( ( ARS - ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_RAM ) * MDR ) * FirstVNF_CPU ) ) - Min( RRS ,Min( ( ( FirstVNF_Mem * ( PN * Const ) ) / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) ) * ( AMS * FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * MDR ) + ( ( CRS / Const ) / BR ) ) )", "choosing": "Min( Max( DS,CS ) ,( ( Min( MLU ,Max( MUR,( ( ( RMSe * RRSe ) * DS ) / MUC ) ) ) - Max( ( Min( Min( MUR ,MUR ) ,( Max( MUR,RMSe ) / Min( RCSe ,RMSe ) ) ) + RRSe ),( MLU + ( RMSe - Max( MUR,MUC ) ) ) ) ) - DS ) )", "obj1": 0.9598540145985401, "obj2": 0.01489679953551851}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MLU * ( DS + DS ) ) ) ) * Min( ( MLU * MLU ) ,( MLU - MLU ) ) ) - CS ) / ( Min( MLU ,( ( MLU * MUC ) + ( RRSe * MUC ) ) ) + CS ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2646691227731555}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - ( ( CRS / Const ) / BR ) ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( ( MUC * RCSe ),DS ) ) ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * PN ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( RMSe + Min( MUR ,DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.0537108953966602}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "Min( ( ACS / FirstVNF_CPU ) ,( BR - BR ) )", "choosing": "( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( ( ( RRSe + CS ) * Min( Min( ( MUC - CS ) ,( MUC * DS ) ) ,Max( MUM,DS ) ) ) - CS ) / ( MUC + CS ) ) ) / Max( ( Max( CS,MUM ) / ( RCSe / CS ) ),Max( Max( DS,DS ),Min( MUC ,RMSe ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2615735568169765}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.39999277701668084}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( Min( CRS ,Min( CRS ,Min( MRS ,FirstVNF_CPU ) ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ARS - ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( RMSe - ( Min( ( MUM - Max( ( ( MUC + MUM ) * MLU ),RCSe ) ) ,MUM ) - MUM ) ) ,( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * RCSe ) ) )", "obj1": 0.7354014598540146, "obj2": 0.16775790895831527}, {"determining": "( ( ( ( ( ( CRS - ( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) / Max( ARS,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / Min( ( Const / BR ) ,ACS ) )", "choosing": "Max( MUR,( ( RMSe / RCSe ) / ( ( MUC / ( RRSe + ( MUC - Min( Max( MLU,DS ) ,RMSe ) ) ) ) + Min( Max( RMSe,Min( RMSe ,MUR ) ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ),ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( ( ( RCSe - MUR ) - DS ) ,MUR ) ) ) ,( MUC + ( ( MUM - CS ) + MUR ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5316310204018683}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * ( CRS - Min( MRS ,MDR ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.3886861313868613, "obj2": 0.6725036665876521}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.06313669600179234}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4333756465358317}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM * MLU ) - ( MLU + MUR ) )", "obj1": 0.5529197080291971, "obj2": 0.3774024918711923}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9343065693430657, "obj2": 0.030993056363617866}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.3320032604612572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( ( DS * ( ( RCSe - MUR ) - DS ) ) ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.6131386861313869, "obj2": 0.306012278218254}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.5474452554744526, "obj2": 0.39352388865287236}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( Min( MUM ,CS ) / MLU ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46204676735169004}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,( MUM * ( DS + CS ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5357750961091352}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( CS ,RCSe ) ) + CS ) ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5844015188360422}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( MLU + ( ( ( ( CS / DS ) * RMSe ) - Min( ( ( CS - MUR ) / MUC ) ,MLU ) ) / ( MUM * ( CS + Max( MLU,( CS + MUR ) ) ) ) ) ) )", "obj1": 0.8576642335766423, "obj2": 0.07628349589389863}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - Min( FirstVNF_CPU ,ARS ) ) + BR ) ) - ( ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( ( ( MUR / RCSe ) + ( MUC + CS ) ) / MUM ) ,MUR ) ) - MUC ) ) - Max( ( MLU / MLU ),( RRSe + ( RCSe * DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5036225079385077}, {"determining": "( ( PN / ( ( ( ( Min( ( Const * MRS ) ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( Max( MLU,Max( ( ( DS + RCSe ) + ( MUM + Max( MUC,RCSe ) ) ),Min( ( MUC / Min( MUR ,MUM ) ) ,CS ) ) ) / RCSe ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3524531258633091}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * BR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.02978376808099286}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem_Server - CRS ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5122220096798066}, {"determining": "( ( ( ACS * Max( FirstVNF_RAM,MRS ) ) * ( FirstVNF_RAM_Server * ACS ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server + CRS ) ) + BR ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,Max( ( DS * DS ),Max( RMSe,RRSe ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6167883211678832, "obj2": 0.30123139130849025}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,( CRS / DDR ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUR / DS ) * DS ) ,( ( RMSe * MUC ) + ( MLU * ( DS + DS ) ) ) ) * Min( ( MLU * MLU ) ,( MLU - MLU ) ) ) - CS ) / ( Min( MLU ,( ( MLU * MUC ) + ( RRSe * MUC ) ) ) + CS ) ) )", "obj1": 0.8722627737226277, "obj2": 0.07587822333177205}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03673659364638491}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( ( FirstVNF_Mem_Server - CRS ) * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,MUC ) / Min( RCSe ,Min( Max( CS,RRSe ) ,Max( CS,MUC ) ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5630384620032716}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6184824263946995}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "Max( ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) ),Min( ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ,( Min( ( ARS + ( ( CRS + Const ) - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( BR,RRS ),( Const - Const ) ) ) * MDR ) + ( RRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( ( MUR * RMSe ) * ( CS * Max( Min( MUR ,MLU ),( MUM / MUM ) ) ) ) / Min( DS ,( Min( MUC ,RMSe ) + Min( ( DS - RRSe ) ,( MUC * DS ) ) ) ) ) ,RMSe ) - ( RCSe * MUC ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4612518039702279}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MDR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUR - ( RCSe * ( Min( MUR ,MUR ) * ( MLU * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9124087591240876, "obj2": 0.04207395592565553}, {"determining": "( ( PN - ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( Min( RCSe ,( MUR / RCSe ) ) * ( RCSe * MLU ) ) ,( ( ( MUC / RCSe ) / ( Max( Min( MUM ,MLU ),RCSe ) - Min( Max( ( CS + CS ),RCSe ) ,RRSe ) ) ) - ( ( ( MUC - ( ( RRSe / MUC ) * DS ) ) / DS ) + MLU ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16787253995558113}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8394160583941606, "obj2": 0.0913364550296179}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,Min( ( MLU + MUC ) ,( MUC * DS ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.3600785635555166}, {"determining": "( Min( PN ,( BR + ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ACS * Max( Max( ( Const / RRS ),FirstVNF_CPU_Server ),( AMS * Const ) ) ) )", "choosing": "Min( Min( ( ( DS + RRSe ) + ( RMSe * RRSe ) ) ,( Min( MUC ,RMSe ) - Max( CS,DS ) ) ) ,Min( MLU ,( ( RMSe * ( ( ( Min( RCSe ,MUC ) + MUM ) * RRSe ) + MUC ) ) / ( MUM * ( DS + RCSe ) ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02725135233445927}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + ( RCSe / MUR ) ) + ( MUR / RCSe ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3774024918711923}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.843065693430657, "obj2": 0.08803684225992726}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MLU * MUR ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.40850332741521383}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5039489568385831}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( BR - CRS ) ) + BR ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MLU,RCSe ) - ( ( ( Min( RMSe ,CS ) / ( MLU / Min( Max( RMSe,MUR ) ,CS ) ) ) / CS ) * ( DS * MUR ) ) )", "obj1": 0.5291970802919708, "obj2": 0.40850332741521383}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( DS * MUC ) + RCSe ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03673659364638491}, {"determining": "( ( PN - ( ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( ( RMSe / RCSe ) * DS ) ) ) ) )", "obj1": 0.8485401459854015, "obj2": 0.08396651140685954}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / ( FirstVNF_RAM_Server + ( ( Const / ACS ) * AMS ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + MDR ) - FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUM / ( MLU * MLU ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + Max( Min( MLU ,MLU ),( CS / MUR ) ) ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.045509053710725354}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( MLU,Max( RCSe,RCSe ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42088066432404525}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( Min( PN ,( BR + ( ( FirstVNF_RAM_Server / ( PN * ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - ( AMS - PN ) ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( MLU + ( ( ( ( CS / DS ) * RMSe ) - Min( ( ( CS - MUR ) / MUC ) ,MLU ) ) / ( MUM * ( CS + Max( MLU,( CS + MUR ) ) ) ) ) ) )", "obj1": 0.6040145985401459, "obj2": 0.31614638211913704}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) * Min( DS ,( MLU - MLU ) ) ) - CS ) / ( MUC + CS ) ) )", "obj1": 0.8740875912408759, "obj2": 0.07492288066923307}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,( ACS / AMS ) ) ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5702657049834851}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( CS / ( RMSe - DS ) ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5675182481751825, "obj2": 0.36272514778014664}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7208029197080292, "obj2": 0.1693892543770674}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.458029197080292, "obj2": 0.5208505591534435}, {"determining": "( ( ( ( Min( MRS ,Min( Min( ( PN * FirstVNF_Mem_Server ) ,MDR ) ,( CRS * Min( FirstVNF_Mem ,DDR ) ) ) ) * ACS ) / Min( RRS ,AMS ) ) + FirstVNF_CPU_Server ) - Min( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ,Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( MUR / MUC ) ) / ( ( ( ( MUM - ( ( RMSe / MUC ) + Min( RRSe ,CS ) ) ) / RRSe ) - CS ) / ( MUM + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * Max( FirstVNF_Mem_Server,AMS ) ) ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5177538973990609}, {"determining": "( ( PN + ( ( ( ( Min( CRS ,( Const * PN ) ) + ( MRS + DDR ) ) * Min( MRS ,Max( FirstVNF_RAM_Server,DDR ) ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - CRS ) ) + BR ) ) - ( ( FirstVNF_Mem_Server * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( MUR - ( RMSe / ( Max( MUR,Max( ( MUC - ( RMSe - ( RRSe - MUM ) ) ),( RCSe * ( Min( RMSe ,CS ) + ( CS * MLU ) ) ) ) ) * Min( Max( ( RMSe - MLU ),( ( RMSe * MUC ) + ( MUM * ( DS + CS ) ) ) ) ,Min( ( MLU + MUC ) ,( MUC / DS ) ) ) ) ) )", "obj1": 0.9014598540145985, "obj2": 0.047789285001130305}, {"determining": "Max( ( Max( ( ( ( ( ( DDR - FirstVNF_Mem ) / ( BR - PN ) ) * ( FirstVNF_RAM_Server * ACS ) ) * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,Min( RCSe ,Min( MLU ,MLU ) ) ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RCSe ) / MUR ) ) * ( MUR - ( CS + MUM ) ) ) * Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6291769819404794}, {"determining": "( ( ( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / Min( CRS ,( BR * MRS ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( ( Min( RRSe ,MUC ) + MUM ),RRSe ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.48198371651030186}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + ( FirstVNF_CPU_Server * MRS ) ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( FirstVNF_RAM_Server - MDR ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * PN ) ) ) ) )", "choosing": "Min( ( RRSe - Min( ( ( DS - Max( ( Min( RMSe ,MLU ) - RMSe ),MUM ) ) * MUC ) ,( MUC * DS ) ) ) ,( Min( ( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,DS ) ) ) ) ,( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) - MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6203331624453242}, {"determining": "( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( CS / RMSe ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3524531258633091}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( RMSe * ( ( ( Min( RRSe ,MUC ) + MUM ) * RRSe ) + MUC ) ) / ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.6040145985401459, "obj2": 0.31614638211913704}, {"determining": "( ( PN * Min( MRS ,MDR ) ) - ( ( ( Min( ARS ,MRS ) * FirstVNF_Mem_Server ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( Min( MUM ,RRSe ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( DS - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.7901459854014599, "obj2": 0.10331732883895442}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU_Server + CRS ) - ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + Const ) * FirstVNF_Mem_Server ) ) + BR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + Max( MUR,MLU ) ) ) ,MUC ) ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.06313669600179234}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( MLU,Max( RCSe,RCSe ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( ( PN - Min( MDR ,MRS ) ) - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( MDR,ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( MLU * ( ( RMSe / MUM ) - Min( MUM ,Max( ( ( RCSe / CS ) / Max( DS,MUM ) ),( Max( RMSe,DS ) - Min( MUC ,RCSe ) ) ) ) ) ) / RRSe ) )", "obj1": 0.458029197080292, "obj2": 0.5208505591534435}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( ( ( FirstVNF_Mem + Max( BR,FirstVNF_Mem_Server ) ) - Max( ( CRS + AMS ),Const ) ) + FirstVNF_CPU_Server ) - ( AMS * ACS ) )", "choosing": "Max( ( Max( RMSe,MLU ) * Min( ( RCSe + Max( RCSe,( RRSe * RRSe ) ) ) ,Min( Min( RMSe ,RRSe ) ,( MUC - ( CS + ( ( DS - MUM ) * CS ) ) ) ) ) ),( Min( MLU ,RRSe ) / Min( ( Max( ( MUR * MLU ),MUM ) / RMSe ) ,RRSe ) ) )", "obj1": 0.5, "obj2": 0.4526397755261473}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3176994102346253}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}], "18": [{"determining": "( ( PN - ( FirstVNF_Mem_Server - CRS ) ) - ( ( ACS * RRS ) * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( CS + ( MUM - MUC ) ) * ( CS + MLU ) ) ) / Min( ( MUM + RCSe ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ( AMS / Const ) - Min( FirstVNF_Mem_Server ,( MDR * Min( FirstVNF_CPU ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( ( MUM * MLU ) - ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.6934306569343066, "obj2": 0.194658207527067}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + RRS ) * FirstVNF_CPU ) - ( PN + ( MRS * DDR ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe * RMSe ) / ( Min( ( DS * Min( Min( ( MUR / DS ) ,( MUR + CS ) ) ,( ( MUC / MUM ) * Min( DS ,DS ) ) ) ) ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7281021897810219, "obj2": 0.16084285984994012}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * BR ) ) ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.13350739062141664}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6624087591240876, "obj2": 0.26680812320053354}, {"determining": "( ( PN - ( ( ( ( MDR + Min( CRS ,MRS ) ) * FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * CS ) / ( ( RRSe + MUM ) + Max( ( MUC * MUR ),Max( Min( RRSe ,RRSe ),RRSe ) ) ) ) * MUR ) )", "obj1": 0.6386861313868614, "obj2": 0.2755849975838947}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM ) - DDR ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( MUM + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.718978102189781, "obj2": 0.17043136985706492}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - CS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6554690702878587}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ACS ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( Min( MUR ,( RCSe * CS ) ) / MUR ) ) ) ) ) - MUR )", "obj1": 0.7937956204379562, "obj2": 0.10207708426407719}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - MUM ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8576642335766423, "obj2": 0.07628349589389861}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8321167883211679, "obj2": 0.09784233078534318}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * BR ) ) ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7737226277372263, "obj2": 0.13239448587019426}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.0575825784683061}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - ( ( CRS / Const ) / BR ) ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( ( MUC * RCSe ),DS ) ) ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( DS * MUR ) ) )", "obj1": 0.6259124087591241, "obj2": 0.2855251598602285}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "Max( MUR,( CS / Min( RCSe ,Min( Max( CS,RRSe ) ,Max( CS,MUC ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,Min( ( MLU + MUC ) ,( MUC * DS ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.3600785635555166}, {"determining": "( ( AMS - BR ) - ( ( ACS - AMS ) - Max( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ),BR ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( Min( CS ,RCSe ),MUR ) ) ) ) ) - Max( ( DS * RRSe ),( RRSe - CS ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,Min( CRS ,( BR * MRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * ( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * PN ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) - ( ( MUC - RCSe ) / ( Max( ( MUM + MLU ),RCSe ) * Min( Max( RCSe,( RMSe + Min( MUR ,DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.0537108953966602}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MDR * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.9124087591240876, "obj2": 0.042073955925655514}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.9598540145985401, "obj2": 0.01489679953551851}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( ( ( ( FirstVNF_CPU_Server * MRS ) - RRS ) * ( FirstVNF_RAM_Server + RRS ) ),ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( ( ( RCSe - MUR ) - DS ) ,MUR ) ) ) ,( MUC + ( ( MUM - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) + MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5161345364422921}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5474452554744526, "obj2": 0.3897131215326828}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( CRS - Max( CRS,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( CS / ( RMSe - MLU ) ) - ( ( ( MUR - RCSe ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3319325010849303}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( DS / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.8923357664233577, "obj2": 0.04652854019371699}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( Min( MUM ,CS ) / MLU ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46204676735169004}, {"determining": "( ( PN - ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) + BR ) ) - ( ( ARS * ( ( FirstVNF_RAM / FirstVNF_CPU ) / Min( RRS ,BR ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ),( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( CS + Max( RMSe,( MLU + ( RRSe * RCSe ) ) ) ) + MUR ) - RMSe ) ,( ( RCSe + ( ( MUM + CS ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.5295543329026196}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * ACS ) ),( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUR ) * ( Min( Max( ( CS + CS ),RCSe ) ,RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5844015188360422}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5401459854014599, "obj2": 0.3919948533348752}, {"determining": "( ( PN - ( MDR / CRS ) ) - ( ( ACS * ARS ) * ( MDR * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( MUR ,Min( ( MUC / Max( Max( MLU,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5675182481751825, "obj2": 0.36034506380560904}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5565693430656934, "obj2": 0.3739733383009977}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.0575825784683061}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * BR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.02978376808099286}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9343065693430657, "obj2": 0.030993056363617866}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) / ( PN * FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ARS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Min( Max( RMSe,MUR ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( ( ( ( ARS - ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_RAM ) * MDR ) * FirstVNF_CPU ) ) - Min( RRS ,Min( ( ( FirstVNF_Mem * ( PN * Const ) ) / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) ) * ( AMS * FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * MDR ) + ( ( CRS / Const ) / BR ) ) )", "choosing": "Min( Max( DS,CS ) ,( ( Min( MLU ,Max( MUR,( ( ( RMSe * RRSe ) * DS ) / MUC ) ) ) - Max( ( Min( Min( MUR ,MUR ) ,( Max( MUR,RMSe ) / Min( RCSe ,RMSe ) ) ) + RRSe ),( MLU + ( RMSe - Max( MUR,MUC ) ) ) ) ) - DS ) )", "obj1": 0.9598540145985401, "obj2": 0.01489679953551851}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6184824263946995}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( Const / ACS ) * ( CRS - Min( MRS ,MDR ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.3886861313868613, "obj2": 0.6725036665876521}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MLU ,( ( DS * MUC ) + RCSe ) ) )", "obj1": 0.9215328467153284, "obj2": 0.0367365936463849}, {"determining": "( ( PN - ( ( ( ( Min( MRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.551094890510949, "obj2": 0.3790855238020677}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8521897810218978, "obj2": 0.0817165023814832}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( Min( PN ,( BR + ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ACS * Max( Max( ( Const / RRS ),FirstVNF_CPU_Server ),( AMS * Const ) ) ) )", "choosing": "Min( Min( ( ( DS + RRSe ) + ( RMSe * RRSe ) ) ,( Min( MUC ,RMSe ) - Max( CS,DS ) ) ) ,Min( MLU ,( ( RMSe * ( ( ( Min( RCSe ,MUC ) + MUM ) * RRSe ) + MUC ) ) / ( MUM * ( DS + RCSe ) ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02725135233445927}, {"determining": "( Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( ACS - CRS ) ) ) ) ),AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,( RCSe - MUR ) ),( Min( MLU ,RRSe ) / Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4597009707308599}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + MDR ) - FirstVNF_Mem_Server ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUM / ( MLU * MLU ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + Max( Min( MLU ,MLU ),( CS / MUR ) ) ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.045509053710725354}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - Min( FirstVNF_CPU ,ARS ) ) + BR ) ) - ( ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( ( ( MUR / RCSe ) + ( MUC + CS ) ) / MUM ) ,MUR ) ) - MUC ) ) - Max( ( MLU / MLU ),( RRSe + ( RCSe * DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5036225079385077}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( RRS * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MLU * MUR ) - ( ( ( ( MLU - MUC ) * ( Min( MUM ,CS ) / MLU ) ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.40850332741521383}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,( MUM * ( DS + CS ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5357750961091352}, {"determining": "( ( ( ( Min( MRS ,Min( Min( ( PN * FirstVNF_Mem_Server ) ,MDR ) ,( CRS * Min( FirstVNF_Mem ,DDR ) ) ) ) * ACS ) / Min( RRS ,AMS ) ) + FirstVNF_CPU_Server ) - Min( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ,Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( MUR / MUC ) ) / ( ( ( ( MUM - ( ( RMSe / MUC ) + Min( RRSe ,CS ) ) ) / RRSe ) - CS ) / ( MUM + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( ( PN - ( ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - CRS ) ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe + CS ) ) + ( Max( ( RMSe + Min( ( DS * ( CS - RMSe ) ) ,DS ) ),RRSe ) - ( ( RCSe - MUR ) - DS ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03536471337658175}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MLU * MUR ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.40850332741521383}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.39999277701668084}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.6186131386861314, "obj2": 0.29954557298840484}, {"determining": "( Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ),AMS ) - ( AMS * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.5164233576642335, "obj2": 0.42379434946248273}, {"determining": "Max( ( Max( ( ( ( ( ( DDR - FirstVNF_Mem ) / ( BR - PN ) ) * ( FirstVNF_RAM_Server * ACS ) ) * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,Min( RCSe ,Min( MLU ,MLU ) ) ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RCSe ) / MUR ) ) * ( MUR - ( CS + MUM ) ) ) * Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6291769819404794}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + CRS ) ) / ( FirstVNF_RAM_Server + ( ( Const / ACS ) * AMS ) ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8394160583941606, "obj2": 0.0913364550296179}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( ( ( ( FirstVNF_Mem + Max( BR,FirstVNF_Mem_Server ) ) - Max( ( CRS + AMS ),Const ) ) + FirstVNF_CPU_Server ) - ( AMS * ACS ) )", "choosing": "Max( ( Max( RMSe,MLU ) * Min( ( RCSe + Max( RCSe,( RRSe * RRSe ) ) ) ,Min( Min( RMSe ,RRSe ) ,( MUC - ( CS + ( ( DS - MUM ) * CS ) ) ) ) ) ),( Min( MLU ,RRSe ) / Min( ( Max( ( MUR * MLU ),MUM ) / RMSe ) ,RRSe ) ) )", "obj1": 0.5, "obj2": 0.4526397755261473}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6058394160583942, "obj2": 0.312788536801045}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.843065693430657, "obj2": 0.08803684225992726}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( ( RMSe / RCSe ) * DS ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.4565167715262077}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * MDR ) ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7262773722627737, "obj2": 0.16356910695090676}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - Min( ( ( DS - Max( ( Min( RMSe ,MLU ) - RMSe ),MUM ) ) * MUC ) ,( MUC * DS ) ) ) ,( Min( ( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,DS ) ) ) ) ,( Max( ( MUM + Max( RCSe,CS ) ),RCSe ) * Min( Max( RCSe,( ( RCSe / MUM ) + CS ) ) ,RRSe ) ) ) - MUR ) )", "obj1": 0.5364963503649635, "obj2": 0.39999277701668084}, {"determining": "( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - Min( ( MRS - MDR ) ,FirstVNF_RAM ) )", "choosing": "Max( Min( Min( RCSe ,MLU ) ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / RRSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5039489568385831}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem_Server - CRS ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),Min( ( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) * FirstVNF_CPU_Server ) ,( Min( PN ,FirstVNF_CPU ) + Max( PN,ACS ) ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5122220096798066}, {"determining": "( ( ( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / Min( CRS ,( BR * MRS ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,RRSe ) / Min( RCSe ,Min( Max( ( Min( RRSe ,MUC ) + MUM ),RRSe ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.48198371651030186}, {"determining": "( ( ( ( ( ( CRS - ( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) / Max( ARS,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / Min( ( Const / BR ) ,ACS ) )", "choosing": "Max( MUR,( ( RMSe / RCSe ) / ( ( MUC / ( RRSe + ( MUC - Min( Max( MLU,DS ) ,RMSe ) ) ) ) + Min( Max( RMSe,Min( RMSe ,MUR ) ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( Min( ( ( Const - RRS ) * ACS ) ,( ( FirstVNF_RAM_Server + BR ) * DDR ) ) * ( FirstVNF_CPU_Server * ( ACS / CRS ) ) )", "choosing": "( ( Max( MUC,( ( RCSe / MUC ) * MLU ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( CS * RCSe ),MUC ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2915951023730677}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7226277372262774, "obj2": 0.1677648232244245}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( MLU,Max( RCSe,RCSe ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( ( PN - Min( MDR ,MRS ) ) - FirstVNF_CPU_Server ) ,Max( Max( Max( MRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),AMS ),Max( FirstVNF_CPU_Server,CRS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.41774257666212095}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( MLU,Max( RCSe,RCSe ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5164233576642335, "obj2": 0.42379434946248273}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + ( FirstVNF_CPU_Server * MRS ) ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - FirstVNF_RAM_Server ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( ( MUC + RRSe ) + ( MUR / RCSe ) ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203331624453242}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3176994102346253}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * MRS ) ),( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUR ) * ( ( ( ( Max( RMSe,Max( MLU,MUR ) ) + ( ( Min( RRSe ,MUR ) / Min( CS ,RCSe ) ) + CS ) ) + MLU ) * RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5844015188360422}, {"determining": "( ( PN - ( ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.8467153284671532, "obj2": 0.08587977605638554}], "19": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server - CRS ) ) - ( ( ACS * RRS ) * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( CS + ( MUM - MUC ) ) * ( CS + MLU ) ) ) / Min( ( MUM + RCSe ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( CRS / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + RRS ) * FirstVNF_CPU ) - ( PN + ( MRS * DDR ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe * RMSe ) / ( Min( ( DS * Min( Min( ( MUR / DS ) ,( MUR + CS ) ) ,( ( MUC / MUM ) * Min( DS ,DS ) ) ) ) ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7281021897810219, "obj2": 0.16084285984994012}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19707080853962153}, {"determining": "( ( PN / Min( MDR ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM / DS ) - ( MUM / MUM ) )", "obj1": 0.8065693430656934, "obj2": 0.09373300079344236}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - CS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6500046110274984}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * BR ) ) ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.13350739062141664}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( ( CS + Max( RMSe,( MLU + ( RRSe * RCSe ) ) ) ) + MUR ) - RMSe ) ,( ( RCSe + ( ( MUM + CS ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7025547445255474, "obj2": 0.1876888591005513}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6624087591240876, "obj2": 0.26680812320053354}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8394160583941606, "obj2": 0.0913364550296179}, {"determining": "( ( PN - ( ( ( Min( CRS ,( CRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * CS ) ) ) - MUR ) )", "obj1": 0.5656934306569343, "obj2": 0.3578542885298301}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6058394160583942, "obj2": 0.312788536801045}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6126407587276731}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - MUM ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8576642335766423, "obj2": 0.07628349589389861}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.3886861313868613, "obj2": 0.6722700338681681}, {"determining": "( ( ( Max( MRS,Max( FirstVNF_Mem_Server,CRS ) ) / DDR ) + AMS ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ACS - Max( ACS,Min( CRS ,( BR * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( MUR - ( RMSe / ( Min( ( ( MUC / Min( DS ,Min( RRSe ,CS ) ) ) - CS ) ,MUM ) * Max( RMSe,Min( ( ( MUC * ( MUM - RRSe ) ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,Max( BR,FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem - AMS ) ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ( Min( MRS ,DDR ) + Max( RRS,ACS ) ) * Max( FirstVNF_CPU_Server,MDR ) ) - BR ) )", "choosing": "( Min( ( MLU + MUM ) ,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - ( ( ( MLU + Min( MUR ,Max( MUM,Min( MLU ,DS ) ) ) ) - MLU ) * CS ) ) )", "obj1": 0.7171532846715328, "obj2": 0.17167088040471865}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.057582578468306084}, {"determining": "( ( PN - ( MDR * PN ) ) - ( ( PN + AMS ) / ( ( ACS / Max( ( ARS * ( Max( FirstVNF_Mem_Server,ARS ) / Const ) ),Min( DDR ,( ( RRS * RRS ) / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( Max( RCSe,MUR ) / ( Max( ( Max( RMSe,RRSe ) + Min( ( MUC - ( RCSe + MUM ) ) ,( MUR * CS ) ) ),RRSe ) * ( MUC / MUM ) ) ) - MUR )", "obj1": 0.8667883211678832, "obj2": 0.06045621567886573}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ARS ) ) ) - ( ( ACS * ARS ) * Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) )", "choosing": "Min( ( RMSe / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7773722627737226, "obj2": 0.13047388528680792}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( FirstVNF_RAM_Server * ACS ) / ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( AMS * FirstVNF_CPU_Server ) ) * ARS ) ) )", "choosing": "( ( ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC - DS ) ) ,Max( ( MLU - MLU ),( ( Min( DS ,RCSe ) + Max( RMSe,CS ) ) / MUR ) ) ) ) / RMSe ) - MUR )", "obj1": 0.7937956204379562, "obj2": 0.10109151933650959}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8868613138686131, "obj2": 0.04778806998501358}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "Max( MUR,( CS / Min( RCSe ,Min( Max( CS,RRSe ) ,Max( CS,MUC ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - ( ( CRS / Const ) / BR ) ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( ( MUC * RCSe ),DS ) ) ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server + RRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - PN ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + Min( ( ( ( MLU - ( MUM - MUM ) ) - MUC ) + CS ) ,( MLU - MLU ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2755849975838947}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Min( CRS ,( Const * BR ) ) ) ) ) - Max( FirstVNF_RAM_Server,( BR * FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / ( MUR / Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,( MUC * ( MLU / MUC ) ) ) + ( MUR * CS ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.13350739062141664}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.04325698005002614}, {"determining": "( Max( FirstVNF_RAM,Min( MRS ,ACS ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - ( MUC * DS ) ) ),MUM ),( Max( CS,MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6288379240299136}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.9598540145985401, "obj2": 0.01489679953551851}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MLU * MUR ) * ( Min( Max( ( CS + CS ),RCSe ) ,RRSe ) * ( MUR * DS ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( Min( ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) ) - MUR ) )", "obj1": 0.5437956204379562, "obj2": 0.38920401772655905}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( CRS - Max( CRS,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( CS / ( RMSe - MLU ) ) - ( ( ( MUR - RCSe ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3319325010849303}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( Min( RRS ,CRS ) - ( ( Min( CRS ,( BR * AMS ) ) + MDR ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) / AMS ) ) )", "choosing": "Min( Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( RRSe + DS ) + ( DS * RCSe ) ) ) ,Min( MLU ,( ( RMSe + ( ( ( ( CS + MUC ) + MUM ) * RRSe ) + MUC ) ) / ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.027251352334459262}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.6186131386861314, "obj2": 0.29954557298840484}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - Min( FirstVNF_CPU ,ARS ) ) + BR ) ) - ( ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( ( ( MUR / RCSe ) + ( MUC + CS ) ) / MUM ) ,MUR ) ) - MUC ) ) - Max( ( MLU / MLU ),( RRSe + ( RCSe * DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5036225079385077}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.6934306569343066, "obj2": 0.194658207527067}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5357750961091352}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.9598540145985401, "obj2": 0.01489679953551851}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5127737226277372, "obj2": 0.4299987185486942}, {"determining": "( ( PN - ( ( ( ( MDR + Min( CRS ,MRS ) ) * FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * CS ) / ( ( RRSe + MUM ) + Max( ( MUC * MUR ),Max( Min( RRSe ,RRSe ),RRSe ) ) ) ) * MUR ) )", "obj1": 0.6386861313868614, "obj2": 0.2755849975838947}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "( ( PN - ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) + BR ) ) - ( ( ARS * ( ( FirstVNF_RAM / FirstVNF_CPU ) / Min( RRS ,BR ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ),( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( CS + Max( RMSe,( MLU + ( RRSe * RCSe ) ) ) ) + MUR ) - RMSe ) ,( ( RCSe + ( ( MUM + CS ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.5295543329026196}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8521897810218978, "obj2": 0.0817165023814832}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( ( ( ( ( CRS - ( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) / Max( ARS,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / Min( ( Const / BR ) ,ACS ) )", "choosing": "Max( MUR,( ( RMSe / RCSe ) / ( ( MUC / ( RRSe + ( MUC - Min( Max( MLU,DS ) ,RMSe ) ) ) ) + Min( Max( RMSe,Min( RMSe ,MUR ) ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5217263003087758}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,( MUM * ( DS + CS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.4127113015561523}, {"determining": "( ( PN - ( ( ( ( Min( Min( MDR ,PN ) ,( Const * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) - MUC ) ) )", "obj1": 0.6186131386861314, "obj2": 0.29954557298840484}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5778238187495612}, {"determining": "( ( ( ( Min( MRS ,Min( Min( ( PN * FirstVNF_Mem_Server ) ,MDR ) ,( CRS * Min( FirstVNF_Mem ,DDR ) ) ) ) * ACS ) / Min( RRS ,AMS ) ) + FirstVNF_CPU_Server ) - Min( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ,Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( MUR / MUC ) ) / ( ( ( ( MUM - ( ( RMSe / MUC ) + Min( RRSe ,CS ) ) ) / RRSe ) - CS ) / ( MUM + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.531021897810219, "obj2": 0.400413134026508}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( Max( DS,RRSe ) * DS ) )", "obj1": 0.9233576642335767, "obj2": 0.0356186589966678}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUM / ( MLU * MLU ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + Max( Min( MLU ,MLU ),( CS / MUR ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( ( ( ( FirstVNF_CPU_Server * MRS ) - RRS ) * ( FirstVNF_RAM_Server + RRS ) ),ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( ( ( RCSe - MUR ) - DS ) ,MUR ) ) ) ,( MUC + ( ( MUM - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) + MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5161345364422921}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( AMS * FirstVNF_RAM ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) - Max( Max( ( Min( MUM ,CS ) / ( Max( MLU,RMSe ) * ( RMSe * DS ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46204676735169004}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MDR / CRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RMSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7226277372262774, "obj2": 0.16744199590492748}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * ACS ) ),( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5844015188360422}, {"determining": "Max( ( Max( ( ( BR * Max( BR,CRS ) ) * FirstVNF_RAM ),FirstVNF_Mem ) + ( PN * ACS ) ),( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUR ) * ( Min( Max( ( CS + CS ),RCSe ) ,RRSe ) * ( MUR * DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5844015188360422}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( CRS * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ACS * ( Const / RRS ) ) )", "choosing": "( ( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,Min( RRSe ,CS ) ) ) ) - Max( ( RCSe * CS ),MUC ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.03179341626192143}, {"determining": "( ( PN - ( ( ( ( Min( MRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - CS ) ) )", "obj1": 0.551094890510949, "obj2": 0.3790855238020677}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.39999277701668084}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * ( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,MUR ),( Min( MLU ,RRSe ) / Min( RCSe ,( ( ( ( ( MLU / DS ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) * ( MUR - ( MUM + CS ) ) ) * RCSe ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - CS ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.843065693430657, "obj2": 0.08803684225992726}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) / ( PN * FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ARS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Min( Max( RMSe,MUR ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * BR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.02978376808099286}, {"determining": "( ( ( ( FirstVNF_Mem + Max( BR,FirstVNF_Mem_Server ) ) - Max( ( CRS + AMS ),Const ) ) + FirstVNF_CPU_Server ) - ( AMS * ACS ) )", "choosing": "Max( ( Max( RMSe,MLU ) * Min( ( RCSe + Max( RCSe,( RRSe * RRSe ) ) ) ,Min( Min( RMSe ,RRSe ) ,( MUC - ( CS + ( ( DS - MUM ) * CS ) ) ) ) ) ),( Min( MLU ,RRSe ) / Min( ( Max( ( MUR * MLU ),MUM ) / RMSe ) ,RRSe ) ) )", "obj1": 0.5, "obj2": 0.4526397755261473}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6624087591240876, "obj2": 0.26680812320053354}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * MDR ) ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.7262773722627737, "obj2": 0.16356910695090668}, {"determining": "( Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( ACS - CRS ) ) ) ) ),AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,( RCSe - MUR ) ),( Min( MLU ,RRSe ) / Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4597009707308599}, {"determining": "( Min( ( ( Const - RRS ) * ACS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3176994102346253}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * MDR ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( Min( MUM ,CS ) / MLU ),Max( MUR,Max( MUR,DS ) ) ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.4635036496350365, "obj2": 0.512061260134636}, {"determining": "( ( ( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - ( MRS + FirstVNF_RAM ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / ( PN + Min( ( RRS + ( FirstVNF_CPU_Server - ( MRS + MRS ) ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / Min( CRS ,( BR * MRS ) ) ) ) ) )", "choosing": "Max( MUR,( Min( ( ( DS - ( ( ( MUM * DS ) - RMSe ) / CS ) ) / RCSe ) ,RRSe ) / Min( RCSe ,Min( Max( ( Min( RRSe ,MUC ) + MUM ),RRSe ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.48198371651030186}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.4653284671532847, "obj2": 0.5039489568385831}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( RRS * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MLU * MUR ) - ( ( ( ( MLU - MUC ) * ( Min( MUM ,CS ) / MLU ) ) / CS ) / ( MUR * DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.40850332741521383}, {"determining": "( Min( ( ( Const - RRS ) * BR ) ,( ( PN * AMS ) * DDR ) ) * ( ( PN / Min( FirstVNF_RAM ,BR ) ) / MRS ) )", "choosing": "( ( MLU * MUR ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / Min( Min( ( MUM / DS ) ,MUR ) ,( MUM / MUR ) ) ) - ( MUR * DS ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5401459854014599, "obj2": 0.3919948533348752}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,Min( CRS ,( BR * MRS ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * ( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( Max( PN,( ( ( ( Min( CRS ,( BR * MRS ) ) + Min( FirstVNF_CPU_Server ,DDR ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( ( RRSe - MLU ) ,( Max( CS,MLU ) / DS ) ) - MUC ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5547445255474452, "obj2": 0.3762620896080132}], "20": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Min( ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,( MLU * ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( CRS / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19707080853962153}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7281021897810219, "obj2": 0.16084285984994012}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.8284671532846716, "obj2": 0.08126557962295931}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * BR ) ) ) ) ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( MDR / ( MRS + RRS ) ) ) ) ) )", "choosing": "( ( RMSe / ( MUR / ( ( MUC + MLU ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( Min( RRSe ,DS ) + MLU ),MLU ),RRSe ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.13350739062141664}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + RRS ) * FirstVNF_CPU ) - ( PN + ( MRS * DDR ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe * RMSe ) / ( Min( ( DS * Min( Min( ( MUR / DS ) ,( MUR + CS ) ) ,( ( MUC / MUM ) * Min( DS ,DS ) ) ) ) ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7007299270072993, "obj2": 0.1871454364488563}, {"determining": "( ( FirstVNF_RAM * ( Min( FirstVNF_CPU ,Const ) * ARS ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Min( CS ,RMSe ) / ( ( ( RRSe * MUR ) - CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751832}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9598540145985401, "obj2": 0.014896799535518509}, {"determining": "( ( ( ( ( ( ( ( ACS - PN ) + ACS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - PN ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( Min( RMSe ,( Max( CS,MUR ) - MUM ) ) - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / RCSe ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.8558394160583942, "obj2": 0.07732421663664996}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUC + MUC ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721061}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8868613138686131, "obj2": 0.04778806998501358}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.057582578468306084}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( ( PN - ( ( ( ( Min( ( ARS * ACS ) ,( BR * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( MLU / RCSe ) * MUR ) ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.781021897810219, "obj2": 0.12816212179044723}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( MRS * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server * CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( ( BR + BR ) ,PN ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUR ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - ( ( ( Min( CRS ,( CRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.422463769212988}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.6423357664233577, "obj2": 0.2753516467728537}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6605839416058394, "obj2": 0.2690032198049109}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( Min( Max( BR,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) / ( AMS * Const ) ) - Max( Min( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) ,Max( FirstVNF_Mem,( MDR / ( MRS + RRS ) ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / ( ( ( MUC + MLU ) + ( ( MUR / ( CS * RCSe ) ) * MLU ) ) / MUR ) ) - ( MUM * ( ( MLU / RCSe ) / Max( Max( ( ( RCSe - DS ) / ( DS - RMSe ) ),MLU ),RRSe ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.13350739062141664}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6500046110274984}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6058394160583942, "obj2": 0.312788536801045}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,( MUM * ( DS + CS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.4127113015561523}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( FirstVNF_Mem + ( FirstVNF_CPU_Server / MRS ) ) ) * Const ) / CRS ) ) - ( ( ( Max( ARS,MRS ) * FirstVNF_Mem ) / BR ) * ( FirstVNF_CPU_Server / MDR ) ) )", "choosing": "Max( ( ( MUM * RRSe ) + MUR ),Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ) )", "obj1": 0.6642335766423357, "obj2": 0.26640142907401737}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.3886861313868613, "obj2": 0.6722700338681681}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.8978102189781022, "obj2": 0.04325698005002613}, {"determining": "( ( ( ( ( ( Max( CRS,( BR * RRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) - PN ) - ( ( ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( PN + Const ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( Min( ( RRSe + MLU ) ,( MUR * CS ) ) ,CS ) / MLU ) ) / CS ) - ( ( DS + MUR ) * MUR ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3294117237404724}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_RAM - AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5127737226277372, "obj2": 0.4299987185486942}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5509025812269333}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS + ARS ) * ( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,CS ) - ( ( ( RCSe - ( MLU - MUC ) ) - Min( ( MUC - RMSe ) ,( ( RCSe * MUC ) - MUR ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.29137834296864107}, {"determining": "( ( PN - ( ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - ( ( CRS / Const ) / BR ) ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( ( MUC * RCSe ),DS ) ) ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( Min( ( ( Const - RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( PN * Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( ARS + CRS ) ) + CRS ) ,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - CS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6500046110274984}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,Max( BR,FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem - AMS ) ,( Const * MRS ) ) ) ) + BR ) ) - ( ( ( Min( MRS ,DDR ) + Max( RRS,ACS ) ) * Max( FirstVNF_CPU_Server,MDR ) ) - BR ) )", "choosing": "( Min( ( MLU + MUM ) ,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - ( ( ( MLU + Min( MUR ,Max( MUM,Min( MLU ,DS ) ) ) ) - MLU ) * CS ) ) )", "obj1": 0.7171532846715328, "obj2": 0.17167088040471865}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.35696474009964146}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * BR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.02978376808099286}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.8667883211678832, "obj2": 0.06045621567886573}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - Min( FirstVNF_CPU ,ARS ) ) + BR ) ) - ( ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( ( ( MUR / RCSe ) + ( MUC + CS ) ) / MUM ) ,MUR ) ) - MUC ) ) - Max( ( MLU / MLU ),( RRSe + ( RCSe * DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5036225079385077}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + Min( ( ( ( MLU - ( MUM - MUM ) ) - MUC ) + CS ) ,( MLU - MLU ) ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3173905845016597}, {"determining": "( Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( ACS - CRS ) ) ) ) ),AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,( RCSe - MUR ) ),( Min( MLU ,RRSe ) / Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5329663037127974}, {"determining": "( ( ( ( FirstVNF_Mem + Max( BR,FirstVNF_Mem_Server ) ) - Max( ( CRS + AMS ),Const ) ) + FirstVNF_CPU_Server ) - ( AMS * ACS ) )", "choosing": "Max( ( Max( RMSe,MLU ) * Min( ( RCSe + Max( RCSe,( RRSe * RRSe ) ) ) ,Min( Min( RMSe ,RRSe ) ,( MUC - ( CS + ( ( DS - MUM ) * CS ) ) ) ) ) ),( Min( MLU ,RRSe ) / Min( ( Max( ( MUR * MLU ),MUM ) / RMSe ) ,RRSe ) ) )", "obj1": 0.5, "obj2": 0.4526397755261473}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * MDR ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( Min( MUM ,CS ) / MLU ),Max( MUR,Max( MUR,DS ) ) ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.4635036496350365, "obj2": 0.512061260134636}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6126407587276731}, {"determining": "( Max( FirstVNF_RAM,Min( MRS ,ACS ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - ( MUC * DS ) ) ),MUM ),( Max( CS,MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6288379240299136}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4762773722627737, "obj2": 0.48073485669725513}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( Min( Min( MUC ,MLU ) ,MUC ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5357750961091352}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.17167088040471865}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7208029197080292, "obj2": 0.16693608635831675}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( DS * MUR ) ) )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( PN - ( BR + ( ( ( ( Min( MDR ,PN ) + Max( MDR,AMS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.30394551630082156}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( DS + DS ) )", "obj1": 0.5565693430656934, "obj2": 0.3739733383009977}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( Const - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( ( Max( ( ( FirstVNF_RAM_Server + MDR ) * ACS ),MRS ) / ( PN * Const ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUR - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,( RMSe - MUR ) ) ) ) ) ) - MUR ) )", "obj1": 0.5492700729927007, "obj2": 0.38374718996354734}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "Max( MUR,( CS / Min( RCSe ,Min( Max( CS,RRSe ) ,Max( CS,MUC ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - MUM ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.8576642335766423, "obj2": 0.07628349589389861}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( ( ( ( FirstVNF_CPU_Server * MRS ) - RRS ) * ( FirstVNF_RAM_Server + RRS ) ),ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ) ) + Min( ( ( RCSe - MUR ) - DS ) ,MUR ) ) ) ,( MUC + ( ( MUM - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) + MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5161345364422921}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6126407587276731}, {"determining": "( ( ( Max( MRS,Max( FirstVNF_Mem_Server,CRS ) ) / DDR ) + AMS ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ACS - Max( ACS,Min( CRS ,( BR * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( MUR - ( RMSe / ( Min( ( ( MUC / Min( DS ,Min( RRSe ,CS ) ) ) - CS ) ,MUM ) * Max( RMSe,Min( ( ( MUC * ( MUM - RRSe ) ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) - MRS ) - ( ( ( MDR - ARS ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02279130526548209}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( ( ( ( Min( MRS ,Min( Min( ( PN * FirstVNF_Mem_Server ) ,MDR ) ,( CRS * Min( FirstVNF_Mem ,DDR ) ) ) ) * ACS ) / Min( RRS ,AMS ) ) + FirstVNF_CPU_Server ) - Min( Min( ( BR * Max( BR,CRS ) ) ,FirstVNF_CPU ) ,Max( MDR,ACS ) ) )", "choosing": "( ( ( ( MUC + MUR ) + ( MUR / MUC ) ) / ( ( ( ( MUM - ( ( RMSe / MUC ) + Min( RRSe ,CS ) ) ) / RRSe ) - CS ) / ( MUM + CS ) ) ) / ( Min( CS ,RRSe ) / Max( MUR,RRSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5465034389168908}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Max( ACS,CRS ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04541563544249457}, {"determining": "( Min( RRS ,CRS ) - ( ( Min( CRS ,( BR * AMS ) ) + MDR ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) / AMS ) ) )", "choosing": "Min( Min( ( Min( MUC ,RMSe ) - Max( CS,DS ) ) ,( ( RRSe + DS ) + ( DS * RCSe ) ) ) ,Min( MLU ,( ( RMSe + ( ( ( ( CS + MUC ) + MUM ) * RRSe ) + MUC ) ) / ( MUM * ( DS + CS ) ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.027251352334459262}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ACS ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( Min( MUR ,( RCSe * CS ) ) / MUR ) ) ) ) ) - MUR )", "obj1": 0.7937956204379562, "obj2": 0.10109151933650959}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * ( BR * FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( ( RMSe / MUM ) - MUR ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.018431898832454666}, {"determining": "( ( PN / Min( MDR ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM / DS ) - ( MUM / MUM ) )", "obj1": 0.8065693430656934, "obj2": 0.09373300079344236}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( RMSe / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( Min( MUM ,CS ) / MLU ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46204676735169004}, {"determining": "( Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( ACS - CRS ) ) ) ) ),AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,( RCSe - MUR ) ),( Min( MLU ,RRSe ) / Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4597009707308599}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.5383211678832117, "obj2": 0.39412632681110027}, {"determining": "( ( Min( ACS ,Min( ( ( BR * FirstVNF_Mem ) - AMS ) ,( FirstVNF_RAM_Server + ( ( CRS / ACS ) * MDR ) ) ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( RMSe,( RMSe * Max( Max( ( ( MUM + ( MUR * CS ) ) - CS ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5037110503421589}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.39999277701668084}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * MDR ) ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.7262773722627737, "obj2": 0.16248642446471295}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( AMS * ACS ) )", "choosing": "( CS - ( RMSe / ( Min( MUM ,( ( MUC / Min( MUR ,MUC ) ) - CS ) ) * Max( RMSe,Min( ( ( MUC * ( MUR + RRSe ) ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * ( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( PN - ( ( ( ( Min( MRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - CS ) ) )", "obj1": 0.551094890510949, "obj2": 0.3790855238020677}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * BR ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( MRS / MRS ) )", "choosing": "( ( Min( RMSe ,CS ) * Max( ( Max( Max( CS,RRSe ),RMSe ) - RRSe ),DS ) ) - ( ( ( ( MUC + MUR ) + ( CS / MUC ) ) / ( ( RMSe - DS ) / ( MUC + CS ) ) ) / ( Min( RCSe ,Min( ( MUM / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.9379562043795621, "obj2": 0.02978376808099286}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( ( ( ( ( CRS - ( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) / Max( ARS,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / Min( ( Const / BR ) ,ACS ) )", "choosing": "Max( MUR,( ( RMSe / RCSe ) / ( ( MUC / ( RRSe + ( MUC - Min( Max( MLU,DS ) ,RMSe ) ) ) ) + Min( Max( RMSe,Min( RMSe ,MUR ) ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUM / ( MLU * MLU ) ) ,Min( MLU ,( ( RMSe * MUC ) + ( MUM * ( DS + Max( Min( MLU ,MLU ),( CS / MUR ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( ( PN - ( MDR * PN ) ) - ( ( PN + AMS ) / ( ( ACS / Max( ( ARS * ( Max( FirstVNF_Mem_Server,ARS ) / Const ) ),Min( DDR ,( ( RRS * RRS ) / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( Max( RCSe,MUR ) / ( Max( ( Max( RMSe,RRSe ) + Min( ( MUC - ( RCSe + MUM ) ) ,( MUR * CS ) ) ),RRSe ) * ( MUC / MUM ) ) ) - MUR )", "obj1": 0.8667883211678832, "obj2": 0.06045621567886573}], "21": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + RCSe ) ) ) ) ) ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Min( ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,( MLU * ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( CRS / ACS ) * MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * ( MUM / Max( Max( MUC,CS ),RCSe ) ) ) ) ) - MUR ) )", "obj1": 0.6916058394160584, "obj2": 0.19591218298008145}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7463503649635036, "obj2": 0.14929344512301082}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.8284671532846716, "obj2": 0.08126557962295931}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),( MUM / Max( Max( MUC,CS ),RCSe ) ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9361313868613139, "obj2": 0.01956355547096053}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( ( PN / ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_CPU_Server / ARS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RMSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) - ( MUM / MUC ) )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( ( ( ( ( ( ( ACS - PN ) + ACS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - PN ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( Min( RMSe ,( Max( CS,MUR ) - MUM ) ) - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / RCSe ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.8558394160583942, "obj2": 0.07732421663664996}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),( DDR + ( MRS / ARS ) ) ) ) * ACS ) / ( ( ( Min( Min( CRS ,( Const * AMS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( MLU - ( ( ( RCSe - Max( MUC,MUC ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6605839416058394, "obj2": 0.2690032198049109}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( MRS * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server * CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( ( BR + BR ) ,PN ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUR ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( FirstVNF_Mem + ( FirstVNF_CPU_Server / MRS ) ) ) * Const ) / CRS ) ) - ( ( ( Max( ARS,MRS ) * FirstVNF_Mem ) / BR ) * ( FirstVNF_CPU_Server / MDR ) ) )", "choosing": "Max( ( ( MUM * RRSe ) + MUR ),Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ) )", "obj1": 0.6642335766423357, "obj2": 0.26640142907401737}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( Const - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( ( Max( ( ( FirstVNF_RAM_Server + MDR ) * ACS ),MRS ) / ( PN * Const ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUR - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,( RMSe - MUR ) ) ) ) ) ) - MUR ) )", "obj1": 0.5492700729927007, "obj2": 0.38374718996354734}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( PN - ( ( ( Min( ( CRS * ( BR * Const ) ) ,MDR ) * ( AMS - ( CRS * DDR ) ) ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( ( Min( ( MUC * MUM ) ,MUC ) * ( ( MUM / RMSe ) + Max( RMSe,RMSe ) ) ) * CS ) ) + ( Max( ( MLU + Min( MUM ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Max( Min( MUM ,( RRSe / RMSe ) ),MLU ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17442583470902231}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + DS ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.15639038839142844}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * ( BR * FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Min( MUR ,( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),RRSe ) - Max( ( ( RMSe / MUM ) - MUR ),Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.018431898832454666}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) ,FirstVNF_Mem_Server ) ) ,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ACS ,( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) ) ) ) / ( ACS + FirstVNF_CPU ) ) - ( ( ARS / FirstVNF_CPU ) * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( ( RCSe - Max( Min( Min( CS ,MUR ) ,RCSe ),RRSe ) ) / RCSe ) * DS ) ,( ( MUR / ( RCSe * CS ) ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6412935986715731}, {"determining": "( ( ( ( ( ( Max( CRS,( BR * RRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) - PN ) - ( ( ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( PN + Const ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( Min( ( RRSe + MLU ) ,( MUR * CS ) ) ,CS ) / MLU ) ) / CS ) - ( ( DS + MUR ) * MUR ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3294117237404724}, {"determining": "( ( FirstVNF_RAM * ( Min( FirstVNF_CPU ,Const ) * ARS ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Min( CS ,RMSe ) / ( ( ( RRSe * MUR ) - CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751832}, {"determining": "( ( PN - ( ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "Min( Min( ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) * DS ) ,( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( MUC * DS ) )", "obj1": 0.3886861313868613, "obj2": 0.6722700338681681}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751832}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.35696474009964146}, {"determining": "( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) - ( PN - ( ( ( ( ( ARS * ( MDR / ACS ) ) + MDR ) * AMS ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) )", "choosing": "( Min( MUC ,CS ) - ( ( RMSe - RMSe ) / ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) ) )", "obj1": 0.6204379562043796, "obj2": 0.29411392688198496}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.8594890510948905, "obj2": 0.07418125465752343}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.864963503649635, "obj2": 0.061928853177362096}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.9598540145985401, "obj2": 0.014896799535518509}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MUM + MLU ) / ( MUM - Min( Min( CS ,MUR ) ,( Max( RCSe,DS ) * MUM ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.49961483229674963}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * Const ) * ( Min( CRS ,( ( MRS / FirstVNF_RAM ) * MRS ) ) + Min( BR ,( MRS - MRS ) ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( MUR - DS ) ) - RCSe )", "obj1": 0.8029197080291971, "obj2": 0.0959588102958872}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6126407587276731}, {"determining": "( Max( FirstVNF_RAM,Min( MRS ,ACS ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - ( MUC * DS ) ) ),MUM ),( Max( CS,MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6288379240299136}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( DS,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4762773722627737, "obj2": 0.47952949219982594}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) )", "obj1": 0.5967153284671532, "obj2": 0.32409084976856983}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Max( ACS,CRS ) * ( ( Min( CRS ,( FirstVNF_CPU * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( RCSe ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.039546683083183445}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.057582578468306084}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( Const - ( Max( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( CRS + CRS ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,( MUM * RCSe ) ) ) ) ) ,RCSe ) - MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.545958906311667}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8868613138686131, "obj2": 0.04778806998501358}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ACS ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( Min( MUR ,( RCSe * CS ) ) / MUR ) ) ) ) ) - MUR )", "obj1": 0.7937956204379562, "obj2": 0.10109151933650959}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( ( PN - ( BR + ( ( ( ( Min( MDR ,PN ) + Max( MDR,AMS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.30394551630082156}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( ( MUC * DS ) ,( MUM * ( DS + CS ) ) )", "obj1": 0.8868613138686131, "obj2": 0.04778806998501358}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6126407587276731}, {"determining": "( ( PN - ( ( ( ( Min( Min( MDR ,PN ) ,( Const * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( ( Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,( MLU - MLU ) ) ) - CS ) / ( MUC + Min( ( ( ( MLU - ( MUM - MUM ) ) - MUC ) + CS ) ,( MLU - MLU ) ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.30394551630082156}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.057582578468306084}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU * ( Min( CRS ,( Min( BR ,MDR ) * CRS ) ) + MDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( RCSe - ( DS - Max( MUM,MUC ) ) ) ) - RMSe ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( ( ( ( ARS - ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ) - ( ( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ACS ) * Const ) ) * ( AMS - FirstVNF_Mem ) ) - ( ( ( CRS / Const ) / BR ) + ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9598540145985401, "obj2": 0.014896799535518509}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( DS * MUR ) ) )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}, {"determining": "( Min( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( MUM * ( DS + MUR ) ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * MRS ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6058394160583942, "obj2": 0.312788536801045}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - ( ( CRS / Const ) / BR ) ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( RMSe / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( Min( ACS ,Min( ( ( BR * FirstVNF_Mem ) - AMS ) ,( FirstVNF_RAM_Server + ( ( CRS / ACS ) * MDR ) ) ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( RMSe,( RMSe * Max( Max( ( ( MUM + ( MUR * CS ) ) - CS ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5037110503421589}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.698905109489051, "obj2": 0.19037060761077698}, {"determining": "( Max( Max( ( Max( CRS,BR ) * ( ACS + DDR ) ),( PN - ( BR + ( ( DDR * MDR ) - ( ACS - CRS ) ) ) ) ),AMS ) - ( AMS * ACS ) )", "choosing": "Max( Min( RMSe ,( RCSe - MUR ) ),( Min( MLU ,RRSe ) / Min( RRSe ,( Max( ( DS - MLU ),MUC ) / RMSe ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5329663037127974}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS + ARS ) * ( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,CS ) - ( ( ( RCSe - ( MLU - MUC ) ) - Min( ( MUC - RMSe ) ,( ( RCSe * MUC ) - MUR ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.29137834296864107}, {"determining": "( ( PN - ( ( ( Min( CRS ,( CRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.422463769212988}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5255474452554745, "obj2": 0.4127113015561523}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( AMS * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * ( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - DS ) / ( MLU - RMSe ) ) ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( AMS * ACS ) )", "choosing": "( CS - ( RMSe / ( Min( MUM ,( ( MUC / Min( MUR ,MUC ) ) - CS ) ) * Max( RMSe,Min( ( ( MUC * ( MUR + RRSe ) ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / ( ( RMSe - MUM ) / ( MUC + CS ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.6952554744525548, "obj2": 0.19544041901506767}, {"determining": "( ( ( ( ( ( CRS - ( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) / Max( ARS,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / Min( ( Const / BR ) ,ACS ) )", "choosing": "Max( MUR,( ( RMSe / RCSe ) / ( ( MUC / ( RRSe + ( MUC - Min( Max( MLU,DS ) ,RMSe ) ) ) ) + Min( Max( RMSe,Min( RMSe ,MUR ) ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( RMSe / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "Max( ( ( ( ACS + AMS ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) - MDR ) ) * FirstVNF_Mem ),Min( ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) ,( Max( ( ( ( FirstVNF_CPU_Server * MRS ) - RRS ) * CRS ),ACS ) + ( ( ( CRS / Const ) / BR ) + ( ACS * MDR ) ) ) ) )", "choosing": "Min( ( MUC * ( ( MUM - Max( ( MUM + ( DS / ( DS / MUR ) ) ),RCSe ) ) + Min( ( ( RCSe - MUR ) - DS ) ,MUR ) ) ) ,( MUC + ( ( MUM - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) + MUR ) ) )", "obj1": 0.4635036496350365, "obj2": 0.509973489660137}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( Const - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( ( DDR / ( PN * ( BR * AMS ) ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( CS + MUC ) + MUM ) * RRSe ) + MUC ) ,( Min( RCSe ,( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,( CS * MUR ) ) ) ) ) ) - MUR ) )", "obj1": 0.4981751824817518, "obj2": 0.45858290123342604}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,( MUM * ( DS + CS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.4127113015561523}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) * Min( ( ( Const - Max( BR,Min( BR ,FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ,( ( PN * AMS ) * DDR ) ) )", "choosing": "( Max( ( CS / MUR ),( ( RRSe - ( CS + ( RMSe / ( RRSe + MUC ) ) ) ) - ( ( RMSe / MUC ) * MUM ) ) ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5211447077947122}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6058394160583942, "obj2": 0.312788536801045}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( ( MRS * DDR ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUR )", "obj1": 0.7901459854014599, "obj2": 0.10344393463538565}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( ( Min( MUR ,MUM ) - MUR ) + RMSe ) ) ) - MUC ) ) )", "obj1": 0.8667883211678832, "obj2": 0.06045621567886572}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5129753083084452}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + CRS ) * FirstVNF_CPU ) - ( ( ( ( DDR + FirstVNF_CPU_Server ) * FirstVNF_Mem ) * Max( ACS,Min( MDR ,FirstVNF_Mem_Server ) ) ) - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR * CS ) - ( Max( MUR,CS ) / ( MLU - RMSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3658542482239504}], "22": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( FirstVNF_CPU - ( BR + Min( MDR ,MDR ) ) ) - ( ( MDR - BR ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + RCSe ) ) ) ) ) ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( ( MUM / Max( Max( MUC,CS ),RCSe ) ) + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( PN - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * MRS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe / RCSe ) + ( MUC * RCSe ) ),Min( CS ,DS ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.6843065693430657, "obj2": 0.2056957473968303}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.8284671532846716, "obj2": 0.08126557962295931}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751825}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( MRS ,( DDR - MDR ) ) + MDR ) * FirstVNF_CPU ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( MUM,( DS * ( ( RCSe - MUR ) - ( RCSe / MUR ) ) ) ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7536496350364964, "obj2": 0.1440219684709614}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( ( ( ( ( ( ( ( ACS - PN ) + ACS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - PN ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( Min( RMSe ,( Max( CS,MUR ) - MUM ) ) - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / RCSe ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.8558394160583942, "obj2": 0.07732421663664996}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,CRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.666058394160584, "obj2": 0.2444908521872966}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6605839416058394, "obj2": 0.2690032198049109}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS + FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( Min( RMSe ,Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( ( MLU - Max( CS,MUM ) ) - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Max( ACS,CRS ) * ( ( Min( CRS ,( FirstVNF_CPU * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUM + MLU ) / ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + ( ( ( MLU / RCSe ) * MUR ) - ( Min( CS ,RMSe ) / MUR ) ) ) ) ) ) )", "obj1": 0.9051094890510949, "obj2": 0.03954668308318344}, {"determining": "( ( PN - ( ( ( Min( Min( CRS ,( BR * MRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.4981751824817518, "obj2": 0.45676783324938425}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + DS ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.15639038839142844}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * ( RCSe - Max( RCSe,( CS + CS ) ) ) ) ) - MUR )", "obj1": 0.9562043795620438, "obj2": 0.013693352914250148}, {"determining": "( ( Const - ( Max( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( CRS + CRS ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,( MUM * RCSe ) ) ) ) ) ,RCSe ) - MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.545958906311667}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( PN - ( ( FirstVNF_RAM_Server * ACS ) / ( ( Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Min( ( Min( MDR ,DDR ) + ARS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) ) )", "choosing": "( ( Min( Min( MUC ,MUC ) ,Max( MLU,( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / ( MUM * ( CS + RCSe ) ) ) - Max( ( RCSe * RMSe ),MUC ) )", "obj1": 0.3886861313868613, "obj2": 0.6574794713712848}, {"determining": "( ( Const - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( ( Max( ( ( FirstVNF_RAM_Server + MDR ) * ACS ),MRS ) / ( PN * Const ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUR - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( RRSe * Max( MUR,Max( MUR,( RMSe - MUR ) ) ) ) ) ) - MUR ) )", "obj1": 0.5492700729927007, "obj2": 0.38374718996354734}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( Min( MDR ,PN ) - PN ) - ( ( ( ( Min( RRS ,( FirstVNF_Mem + ( PN / CRS ) ) ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( MUR + ( MUC * RCSe ) ),( MUM / Max( Max( MUC,CS ),RCSe ) ) ) * Max( RMSe,Min( ( ( MUC * CS ) * ( RMSe * Max( MUM,DS ) ) ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9452554744525548, "obj2": 0.015561755979442711}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( FirstVNF_CPU ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUM,MLU ) - MUR )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( FirstVNF_Mem + ( FirstVNF_CPU_Server / MRS ) ) ) * Const ) / CRS ) ) - ( ( ( Max( ARS,MRS ) * FirstVNF_Mem ) / BR ) * ( FirstVNF_CPU_Server / MDR ) ) )", "choosing": "Max( ( ( MUM * RRSe ) + MUR ),Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ) )", "obj1": 0.6642335766423357, "obj2": 0.26640142907401737}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( AMS - MDR ) + ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8813868613138686, "obj2": 0.05066170719557321}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.8594890510948905, "obj2": 0.07418125465752343}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5547445255474452, "obj2": 0.3762620896080132}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + DS ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.15639038839142844}, {"determining": "( ( ( ( Max( Const,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( BR + Const ) ) ) - PN ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,Min( ( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ,( ( CS + ( MUR - RRSe ) ) * ( DS + RCSe ) ) ) ) - RRSe ) )", "obj1": 0.5164233576642335, "obj2": 0.4251431093118756}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19535056682427876}, {"determining": "( ( Const - ( ( ( Min( CRS ,( ( MDR - BR ) * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( ( DDR / Min( PN ,Const ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),Min( ( Min( MUR ,RRSe ) + RMSe ) ,MUM ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6208389712627895}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.7135036496350365, "obj2": 0.175665345256676}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( CRS * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - ( RMSe + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6058394160583942, "obj2": 0.3113409193920969}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( ( PN - ( ( ( ( ( FirstVNF_Mem * MDR ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( AMS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) * MUR ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe + MUC ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.36362521475892645}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( RCSe / ( DS - ( CS / MUM ) ) ) ) - RMSe ) )", "obj1": 0.8868613138686131, "obj2": 0.04778806998501358}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.864963503649635, "obj2": 0.061928853177362096}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MUM + MLU ) / ( MUM - Min( Min( CS ,MUR ) ,( Max( RCSe,DS ) * MUM ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.49961483229674963}, {"determining": "( ( PN - ( ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "Max( ( ( FirstVNF_Mem - ( PN * FirstVNF_RAM ) ) + ( RRS + FirstVNF_CPU_Server ) ),Min( ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,( Min( ( ARS + ( MDR - ( ( CRS / Const ) / BR ) ) ) ,Const ) / ( ( Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_CPU,RRS ),( MRS - FirstVNF_RAM_Server ) ) ) * MDR ) + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( RMSe / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( MUM * ( MUR / ( CS * RCSe ) ) ) ) ) ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( PN - ( ( ( Min( ( CRS * ( BR * Const ) ) ,MDR ) * ( AMS - ( CRS * DDR ) ) ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( ( Min( ( MUC * MUM ) ,MUC ) * ( ( MUM / RMSe ) + Max( RMSe,RMSe ) ) ) * CS ) ) + ( Max( ( MLU + Min( MUM ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Max( Min( MUM ,( RRSe / RMSe ) ),MLU ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17442583470902231}, {"determining": "( Max( MRS,Min( ACS ,Min( PN ,ACS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * MUM ) ,Min( ( ( MUR / ( MUC * ( MUC * MUC ) ) ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( MDR / ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) ) * Const ) / CRS ) ) - ( ( ( FirstVNF_CPU / Const ) / BR ) * Min( CRS ,( Const * MRS ) ) ) )", "choosing": "Max( MUR,( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5072992700729927, "obj2": 0.44500848620349026}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ACS + DDR ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Const * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( ( MUM / MLU ),Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RMSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17442583470902231}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6021897810218978, "obj2": 0.32012796799928367}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - Min( MDR ,MRS ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ACS ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( Min( MUR ,( RCSe * CS ) ) / MUR ) ) ) ) ) - MUR )", "obj1": 0.7937956204379562, "obj2": 0.10109151933650959}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7463503649635036, "obj2": 0.14929344512301082}, {"determining": "( ( PN - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( ( MUC * RCSe ),DS ) ) ) ) ) - MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN / ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_CPU_Server / ARS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RMSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) - ( MUM / MUC ) )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( AMS * ARS ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( Min( DDR ,Min( ( FirstVNF_RAM_Server + ( MRS + RRS ) ) ,ACS ) ) / Min( FirstVNF_CPU ,ACS ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( ( ( RRSe * MUC ) + ( MUM * ( DS + DS ) ) ),RCSe ) - ( RRSe + RRSe ) )", "obj1": 0.39416058394160586, "obj2": 0.6412935986715731}, {"determining": "( ( Const * FirstVNF_CPU_Server ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MLU - MUC ) - ( ( ( RCSe - Max( RCSe,( DS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.4190106692683401}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.6113138686131386, "obj2": 0.3069594678133094}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ARS ) / ( Max( ACS,Max( ( ARS * PN ),Min( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_Mem ) ) ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( CS * DS ) * RRSe ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) - ( PN - Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( Min( ( CS / ( DS - RMSe ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + RRSe ) ) * MUC ) / ( MLU - ( ( RMSe + RRSe ) / MLU ) ) ) / Max( RRSe,Max( ( ( MUR / MUC ) + CS ),CS ) ) ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.32594704791185164}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_CPU ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( MUC * DS ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( Const - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( ( DDR / ( PN * Const ) ) * FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( MUM * ( DS + MUR ) ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5786997615915744}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),( DDR + ( MRS / ARS ) ) ) ) * ACS ) / ( ( ( Min( Min( CRS ,( Const * AMS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( MLU - ( ( ( RCSe - Max( MUC,MUC ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.47952949219982594}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ACS ,( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) ) ) ) / ( ACS + FirstVNF_CPU ) ) - ( ( ARS / FirstVNF_CPU ) * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( ( RCSe - Max( Min( Min( CS ,MUR ) ,RCSe ),RRSe ) ) / RCSe ) * DS ) ,( ( MUR / ( RCSe * CS ) ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6412935986715731}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.6952554744525548, "obj2": 0.19316962567652957}, {"determining": "( ( Min( ACS ,Min( ( ( BR * FirstVNF_Mem ) - AMS ) ,( FirstVNF_RAM_Server + ( ( CRS / ACS ) * MDR ) ) ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( RMSe,( RMSe * Max( Max( ( ( MUM + ( MUR * CS ) ) - CS ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5037110503421589}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8868613138686131, "obj2": 0.04778806998501358}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Min( CS ,RMSe ) / ( ( ( RMSe * MUR ) - CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.45072992700729925, "obj2": 0.5302829762477071}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS + ARS ) * ( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,CS ) - ( ( ( RCSe - ( MLU - MUC ) ) - Min( ( MUC - RMSe ) ,( ( RCSe * MUC ) - MUR ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.29137834296864107}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( MUR / ( RCSe * CS ) ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3294117237404724}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + ACS ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( AMS - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + Min( Min( RCSe ,MUC ) ,RRSe ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,FirstVNF_Mem ) ) ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS - ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( DS,CS ),RCSe ) ) ,MUR ) ) - ( CS / Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3789257710329584}, {"determining": "( ( ( ( ( ( CRS - ( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) / Max( ARS,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / Min( ( Const / BR ) ,ACS ) )", "choosing": "Max( MUR,( ( RMSe / RCSe ) / ( ( MUC / ( RRSe + ( MUC - Min( Max( MLU,DS ) ,RMSe ) ) ) ) + Min( Max( RMSe,Min( RMSe ,MUR ) ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( MRS * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server * CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( ( BR + BR ) ,PN ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUR ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.057582578468306084}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8722627737226277, "obj2": 0.057582578468306084}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ( ACS + DDR ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Max( ( DS - MLU ),MUC ) - MLU ) ) )", "obj1": 0.9726277372262774, "obj2": 0.004677736965586247}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( ( Min( MUR ,MUM ) - MUR ) + RMSe ) ) ) - MUC ) ) )", "obj1": 0.8667883211678832, "obj2": 0.06045621567886572}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * Const ) * ( Min( CRS ,( ( MRS / FirstVNF_RAM ) * MRS ) ) + Min( BR ,( MRS - MRS ) ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( MUR - DS ) ) - RCSe )", "obj1": 0.8029197080291971, "obj2": 0.0959588102958872}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU * ( Min( CRS ,( Min( BR ,MDR ) * CRS ) ) + MDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( RCSe - ( DS - Max( MUM,MUC ) ) ) ) - RMSe ) )", "obj1": 0.5091240875912408, "obj2": 0.4353543098531352}], "23": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( PN - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * MRS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe / RCSe ) + ( MUC * RCSe ) ),Min( CS ,DS ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( BR + Min( MDR ,MDR ) ) ) - ( ( MDR - BR ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( ( MUM / Max( Max( MUC,CS ),RCSe ) ) + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( ( ( CS + MUM ) * ( DS + RCSe ) ) * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.6478102189781022, "obj2": 0.2442684995995411}, {"determining": "( ( ( Max( MRS,BR ) + CRS ) - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ),CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6733576642335767, "obj2": 0.2372552428939969}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751825}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.6806569343065694, "obj2": 0.20676452076558138}, {"determining": "( ( PN - ( ( ( ( ( FirstVNF_Mem * MDR ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( AMS * ACS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) * MUR ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe + MUC ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.36362521475892645}, {"determining": "( ( ( ( ( ( ( ( ACS - PN ) + ACS ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - PN ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( Min( RMSe ,( Max( CS,MUR ) - MUM ) ) - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / RCSe ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.8558394160583942, "obj2": 0.07732421663664996}, {"determining": "( ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,( Min( Const ,PN ) * FirstVNF_Mem ) ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) - ( PN - Min( MRS ,PN ) ) )", "choosing": "( MUR - ( RMSe / ( ( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ) / RRSe ) * ( DS * MUM ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14916683932657962}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - CRS ) ) + ( ( ( Min( ( ACS * BR ) ,( FirstVNF_Mem * MRS ) ) + MDR ) * FirstVNF_CPU ) * Min( ( FirstVNF_CPU_Server / PN ) ,CRS ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( CS * MUC ) + DS ) - ( MUR * MLU ) ) + ( RMSe * ( RMSe - ( ( RCSe / ( DS / MUM ) ) * RMSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.1325824012132643}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.8284671532846716, "obj2": 0.08126557962295931}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUR,( ( RMSe / RCSe ) * Min( RRSe ,MUM ) ) ) - ( ( RMSe * MUC ) / ( Min( RCSe ,( ( RMSe - CS ) / ( ( Min( MUM ,CS ) - MUR ) + RMSe ) ) ) - MUC ) ) )", "obj1": 0.8302919708029197, "obj2": 0.08002606907530567}, {"determining": "( ( Min( ( Const - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * MRS ) ) + PN ) ) + ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) + ARS ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( ( ( MUM * RRSe ) + MUR ),Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ) )", "obj1": 0.5492700729927007, "obj2": 0.38064981047955954}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( ( PN / ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_CPU_Server / ARS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RMSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) - ( MUM / MUC ) )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6021897810218978, "obj2": 0.32012796799928367}, {"determining": "( ( ( ( Max( Const,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( BR + Const ) ) ) - PN ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,Min( ( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ,( ( CS + ( MUR - RRSe ) ) * ( DS + RCSe ) ) ) ) - RRSe ) )", "obj1": 0.5164233576642335, "obj2": 0.4251431093118756}, {"determining": "( ( Const * FirstVNF_CPU_Server ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MLU - MUC ) - ( ( ( RCSe - Max( RCSe,( DS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.4190106692683401}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.6204379562043796, "obj2": 0.29286608114208157}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS + FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( Min( RMSe ,Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( ( MLU - Max( CS,MUM ) ) - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( CRS + FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( Min( RMSe ,Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( ( MLU - Max( CS,MUM ) ) - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7281021897810219, "obj2": 0.17168935484727532}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MUM ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( RCSe,RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.01556175597944271}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.614963503649635, "obj2": 0.2978851986548906}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),( DDR + ( MRS / ARS ) ) ) ) * ACS ) / ( ( ( Min( Min( CRS ,( Const * AMS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( MLU - ( ( ( RCSe - Max( MUC,MUC ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( Const - ( ( ( Min( CRS ,( ( MDR - BR ) * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * Min( FirstVNF_CPU_Server ,( ( DDR / Min( PN ,Const ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),Min( ( Min( MUR ,RRSe ) + RMSe ) ,MUM ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6208389712627895}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) - MLU ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19535056682427876}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5054744525547445, "obj2": 0.44495732312753394}, {"determining": "( PN - ( ( ( Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / Max( MLU,( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.3886861313868613, "obj2": 0.6574794713712848}, {"determining": "( ( PN - ( AMS / ( ( FirstVNF_CPU / Max( PN,ARS ) ) * FirstVNF_Mem_Server ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,( MUM / RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.6222627737226277, "obj2": 0.27989612759685}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.6824817518248175, "obj2": 0.20552501021792777}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( MRS ,( DDR - MDR ) ) + MDR ) * FirstVNF_CPU ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( MUM,( DS * ( ( RCSe - MUR ) - ( RCSe / MUR ) ) ) ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * Const ) * ( Min( CRS ,( ( MRS / FirstVNF_RAM ) * MRS ) ) + Min( BR ,( MRS - MRS ) ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( MUR - DS ) ) - RCSe )", "obj1": 0.8029197080291971, "obj2": 0.0959588102958872}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( MUR + ( MUC * RCSe ) ),( MUM / Max( Max( MUC,CS ),RCSe ) ) ) * Max( RMSe,Min( ( ( MUC * CS ) * ( RMSe * Max( MUM,DS ) ) ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MUM + MLU ) / ( MUM - Min( Min( CS ,MUR ) ,( Max( RCSe,DS ) * MUM ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.49961483229674963}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + ACS ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( AMS - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + Min( Min( RCSe ,MUC ) ,RRSe ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - ( ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( ( ACS - PN ) + ACS ) + MDR ) ) )", "choosing": "( Max( MUR,Max( MUR,DS ) ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.5273722627737226, "obj2": 0.4110961072519142}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,ACS ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5494224087142993}, {"determining": "( ( PN - Max( CRS,Max( Max( RRS,AMS ),CRS ) ) ) - ( ( DDR * ( DDR / ( PN * BR ) ) ) / ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) * ( Max( Max( Min( MUC ,MUR ),( CS + RRSe ) ),CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) - MUR )", "obj1": 0.8941605839416058, "obj2": 0.044959483330803865}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( MRS * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server * CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( ( BR + BR ) ,PN ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUR ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * Const ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( DS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.708029197080292, "obj2": 0.18236049820626934}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( ( ACS * ARS ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),Max( MUR,CS ) ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4785774241051905}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.6952554744525548, "obj2": 0.19316962567652957}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( AMS * ARS ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_CPU ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( MUC * DS ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( FirstVNF_CPU ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUM,MLU ) - MUR )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7536496350364964, "obj2": 0.1440219684709614}, {"determining": "( ( PN - ( ( FirstVNF_RAM * FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - BR ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + ( Min( DS ,RCSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7299270072992701, "obj2": 0.15880298940398294}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( PN - ( ( ( ( ( Const - DDR ) / FirstVNF_RAM ) * FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUR - ( RCSe - ( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * ( RMSe - ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.15639038839142844}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( DDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( ( RMSe * DS ) + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5294891603503902}, {"determining": "( ( Const - ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC / ( CS + CS ) ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6288379240299136}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( ( ( ( Min( CRS ,( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - ( Max( MRS,FirstVNF_CPU ) * MRS ) ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) / ( PN + Min( ( RRS - ( Max( BR,CRS ) - FirstVNF_CPU_Server ) ) ,( Min( ( ARS + FirstVNF_Mem ) ,Const ) / ( ( FirstVNF_Mem_Server * PN ) + ( MRS * MDR ) ) ) ) ) )", "choosing": "Max( MUR,( Min( MLU ,CS ) / ( ( RCSe + ( DS * Min( ( ( RCSe - RRSe ) * RRSe ) ,( MUC / MUM ) ) ) ) / ( DS * ( MLU - RRSe ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.013693352914250148}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( RCSe / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.8594890510948905, "obj2": 0.07418125465752343}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ACS ,( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) ) ) ) / ( ACS + FirstVNF_CPU ) ) - ( ( ARS / FirstVNF_CPU ) * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( ( RCSe - Max( Min( Min( CS ,MUR ) ,RCSe ),RRSe ) ) / RCSe ) * DS ) ,( ( MUR / ( RCSe * CS ) ) + ( MUM * ( RCSe + DS ) ) ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6412935986715731}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5802919708029197, "obj2": 0.3416010929873119}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / DDR ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),Max( ( ARS * PN ),Min( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_Mem ) ) ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / Max( MLU,RCSe ) ) - RCSe )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( PN - Max( MDR,PN ) ) - ( ( ( FirstVNF_Mem * BR ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MLU - ( ( ( RRSe + Max( MUC,MUC ) ) * RCSe ) * Max( MUM,DS ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.09978133659124026}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.6113138686131386, "obj2": 0.3069594678133094}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( CRS * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - ( RMSe + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6058394160583942, "obj2": 0.3113409193920969}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5547445255474452, "obj2": 0.3762620896080132}, {"determining": "( ( ARS / MDR ) - ( Min( ( FirstVNF_Mem_Server - ACS ) ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( RMSe * ( RCSe + Min( Max( MUC,MUM ) ,( MUR - RCSe ) ) ) ) ) ) ) ,( ( RCSe / RRSe ) - ( ( DS + DS ) * ( ( Min( ( Max( MUM,MUR ) / RMSe ) ,DS ) - DS ) * MUM ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( Min( DDR ,Min( ( FirstVNF_RAM_Server + ( MRS + RRS ) ) ,ACS ) ) / Min( FirstVNF_CPU ,ACS ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( ( ( RRSe * MUC ) + ( MUM * ( DS + DS ) ) ),RCSe ) - ( RRSe + RRSe ) )", "obj1": 0.39416058394160586, "obj2": 0.6412935986715731}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem_Server ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * PN ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * ( MUC - RMSe ) ) * DS ) ,( ( RMSe + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.8996350364963503, "obj2": 0.041204280346292255}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,PN ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9543795620437956, "obj2": 0.014820414833296412}, {"determining": "( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) - ( PN - Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( Min( ( CS / ( DS - RMSe ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + RRSe ) ) * MUC ) / ( MLU - ( ( RMSe + RRSe ) / MLU ) ) ) / Max( RRSe,Max( ( ( MUR / MUC ) + CS ),CS ) ) ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.32594704791185164}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( Min( RMSe ,( Max( CS,MUR ) - MUM ) ) - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / RCSe ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( CS ,RCSe ) ) ) + RRSe ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3294117237404724}, {"determining": "( ( ( ( ( ( CRS - ( Const * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - Max( MRS,ACS ) ) / Max( ARS,( ( ACS * ARS ) + Max( ARS,AMS ) ) ) ) / Min( ( Const / BR ) ,ACS ) )", "choosing": "Max( MUR,( ( RMSe / RCSe ) / ( ( MUC / ( RRSe + ( MUC - Min( Max( MLU,DS ) ,RMSe ) ) ) ) + Min( Max( RMSe,Min( RMSe ,MUR ) ) ,Max( CS,( RCSe / ( ( DS * MLU ) / ( RMSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.490128253200479}, {"determining": "( Min( ( ( Const - RRS ) * FirstVNF_Mem_Server ) ,( ( PN * AMS ) * DDR ) ) * ( Max( ACS,CRS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5369536332834238}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - ( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8813868613138686, "obj2": 0.05066170719557321}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( AMS - MDR ) + ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8813868613138686, "obj2": 0.05066170719557321}, {"determining": "( ( ( ( ( ( MDR + Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( BR * MRS ) ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - BR ) - ( ( ARS * ACS ) / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RMSe - DS ) / ( Min( MLU ,Min( ( Max( RRSe,CS ) / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) - Max( Min( MLU ,MLU ),CS ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}], "24": [{"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( MRS * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server * CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( ( BR + BR ) ,PN ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUR ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( PN - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * MRS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe / RCSe ) + ( MUC * RCSe ) ),Min( CS ,DS ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( ( MUM / Max( Max( MUC,CS ),RCSe ) ) + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( ( Max( MRS,BR ) + CRS ) - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ),CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6733576642335767, "obj2": 0.2372552428939969}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.6478102189781022, "obj2": 0.2442684995995411}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( PN * AMS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.8594890510948905, "obj2": 0.07418125465752343}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.6806569343065694, "obj2": 0.20676452076558138}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( AMS * ARS ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,( Min( Const ,PN ) * FirstVNF_Mem ) ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) - ( PN - Min( MRS ,PN ) ) )", "choosing": "( MUR - ( RMSe / ( ( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ) / RRSe ) * ( DS * MUM ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14916683932657962}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MUM + MLU ) / ( MUM - Min( Min( CS ,MUR ) ,( Max( RCSe,DS ) * MUM ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.49961483229674963}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( ( ( MUM * RRSe ) + MUR ),Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ) )", "obj1": 0.5492700729927007, "obj2": 0.38064981047955954}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( MRS ,( DDR - MDR ) ) + MDR ) * FirstVNF_CPU ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / AMS ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( MUM,( DS * ( ( RCSe - MUR ) - ( RCSe / MUR ) ) ) ),( CS + MUM ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.3405374361196}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) )", "obj1": 0.822992700729927, "obj2": 0.0852806948049635}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7536496350364964, "obj2": 0.1440219684709614}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) + ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / Max( ACS,PN ) ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RRSe,( RMSe / MUR ) ) ) - DS ) + ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( PN - ( ( ( Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / Max( MLU,( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),MUC ) )", "obj1": 0.3886861313868613, "obj2": 0.6574794713712848}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / CS ) + DS ) - ( ( MUC - RCSe ) / Max( Max( ( MUM + ( MUC / ( DS / MUR ) ) ),RCSe ),( ( RRSe * Min( ( MUM + MUC ) ,Min( DS ,RCSe ) ) ) + DS ) ) ) ) - Max( MUR,Max( MUR,DS ) ) )", "obj1": 0.7226277372262774, "obj2": 0.16886032210295143}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / MLU ) - MUR )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),MUM ) * Min( Min( ( MLU + MUC ) ,( MUC * DS ) ) ,Max( ( MLU - MLU ),( CS / MUR ) ) ) ) ) - MUR )", "obj1": 0.6021897810218978, "obj2": 0.32012796799928367}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.6204379562043796, "obj2": 0.28472870074951506}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( ( PN / FirstVNF_CPU_Server ) + Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_Mem_Server * BR ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( MUC,MUR ),( ( ( DS / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6778593727672756}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.8813868613138686, "obj2": 0.05066170719557321}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( ( ( CS + MUM ) * ( DS + RCSe ) ) * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.6478102189781022, "obj2": 0.2442684995995411}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS - MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( Max( ( ARS * ( Max( ARS,ACS ) / Max( RRS,FirstVNF_RAM_Server ) ) ),Min( DDR ,( MRS / ARS ) ) ),ACS ) * ACS ) ) )", "choosing": "Min( ( ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) - ( Min( ( ( ( MUC / Max( DS,RRSe ) ) / RMSe ) - ( DS * ( ( RCSe - MUR ) - MUC ) ) ) ,RRSe ) + RRSe ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.04120428034629224}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * Min( CRS ,ACS ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( RMSe / ( Max( Min( ( RMSe * RCSe ) ,( MUC * RCSe ) ),Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - ( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( MUC / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8813868613138686, "obj2": 0.05066170719557321}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5054744525547445, "obj2": 0.44495732312753394}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.6952554744525548, "obj2": 0.19316962567652957}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,Min( ( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ,( ( CS + MUM ) * ( DS + RCSe ) ) ) ) - RRSe ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.6113138686131386, "obj2": 0.3069594678133094}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( CRS * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - MUR ) - Min( ( MUC - ( RMSe + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( MLU - RMSe ) ) )", "obj1": 0.6058394160583942, "obj2": 0.3113409193920969}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.013693352914250148}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( Min( ( Const - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * MRS ) ) + PN ) ) + ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) + ARS ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( PN - ( ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) - MUC ) ) )", "obj1": 0.5857664233576643, "obj2": 0.3276790041891037}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.3349823622632246}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3632657024198168}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + ACS ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( AMS - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + Min( Min( RCSe ,MUC ) ,RRSe ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( ( ( ( ( MDR + Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( BR * MRS ) ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - BR ) - ( ( ARS * ACS ) / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RMSe - DS ) / ( Min( MLU ,Min( ( Max( RRSe,CS ) / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) - Max( Min( MLU ,MLU ),CS ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,BR ) * ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( RCSe ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( PN / ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_CPU_Server / ARS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( ( MUM / Max( Max( RMSe,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) - ( MUM / MUC ) )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( Const * FirstVNF_CPU_Server ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MLU - MUC ) - ( ( ( RCSe - Max( RCSe,( DS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.4190106692683401}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( MLU,DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5457679910158798}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,ACS ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5494224087142993}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( MRS * FirstVNF_RAM ) - Max( ( ACS * ARS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( RRSe + Min( ( Min( MUC ,RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * ( MUR - ( DS + RCSe ) ) ) ) )", "obj1": 0.5602189781021898, "obj2": 0.3689587483957633}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.7317518248175182, "obj2": 0.15639038839142844}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( MRS * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server * CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( ( BR + BR ) ,PN ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUR ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( DDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( ( RMSe * DS ) + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5294891603503902}, {"determining": "( ( PN - Max( CRS,Max( Max( RRS,AMS ),CRS ) ) ) - ( ( DDR * ( DDR / ( PN * BR ) ) ) / ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) * ( Max( Max( Min( MUC ,MUR ),( CS + RRSe ) ),CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) - MUR )", "obj1": 0.8941605839416058, "obj2": 0.044959483330803865}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) * ( Const - RRS ) ) * ( ( PN * AMS ) * DDR ) ) - ( FirstVNF_Mem_Server - CRS ) ) / Max( ( DDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN + ( BR + ( ( DDR * MDR ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) )", "choosing": "( Min( ( CS * ( ( RMSe / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.4343065693430657, "obj2": 0.5610104753583923}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,( ( RMSe / RCSe ) * Min( RRSe ,MUM ) ) ) - ( ( RMSe * MUC ) / ( Min( RCSe ,( ( RMSe - CS ) / ( ( Min( MUM ,CS ) - MUR ) + RMSe ) ) ) - MUC ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20331877622720723}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.614963503649635, "obj2": 0.2978851986548906}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ARS ) / ( Max( ACS,Max( ( ARS * PN ),Min( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_Mem ) ) ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( CS * DS ) * RRSe ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ) / ( MLU - RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5547445255474452, "obj2": 0.3748289935152169}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( PN - ( ( ( ( ( CRS + ( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( ARS,MDR ) * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( RCSe * MUC ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MLU / Max( ( RCSe + MUC ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( ARS / MDR ) - ( Min( ( FirstVNF_Mem_Server - ACS ) ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( RMSe * ( RCSe + Min( Max( MUC,MUM ) ,( MUR - RCSe ) ) ) ) ) ) ) ,( ( RCSe / RRSe ) - ( ( DS + DS ) * ( ( Min( ( Max( MUM,MUR ) / RMSe ) ,DS ) - DS ) * MUM ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) - ( PN - Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( Min( ( CS / ( DS - RMSe ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + RRSe ) ) * MUC ) / ( MLU - ( ( RMSe + RRSe ) / MLU ) ) ) / Max( RRSe,Max( ( ( MUR / MUC ) + CS ),CS ) ) ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.32594704791185164}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751825}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Const + Max( Const,RRS ) ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( Min( CS ,( RMSe * MUC ) ) + CS ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + RMSe ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_Mem_Server / RRS ) ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( RCSe ,MUR ) ) - MUC ) ) )", "obj1": 0.4708029197080292, "obj2": 0.49272906633793956}, {"determining": "( ( ( ( ( Min( ( ACS - AMS ) ,( Const * MRS ) ) + MDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem + CRS ) ) / Max( FirstVNF_RAM_Server,( ( ACS * ARS ) + Max( FirstVNF_Mem_Server,AMS ) ) ) ) / ( PN - Min( ( RRS + ( ( MRS + MRS ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,( ARS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( CS + RCSe ),MUR )", "obj1": 0.47992700729927007, "obj2": 0.4780919188087687}, {"determining": "( ( PN - ( AMS / ( ( FirstVNF_CPU / Max( PN,ARS ) ) * FirstVNF_Mem_Server ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,( MUM / RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.6222627737226277, "obj2": 0.27989612759685}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( MUM,DS ) ) ) )", "obj1": 0.7956204379562044, "obj2": 0.1010208471388939}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( DS + CS ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.614963503649635, "obj2": 0.2978851986548906}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / DDR ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),Max( ( ARS * PN ),Min( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_Mem ) ) ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / Max( MLU,RCSe ) ) - RCSe )", "obj1": 0.9087591240875912, "obj2": 0.03619874760912151}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,ACS ) + MDR ) ) ,ACS ) ) / MDR ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + RCSe ),DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5797795770129094}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),( DDR + ( MRS / ARS ) ) ) ) * ACS ) / ( ( ( Min( Min( CRS ,( Const * AMS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( MLU - ( ( ( RCSe - Max( MUC,MUC ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC * DS ) ,DS )", "obj1": 0.395985401459854, "obj2": 0.6387351830616851}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( DDR / ( PN * Const ) ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( ( ( RCSe - MUR ) - MUC ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10495029768795625}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.5109489051094891, "obj2": 0.42844370586894337}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( RCSe,RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9434306569343066, "obj2": 0.016362115877746275}], "25": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( ( DS + MUR ) / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( MRS * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server * CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( ( BR + BR ) ,PN ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUR ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUR ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( ( MUM / Max( Max( MUC,CS ),RCSe ) ) + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( PN - ( ( ( ( PN / CRS ) * ( FirstVNF_RAM_Server * Min( ( ( FirstVNF_CPU - PN ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( ( MUC - RMSe ) - ( DS * ( ( MUR - MUR ) - MUC ) ) ) - MUC ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( MLU - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.23102978268890356}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) )", "obj1": 0.822992700729927, "obj2": 0.0852806948049635}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),Max( ( ARS * PN ),Min( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_Mem ) ) ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - RCSe )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506489}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( ( ( MUM * RRSe ) + MUR ),Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ) )", "obj1": 0.5492700729927007, "obj2": 0.38064981047955954}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( MUM,DS ) ) ) )", "obj1": 0.7956204379562044, "obj2": 0.1010208471388939}, {"determining": "( ( PN - ( ( Min( ( Max( Max( FirstVNF_CPU_Server,RRS ),( BR * FirstVNF_Mem_Server ) ) + MDR ) ,FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( RRS * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( ( MUM / DS ),Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( MUR + DS ) + ( MUM * ( DS + DS ) ) ) ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.2894763649198316}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) - MUC ) ) )", "obj1": 0.572992700729927, "obj2": 0.3397100344280764}, {"determining": "( ( PN - ( ( ( ( ( CRS + ( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( ARS,MDR ) * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( RCSe * MUC ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MLU / Max( ( RCSe + MUC ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7208029197080292, "obj2": 0.16810917682321758}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.6459854014598541, "obj2": 0.2594817889866845}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe - Max( RCSe,( CS + CS ) ) ) - MUR )", "obj1": 0.6003649635036497, "obj2": 0.3190672509323497}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,Min( CRS ,( CRS * MRS ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( RMSe + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.395985401459854, "obj2": 0.6365313611481507}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( PN - Max( CRS,Max( Max( RRS,AMS ),CRS ) ) ) - ( ( DDR * ( DDR / ( PN * BR ) ) ) / ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) * ( Max( Max( Min( MUC ,MUR ),( CS + RRSe ) ),CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) - MUR )", "obj1": 0.8941605839416058, "obj2": 0.044959483330803865}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) + ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / Max( ACS,PN ) ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RRSe,( RMSe / MUR ) ) ) - DS ) + ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( RMSe - MUR )", "obj1": 0.6496350364963503, "obj2": 0.24242741895848616}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( Min( CRS ,( MRS * ( ARS / FirstVNF_RAM ) ) ) + MDR ) ) ) - ( ( ACS * ARS ) + ( ( FirstVNF_CPU_Server - DDR ) + Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Max( Max( RCSe,( MLU - RRSe ) ),CS ) - Max( DS,MUM ) )", "obj1": 0.583941605839416, "obj2": 0.33086577320889715}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.7317518248175182, "obj2": 0.15639038839142844}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( ( PN / FirstVNF_CPU_Server ) + Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_Mem_Server * BR ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( MUC,MUR ),( ( ( DS / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6778593727672756}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.8813868613138686, "obj2": 0.05066170719557321}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( ( PN - Min( MDR ,( ( DDR * MRS ) / RRS ) ) ) - ( ( ( ( ( Min( ( BR * MRS ) ,CRS ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS / ( RRSe - MUC ) ),MUM ),( Max( ( ( MUR / MUC ) / RRSe ),MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( AMS * ARS ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.4635036496350365, "obj2": 0.5001941916648087}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.8813868613138686, "obj2": 0.05066170719557321}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( Max( PN,Min( Min( FirstVNF_RAM ,ACS ) ,PN ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC + RCSe ) ) )", "obj1": 0.7445255474452555, "obj2": 0.15040634987423324}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.5109489051094891, "obj2": 0.42844370586894337}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * Min( CRS ,ACS ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( RMSe / ( Max( Min( ( RMSe * RCSe ) ,( MUC * RCSe ) ),Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Min( ACS ,Max( ( ARS * ( FirstVNF_RAM_Server * Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( ( Max( ( RRSe - DS ),RMSe ) * MUR ),MUC ) - MUR )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,( ( RMSe / RCSe ) * Min( RRSe ,MUM ) ) ) - ( ( RMSe * MUC ) / ( Min( RCSe ,( ( RMSe - CS ) / ( ( Min( MUM ,CS ) - MUR ) + RMSe ) ) ) - MUC ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20331877622720723}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.0920421463072106}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ) / ( MLU - RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( ( Min( ( Const - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * MRS ) ) + PN ) ) + ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) + ARS ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( PN - ( ( ( Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + ( FirstVNF_Mem_Server - CRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / Max( MLU,( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),( RRSe * ( RCSe + ( DS * RRSe ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6574794713712848}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( DDR - ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * Min( Min( ( FirstVNF_RAM_Server + ( Min( ARS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + DS ) ,( MLU * RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.5589927618488476}, {"determining": "( ( ARS / MDR ) - ( Min( ( FirstVNF_Mem_Server - ACS ) ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( RMSe * ( RCSe + Min( Max( MUC,MUM ) ,( MUR - RCSe ) ) ) ) ) ) ) ,( ( RCSe / RRSe ) - ( ( DS + DS ) * ( ( Min( ( Max( MUM,MUR ) / RMSe ) ,DS ) - DS ) * MUM ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( PN - ( ( ( ( Const * MRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( RCSe - Max( RCSe,( CS + CS ) ) ) ) - MUR )", "obj1": 0.5346715328467153, "obj2": 0.39759362516530683}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5200729927007299, "obj2": 0.42018730740457544}, {"determining": "( ( PN - ( ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( ( ( ( ( MDR + Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( BR * MRS ) ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) - BR ) - ( ( ARS * ACS ) / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RMSe - DS ) / ( Min( MLU ,Min( ( Max( RRSe,CS ) / Max( Max( MUC,CS ),RCSe ) ) ,MUR ) ) - MUC ) ) - Max( Min( MLU ,MLU ),CS ) )", "obj1": 0.48175182481751827, "obj2": 0.469221232029848}, {"determining": "( ( MDR - ( ( ( ( Max( CRS,( Const * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( Max( ( MDR / FirstVNF_CPU ),( ARS * PN ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( Min( ACS ,FirstVNF_CPU ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * MUC ) + ( MUM * ( Max( ( RRSe / ( CS - MUR ) ),Min( RRSe ,CS ) ) + DS ) ) ) / ( Min( RCSe ,( ( MUC + CS ) / ( RMSe - ( Max( MUC,RRSe ) + MUC ) ) ) ) - MUC ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4154418169732255}, {"determining": "( ( PN - ( ( ( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) / Max( CS,DS ) ) - MUR )", "obj1": 0.4981751824817518, "obj2": 0.46133818143601246}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.6916058394160584, "obj2": 0.19591218298008145}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7536496350364964, "obj2": 0.1440219684709614}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( PN - Max( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ),BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / Max( FirstVNF_RAM,FirstVNF_CPU ) ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( RCSe + CS ) * ( MLU * Max( MUR,( RRSe / ( MUM - DS ) ) ) ) ) ) - MUR ) )", "obj1": 0.4781021897810219, "obj2": 0.47711872241806996}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,BR ) * ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( RCSe ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RCSe + MUM ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( MLU,DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5457679910158798}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( FirstVNF_Mem - ( ( ( ( Max( PN,FirstVNF_RAM ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( Max( CS,RMSe ) - RMSe ) - ( DS * ( MUC + CS ) ) ) ,MUC ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.013693352914250148}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3588843988603704}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.7317518248175182, "obj2": 0.15639038839142844}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( DDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( ( RMSe * DS ) + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5294891603503902}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.013693352914250148}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5054744525547445, "obj2": 0.44495732312753394}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.7007299270072993, "obj2": 0.1871454364488563}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + ACS ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( AMS - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + Min( Min( RCSe ,MUC ) ,RRSe ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( RCSe,RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / ( DS / MLU ) ) ) ) ) - Max( ( ( MUR - ( ( RRSe - RRSe ) - RCSe ) ) * MUR ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9434306569343066, "obj2": 0.016362115877746275}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - Min( MLU ,MLU ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8394160583941606, "obj2": 0.0746824455696792}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( ( ( CS + MUM ) * ( DS + RCSe ) ) * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.6478102189781022, "obj2": 0.2442684995995411}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) - MUC ) ) )", "obj1": 0.5857664233576643, "obj2": 0.3276790041891037}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS - MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( Max( ( ARS * ( Max( ARS,ACS ) / Max( RRS,FirstVNF_RAM_Server ) ) ),Min( DDR ,( MRS / ARS ) ) ),ACS ) * ACS ) ) )", "choosing": "Min( ( ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) - ( Min( ( ( ( MUC / Max( DS,RRSe ) ) / RMSe ) - ( DS * ( ( RCSe - MUR ) - MUC ) ) ) ,RRSe ) + RRSe ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC * DS ) ,DS )", "obj1": 0.4489051094890511, "obj2": 0.5369536332834238}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( MLU * Max( MUR,Max( MUR,DS ) ) ) - ( MUC * RCSe ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4615694360776153}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( Max( ( BR + ( Min( ( RRS + DDR ) ,( ( PN - ACS ) - DDR ) ) / MDR ) ),AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / DS ) ,Max( ( ( ( MLU + RCSe ) + MUR ) * MLU ),( RMSe * Min( Max( Max( RCSe,CS ),MUM ) ,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_Mem_Server / RRS ) ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( RCSe ,MUR ) ) - MUC ) ) )", "obj1": 0.4708029197080292, "obj2": 0.49272906633793956}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MUM + MLU ) / ( MUM - Min( Min( CS ,MUR ) ,( Max( RCSe,DS ) * MUM ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.49961483229674963}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + DS ) * ( MLU * Max( ( CS * RCSe ),( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.6806569343065694, "obj2": 0.20676452076558138}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( AMS - BR ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( ( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ),( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5673789375690128}, {"determining": "( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) - ( PN - Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( Min( ( CS / ( DS - RMSe ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + RRSe ) ) * MUC ) / ( MLU - ( ( RMSe + RRSe ) / MLU ) ) ) / Max( RRSe,Max( ( ( MUR / MUC ) + CS ),CS ) ) ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.32594704791185164}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( ( RCSe - MUR ) - MUC ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.041204280346292234}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS + ( FirstVNF_RAM + PN ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / MLU ) - MUR )", "obj1": 0.5364963503649635, "obj2": 0.39237087883991956}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Min( CRS ,( BR * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.9197080291970803, "obj2": 0.031209990500751825}], "26": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( DS + DS ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) - ( ( ACS * ARS ) * Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( Min( ( CS * ( ( ( DS + MUR ) / MUC ) + Max( RCSe,RMSe ) ) ) ,( MUC * RRSe ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( ( MUM / Max( Max( MUC,CS ),RCSe ) ) + DS ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( RRS / MDR ) ) + BR ) ) - ( BR + AMS ) )", "choosing": "Min( ( MUC - RMSe ) ,Min( Min( RCSe ,( DS * Min( Min( Max( Max( RCSe,MUC ),MUR ) ,MLU ) ,( MUM - ( RCSe * MUC ) ) ) ) ) ,MUR ) )", "obj1": 0.5492700729927007, "obj2": 0.3684008223849732}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) - MUC ) ) )", "obj1": 0.572992700729927, "obj2": 0.3397100344280764}, {"determining": "( ( PN - ( ( ( ( ( CRS + ( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( ARS,MDR ) * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( RCSe * MUC ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MLU / Max( ( RCSe + MUC ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.6916058394160584, "obj2": 0.19591218298008145}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( BR * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) - MUC )", "obj1": 0.9178832116788321, "obj2": 0.03952831517590346}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,Min( CRS ,( CRS * MRS ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( RMSe + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.395985401459854, "obj2": 0.6365313611481507}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( PN - Max( CRS,Max( Max( RRS,AMS ),CRS ) ) ) - ( ( DDR * ( DDR / ( PN * BR ) ) ) / ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) * ( Max( Max( Min( MUC ,MUR ),( CS + RRSe ) ),CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) - MUR )", "obj1": 0.8941605839416058, "obj2": 0.044959483330803865}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( PN - ( ( ( Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + ( FirstVNF_Mem_Server - CRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / Max( MLU,( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),( RRSe * ( RCSe + ( DS * RRSe ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6574794713712848}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( PN - ( ( ( ( Min( CRS ,CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( ( ( CS + MUM ) * ( DS + RCSe ) ) * RCSe ) ),RRSe ) * DS ) ) - MUR )", "obj1": 0.6405109489051095, "obj2": 0.249425668666492}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_Mem_Server / RRS ) ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( RCSe ,MUR ) ) - MUC ) ) )", "obj1": 0.4708029197080292, "obj2": 0.49272906633793956}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( MUC * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22880436809428623}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.9908759124087592, "obj2": 0.0012697281004302012}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7208029197080292, "obj2": 0.16810917682321758}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,( RCSe + DS ) ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - MUR )", "obj1": 0.6240875912408759, "obj2": 0.28229171392020974}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.8813868613138686, "obj2": 0.050661707195573204}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - ( RCSe - Max( RCSe,( CS + CS ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03120999050075182}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3588843988603704}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( ( ( BR - RRS ) + ( FirstVNF_RAM_Server * AMS ) ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( Min( RRSe ,MLU ) - ( ( ( RCSe - RCSe ) - RMSe ) - ( ( CS * MUR ) + RCSe ) ) ) - ( MUC * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.2894763649198316}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + ACS ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( AMS - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + Min( Min( RCSe ,MUC ) ,RRSe ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( RMSe + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.7974452554744526, "obj2": 0.09978133659124026}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) - ( PN - Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( Min( ( CS / ( DS - RMSe ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + RRSe ) ) * MUC ) / ( MLU - ( ( RMSe + RRSe ) / MLU ) ) ) / Max( RRSe,Max( ( ( MUR / MUC ) + CS ),CS ) ) ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.32594704791185164}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + DS ) * ( MLU * Max( ( CS * RCSe ),( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.6806569343065694, "obj2": 0.20676452076558138}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * MRS ) - ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) + Max( MLU,( RMSe * Max( ( MUR * ( MUC / CS ) ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),( RRSe * ( RCSe + ( DS * RRSe ) ) ) ) )", "obj1": 0.7572992700729927, "obj2": 0.13366692899668256}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) * ARS ) / ( Min( ACS ,Max( ( ARS * ( FirstVNF_RAM_Server * Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( ( Max( ( RRSe - DS ),( MUC * RCSe ) ) * MUR ),MUC ) - MUR )", "obj1": 0.8996350364963503, "obj2": 0.04120428034629223}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( MUR - ( RCSe * MUC ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5054744525547445, "obj2": 0.44495732312753394}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ARS ) )", "choosing": "( Max( Min( ( Max( MUM,MUR ) / RMSe ) ,DS ),MUC ) - MUR )", "obj1": 0.8686131386861314, "obj2": 0.05963085966644617}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( MUR ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8777372262773723, "obj2": 0.05285656040576582}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),Max( ( ARS * PN ),Min( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_Mem ) ) ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506489}, {"determining": "( ( PN - Min( MDR ,( ( DDR * MRS ) / RRS ) ) ) - ( ( ( ( AMS / RRS ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR / ACS ) ) )", "choosing": "Min( Max( RRSe,( Min( MUC ,MLU ) + MUC ) ) ,Max( MLU,( RMSe * Max( Max( ( DS / ( RRSe - MUC ) ),MUM ),( Max( ( ( MLU / MUC ) / RRSe ),MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( Min( ( Const - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * MRS ) ) + PN ) ) + ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) + ARS ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( ( PN / FirstVNF_CPU_Server ) + Min( ( ARS * Min( Const ,CRS ) ) ,( FirstVNF_Mem_Server * BR ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC * DS ) ,Min( ( ( RMSe / RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( MUC,MUR ),( ( ( DS / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6778593727672756}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS + ( FirstVNF_RAM + PN ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( ARS / MDR ) - ( Min( ( FirstVNF_Mem_Server - ACS ) ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / ( MUR / ( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) + ( RMSe * ( RCSe + Min( Max( MUC,MUM ) ,( MUR - RCSe ) ) ) ) ) ) ) ,( ( RCSe / RRSe ) - ( ( DS + DS ) * ( ( Min( ( Max( MUM,MUR ) / RMSe ) ,DS ) - DS ) * MUM ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}, {"determining": "( ( PN - ( ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,MLU ) ) ) ) ) ) - MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) + ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / Max( ACS,PN ) ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RRSe,( RMSe / MUR ) ) ) - DS ) + ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe - Max( RCSe,( CS + CS ) ) ) - MUR )", "obj1": 0.6003649635036497, "obj2": 0.3190672509323497}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - ( ( RMSe / MLU ) - MUR ) ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15458423178947747}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( ( FirstVNF_Mem_Server - CRS ) ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ) - ( MLU * MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.013064712272453878}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( PN - ( Min( BR ,Max( PN,( CRS - RRS ) ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe * MUC ) + ( MUM * ( DS + RCSe ) ) ),RCSe ) - ( ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) / CS ) - ( MUR * ( RMSe / MLU ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.279429473242956}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( AMS * ARS ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.44696287828764053}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + AMS ) * ACS ) )", "choosing": "Min( ( ( Min( ( Min( Max( DS,Max( DS,MUM ) ) ,( ( RRSe + RRSe ) - MUR ) ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( MLU,RMSe ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5457679910158798}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - MRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,( ( RMSe / RCSe ) * Min( RRSe ,MUM ) ) ) - ( ( RMSe * MUC ) / ( Min( RCSe ,( ( RMSe - CS ) / ( ( Min( MUM ,CS ) - MUR ) + RMSe ) ) ) - MUC ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RMSe / ( ( Max( ( ( Min( MLU ,MUM ) * ( CS + MUR ) ) - MUM ),CS ) / ( Min( MUM ,CS ) / MLU ) ) * ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) ) ) - MUR )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7536496350364964, "obj2": 0.1440219684709614}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + ( BR * MRS ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) )", "obj1": 0.5, "obj2": 0.45827120527259785}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),Max( ( ARS * PN ),Min( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_Mem ) ) ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - RCSe )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506489}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.635036496350365, "obj2": 0.259297730580947}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( RCSe,RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9434306569343066, "obj2": 0.016362115877746275}, {"determining": "( ( PN - ( ( Min( ( Max( Max( FirstVNF_CPU_Server,RRS ),( BR * FirstVNF_Mem_Server ) ) + MDR ) ,FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( RRS * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( ( MUM / DS ),Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( MUR + DS ) + ( MUM * ( DS + DS ) ) ) ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.2894763649198316}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server * ACS ) ) - PN )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - ( ( ( RCSe - MUR ) - MUC ) * DS ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.6551094890510949, "obj2": 0.2365686910104096}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24395925531260854}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( MLU,DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5339057632919564}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14916683932657965}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( ( ( ACS / FirstVNF_CPU ) / BR ) * MRS ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),( ( ARS * ( Max( ARS,ACS ) / Const ) ) - Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUR,CS ) - Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( DS * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * Max( MUC,CS ) ),( MLU - RCSe ) ) ) ) ) ) )", "obj1": 0.822992700729927, "obj2": 0.0852806948049635}, {"determining": "( Max( ( BR + ( Min( ( RRS + DDR ) ,( ( PN - ACS ) - DDR ) ) / MDR ) ),AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / DS ) ,Max( ( ( ( MLU + RCSe ) + MUR ) * MLU ),( RMSe * Min( Max( Max( RCSe,CS ),MUM ) ,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6307183313370713}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) - MUR )", "obj1": 0.4635036496350365, "obj2": 0.5001941916648087}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM - ARS ) / MRS ) ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MLU + CS ) ),( CS + CS ) ) ) - DS ) - ( MLU - RMSe ) ) - Max( MUR,CS ) )", "obj1": 0.4653284671532847, "obj2": 0.4979063791129418}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721058}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( Min( CRS ,( MRS * ( ARS / FirstVNF_RAM ) ) ) + MDR ) ) ) - ( ( ACS * ARS ) + ( ( FirstVNF_CPU_Server - DDR ) + Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Max( Max( RCSe,( MLU - RRSe ) ),CS ) - Max( DS,MUM ) )", "obj1": 0.583941605839416, "obj2": 0.33086577320889715}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( DDR - ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * Min( Min( ( FirstVNF_RAM_Server + ( Min( ARS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + DS ) ,( MLU * RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.5589927618488476}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08553464042504955}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU - ( ( ( Min( Max( ( CS + CS ),Min( RMSe ,RCSe ) ) ,RRSe ) / ( ( RCSe - MUR ) - DS ) ) / MLU ) / ( MLU - RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5200729927007299, "obj2": 0.42018730740457544}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.013693352914250148}, {"determining": "( ( PN - ( ( ( Min( ( ARS * Min( CRS ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / MLU ) - ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) )", "obj1": 0.531021897810219, "obj2": 0.4021549352982019}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.635036496350365, "obj2": 0.259297730580947}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( ( MDR - ( ( ( ( Max( CRS,( Const * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( Max( ( MDR / FirstVNF_CPU ),( ARS * PN ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( Min( ACS ,FirstVNF_CPU ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * MUC ) + ( MUM * ( Max( ( RRSe / ( CS - MUR ) ),Min( RRSe ,CS ) ) + DS ) ) ) / ( Min( RCSe ,( ( MUC + CS ) / ( RMSe - ( Max( MUC,RRSe ) + MUC ) ) ) ) - MUC ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4154418169732255}, {"determining": "( ( PN - ( ( ( ( ACS / Const ) - PN ) - ( FirstVNF_Mem_Server - Min( Const ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MLU,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Min( RMSe ,Min( DS ,CS ) ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( ( ( DS - ( DS / RCSe ) ) + CS ) / MUR ) - MUC ) ) )", "obj1": 0.7299270072992701, "obj2": 0.15988567189017672}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3588843988603704}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) )", "obj1": 0.6313868613138686, "obj2": 0.2707781561561298}, {"determining": "( Max( PN,Min( Min( FirstVNF_RAM ,ACS ) ,PN ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC + RCSe ) ) )", "obj1": 0.7445255474452555, "obj2": 0.15040634987423324}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) - MUC ) ) )", "obj1": 0.5857664233576643, "obj2": 0.3276790041891037}], "27": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * MRS ) - ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) + Max( MLU,( RMSe * Max( ( MUR * ( MUC / CS ) ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),( RRSe * ( RCSe + ( DS * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( DS + DS ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( RRS / MDR ) ) + BR ) ) - ( BR + AMS ) )", "choosing": "Min( ( MUC - RMSe ) ,Min( Min( RCSe ,( DS * Min( Min( Max( Max( RCSe,MUC ),MUR ) ,MLU ) ,( MUM - ( RCSe * MUC ) ) ) ) ) ,MUR ) )", "obj1": 0.5492700729927007, "obj2": 0.3684008223849732}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( FirstVNF_RAM / ARS ) * MRS ) ) / FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( ( DDR * ( Const + ( PN * ACS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - ( MUM / MLU ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506488}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( MDR * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ARS ) )", "choosing": "( Max( Min( ( RMSe / RMSe ) ,DS ),MUC ) - MUR )", "obj1": 0.7846715328467153, "obj2": 0.10658385908415058}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + Max( ( DS - MLU ),MUC ) ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.6916058394160584, "obj2": 0.19535056682427876}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( ( CS + CS ) * RRSe ) + MUR ) )", "obj1": 0.5018248175182481, "obj2": 0.43960880308028744}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( PN - ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / ( ( BR * DDR ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe - MUC ) ,( Min( ( ( Max( RCSe,( MLU / Min( MUC ,MUM ) ) ) - RMSe ) - Min( ( Max( ( DS * RRSe ),Min( RRSe ,CS ) ) + CS ) ,RCSe ) ) ,RRSe ) + RRSe ) )", "obj1": 0.614963503649635, "obj2": 0.28347090252959056}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5164233576642335, "obj2": 0.4197425541931174}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + DS ) * ( MLU * Max( ( CS * RCSe ),( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.6806569343065694, "obj2": 0.20676452076558138}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( RMSe + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.7974452554744526, "obj2": 0.09978133659124026}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( MLU,DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3661024520807164}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe - Max( RCSe,( CS + CS ) ) ) - MUR )", "obj1": 0.6003649635036497, "obj2": 0.3190672509323497}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( BR * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) - MUC )", "obj1": 0.9178832116788321, "obj2": 0.03952831517590346}, {"determining": "( ( MDR - ( ( ( ( Max( CRS,( Const * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( Max( ( MDR / FirstVNF_CPU ),( ARS * PN ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( Min( ACS ,FirstVNF_CPU ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * MUC ) + ( MUM * ( Max( ( RRSe / ( CS - MUR ) ),Min( RRSe ,CS ) ) + DS ) ) ) / ( Min( RCSe ,( ( MUC + CS ) / ( RMSe - ( Max( MUC,RRSe ) + MUC ) ) ) ) - MUC ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4154418169732255}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + ( BR * MRS ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) )", "obj1": 0.5, "obj2": 0.45827120527259785}, {"determining": "( Min( ( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR * ( PN * CRS ) ) ) * ( Max( ACS,CRS ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - ( Max( MUR,MUM ) + Max( RMSe,RMSe ) ) ) / ( RRSe - RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5754434168818899}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + ACS ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( AMS - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + Min( Min( RCSe ,MUC ) ,RRSe ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.32205728343620516}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( ( PN - ( ( ARS / Max( ACS,ACS ) ) + Max( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ),Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) ) ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - ( DS * ( ( RCSe - MUR ) - MUC ) ) ) ) ,Max( MLU,( RMSe * Max( Max( ( Min( RMSe ,MUM ) / MUM ),MUM ),( Max( MLU,MUM ) + ( MUR * MLU ) ) ) ) ) )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721058}, {"determining": "( PN - ( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - PN ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( FirstVNF_CPU - MRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,( ( RMSe / RCSe ) * Min( RRSe ,MUM ) ) ) - ( Min( RMSe ,MUC ) / ( Min( RCSe ,( ( RMSe - CS ) / ( ( Max( MUR,MUC ) - MUR ) + RMSe ) ) ) - MUC ) ) )", "obj1": 0.698905109489051, "obj2": 0.18899385302377156}, {"determining": "( ( PN - ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM / BR ) ) + ( ACS + Const ) ) + ARS ) ) - ( ( ( ( Min( Min( CRS ,( MRS * Const ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) * ARS ) / ( Min( ACS ,Max( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MLU / MUC ) - MUR )", "obj1": 0.8996350364963503, "obj2": 0.04120428034629223}, {"determining": "( PN - ( ( ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Max( ( ACS / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - ( ( RRSe * Min( Min( ( MUM * DS ) ,Min( MUR ,( RCSe + RRSe ) ) ) ,( ( MUM - RMSe ) * MLU ) ) ) + RMSe ) ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6186131386861314, "obj2": 0.27747217701651405}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7664233576642335, "obj2": 0.12386153146891049}, {"determining": "( ( PN - ( ( ( ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( Max( ( PN + BR ),RRS ) / ( ( CRS - DDR ) + ( RRS * ( Min( RRS ,DDR ) * ( Min( Const ,CRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * ( Min( ( MUR - RMSe ) ,MUM ) - ( Max( ( MUC / CS ),( MUR - Max( RRSe,MUC ) ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6257284450243148}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,RRS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( Max( MLU,MUM ) + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.5675182481751825, "obj2": 0.35850303818598916}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.4014670250593962}, {"determining": "( ( PN - Max( CRS,Max( Max( RRS,AMS ),CRS ) ) ) - ( ( DDR * ( DDR / ( PN * BR ) ) ) / ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( ( RMSe / ( ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) * ( Max( Max( Min( MUC ,MUR ),( CS + RRSe ) ),CS ) / ( Min( MUM ,CS ) / MLU ) ) ) ) - MUR )", "obj1": 0.8941605839416058, "obj2": 0.044959483330803865}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS + ( FirstVNF_RAM + PN ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46014478491936955}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( MUC * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22880436809428623}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.6295620437956204, "obj2": 0.27128385927215953}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6154933592993882}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) + ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / Max( ACS,PN ) ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RRSe,( RMSe / MUR ) ) ) - DS ) + ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( RMSe ,CS ) / ( Min( MUM ,CS ) / MLU ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + MUR ) ) ) ) ) ) ) - ( RCSe - Max( RCSe,( CS + CS ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03120999050075182}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( Min( ( Const - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * MRS ) ) + PN ) ) + ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) + ARS ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Min( ( CRS / DDR ) ,( ( ( FirstVNF_Mem_Server / AMS ) - FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS * ACS ) )", "choosing": "( Max( MUM,( MUR + MUM ) ) - ( ( RCSe - CS ) / ( ( MUR - RMSe ) - RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5092838819455969}, {"determining": "( Max( PN,Min( Min( FirstVNF_RAM ,ACS ) ,PN ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC + RCSe ) ) )", "obj1": 0.7445255474452555, "obj2": 0.15040634987423324}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( PN - ( BR - ACS ) )", "choosing": "Min( ( MUR - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,( CS + Max( MUC,CS ) ) ) ) ) ) - MUR ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,Min( Min( AMS ,FirstVNF_CPU_Server ) ,MDR ) ) ) - ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( Max( RMSe,CS ) - ( ( RMSe * ( CS - RCSe ) ) / MUM ) ) / RMSe ) - RCSe )", "obj1": 0.43795620437956206, "obj2": 0.5457679910158798}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,Min( CRS ,( CRS * MRS ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.395985401459854, "obj2": 0.6365313611481507}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.7536496350364964, "obj2": 0.1440219684709614}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) - MUC ) ) )", "obj1": 0.572992700729927, "obj2": 0.3397100344280764}, {"determining": "( ( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) ) - ( ( ( ( Min( CRS ,CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * RCSe ) + ( ( ( CS + MUM ) * ( DS + CS ) ) * RCSe ) ),RRSe ) * DS ) ) - MUR )", "obj1": 0.9817518248175182, "obj2": 0.002539456200860402}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_Mem_Server / RRS ) ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( RCSe ,MUR ) ) - MUC ) ) )", "obj1": 0.4708029197080292, "obj2": 0.49272906633793956}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( MUC * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22880436809428623}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server * ACS ) ) - PN )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - ( ( ( RCSe - MUR ) - MUC ) * DS ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.6551094890510949, "obj2": 0.2365686910104096}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15458423178947747}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9434306569343066, "obj2": 0.016362115877746275}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( ( Max( Const,DDR ) * MRS ) * ARS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( ( RCSe - Max( RCSe,( CS + CS ) ) ) - MUR ) ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5583688238585597}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( DDR - ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * Min( Min( ( FirstVNF_RAM_Server + ( Min( ARS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + DS ) ,( MLU * RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.5589927618488476}, {"determining": "( ( PN - ( ( ( ( ( MRS + ( ARS / FirstVNF_Mem ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( CS / RRSe ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( ( ( RMSe - RMSe ) / MUC ),MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.4489051094890511, "obj2": 0.5333582316582455}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) - ( ( ( ( Min( CRS ,( ( FirstVNF_CPU / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) * AMS ) + Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( MUC ,RRSe ) + DS ) * ( ( RRSe + RRSe ) / ( MLU / ( ( MUR + RRSe ) * RCSe ) ) ) ) + DS ) - ( ( RCSe * MUC ) * RCSe ) ) ,MUR )", "obj1": 0.8759124087591241, "obj2": 0.053897281148517134}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14916683932657965}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( Min( ( FirstVNF_CPU + BR ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( Min( RMSe ,RMSe ) ,( MLU + DS ) ) / RCSe ) ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.822992700729927, "obj2": 0.0852806948049635}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.8813868613138686, "obj2": 0.050661707195573204}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( PN - ( ( ( ( ( CRS + ( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( ARS,MDR ) * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( RCSe * MUC ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MLU / Max( ( RCSe + MUC ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,MUC ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6368613138686131, "obj2": 0.25817783466380156}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3387180178248855}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * DDR ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.10219939418923732}, {"determining": "( PN - Min( ( FirstVNF_RAM_Server * ACS ) ,( ( Max( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ),MDR ) / CRS ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( ( MUC - DS ),RRSe ),( MUM - Max( ( MLU / CS ),DS ) ) ) + ( Max( ( ( MUC - Max( RCSe,MUM ) ) + ( ( RRSe + MLU ) / MUM ) ),CS ) * ( ( MUM + ( RMSe - MUM ) ) + CS ) ) ) * Min( MUM ,DS ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24395925531260854}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM - ARS ) / MRS ) ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MLU + CS ) ),( CS + CS ) ) ) - DS ) - ( MLU - RMSe ) ) - Max( MUR,CS ) )", "obj1": 0.4653284671532847, "obj2": 0.4979063791129418}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6332116788321168, "obj2": 0.26786560343172305}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_CPU - PN ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),Min( RCSe ,Min( ( RCSe / MUC ) ,MUR ) ) ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.6551094890510949, "obj2": 0.2365686910104096}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( PN - ( ( ( ( ACS / Const ) - PN ) - ( FirstVNF_Mem_Server - Min( Const ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MLU,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Min( RMSe ,Min( DS ,CS ) ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( ( ( DS - ( DS / RCSe ) ) + CS ) / MUR ) - MUC ) ) )", "obj1": 0.7299270072992701, "obj2": 0.15988567189017672}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( Min( CRS ,( MRS * ( ARS / FirstVNF_RAM ) ) ) + MDR ) ) ) - ( ( ACS * ARS ) + ( ( FirstVNF_CPU_Server - DDR ) + Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Max( Max( RCSe,( MLU - RRSe ) ),CS ) - Max( DS,MUM ) )", "obj1": 0.583941605839416, "obj2": 0.33086577320889715}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( RMSe / ( ( Max( ( ( Min( MLU ,MUM ) * ( CS + MUR ) ) - MUM ),CS ) / ( Min( MUM ,CS ) / MLU ) ) * ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) ) ) - MUR )", "obj1": 0.4197080291970803, "obj2": 0.5823042524330009}, {"determining": "( PN - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( Const * ACS ) ) ,FirstVNF_Mem_Server ) ) ) * Min( AMS ,MDR ) ) / ( FirstVNF_Mem * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( Max( Max( ( Min( CS ,DS ) / ( RRSe * RMSe ) ),MUR ),( Min( ( DS / RRSe ) ,Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) + ( MUM * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.249425668666492}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( ( FirstVNF_Mem_Server - CRS ) ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ) - ( MLU * MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.013064712272453878}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.9562043795620438, "obj2": 0.013693352914250148}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24395925531260854}, {"determining": "( ( ARS / MDR ) - ( Min( ( FirstVNF_Mem_Server - ACS ) ,FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / Max( MLU,( RMSe * Max( Max( ( MLU - MLU ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),( RRSe * ( RCSe + ( DS * RRSe ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6574794713712848}, {"determining": "( Max( ( BR + ( Min( ( RRS + DDR ) ,( ( PN - ACS ) - DDR ) ) / MDR ) ),AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / DS ) ,Max( ( ( ( MLU + RCSe ) + MUR ) * MLU ),( RMSe * Min( Max( Max( RCSe,CS ),MUM ) ,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6687430734359993}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.5857664233576643, "obj2": 0.3276790041891037}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Max( Min( BR ,PN ),ACS ) * RRS ) + ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( ( MUC * RCSe ) / MUM ) + MUC ) ,MLU ) * ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) ) ) - MUR )", "obj1": 0.458029197080292, "obj2": 0.513781878487797}], "28": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( Max( BR,RRS ) - Min( FirstVNF_CPU ,Const ) ) - ( ( BR * FirstVNF_Mem ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( PN + ( MRS / ( MDR - FirstVNF_CPU_Server ) ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + Min( MUR ,MUM ) ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * MRS ) - ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) + Max( MLU,( RMSe * Max( ( MUR * ( MUC / CS ) ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( ( RCSe * CS ),( RRSe * ( RCSe + ( DS * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( RRS / MDR ) ) + BR ) ) - ( BR + AMS ) )", "choosing": "Min( ( MUC - RMSe ) ,Min( Min( RCSe ,( DS * Min( Min( Max( Max( RCSe,MUC ),MUR ) ,MLU ) ,( MUM - ( RCSe * MUC ) ) ) ) ) ,MUR ) )", "obj1": 0.5492700729927007, "obj2": 0.3684008223849732}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) * ( ( Min( CRS ,( BR * MRS ) ) + Min( ACS ,FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - RMSe ) ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12302289038710582}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( ( CS + CS ) * RRSe ) + MUR ) )", "obj1": 0.5018248175182481, "obj2": 0.43960880308028744}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - MUR )", "obj1": 0.4306569343065693, "obj2": 0.558908089370671}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5385423546957984}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( DS * MUR ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3792207477086614}, {"determining": "( ( PN + ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - Max( PN,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUC ) - Max( Min( MLU ,MLU ),CS ) )", "obj1": 0.583941605839416, "obj2": 0.32682979426384495}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,Min( CRS ,( CRS * MRS ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.395985401459854, "obj2": 0.6365313611481507}, {"determining": "( ( PN - ( ( ( ( Min( ( CRS * AMS ) ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( ( CRS / ( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( Const * MDR ) ,CRS ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( RRSe / ( ( DS * CS ) + ( RCSe - RRSe ) ) ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( Max( MUR,Max( MUR,DS ) ) * MLU ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.35996274367995923}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( ( PN - ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM / BR ) ) + ( ACS + Const ) ) + ARS ) ) - ( ( ( ( Min( Min( CRS ,( MRS * Const ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) * ARS ) / ( Min( ACS ,Max( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MLU / MUC ) - MUR )", "obj1": 0.8996350364963503, "obj2": 0.04120428034629223}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( BR * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) - MUC )", "obj1": 0.9178832116788321, "obj2": 0.03952831517590346}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( MDR - ( ( ( ( Max( CRS,( Const * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( Max( ( MDR / FirstVNF_CPU ),( ARS * PN ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( Min( ACS ,FirstVNF_CPU ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * MUC ) + ( MUM * ( Max( ( RRSe / ( CS - MUR ) ),Min( RRSe ,CS ) ) + DS ) ) ) / ( Min( RCSe ,( ( MUC + CS ) / ( RMSe - ( Max( MUC,RRSe ) + MUC ) ) ) ) - MUC ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4154418169732255}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_Mem_Server * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_Mem_Server / RRS ) ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) / ( RMSe * RCSe ) ) ) - ( ( RMSe - RMSe ) / ( Min( RCSe ,Min( RCSe ,MUR ) ) - MUC ) ) )", "obj1": 0.4708029197080292, "obj2": 0.49272906633793956}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + ( BR * MRS ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) )", "obj1": 0.5, "obj2": 0.45827120527259785}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM - ARS ) / MRS ) ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MLU + CS ) ),( CS + CS ) ) ) - DS ) - ( MLU - RMSe ) ) - Max( MUR,CS ) )", "obj1": 0.4653284671532847, "obj2": 0.4979063791129418}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( DDR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( CS + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7208029197080292, "obj2": 0.16938925437706734}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6259124087591241, "obj2": 0.2706882975080182}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( ( MUC * RCSe ) + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5742157079387905}, {"determining": "( PN - ( ( ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Max( ( ACS / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - ( ( RRSe * Min( Min( ( MUM * DS ) ,Min( MUR ,( RCSe + RRSe ) ) ) ,( ( MUM - RMSe ) * MLU ) ) ) + RMSe ) ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6186131386861314, "obj2": 0.27747217701651405}, {"determining": "( ( Max( BR,CRS ) - ( ( ( ( Min( CRS ,( BR * MRS ) ) + ACS ) * FirstVNF_CPU ) - ( CRS - FirstVNF_Mem_Server ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( AMS - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( MUR / Max( RCSe,CS ) ) + Min( Min( RCSe ,MUC ) ,RRSe ) )", "obj1": 0.5711678832116789, "obj2": 0.35307313493086134}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( BR * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( MUR - Max( RCSe,MUC ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30298407314314196}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6332116788321168, "obj2": 0.26786560343172305}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( PN - ( BR - ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + DS ) * ( MLU * Max( ( Max( MUC,CS ) * RCSe ),( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUM,RMSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) - MUC ) ) )", "obj1": 0.572992700729927, "obj2": 0.3397100344280764}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( FirstVNF_CPU_Server ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MLU - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( ( Max( RCSe,Max( Max( RCSe,MUC ),DS ) ) * MUC ) * RRSe ) + ( MUM * ( DS + DS ) ) ) ) ,( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506488}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * DDR ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( PN,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) ) - ( MUR - ( RCSe * MUC ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08108273694133061}, {"determining": "( PN - ( ( ( ( ( CRS * ( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_Mem_Server - PN ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RCSe - MUR ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / Max( MLU,MUM ) ),Max( MUM,MLU ) ) ),( ( MUM / RRSe ) * MUR ) )", "obj1": 0.666058394160584, "obj2": 0.22449317300562655}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( PN ,DDR ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( ( Max( ( ( Min( MLU ,MUM ) * ( CS + MUR ) ) - MUM ),RCSe ) / ( Min( MUM ,CS ) / MLU ) ) * ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) ) ) - MUR )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( PN - ( ( ( ( MDR + ( CRS / FirstVNF_Mem_Server ) ) * ( Min( Min( ARS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * ( ( ARS / CRS ) / FirstVNF_RAM_Server ) ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( ( MUC * RCSe ) * Max( RCSe,CS ) ) - ( DS * CS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6113138686131386, "obj2": 0.28640423765497247}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Max( MUM,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS - ( DS / RCSe ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3387180178248855}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( Max( MLU,MUM ) + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.7992700729927007, "obj2": 0.09952739097115422}, {"determining": "( ( PN - ( ( ( ( ACS / Const ) - PN ) - ( FirstVNF_Mem_Server - Min( Const ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MLU,CS ) - ( Min( ( RRSe + MUM ) ,( ( Max( MUC,Min( RMSe ,Min( DS ,CS ) ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( ( ( DS - ( DS / RCSe ) ) + CS ) / MUR ) - MUC ) ) )", "obj1": 0.7299270072992701, "obj2": 0.15988567189017672}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) + ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / Max( ACS,PN ) ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RRSe,( RMSe / MUR ) ) ) - DS ) + ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) + BR ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( Max( CS,MUC ) / Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU + CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + ( DS * RRSe ) ) ) + RRSe ) ) ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.614911935665286}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( ( CS + MUM ) * ( DS + CS ) ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8941605839416058, "obj2": 0.042368081252860304}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * Min( AMS ,FirstVNF_RAM ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( Min( RMSe ,RCSe ) * ( MUM + MUM ) ) / MUR ) ) ),( MUR / ( RMSe - ( DS * Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6879562043795621, "obj2": 0.19826199937601965}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03120999050075182}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( Const * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8704379562043796, "obj2": 0.05859013892369485}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RCSe - Max( RCSe,( CS + CS ) ) ) - MUR )", "obj1": 0.6003649635036497, "obj2": 0.3190672509323497}, {"determining": "( Max( PN,Min( Min( FirstVNF_RAM ,ACS ) ,PN ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC + RCSe ) ) )", "obj1": 0.7445255474452555, "obj2": 0.15040634987423324}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( FirstVNF_RAM / ARS ) * MRS ) ) / FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( ( DDR * ( Const + ( PN * ACS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - ( MUM / MLU ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506488}, {"determining": "( ( PN - Min( MRS ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.75, "obj2": 0.14779998895527116}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - ( MLU - DS ) ) ) / MLU ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5145985401459854, "obj2": 0.4229337661550906}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) ) + BR ) ) - ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.4014670250593962}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS + ( FirstVNF_RAM + PN ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( MDR * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ARS ) )", "choosing": "( Max( Min( ( RMSe / RMSe ) ,DS ),MUC ) - MUR )", "obj1": 0.7846715328467153, "obj2": 0.10658385908415058}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( ACS ,CRS ) + MDR ) * MDR ) * ( ARS / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( AMS / ( Const * DDR ) ) ) )", "choosing": "( ( Min( Max( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ),( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( MLU,DS ) ) ) ) ) - Max( ( DS * RRSe ),( MUC + MUC ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.13684039148691257}, {"determining": "( PN - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( Const * ACS ) ) ,FirstVNF_Mem_Server ) ) ) * Min( AMS ,MDR ) ) / ( FirstVNF_Mem * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( Max( Max( ( Min( CS ,DS ) / ( RRSe * RMSe ) ),MUR ),( Min( ( DS / RRSe ) ,Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) + ( MUM * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.249425668666492}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,MUC ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6368613138686131, "obj2": 0.25817783466380156}, {"determining": "( PN - ( ( ( Max( CRS,AMS ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ( Const - BR ) ) ) )", "choosing": "Min( ( ( CS + MLU ) - ( ( RRSe * ( ( RCSe * Min( RCSe ,MUR ) ) * MUC ) ) + ( ( DS / RMSe ) * MUC ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5837122801025838}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - Min( Max( Max( ( ( RRSe + MUR ) + CS ),RCSe ),( MUC - MUC ) ) ,RRSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10658385908415058}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( MUC * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.24073109252416539}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15458423178947747}, {"determining": "( ( PN - ( ( ( ( ( CRS + ( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( ARS,MDR ) * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( RMSe * DS ) + ( RCSe * MUC ) ),RRSe ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MLU / Max( ( RCSe + MUC ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) ) - ( ( ( ( Min( CRS ,CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.9817518248175182, "obj2": 0.002539456200860402}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,ARS ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ),DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.9452554744525548, "obj2": 0.01556175597944271}, {"determining": "( PN - ( ( ( ( Min( CRS ,( ( FirstVNF_CPU - MRS ) + CRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ,( Min( RCSe ,( ( CS + DS ) * ( MLU * Max( ( CS * RCSe ),( MUR - ( RCSe * MUC ) ) ) ) ) ) - MUR ) )", "obj1": 0.6824817518248175, "obj2": 0.2058091781030424}, {"determining": "( ( Min( ( Const - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * MRS ) ) + PN ) ) + ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) + ARS ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.8813868613138686, "obj2": 0.050661707195573204}, {"determining": "( PN - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.6587591240875912, "obj2": 0.22929438539719513}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Min( ( CRS / DDR ) ,( ( ( FirstVNF_Mem_Server / AMS ) - FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS * ACS ) )", "choosing": "( Max( MUM,( MUR + MUM ) ) - ( ( RCSe - CS ) / ( ( MUR - RMSe ) - RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5092838819455969}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Max( Min( BR ,PN ),ACS ) * RRS ) + ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( ( MUC * RCSe ) / MUM ) + MUC ) ,MLU ) * ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) ) ) - MUR )", "obj1": 0.458029197080292, "obj2": 0.5116982519255547}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) - MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.32205728343620516}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( ( FirstVNF_Mem_Server - CRS ) ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ) - ( MLU * MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.013064712272453878}, {"determining": "( ( Max( FirstVNF_Mem,MDR ) / ( RRS * FirstVNF_RAM_Server ) ) - ( ( ( ( Min( CRS ,( ( AMS / FirstVNF_Mem ) * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) - MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( CRS * ( Max( ACS,ARS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RMSe ) + RRSe ) - ( ( ( CS - MUM ) / ( RCSe + MUM ) ) + ( MUM * ( DS + RMSe ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RRSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( PN - ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),CS ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( MUC * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6970802919708029, "obj2": 0.19363037314774156}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.45072992700729925, "obj2": 0.5320940830873652}, {"determining": "( ( ( ( ( ( PN + ( FirstVNF_RAM_Server / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / Max( Min( FirstVNF_Mem_Server ,CRS ),MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( Min( DDR ,PN ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) - ( PN - Min( MDR ,PN ) ) )", "choosing": "Min( MUR ,( ( ( RMSe / MUM ) * Min( MUM ,MUM ) ) - ( ( RCSe * MUC ) * RCSe ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08458783690896808}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721058}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) - ( ( ( ( Min( CRS ,( ( FirstVNF_CPU / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) * AMS ) + Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( MUC ,RRSe ) + DS ) * ( ( RRSe + RRSe ) / ( MLU / ( ( MUR + RRSe ) * RCSe ) ) ) ) + DS ) - ( ( RCSe * MUC ) * RCSe ) ) ,MUR )", "obj1": 0.8175182481751825, "obj2": 0.08690206202198685}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server * ACS ) ) - PN )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - ( ( ( RCSe - MUR ) - MUC ) * DS ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.6551094890510949, "obj2": 0.2365686910104096}, {"determining": "( ( ARS / MDR ) - ( ( Const + ARS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( MUC + MUC ) + ( CS / MUC ) ) / Max( MLU,( RMSe * Max( Max( ( MLU - DS ),DS ),( Max( MLU,MUM ) + ( MUC * MUR ) ) ) ) ) ) / Min( ( RCSe + MUM ) ,Max( DS,RRSe ) ) ) - Max( Max( CS,RCSe ),( RRSe * ( RCSe + ( DS * RRSe ) ) ) ) )", "obj1": 0.3886861313868613, "obj2": 0.6574794713712848}, {"determining": "( Max( ( BR + ( Min( ( RRS + DDR ) ,( ( PN - ACS ) - DDR ) ) / MDR ) ),AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / DS ) ,Max( ( ( ( MLU + RCSe ) + MUR ) * MLU ),( RMSe * Min( Max( Max( RCSe,CS ),MUM ) ,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6687430734359993}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.13684039148691257}, {"determining": "( ( PN - ( ( ( ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( Max( ( PN + BR ),RRS ) / ( ( CRS - DDR ) + ( RRS * ( Min( RRS ,DDR ) * ( Min( Const ,CRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * ( Min( ( MUR - RMSe ) ,MUM ) - ( Max( ( MUC / CS ),( MUR - Max( RRSe,MUC ) ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6257284450243148}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.6386861313868614, "obj2": 0.25491292001279015}], "29": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - ( ( ARS + ( ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_Mem_Server / RRS ) ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,RRS ) - Min( FirstVNF_CPU ,Const ) ) - ( ( BR * FirstVNF_Mem ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( PN + ( MRS / ( MDR - FirstVNF_CPU_Server ) ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + Min( MUR ,MUM ) ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.8813868613138686, "obj2": 0.050661707195573204}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( FirstVNF_CPU_Server - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - ( RRSe + CS ) ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( ( CS + CS ) * RRSe ) + MUR ) )", "obj1": 0.5, "obj2": 0.4418501119636355}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( BR ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( Max( RCSe,( CS + CS ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.48722627737226276, "obj2": 0.46293144328964914}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3190673141756683}, {"determining": "( PN - ( ( ( ( ( MDR * ( CRS - MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RCSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.30505504906337344}, {"determining": "( PN - ( ( ( Max( CRS,AMS ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ( Const - BR ) ) ) )", "choosing": "Min( ( ( CS + MLU ) - ( ( RRSe * ( ( RCSe * Min( RCSe ,MUR ) ) * MUC ) ) + ( ( DS / RMSe ) * MUC ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5837122801025838}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.35184173354878434}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - ( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.7755474452554745, "obj2": 0.11709031039420047}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( PN - ( ( ( ( Min( ( CRS * AMS ) ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( ( CRS / ( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( Const * MDR ) ,CRS ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( RRSe / ( ( DS * CS ) + ( RCSe - RRSe ) ) ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( Max( MUR,Max( MUR,DS ) ) * MLU ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.35996274367995923}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( BR * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) - MUC )", "obj1": 0.9178832116788321, "obj2": 0.03952831517590346}, {"determining": "( ( Max( FirstVNF_Mem,MDR ) / ( RRS * FirstVNF_RAM_Server ) ) - ( ( ( ( Min( CRS ,( ( AMS / FirstVNF_Mem ) * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) - MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( CRS * ( Max( ACS,ARS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RMSe ) + RRSe ) - ( ( ( CS - MUM ) / ( RCSe + MUM ) ) + ( MUM * ( DS + RMSe ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RRSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( CRS,( AMS / FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem_Server - BR ) / ( Max( ACS,Min( CRS ,( RRS * FirstVNF_Mem_Server ) ) ) * ACS ) ) )", "choosing": "( ( RMSe / ( ( Min( ( RCSe + DS ) ,RMSe ) / ( Min( MUM ,( RRSe * ( CS - CS ) ) ) / MLU ) ) * ( ( ( Min( ( RCSe + MUM ) ,Min( MLU ,DS ) ) / Max( MUM,CS ) ) - RMSe ) / ( ( Min( CS ,Min( CS ,MUC ) ) + ( Max( MUM,MUR ) / CS ) ) + ( Max( DS,RMSe ) * ( CS * CS ) ) ) ) ) ) - MUR )", "obj1": 0.9708029197080292, "obj2": 0.009812233996363167}, {"determining": "( PN - ( ( ( ( ( CRS * ( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( FirstVNF_CPU_Server * Min( ( ( FirstVNF_Mem_Server - PN ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RCSe - MUR ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / Max( MLU,MUM ) ),Max( MUM,MLU ) ) ),( ( MUM / RRSe ) * MUR ) )", "obj1": 0.666058394160584, "obj2": 0.22449317300562655}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) * Min( CRS ,( Const * MDR ) ) ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - MUR )", "obj1": 0.4324817518248175, "obj2": 0.5554526654945132}, {"determining": "( PN - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( Const * ACS ) ) ,FirstVNF_Mem_Server ) ) ) * Min( AMS ,MDR ) ) / ( FirstVNF_Mem * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( Max( Max( ( Min( CS ,DS ) / ( RRSe * RMSe ) ),MUR ),( Min( ( DS / RRSe ) ,Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) + ( MUM * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.249425668666492}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( ( PN - ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM / BR ) ) + ( ACS + Const ) ) + ARS ) ) - ( ( ( ( Min( Min( CRS ,( MRS * Const ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) * ARS ) / ( Min( ACS ,Max( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MLU / MUC ) - MUR )", "obj1": 0.8996350364963503, "obj2": 0.04120428034629223}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( Max( ( BR + ( Min( ( RRS + DDR ) ,( ( PN - ACS ) - DDR ) ) / MDR ) ),AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / DS ) ,Max( ( ( ( MLU + RCSe ) + MUR ) * MLU ),( RMSe * Min( Max( Max( RCSe,CS ),MUM ) ,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6687430734359993}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( Min( PN ,( BR + ( ( ( Min( CRS ,( DDR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( Max( CS,DS ) * MUM ) + MLU ) )", "obj1": 0.8941605839416058, "obj2": 0.0423680812528603}, {"determining": "( ( PN - ( Min( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) ,( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( AMS / PN ) )", "choosing": "Max( Max( ( MLU / MLU ),RMSe ),( MLU / CS ) )", "obj1": 0.43613138686131386, "obj2": 0.5385423546957984}, {"determining": "( Max( PN,Min( Min( FirstVNF_RAM ,ACS ) ,PN ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC + RCSe ) ) )", "obj1": 0.7445255474452555, "obj2": 0.15040634987423324}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( BR * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( MUR - Max( RCSe,MUC ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30298407314314196}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6332116788321168, "obj2": 0.26786560343172305}, {"determining": "( ( MDR - ( ( ( ( Max( CRS,( Const * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( Max( ( MDR / FirstVNF_CPU ),( ARS * PN ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( Min( ACS ,FirstVNF_CPU ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * MUC ) + ( MUM * ( Max( ( RRSe / ( CS - MUR ) ),Min( RRSe ,CS ) ) + DS ) ) ) / ( Min( RCSe ,( ( MUC + CS ) / ( RMSe - ( Max( MUC,RRSe ) + MUC ) ) ) ) - MUC ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4154418169732255}, {"determining": "( ( PN - ( ( ( ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( Max( ( PN + BR ),RRS ) / ( ( CRS - DDR ) + ( RRS * ( Min( RRS ,DDR ) * ( Min( Const ,CRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * ( Min( ( MUR - RMSe ) ,MUM ) - ( Max( ( MUC / CS ),( MUR - Max( RRSe,MUC ) ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6257284450243148}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM - ARS ) / MRS ) ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MLU + CS ) ),( CS + CS ) ) ) - DS ) - ( MLU - RMSe ) ) - Max( MUR,CS ) )", "obj1": 0.4653284671532847, "obj2": 0.4979063791129418}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506488}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( MDR - MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( Const * ( ( ARS - ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - CS ) - ( ( Max( ( RCSe * MUM ),( RRSe / MUR ) ) - RMSe ) / ( MLU / DS ) ) ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8704379562043796, "obj2": 0.05859013892369484}, {"determining": "( ( ( ( ( ( PN + ( FirstVNF_RAM_Server / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / Max( Min( FirstVNF_Mem_Server ,CRS ),MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( Min( DDR ,PN ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) - ( PN - Min( MDR ,PN ) ) )", "choosing": "Min( MUR ,( ( ( RMSe / MUM ) * Min( MUM ,MUM ) ) - ( ( RCSe * MUC ) * RCSe ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08458783690896808}, {"determining": "( PN - ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + MDR ) * ( Min( Min( ARS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - ( MUC * RCSe ) ) - Min( ( Max( ( DS * RRSe ),Min( RRSe ,CS ) ) + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6113138686131386, "obj2": 0.28640423765497247}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS + ( FirstVNF_RAM + PN ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) / FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) ) ) ) + BR ) - PN ) - ( AMS - BR ) )", "choosing": "( ( RMSe / ( ( MLU * MLU ) * Max( RMSe,Min( ( DS * ( MUC * RCSe ) ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5547445255474452, "obj2": 0.3668374016415836}, {"determining": "( ( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( DDR * ACS ) ) ) - ( ( ( ( Min( CRS ,CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.9817518248175182, "obj2": 0.002539456200860402}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.677007299270073, "obj2": 0.21041318096922965}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( Max( MLU,MUM ) + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.7992700729927007, "obj2": 0.09952739097115422}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server * ACS ) ) - PN )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - ( ( ( RCSe - MUR ) - MUC ) * DS ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.6551094890510949, "obj2": 0.2365686910104096}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ),DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5766423357664233, "obj2": 0.33639425283053054}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,FirstVNF_CPU ) ) ,Min( CRS ,( MRS * CRS ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( RCSe - ( Min( Min( MUC ,MLU ) ,( CS + RMSe ) ) * MUM ) ),RMSe ) ) )", "obj1": 0.395985401459854, "obj2": 0.6365313611481507}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) + ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / Max( ACS,PN ) ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RRSe,( RMSe / MUR ) ) ) - DS ) + ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( Min( PN ,DDR ) - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( ( Max( ( ( Min( MLU ,MUM ) * ( CS + MUR ) ) - MUM ),RCSe ) / ( Min( MUM ,CS ) / MLU ) ) * ( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ) - Max( RCSe,( CS + CS ) ) ) ) ) - MUR )", "obj1": 0.9963503649635036, "obj2": 0.0023574451973707345}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ( FirstVNF_Mem_Server - Min( CRS ,( Max( Const,DDR ) * MRS ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),( ( ( Max( CS,RRSe ) - ( RRSe + ( MUM * RRSe ) ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03120999050075182}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( BR * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,( MLU - RMSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUR ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14377995400181545}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const / MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( FirstVNF_Mem_Server + ( BR / MDR ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - ( RRSe + CS ) ) ),( ( DS / MUM ) - MLU ) ),( Max( MUM,MLU ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4729073140912064}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( FirstVNF_CPU_Server ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MLU - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( ( Max( RCSe,Max( Max( RCSe,MUC ),DS ) ) * MUC ) * RRSe ) + ( MUM * ( DS + DS ) ) ) ) ,( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506488}, {"determining": "( ( Min( ACS ,FirstVNF_CPU ) / Min( FirstVNF_Mem_Server ,Min( Min( ( CRS / DDR ) ,Max( ( FirstVNF_Mem * ARS ),( CRS * Min( PN ,RRS ) ) ) ) ,ACS ) ) ) - ( MRS * ACS ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( RMSe * MUC ) + ( MUM + ( DS + DS ) ) ) ,( ( MUC * ( ( DS / MUC ) + MUR ) ) * DS ) ) ) ) - ( ( CS - RCSe ) / ( ( MUR - RMSe ) - RMSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6137042602548876}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) - ( ( ( ( Min( CRS ,( ( FirstVNF_CPU / FirstVNF_Mem ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) * AMS ) + Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( MUC ,RRSe ) + DS ) * ( ( RRSe + RRSe ) / ( MLU / ( ( MUR + RRSe ) * RCSe ) ) ) ) + DS ) - ( ( RCSe * MUC ) * RCSe ) ) ,MUR )", "obj1": 0.8175182481751825, "obj2": 0.08690206202198685}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( ( FirstVNF_Mem_Server - CRS ) ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( Max( ACS,ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),CS ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) / ( Max( ( DS * ( ( RCSe - MUR ) - ( MUM * ( DS + DS ) ) ) ),MUM ) - ( MLU * MUM ) ) ) )", "obj1": 0.9799270072992701, "obj2": 0.008909864407265648}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,MUC ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6368613138686131, "obj2": 0.25817783466380156}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( Max( MLU,MUM ) + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.7992700729927007, "obj2": 0.09952739097115422}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) + BR ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( Max( CS,MUC ) / Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU + CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + ( DS * RRSe ) ) ) + RRSe ) ) ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.614911935665286}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) + ( ACS - RRS ) ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( ( ( RMSe * DS ) + ( MUC * RCSe ) ) - RRSe ) * ( CS + ( Max( Max( RCSe,RCSe ),RCSe ) + MUR ) ) ) ) / ( MUC - Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 0.5821167883211679, "obj2": 0.32888989648588196}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,( ( MLU * RCSe ) * ( ( ( MUM + RRSe ) + RCSe ) + CS ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5218978102189781, "obj2": 0.42178965997066403}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721058}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.45072992700729925, "obj2": 0.5320940830873652}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( FirstVNF_RAM / ARS ) * MRS ) ) / FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( ( DDR * ( Const + ( PN * ACS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - ( MUM / MLU ) )", "obj1": 0.8321167883211679, "obj2": 0.07997630221262932}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( PN - ( ( ( ( MDR + Min( CRS ,( ( PN - PN ) / ( ARS * ACS ) ) ) ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * ARS ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( ( Min( ( Min( ( MUR * ( MUR + RCSe ) ) ,( MUC * CS ) ) * ( MLU - ( ( DS / MUM ) * CS ) ) ) ,MUR ) - ( Max( DS,Min( MLU ,MUR ) ) - ( MLU + MUR ) ) ) / ( RCSe * CS ) ) + ( Max( ( CS + Min( DS ,MUR ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.28072333136406563}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,( ACS + FirstVNF_Mem_Server ) ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,MLU ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUR ,DS ) ),( ( MUM * MUM ) / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( RRSe * DS ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.1365864458668265}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5492700729927007, "obj2": 0.3684008223849732}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,Min( BR ,CRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + FirstVNF_RAM_Server ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - Min( RCSe ,MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( DS + DS ) ) - MUC ) ) )", "obj1": 0.7244525547445255, "obj2": 0.16394671240617928}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( DS * MUR ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3792207477086614}, {"determining": "( ( PN - Min( ACS ,PN ) ) - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * BR ) ) / MDR ) * ( ( ( ( ACS - Const ) - FirstVNF_RAM ) + ( ( ACS - FirstVNF_CPU ) * MRS ) ) / MDR ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) + RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + DS ),DS ) ) * MUC ) ) + ( RCSe * Max( RCSe,( CS + CS ) ) ) ) ) ,( DS + Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) ) )", "obj1": 0.9525547445255474, "obj2": 0.015074360453382455}, {"determining": "( ( PN - ( ( ( ( ( ( PN - MDR ) * AMS ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server / CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - ( MLU - DS ) ) ) / MLU ),Max( ( ( Max( Min( DS ,CS ),RRSe ) - Max( RRSe,CS ) ) * MUC ),MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5145985401459854, "obj2": 0.4229337661550906}, {"determining": "( ( Min( ( Const - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * MRS ) ) + PN ) ) + ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) + ARS ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( PN - ( Min( ( ( Min( ( MRS / BR ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ,( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - Min( Max( RCSe,( Max( DS,RMSe ) * ( MLU * MUC ) ) ) ,CS ) ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( ( MLU * MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( FirstVNF_Mem - MRS ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - DS ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * CS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.572992700729927, "obj2": 0.3397100344280764}, {"determining": "( ( PN - Min( MDR ,( DDR * ( PN + BR ) ) ) ) - ( ( ( ( Min( ( FirstVNF_Mem_Server - CRS ) ,( ( MDR / ARS ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( BR ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( ( ( ( ( CS - MUM ) / ( RCSe / ( CS * ( DS - RCSe ) ) ) ) + ( MUM * ( DS + DS ) ) ) - ( Min( ( ( MUC - RMSe ) - ( DS * ( Min( CS ,CS ) + CS ) ) ) ,RRSe ) + RRSe ) ) ,( ( ( RMSe * RCSe ) + DS ) - ( MUC * RRSe ) ) )", "obj1": 0.958029197080292, "obj2": 0.013064712272453878}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - MUR )", "obj1": 0.4306569343065693, "obj2": 0.558908089370671}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( CRS ,( BR * MRS ) ) + MDR ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( RCSe - MUR ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.4726277372262774, "obj2": 0.49119943993362025}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * Max( Min( CRS ,( FirstVNF_RAM_Server * ACS ) ),MDR ) ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + ( AMS / FirstVNF_CPU ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( Max( MLU,( Max( MLU,MUM ) + Max( Max( Min( RRSe ,MLU ),MUC ),MUC ) ) ) - MUC ) / ( RMSe - RMSe ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15458423178947747}, {"determining": "( ( PN + ( ( ( ( Min( CRS ,Max( RRS,RRS ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Min( MUM ,CS ) - ( ( ( RCSe - Max( RMSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( Min( CRS ,ACS ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / CRS ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( ( ( MUR / ( RCSe * CS ) ) + ( Max( ( ( DS * RMSe ) + ( RCSe * MUC ) ),RRSe ) - Max( ( DS * CS ),Min( RRSe ,CS ) ) ) ) / ( RCSe * CS ) ) + ( MUR + ( DS * MLU ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721058}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.7171532846715328, "obj2": 0.1723786283292048}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.4635036496350365, "obj2": 0.508077250474573}, {"determining": "( PN - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.6587591240875912, "obj2": 0.22929438539719513}, {"determining": "( PN - ( ( ( ( ( CRS + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( ARS * ACS ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( MUC,MUR ),( ( ( RMSe / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139924}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.7518248175182481, "obj2": 0.13807990203456622}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( DS * MUR ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3792207477086614}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6259124087591241, "obj2": 0.2706882975080182}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( ( MUC * RCSe ) + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5742157079387905}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( Min( ( Max( ( AMS - MDR ),FirstVNF_Mem ) + DDR ) ,MDR ) - ( Max( ( ( Min( CRS ,( MRS * FirstVNF_CPU_Server ) ) + ( MDR * ( AMS - PN ) ) ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU * MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ),( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( Min( Max( MUM,( CS + MUC ) ) ,MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RMSe - RRSe ) ) ),Min( ( MUR - DS ) ,RRSe ) ) ),MUR ) ) ,( MUR * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.24073109252416539}, {"determining": "( ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) - ( BR - ACS ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MUR,CS ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( FirstVNF_RAM_Server + Min( ( ACS + MRS ) ,( PN / CRS ) ) ) - ( PN - ( ( Max( ( Max( ( CRS + FirstVNF_RAM_Server ),MDR ) - CRS ),FirstVNF_RAM ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MUR / MLU ) ),( CS + CS ) ) ) - Max( DS,( MLU / ( MUR - Min( ( MUM / RMSe ) ,( MUC + MUR ) ) ) ) ) ) / ( MLU - RMSe ) ) - Max( MUC,MUM ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( MUC * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.24073109252416539}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}], "30": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN - ( Min( ( ( Min( ( MRS / BR ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ,( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM + FirstVNF_Mem ) + ( ARS + ( ( FirstVNF_RAM * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RCSe * ( MUC / RRSe ) ) - MUC ) - RMSe ) ,Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ARS + ( ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_Mem_Server / RRS ) ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + ( Min( Min( MUR ,MUC ) ,Min( MLU ,RRSe ) ) * ( ( CS / RCSe ) - MUM ) ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( Max( CS,DS ) * MUM ) + MLU ) )", "obj1": 0.6843065693430657, "obj2": 0.20247641602544922}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3190673141756683}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( FirstVNF_CPU_Server - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5059642028578726}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.8813868613138686, "obj2": 0.050661707195573204}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( PN - ( ( ( ( ( MDR * ( CRS - MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RCSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.30505504906337344}, {"determining": "( PN - ( ( ( Max( CRS,AMS ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ( Const - BR ) ) ) )", "choosing": "Min( ( ( CS + MLU ) - ( ( RRSe * ( ( RCSe * Min( RCSe ,MUR ) ) * MUC ) ) + ( ( DS / RMSe ) * MUC ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5837122801025838}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,Min( BR ,CRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + FirstVNF_RAM_Server ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - Min( RCSe ,MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( DS + DS ) ) - MUC ) ) )", "obj1": 0.7244525547445255, "obj2": 0.16394671240617928}, {"determining": "( Max( ( BR + ( Min( ( RRS + DDR ) ,( ( PN - ACS ) - DDR ) ) / MDR ) ),AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / DS ) ,Max( ( ( ( MLU + RCSe ) + MUR ) * MLU ),( RMSe * Min( Max( Max( RCSe,CS ),MUM ) ,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6687430734359993}, {"determining": "( PN - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( Const * ACS ) ) ,FirstVNF_Mem_Server ) ) ) * Min( AMS ,MDR ) ) / ( FirstVNF_Mem * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( Max( Max( ( Min( CS ,DS ) / ( RRSe * RMSe ) ),MUR ),( Min( ( DS / RRSe ) ,Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) + ( MUM * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.249425668666492}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) + ( ACS - RRS ) ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( ( ( RMSe * DS ) + ( MUC * RCSe ) ) - RRSe ) * ( CS + ( Max( Max( RCSe,RCSe ),RCSe ) + MUR ) ) ) ) / ( MUC - Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 0.5821167883211679, "obj2": 0.32888989648588196}, {"determining": "( ( PN - ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM / BR ) ) + ( ACS + Const ) ) + ARS ) ) - ( ( ( ( Min( Min( CRS ,( MRS * Const ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) * ARS ) / ( Min( ACS ,Max( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MLU / MUC ) - MUR )", "obj1": 0.8996350364963503, "obj2": 0.04120428034629223}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( BR * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) - MUC )", "obj1": 0.9178832116788321, "obj2": 0.03952831517590346}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ACS * MRS ) ) / MDR ) + ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / Max( ACS,PN ) ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RRSe,( RMSe / MUR ) ) ) - DS ) + ( MLU - RMSe ) ) )", "obj1": 0.864963503649635, "obj2": 0.06192885317736209}, {"determining": "( ( PN - ( ( ( ( ( CRS - ( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( AMS / AMS ) * MRS ) ) ) ) + BR ) ) - ( BR - AMS ) )", "choosing": "Min( ( MUC / RCSe ) ,( MLU + ( RMSe * Max( Max( ( DS * ( MUC - Min( DS ,MUC ) ) ),MUM ),Max( MLU,MUM ) ) ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17361813887685842}, {"determining": "( PN - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( MRS / FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + DS ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.666058394160584, "obj2": 0.22130824754547151}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,CS ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - ( RRSe + CS ) ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( ( CS + CS ) * RRSe ) + MUR ) )", "obj1": 0.5, "obj2": 0.4418501119636355}, {"determining": "( PN - ( ( ( ( ( CRS + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( FirstVNF_CPU_Server - DDR ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( ( RRSe + CS ),MUR ),( ( ( DS / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.11866457629523586}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM - ARS ) / MRS ) ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MLU + CS ) ),( CS + CS ) ) ) - DS ) - ( MLU - RMSe ) ) - Max( MUR,CS ) )", "obj1": 0.4653284671532847, "obj2": 0.4979063791129418}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) * Min( CRS ,( Const * MDR ) ) ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - MUR )", "obj1": 0.4324817518248175, "obj2": 0.5554526654945132}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.43613138686131386, "obj2": 0.5385423546957984}, {"determining": "( Max( PN,Min( Min( FirstVNF_RAM ,ACS ) ,PN ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC + RCSe ) ) )", "obj1": 0.7445255474452555, "obj2": 0.15040634987423324}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( BR * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( MUR - Max( RCSe,MUC ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30298407314314196}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6332116788321168, "obj2": 0.26786560343172305}, {"determining": "( ( MDR - ( ( ( ( Max( CRS,( Const * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( Max( ( MDR / FirstVNF_CPU ),( ARS * PN ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( Min( ACS ,FirstVNF_CPU ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * MUC ) + ( MUM * ( Max( ( RRSe / ( CS - MUR ) ),Min( RRSe ,CS ) ) + DS ) ) ) / ( Min( RCSe ,( ( MUC + CS ) / ( RMSe - ( Max( MUC,RRSe ) + MUC ) ) ) ) - MUC ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4154418169732255}, {"determining": "( PN - ( ( ( ( MDR + Min( CRS ,( ( PN - PN ) / ( ARS * ACS ) ) ) ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * ARS ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( ( Min( ( Min( ( MUR * ( MUR + RCSe ) ) ,( MUC * CS ) ) * ( MLU - ( ( DS / MUM ) * CS ) ) ) ,MUR ) - ( Max( DS,Min( MLU ,MUR ) ) - ( MLU + MUR ) ) ) / ( RCSe * CS ) ) + ( Max( ( CS + Min( DS ,MUR ) ),( MUR / ( RMSe - ( MUM / Max( ( RCSe + MUM ),MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.28072333136406563}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / MDR ) ) / ACS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( RCSe - Max( RCSe,( CS + CS ) ) ) ) ) ,MUC )", "obj1": 0.968978102189781, "obj2": 0.0086964327991906}, {"determining": "( ( PN - ( ( ( ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( Max( ( PN + BR ),RRS ) / ( ( CRS - DDR ) + ( RRS * ( Min( RRS ,DDR ) * ( Min( Const ,CRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * ( Min( ( MUR - RMSe ) ,MUM ) - ( Max( ( MUC / CS ),( MUR - Max( RRSe,MUC ) ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6257284450243148}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,CRS ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Max( ( RCSe - ( Min( Min( MUC ,MLU ) ,( CS + RMSe ) ) * MUM ) ),RMSe ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5638686131386861, "obj2": 0.351058249337934}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( BR ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( Max( Max( RCSe,( CS + CS ) ),RRSe ) * Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.48722627737226276, "obj2": 0.46293144328964914}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( ( Max( FirstVNF_Mem,MDR ) / ( RRS * FirstVNF_RAM_Server ) ) - ( ( ( ( Min( CRS ,( ( AMS / FirstVNF_Mem ) * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) - MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( CRS * ( Max( ACS,ARS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RMSe ) + RRSe ) - ( ( ( CS - MUM ) / ( RCSe + MUM ) ) + ( MUM * ( DS + RMSe ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RRSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( CRS * FirstVNF_Mem_Server ) / ( Max( ( FirstVNF_Mem_Server + ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ARS ) / FirstVNF_RAM ) ),( ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) + FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( CS + DS ),DS ) ) * MUC ) ) + ( RCSe - Max( RCSe,( CS + CS ) ) ) ) ) ,( DS + Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,Min( ( MUR + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ) )", "obj1": 0.8521897810218978, "obj2": 0.06650500591078501}, {"determining": "( PN - ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + MDR ) * ( Min( Min( ARS ,Max( FirstVNF_CPU,Const ) ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( CS,RCSe ) - ( MUC * RCSe ) ) - Min( ( ( ( RCSe + RCSe ) - ( RMSe + RMSe ) ) + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6113138686131386, "obj2": 0.28640423765497247}, {"determining": "( ( ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) / FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) ) ) ) + BR ) - PN ) - ( AMS - BR ) )", "choosing": "( ( RMSe / ( ( MLU * MLU ) * Max( RMSe,Min( ( DS * ( MUC * RCSe ) ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5547445255474452, "obj2": 0.3668374016415836}, {"determining": "( ( PN + ( ( ( ( Min( CRS ,Max( RRS,RRS ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Min( MUM ,CS ) - ( ( ( RCSe - Max( RMSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server * ACS ) ) - PN )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - ( ( ( RCSe - MUR ) - MUC ) * DS ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.6551094890510949, "obj2": 0.2365686910104096}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( DDR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ARS * ACS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MLU - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( DS,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15458423178947747}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ),DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5693430656934306, "obj2": 0.3444210519006131}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( ( ( ( ( ( PN + ( FirstVNF_RAM_Server / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / Max( Min( FirstVNF_Mem_Server ,CRS ),MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( Min( DDR ,PN ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) - ( PN - Min( MDR ,PN ) ) )", "choosing": "Min( MUR ,( ( ( RMSe / MUM ) * Min( MUM ,MUM ) ) - ( ( RCSe * MUC ) * RCSe ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08458783690896808}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * PN ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + Min( ( Min( BR ,CRS ) / FirstVNF_CPU_Server ) ,Min( Const ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( DS * MUC ) / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe * CS ) ) * MUC ) / ( ( RCSe - MUR ) - ( MLU - DS ) ) ) / MLU ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MLU ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5054744525547445, "obj2": 0.43939650710022915}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506486}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( FirstVNF_CPU_Server * CRS ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ( FirstVNF_Mem_Server - Min( CRS ,( Max( Min( FirstVNF_RAM ,ARS ),DDR ) * MRS ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,( MUM / MUM ) ),( ( ( ( RRSe + ( MUM * RRSe ) ) - Max( CS,RRSe ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) + ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03120999050075182}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,( ACS + FirstVNF_Mem_Server ) ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,MLU ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUR ,DS ) ),( ( MUM * MUM ) / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( RRSe * DS ),Min( RRSe ,CS ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.1365864458668265}, {"determining": "( Max( PN,Min( MDR ,PN ) ) - ( ( ( ( ( Min( ( BR * MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) + MDR ) * FirstVNF_CPU ) * ( ACS - RRS ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( DS ,( MUC * Min( ( MUC - ( Max( MLU,MUM ) + ( MUR * DS ) ) ) ,Max( DS,DS ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.09978133659124028}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( FirstVNF_CPU * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( ( MUC - RMSe ) + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6240875912408759, "obj2": 0.2760782437117892}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( FirstVNF_CPU / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) * AMS ) + Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( MUR ,( ( ( ( Min( MUC ,RRSe ) + DS ) * ( MLU + CS ) ) + DS ) - ( ( RCSe * MUC ) * RCSe ) ) )", "obj1": 0.9854014598540146, "obj2": 0.002031564960688322}, {"determining": "( ( PN - Min( ACS ,PN ) ) - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * BR ) ) / MDR ) * ( ( ( ( ACS - Const ) - FirstVNF_RAM ) + ( ( ACS - FirstVNF_CPU ) * MRS ) ) / MDR ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) + RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + DS ),DS ) ) * MUC ) ) + ( RCSe * Max( RCSe,( CS + CS ) ) ) ) ) ,( DS + Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) ) )", "obj1": 0.9525547445255474, "obj2": 0.015074360453382455}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,Min( CRS ,( CRS * MRS ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.395985401459854, "obj2": 0.6365313611481507}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM - FirstVNF_CPU_Server ) ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( Max( ( RRSe + RCSe ),DS ) - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( CRS ,( BR * MRS ) ) + MDR ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( RCSe - MUR ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.4726277372262774, "obj2": 0.49119943993362025}, {"determining": "( PN - ( ( ( ( ARS / CRS ) * MRS ) * ( ( ACS * ARS ) * ( ACS * AMS ) ) ) / ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "Min( Max( RRSe,( RRSe / CS ) ) ,( ( DS + ( RMSe * RRSe ) ) - ( MUC * RCSe ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) + BR ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( Max( CS,MUC ) / Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU + CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + ( DS * RRSe ) ) ) + RRSe ) ) ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.614911935665286}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( ACS * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( ( DS / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) / ( ( RCSe - MUR ) - ( MLU - DS ) ) ) / MLU ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5200729927007299, "obj2": 0.42028615523463003}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const / MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( FirstVNF_Mem_Server + ( BR / MDR ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - ( RRSe + CS ) ) ),( ( DS / MUM ) - MLU ) ),( Max( MUM,MLU ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4729073140912064}, {"determining": "( ( PN - ( ( ( ( Min( ( CRS * AMS ) ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( ( CRS / ( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( Const * MDR ) ,CRS ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( RRSe / ( ( DS * CS ) + ( RCSe - RRSe ) ) ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( Max( MUR,Max( MUR,DS ) ) * MLU ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.35996274367995923}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( RCSe - ( Min( Min( MUC ,MLU ) ,( CS + RMSe ) ) * MUM ) ),RMSe ) ) )", "obj1": 0.5492700729927007, "obj2": 0.3684008223849732}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( FirstVNF_CPU_Server - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - ( RRSe + CS ) ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( ( CS + CS ) * RRSe ) + MUR ) )", "obj1": 0.5, "obj2": 0.4418501119636355}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( DDR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( DS,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.718978102189781, "obj2": 0.170628764924721}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( FirstVNF_CPU - MRS ) ) / MDR ) * ( FirstVNF_CPU / MDR ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + DS ),DS ) ) * MUC ) ) + ( DS / Max( RCSe,MLU ) ) ) ) ,( DS + Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) ) )", "obj1": 0.9616788321167883, "obj2": 0.01108196209679337}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( FirstVNF_Mem - MRS ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - DS ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * CS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.572992700729927, "obj2": 0.3397100344280764}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( MRS * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) * BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "( Max( Min( MLU ,MLU ),CS ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( MUM + MLU ) ) - MUC ) ) )", "obj1": 0.4854014598540146, "obj2": 0.463808376399595}, {"determining": "( ( PN + FirstVNF_RAM_Server ) - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( Max( FirstVNF_Mem_Server,CRS ) * Min( ( ( RRS - MRS ) + Max( MDR,Const ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Max( MUC,( ( ( Max( Min( RRSe ,DS ),( RRSe - MUM ) ) + ( MUC + ( CS / MUM ) ) ) / RCSe ) * MUC ) ) ,Max( MLU,( Max( ( ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) / MUM ),( ( CS - MUR ) + ( ( MUC - RMSe ) * MUM ) ) ) * MUC ) ) )", "obj1": 0.6824817518248175, "obj2": 0.20361623538620713}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS + ( FirstVNF_RAM + PN ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( PN - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - ( RRSe + CS ) ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( ( CS + CS ) * RRSe ) + MUR ) )", "obj1": 0.6587591240875912, "obj2": 0.22929438539719513}, {"determining": "( Min( PN ,( BR + ( ( ( Min( CRS ,( DDR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( Max( CS,DS ) * MUM ) + MLU ) )", "obj1": 0.8941605839416058, "obj2": 0.0423680812528603}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( BR ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS * MUR ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46293144328964914}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( ( MUC * RCSe ) + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5742157079387905}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MUR,CS ) )", "obj1": 0.6496350364963503, "obj2": 0.24073109252416539}, {"determining": "( ( ( ( Min( CRS ,( BR * PN ) ) + ( ( ( RRS - FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,ARS ) + MDR ) ) + CRS ) ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) - ( BR - ACS ) )", "choosing": "Min( ( ( Max( MUM,( CS / MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( MUM + RCSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( MUC * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.601217393780281}, {"determining": "( ( Min( ACS ,FirstVNF_CPU ) / Min( FirstVNF_Mem_Server ,Min( Min( ( CRS / DDR ) ,Max( ( FirstVNF_Mem * ARS ),( CRS * Min( PN ,RRS ) ) ) ) ,ACS ) ) ) - ( MRS * ACS ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( RMSe * MUC ) + ( MUM + ( DS + DS ) ) ) ,( ( MUC * ( ( DS / MUC ) + MUR ) ) * DS ) ) ) ) - ( ( CS - RCSe ) / ( ( MUR - RMSe ) - RMSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6137042602548876}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - ( MLU - DS ) ) ) / MLU ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5145985401459854, "obj2": 0.4229337661550906}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) ) - ( Max( Const,Min( FirstVNF_Mem_Server ,AMS ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + ( ( RRS / AMS ) - ( ARS - AMS ) ) ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,( MUC - RCSe ) ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8941605839416058, "obj2": 0.0423680812528603}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - ( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( Max( Max( ( DS * ( ( RCSe - MUR ) - DS ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.7755474452554745, "obj2": 0.11709031039420047}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * Max( Min( CRS ,( FirstVNF_RAM_Server * ACS ) ),MDR ) ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + ( AMS / FirstVNF_CPU ) ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( Max( MLU,( Max( MLU,MUM ) + Max( Max( Min( RRSe ,MLU ),MUC ),MUC ) ) ) - MUC ) / ( RMSe - RMSe ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15458423178947747}, {"determining": "( Min( ( Max( ( AMS - MDR ),FirstVNF_Mem ) + DDR ) ,MDR ) - ( Max( ( ( Min( CRS ,( MRS * FirstVNF_CPU_Server ) ) + ( MDR * ( AMS - PN ) ) ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU * MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ),( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( Min( Max( MUM,( CS + MUC ) ) ,MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RMSe - RRSe ) ) ),Min( ( MUR - DS ) ,RRSe ) ) ),MUR ) ) ,( MUR * ( DS / Max( RCSe,MLU ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.24073109252416539}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.6058394160583942, "obj2": 0.304995089139}, {"determining": "( ( FirstVNF_RAM_Server + Min( ( ACS + MRS ) ,( PN / CRS ) ) ) - ( PN - ( ( Max( ( Max( ( CRS + FirstVNF_RAM_Server ),MDR ) - CRS ),FirstVNF_RAM ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MUR / MLU ) ),( CS + CS ) ) ) - Max( DS,( MLU / ( MUR - Min( ( MUM / RMSe ) ,( MUC + MUR ) ) ) ) ) ) / ( MLU - RMSe ) ) - Max( MUC,MUM ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( PN - Min( ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_CPU ) * ( PN - CRS ) ) ,PN ) ) - ( ( ( ( Min( CRS ,( ( MRS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ARS ) / Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( MDR + ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( ( ( Max( Min( MUR ,RRSe ),( MUC + Max( RCSe,MUM ) ) ) / MUC ) / ( RMSe / Min( MUC ,MLU ) ) ) * Max( RMSe,RRSe ) ) ) - Max( Max( MUR,CS ),( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.024778835029323102}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server * ACS ) ) - PN )", "choosing": "Min( ( MUC - ( ( MUC - RMSe ) - ( ( ( RCSe - MUR ) - MUC ) * DS ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5369536332834238}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( MLU / MUC ) - MUR )", "obj1": 0.6368613138686131, "obj2": 0.25817783466380156}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( FirstVNF_RAM / ARS ) * MRS ) ) / FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( ( DDR * ( Const + ( PN * ACS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - ( MUM / MLU ) )", "obj1": 0.8321167883211679, "obj2": 0.07997630221262932}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( ( MUC * RCSe ) + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5742157079387905}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( RCSe * MUC ) - MUR )", "obj1": 0.6259124087591241, "obj2": 0.2706882975080182}, {"determining": "( PN - ( ( ( ( ( CRS + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( ARS * ACS ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( MUC,MUR ),( ( ( DS / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139924}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721058}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( CS,DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.677007299270073, "obj2": 0.21041318096922965}], "31": [{"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( MDR * ( ( ACS + FirstVNF_Mem_Server ) - MRS ) ) ) ,ACS ),FirstVNF_Mem_Server ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "Min( ( MUC / Min( Min( MUM ,RRSe ) ,MUR ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( ( PN + ( ( ( ( Min( CRS ,Max( RRS,RRS ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Min( MUM ,CS ) - ( ( ( RCSe - Max( RMSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Min( ( ( Min( ( MRS / BR ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ,( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_RAM + FirstVNF_Mem ) + ( ARS + ( ( FirstVNF_RAM * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RCSe * ( MUC / RRSe ) ) - MUC ) - RMSe ) ,Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( MUR,Max( RMSe,Min( ( ( MUC * RCSe ) * DS ) ,( ( RMSe * MUC ) + ( MUM * ( DS + DS ) ) ) ) ) ) - ( ( ( MUC - MUR ) - Min( ( MUC - RMSe ) ,( MUR - ( RCSe * MUC ) ) ) ) / ( ( MLU - RMSe ) - RMSe ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6790346672272868}, {"determining": "( Min( ( ( Const - RRS ) * ( ( ( FirstVNF_Mem * ACS ) + Max( CRS,( ( AMS * FirstVNF_CPU ) - ACS ) ) ) + RRS ) ) ,( ( MRS * Min( ( BR * Min( BR ,CRS ) ) ,FirstVNF_CPU ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server * Min( ( Min( FirstVNF_CPU ,( Max( MRS,BR ) + CRS ) ) + CRS ) ,( Min( ARS ,ARS ) * Const ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MLU,( RMSe * Max( Min( ( MLU - MLU ) ,( Min( ( MLU + DS ) ,Min( MUR ,RMSe ) ) / RMSe ) ),( Max( MLU,MUM ) + ( ( Min( RCSe ,MLU ) * Max( MUR,MUM ) ) * MUR ) ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.3905109489051095, "obj2": 0.6531041412321442}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( FirstVNF_CPU / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) * AMS ) + Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( MUR ,( ( ( ( Min( MUC ,RRSe ) + DS ) * ( MLU + CS ) ) + DS ) - ( ( RCSe * MUC ) * RCSe ) ) )", "obj1": 0.9854014598540146, "obj2": 0.002031564960688322}, {"determining": "( ( AMS * ( FirstVNF_Mem * AMS ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( MUC,Min( MUC ,MUM ) ) ,Max( MUR,RRSe ) ) ) - ( RRSe + MUC ) ) * ( Max( Max( Min( RMSe ,( RCSe / MUM ) ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( MLU - ( ( RRSe - Min( ( CS / CS ) ,( DS * MUR ) ) ) + ( ( RRSe * RCSe ) + RCSe ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18580823836361277}, {"determining": "( Min( ( ( PN + ( CRS / AMS ) ) - FirstVNF_Mem ) ,BR ) - ( Min( ( MDR + Min( ( Max( ( Const - AMS ),( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ,DDR ) / Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( ( MUM / ( ( CS * RRSe ) * MUM ) ) / ( Max( ( ( Min( Max( MUR,DS ) ,MUM ) / Max( Max( RMSe,CS ),RMSe ) ) * MLU ),MLU ) / Max( RMSe,Min( ( DS * ( MUR * RCSe ) ) ,( ( RMSe * MUC ) + ( DS * ( DS + MLU ) ) ) ) ) ) ) - MUR )", "obj1": 0.7609489051094891, "obj2": 0.12792014969359353}, {"determining": "( PN - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( MDR - MRS ) + ( MRS / FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( MUM / ( MUM / Max( ( RCSe + MUM ),MLU ) ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.45603473197299127}, {"determining": "( PN - ( ( ( Max( CRS,AMS ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ( Const - BR ) ) ) )", "choosing": "Min( ( ( CS + MLU ) - ( ( RRSe * ( ( RCSe * Min( RCSe ,MUR ) ) * MUC ) ) + ( ( DS / RMSe ) * MUC ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5837122801025838}, {"determining": "( Max( ( BR + ( Min( ( RRS + DDR ) ,( ( PN - ACS ) - DDR ) ) / MDR ) ),AMS ) - ( Min( MRS ,FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( MUM / DS ) ,Max( ( ( ( MLU + RCSe ) + MUR ) * MLU ),( RMSe * Min( Max( Max( RCSe,CS ),MUM ) ,( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6687430734359993}, {"determining": "( Max( PN,Min( Min( FirstVNF_RAM ,ACS ) ,PN ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC + RCSe ) ) )", "obj1": 0.7445255474452555, "obj2": 0.15040634987423324}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM_Server + Min( ( ARS * Min( Const ,CRS ) ) ,Min( CRS ,( CRS * MRS ) ) ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.395985401459854, "obj2": 0.6365313611481507}, {"determining": "( ( ( ( ( ( PN + ( FirstVNF_RAM_Server / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / Max( Min( FirstVNF_Mem_Server ,CRS ),MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( Min( DDR ,PN ) * ( ARS / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) - ( PN - Min( MDR ,PN ) ) )", "choosing": "Min( MUR ,( ( ( RMSe / MUM ) * Min( MUM ,MUM ) ) - ( ( RCSe * MUC ) * RCSe ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08458783690896808}, {"determining": "( PN - ( ( ( ( ( MDR * ( CRS - MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( ( Max( MUM,( CS + MUC ) ) + MUC ) * Max( ( MUM - Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RCSe ) ) ),Min( RRSe ,CS ) ) ),MUR ) ) ,( ( Min( ( ( DS * ( MUC + CS ) ) - ( RCSe - RMSe ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( ( RCSe * Min( RMSe ,MUR ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.30505504906337344}, {"determining": "( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( BR * FirstVNF_Mem ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ARS + ( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) + ( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server / RRS ) ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( RMSe - Max( Max( RCSe,RMSe ),MUC ) ) ,( ( DS / ( RCSe * RRSe ) ) * MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.4058387157300192}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM - FirstVNF_CPU_Server ) ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( Max( ( RRSe + RCSe ),DS ) - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.48089222406814885}, {"determining": "( ( PN - ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM / BR ) ) + ( ACS + Const ) ) + ARS ) ) - ( ( ( ( Min( Min( CRS ,( MRS * Const ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) * ARS ) / ( Min( ACS ,Max( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MLU / MUC ) - MUR )", "obj1": 0.8996350364963503, "obj2": 0.04120428034629223}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( BR * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) - MUC )", "obj1": 0.9178832116788321, "obj2": 0.03952831517590346}, {"determining": "( ( Max( FirstVNF_Mem,MDR ) / ( RRS * FirstVNF_RAM_Server ) ) - ( ( ( ( Min( CRS ,( ( AMS / FirstVNF_Mem ) * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) - MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( CRS * ( Max( ACS,ARS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RMSe ) + RRSe ) - ( ( ( CS - MUM ) / ( RCSe + MUM ) ) + ( MUM * ( DS + RMSe ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RRSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07493639118976524}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( MDR * MRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,Min( MUC ,MLU ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5364963503649635, "obj2": 0.3931847553206952}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( Min( CRS ,( ( ARS / CRS ) * MRS ) ) + ( ACS - RRS ) ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( ( ( RMSe * DS ) + ( MUC * RCSe ) ) - RRSe ) * ( CS + ( Max( Max( RCSe,RCSe ),RCSe ) + MUR ) ) ) ) / ( MUC - Min( RCSe ,( ( RMSe - CS ) / ( MUC + Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 0.5821167883211679, "obj2": 0.32888989648588196}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( FirstVNF_RAM / ARS ) * MRS ) ) / FirstVNF_CPU_Server ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( ( DDR * ( Const + ( PN * ACS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / Max( MLU,RMSe ) ) - ( MUM / MLU ) )", "obj1": 0.8321167883211679, "obj2": 0.07997630221262932}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( Min( CRS ,( Const * MRS ) ) ,( ( ARS / CRS ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ACS,Max( ( ARS * ( Max( ARS,ACS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09204214630721058}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( RCSe - ( Min( Min( MUC ,MLU ) ,( CS + RMSe ) ) * MUM ) ),RMSe ) ) )", "obj1": 0.5492700729927007, "obj2": 0.3684008223849732}, {"determining": "( PN - ( ( ( ( ( CRS + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( FirstVNF_CPU_Server - DDR ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( ( RRSe + CS ),MUR ),( ( ( DS / RRSe ) / Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.11866457629523586}, {"determining": "( PN - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( MRS / FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + DS ) + RMSe ) ),( ( CS - MUR ) + Max( MLU,MUM ) ) ) ) ) )", "obj1": 0.666058394160584, "obj2": 0.22130824754547151}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( CRS ,( BR * MRS ) ) + MDR ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( RCSe - MUR ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.4726277372262774, "obj2": 0.49119943993362025}, {"determining": "( ( ( ( ( Min( CRS ,( ( DDR * FirstVNF_Mem_Server ) * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Max( FirstVNF_RAM_Server,DDR ) * MRS ) ) ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( DDR ,FirstVNF_CPU_Server ) * RRS ) * ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) - ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / RRS ) ) ) + BR ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe + MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( ( DS * CS ) + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.567495430867487}, {"determining": "( ( PN - Min( ACS ,PN ) ) - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * BR ) ) / MDR ) * ( ( ( ( ACS - Const ) - FirstVNF_RAM ) + ( ( ACS - FirstVNF_CPU ) * MRS ) ) / MDR ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) + RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + DS ),DS ) ) * MUC ) ) + ( RCSe * Max( RCSe,( CS + CS ) ) ) ) ) ,( DS + Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) ) )", "obj1": 0.9525547445255474, "obj2": 0.015074360453382455}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( ARS - RRS ) * MRS ) ) ) ) + ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + Min( Const ,DDR ) ) ) )", "choosing": "Max( Max( ( CS / MLU ),RMSe ),( ( CS - MUM ) * MUR ) )", "obj1": 0.43613138686131386, "obj2": 0.5385423546957984}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( BR * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( MUR - Max( RCSe,MUC ) ) )", "obj1": 0.6094890510948905, "obj2": 0.30298407314314196}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( FirstVNF_CPU * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * ACS ) ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - ( RCSe - Max( RCSe,( CS + CS ) ) ) ) ,RRSe ) + RRSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3183043881870362}, {"determining": "( ( PN + ( ( ( ( Min( CRS ,Max( RRS,RRS ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Min( MUM ,CS ) - ( ( ( RCSe - Max( RMSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( CRS,MRS ) * ACS ) ) / Min( FirstVNF_RAM_Server ,AMS ) ) - ( FirstVNF_RAM_Server * Max( ACS,MDR ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RMSe - RMSe ) ) ,( MUM * ( Max( ( RCSe + MUR ),( ( ( ( DS / RMSe ) * MUC ) - RCSe ) - RMSe ) ) + CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.5932322300196136}, {"determining": "( ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Max( Max( ( Min( MLU ,DS ) / ( RRSe * RMSe ) ),MUR ),( Min( ( DS / RRSe ) ,Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) )", "obj1": 0.4470802919708029, "obj2": 0.5315570866807784}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * BR ) ) / MDR ) * ( FirstVNF_CPU / ACS ) ) / ACS ) / ( Max( ( Max( MDR,Const ) + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + ( MUC * RCSe ) ) ) ) ) ,( DS + Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ) )", "obj1": 0.8722627737226277, "obj2": 0.05559914887771451}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / BR ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( ( ( RCSe - MUR ) - MUC ) * ( DS + DS ) ) ) ) ,( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) )", "obj1": 0.8631386861313869, "obj2": 0.05998210196177235}, {"determining": "( ( PN - ( ( ( ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( Max( ( PN + BR ),RRS ) / ( ( CRS - DDR ) + ( RRS * ( Min( RRS ,DDR ) * ( Min( Const ,CRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * ( Min( ( MUR - RMSe ) ,MUM ) - ( Max( ( MUC / CS ),( MUR - Max( RRSe,MUC ) ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6257284450243148}, {"determining": "( ( PN - Min( MDR ,( CRS + FirstVNF_CPU ) ) ) - ( ( ( ( ( Min( CRS ,ACS ) + MDR ) * MDR ) * ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) * Min( CRS ,( Const * MDR ) ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( Min( MLU ,( MUR + Max( DS,MLU ) ) ),Min( Max( Min( MUC ,MLU ),MUC ) ,Max( MUR,RRSe ) ) ) - ( MUC + RRSe ) ) ,( Max( Max( ( DS / RRSe ),RMSe ),DS ) / ( MUR * MUM ) ) ) / ( RCSe * CS ) ) + ( Max( ( MUM + Min( MUC ,DS ) ),( MUR / ( RMSe - ( MUM / Max( DS,MLU ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.75, "obj2": 0.14111340736917496}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,Min( BR ,CRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + FirstVNF_RAM_Server ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - Min( RCSe ,MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( DS + DS ) ) - MUC ) ) )", "obj1": 0.7244525547445255, "obj2": 0.16394671240617928}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( DDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM - ARS ) / MRS ) ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MLU + CS ) ),( CS + CS ) ) ) - DS ) - ( MLU - RMSe ) ) - Max( MUR,CS ) )", "obj1": 0.4653284671532847, "obj2": 0.4979063791129418}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ARS ) / Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,CRS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( Max( ( ( RMSe * DS ) + ( MUC * RCSe ) ),RRSe ) * Max( RMSe,RRSe ) ) ) - ( Max( MUR,CS ) - ( Min( ( RCSe - MUR ) ,( ( Max( MUC,Max( RCSe,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.019316420043392575}, {"determining": "( ( ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) / FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) ) ) ) + BR ) - PN ) - ( AMS - BR ) )", "choosing": "( ( RMSe / ( ( MLU * MLU ) * Max( RMSe,Min( ( DS * ( MUC * RCSe ) ) ,( ( DS + MUR ) + ( MUM * ( DS + DS ) ) ) ) ) ) ) - MUR )", "obj1": 0.5547445255474452, "obj2": 0.3668374016415836}, {"determining": "( ( PN / ( BR + ( ( FirstVNF_Mem_Server - CRS ) + ( ( Min( Min( PN ,PN ) ,CRS ) / MDR ) * FirstVNF_CPU ) ) ) ) - ( DDR - Min( BR ,CRS ) ) )", "choosing": "( ( CS - ( CS * MUR ) ) / ( ( ( MUR / CS ) + DS ) - ( Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU - CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + Max( MUM,MUC ) ) ) + RRSe ) ) / Max( CS,MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5229737497025696}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( Max( Max( Max( Max( ( CS * CS ),MUR ),Max( Min( RMSe ,MUR ),( RRSe - RRSe ) ) ),Min( RRSe ,CS ) ),DS ) + ( MUM * ( DS + DS ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RCSe ) ) )", "obj1": 0.5693430656934306, "obj2": 0.3444210519006131}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( Const * CRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - ( RRSe + CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * ( MUC - RMSe ) ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.47214327296925307}, {"determining": "( PN - ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + MDR ) * ( Min( Min( ARS ,Max( FirstVNF_CPU,Const ) ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( CS,RCSe ) - ( MUC * RCSe ) ) - Min( ( ( ( RCSe + RCSe ) - ( RMSe + RMSe ) ) + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6113138686131386, "obj2": 0.28640423765497247}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * ARS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) * Min( CRS ,( Const * MDR ) ) ) ) ) ) ) )", "choosing": "( ( RCSe * ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) ) - MUR )", "obj1": 0.4343065693430657, "obj2": 0.554189979622757}, {"determining": "( ( PN - ( ( ( ( Max( CRS,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( ( ACS * ARS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( RMSe * MUC ) + ( Max( Max( ( Min( MLU ,DS ) / ( RRSe * RMSe ) ),MUR ),( Min( ( DS / RRSe ) ,Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) ) ) )", "obj1": 0.5802919708029197, "obj2": 0.33895514240196073}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( ( ( FirstVNF_Mem * MDR ) + MDR ) ,FirstVNF_CPU_Server ) ) ) * ( Const * MRS ) ) / ( Max( ACS,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) ) - MRS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RMSe - ( Max( MUC,Min( RMSe ,CS ) ) - ( Min( ( RCSe / MUM ) ,MUR ) - ( Min( Max( RMSe,RMSe ) ,CS ) / RRSe ) ) ) ) ) - ( Max( MUR,CS ) - ( Min( Max( RCSe,MUR ) ,( ( Max( MUC,Max( MUC,MUC ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( Min( RCSe ,( ( RMSe - CS ) / ( MUC + CS ) ) ) - MUC ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02760546167957484}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / MDR ) ) / ACS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( RCSe - Max( RCSe,( CS + CS ) ) ) ) ) ,MUC )", "obj1": 0.968978102189781, "obj2": 0.0086964327991906}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( FirstVNF_CPU_Server * CRS ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( ( FirstVNF_Mem_Server - Min( CRS ,( Max( Min( FirstVNF_RAM ,ARS ),DDR ) * MRS ) ) ) * ACS ) ) )", "choosing": "( Max( Min( MUM ,( MUM / MUM ) ),( ( ( ( RRSe + ( MUM * RRSe ) ) - Max( CS,RRSe ) ) * MUC ) / ( ( RCSe - MUR ) - DS ) ) ) - ( Min( RMSe ,Max( Min( RMSe ,( MUM + RMSe ) ),MUC ) ) + ( Min( RCSe ,Min( ( RRSe * MLU ) ,MUR ) ) - ( MLU * MUM ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.03120999050075182}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( FirstVNF_CPU_Server - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - ( RRSe + CS ) ) - DS ) ) / MLU ),Max( MLU,MUM ) ) ),( ( ( CS + CS ) * RRSe ) + MUR ) )", "obj1": 0.5, "obj2": 0.4418501119636355}, {"determining": "( PN - ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + MDR ) * ( Min( Min( ARS ,ARS ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - ( MUC * RCSe ) ) - Min( ( Max( ( DS * RRSe ),Max( MUR,CS ) ) + CS ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( PN + ( MRS / ( MDR - FirstVNF_CPU_Server ) ) ) - ( ( ( ( Min( CRS ,PN ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + Max( MDR,Const ) ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Max( MUC,Min( MLU ,MLU ) ) ,Max( MLU,( RMSe * Max( ( ( MUC - RMSe ) / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + ( MUC * RCSe ) ) ) ) ) )", "obj1": 0.7755474452554745, "obj2": 0.1134180331778248}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( DDR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( Max( MLU,MUM ) + ( CS * MUR ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( DS,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.6970802919708029, "obj2": 0.191611491845392}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( ARS * FirstVNF_CPU ) ) + BR ) - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Min( ( Max( CS,MUC ) / Max( Max( ( Min( MUM ,CS ) / ( DS * ( MLU + CS ) ) ),Max( MUR,Max( MUR,RCSe ) ) ),( ( RRSe * ( RCSe + ( DS * RRSe ) ) ) + RRSe ) ) ) ,Max( MLU,( RMSe * Max( RMSe,( Max( MLU,MUM ) + ( MUC + CS ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.610982198563494}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * PN ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC * Min( ( MUC - ( Max( MLU,MUM ) + Min( MUR ,DS ) ) ) ,( MUR - ( RCSe * MUC ) ) ) ) ,DS )", "obj1": 0.7974452554744526, "obj2": 0.09978133659124028}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8138686131386861, "obj2": 0.09029860474964557}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21604820121342203}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( DDR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ARS * ACS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MLU - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( DS,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.7317518248175182, "obj2": 0.1580795152882257}, {"determining": "( ( Max( FirstVNF_Mem,MDR ) / ( RRS * FirstVNF_RAM_Server ) ) - ( ( ( ( Min( CRS ,( ( AMS / FirstVNF_Mem ) * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) - MDR ) ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( CRS * ( Max( ACS,ARS ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RMSe ) + RRSe ) - ( ( ( CS - MUM ) / ( RCSe + MUM ) ) + ( MUM * ( DS + RMSe ) ) ) ) ,( ( ( RMSe * RRSe ) + DS ) - ( MUC * RRSe ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5177538973990609}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server + ( Min( CRS ,( MDR * MRS ) ) + MDR ) ) ,ACS ) ) / Min( ACS ,FirstVNF_CPU ) ) - ( MRS + ( FirstVNF_RAM + PN ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( RRSe - Max( ( MLU - DS ),RMSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5380726021717638}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "Min( Max( RRSe,( RRSe / CS ) ) ,( ( DS + ( RMSe * RRSe ) ) - ( MUC * RCSe ) ) )", "obj1": 0.8813868613138686, "obj2": 0.050661707195573204}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / MRS ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( MLU / MUC ) - MUR )", "obj1": 0.6368613138686131, "obj2": 0.25817783466380156}, {"determining": "( ( MDR - ( ( ( ( Max( CRS,( Const * BR ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) + MDR ) ) ) - ( Max( ( MDR / FirstVNF_CPU ),( ARS * PN ) ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( Min( ACS ,FirstVNF_CPU ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RMSe * MUC ) + ( MUM * ( Max( ( RRSe / ( CS - MUR ) ),Min( RRSe ,CS ) ) + DS ) ) ) / ( Min( RCSe ,( ( MUC + CS ) / ( RMSe - ( Max( MUC,RRSe ) + MUC ) ) ) ) - MUC ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4154418169732255}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( MUR / ( RCSe * CS ) ) + ( Max( ( RMSe + Min( MUR ,( ( RMSe * DS ) + ( MUC * ( DS - MLU ) ) ) ) ),( MUR / ( RMSe - ( DS / Max( ( RMSe * MUC ),( MLU - RCSe ) ) ) ) ) ) - Max( ( DS * RRSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.2477806810910767}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / MDR ) * MRS ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) + MDR ) ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( Max( ( FirstVNF_Mem_Server * AMS ),Max( ( ARS * ( Max( ARS,PN ) / Const ) ),Min( DDR ,( MRS / ARS ) ) ) ) * ACS ) ) )", "choosing": "( ( MUM + RCSe ) / ( CS + Min( MUR ,MUR ) ) )", "obj1": 0.8813868613138686, "obj2": 0.050661707195573204}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( RCSe * MUC ) - MUR )", "obj1": 0.6259124087591241, "obj2": 0.2706882975080182}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( ( ( Min( CRS ,( BR * PN ) ) + MDR ) * FirstVNF_CPU ) * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( RRSe + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10528919272131322}, {"determining": "( Max( PN,Min( MDR ,PN ) ) - ( ( ( ( ( Min( ( BR * MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) + MDR ) * FirstVNF_CPU ) * ( ACS - RRS ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( DS ,( MUC * Min( ( MUC - ( Max( MLU,MUM ) + ( MUR * DS ) ) ) ,Max( DS,DS ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.09978133659124028}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server / ( ARS * ACS ) ) ) + MDR ) * ( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ARS ) / Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( Min( ( ( Max( RCSe,CS ) - RMSe ) - Min( ( MUC + ( ( RMSe * DS ) + ( MUC * RCSe ) ) ) ,DS ) ) ,RRSe ) + RRSe ) )", "obj1": 0.6332116788321168, "obj2": 0.26786560343172305}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( PN - Min( MDR ,PN ) ) ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( ( FirstVNF_CPU_Server - DDR ) ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( CS + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5059642028578726}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( Min( BR ,CRS ) / FirstVNF_CPU_Server ) * Min( MRS ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( DS - ( DS / DS ) ) / MLU ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MLU ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5164233576642335, "obj2": 0.4197425541931174}, {"determining": "( ( FirstVNF_RAM_Server + Min( ( ACS + MRS ) ,( PN / CRS ) ) ) - ( PN - ( ( Max( ( Max( ( CRS + FirstVNF_RAM_Server ),MDR ) - CRS ),FirstVNF_RAM ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) )", "choosing": "( ( ( ( RCSe - Max( ( DS / ( MUR / MLU ) ),( CS + CS ) ) ) - Max( DS,( MLU / ( MUR - Min( ( MUM / RMSe ) ,( MUC + MUR ) ) ) ) ) ) / ( MLU - RMSe ) ) - Max( MUC,MUM ) )", "obj1": 0.5091240875912408, "obj2": 0.4313243608320256}, {"determining": "( ( PN - ( ( ( ( Min( ( CRS * AMS ) ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( ( CRS / ( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( Const * MDR ) ,CRS ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( RRSe / ( ( DS * CS ) + ( RCSe - RRSe ) ) ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( Max( MUR,Max( MUR,DS ) ) * MLU ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.35996274367995923}, {"determining": "( Max( PN,Min( MDR ,PN ) ) - ( ( ( ( ( Min( ( BR * MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) + MDR ) * FirstVNF_CPU ) * ( ACS - RRS ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( DS ,( MUC * Min( ( MUC - ( Max( MLU,MUM ) + ( MUR * DS ) ) ) ,Max( DS,DS ) ) ) )", "obj1": 0.6952554744525548, "obj2": 0.19547648368729117}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( ( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,MUC ) ) ) / MUM ),( Max( MLU,( MUC + MLU ) ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.5255474452554745, "obj2": 0.4108594901646536}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * ACS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( ( MUR - ( RCSe * MUC ) ) - ( ( RMSe - RMSe ) / ( Max( RCSe,( Max( MLU,MUM ) + MLU ) ) - MUC ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15458423178947747}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * BR ) ) / MDR ) * ( FirstVNF_CPU / ACS ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( Max( MUC,Min( MLU ,MLU ) ) ,Max( MLU,( RMSe * Max( ( MUM / ( ( Max( CS,MUR ) + ( RCSe / RRSe ) ) + RMSe ) ),( ( CS - MUR ) + ( MUC * RCSe ) ) ) ) ) )", "obj1": 0.8521897810218978, "obj2": 0.06650500591078501}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * ARS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( MUM * ( DS + DS ) ) ) ) ,( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) )", "obj1": 0.8485401459854015, "obj2": 0.06977661044506486}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) * ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,( ( ( MUR + ( Min( MLU ,DS ) + RCSe ) ) - RRSe ) * ( RRSe + RMSe ) ) ) / ( ( MUR / ( ( DS / ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.9361313868613139, "obj2": 0.019563555470960527}, {"determining": "( Min( PN ,( BR + ( ( ( Min( CRS ,( DDR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( ( Max( CS,DS ) * MUM ) + MLU ) )", "obj1": 0.8941605839416058, "obj2": 0.0423680812528603}, {"determining": "( PN - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + CRS ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + ( Const * ACS ) ) ,FirstVNF_Mem_Server ) ) ) * Min( AMS ,MDR ) ) / ( FirstVNF_Mem * ACS ) ) )", "choosing": "Min( ( MUC * ( MUM + MUC ) ) ,Min( ( ( RMSe + RCSe ) * DS ) ,( ( Max( Max( ( Min( CS ,DS ) / ( RRSe * RMSe ) ),MUR ),( Min( ( DS / RRSe ) ,Max( RRSe,RMSe ) ) * MUM ) ) * MUM ) + ( MUM * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.249425668666492}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,CRS ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Max( ( RCSe - ( Min( Min( MUC ,MLU ) ,( CS + RMSe ) ) * MUM ) ),RMSe ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5638686131386861, "obj2": 0.351058249337934}, {"determining": "( PN - ( ( ( ( ARS / CRS ) * MRS ) * ( ( ACS * ARS ) * ( ACS * AMS ) ) ) / ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "Min( Max( RRSe,( RRSe / CS ) ) ,( ( DS + ( RMSe * RRSe ) ) - ( MUC * RCSe ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( ( MUC * RCSe ) + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5742157079387905}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( ( ARS / FirstVNF_RAM ) * MRS ) ) / MDR ) * ( FirstVNF_CPU / MDR ) ) / ACS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + MUR ),DS ) ) * MUC ) ) + ( RCSe - Max( RCSe,( CS + CS ) ) ) ) ) ,MUC )", "obj1": 0.968978102189781, "obj2": 0.0086964327991906}, {"determining": "( ( PN - Min( MDR ,PN ) ) - ( ( ( ( Min( CRS ,( FirstVNF_RAM_Server * BR ) ) / MDR ) * ( FirstVNF_CPU / ACS ) ) / ACS ) / ( Max( ( FirstVNF_Mem_Server + ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM ) ),( FirstVNF_RAM_Server + ( ( ( ACS * RRS ) * ( FirstVNF_RAM_Server * ACS ) ) + MDR ) ) ) * ACS ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - RMSe ) - ( DS * ( MUC + CS ) ) ) ,RRSe ) + RRSe ) - ( ( RRSe * ( Max( RCSe,Max( ( MUC + DS ),DS ) ) * MUC ) ) + ( RCSe - Max( RCSe,( CS + CS ) ) ) ) ) ,( RCSe * CS ) )", "obj1": 0.8667883211678832, "obj2": 0.05890470284401919}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Const,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - Min( ( ( MRS + FirstVNF_Mem_Server ) + RRS ) ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.8941605839416058, "obj2": 0.0423680812528603}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( Const * MRS ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "Min( ( MUC / RCSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - MUC ) ),MUM ),Max( MLU,MUM ) ) ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17361813887685842}, {"determining": "( ( ( Max( BR,CRS ) - Min( FirstVNF_CPU ,( MDR - PN ) ) ) - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( CS / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ) / ( ( RCSe - MUR ) - ( MLU - DS ) ) ) / Max( Max( RCSe,RMSe ),MUC ) ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MUM ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.6040145985401459, "obj2": 0.3045329947087279}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * PN ) ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + Min( ( Min( BR ,CRS ) / FirstVNF_CPU_Server ) ,Min( Const ,( ACS * ARS ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( DS * MUC ) / ( RMSe - DS ) ) ,Max( ( ( ( ( Max( CS,RRSe ) - ( RRSe * CS ) ) * MUC ) / ( ( RCSe - MUR ) - ( MLU - DS ) ) ) / MLU ),Max( ( ( Max( CS,RRSe ) - ( RRSe + CS ) ) * MUC ),MLU ) ) ),( ( MUM * RRSe ) + MUR ) )", "obj1": 0.5054744525547445, "obj2": 0.43939650710022915}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) * Min( CRS ,( CRS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( MUM * ( DS + DS ) ) - MUR )", "obj1": 0.4324817518248175, "obj2": 0.5554526654945132}, {"determining": "( PN - ( ( ( ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( ( FirstVNF_CPU - MRS ) + CRS ) ,FirstVNF_Mem_Server ) ) ) * ( ( ACS * ( Min( CRS ,( FirstVNF_CPU_Server * MRS ) ) + MDR ) ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( ( RCSe - Max( RCSe,( ( MUC * RCSe ) + CS ) ) ) - DS ) / ( MLU - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5742157079387905}, {"determining": "( ( PN - ( ( ( ( ( CRS - ( BR * FirstVNF_Mem_Server ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - Min( CRS ,( ( AMS / AMS ) * MRS ) ) ) ) + BR ) ) - ( BR - AMS ) )", "choosing": "Min( ( MUC / RCSe ) ,( MLU + ( RMSe * Max( Max( ( DS * ( MUC - Min( DS ,MUC ) ) ),MUM ),Max( MLU,MUM ) ) ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17361813887685842}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * FirstVNF_RAM_Server ) ) + MDR ) * FirstVNF_CPU ) - ( Max( Min( CRS ,( MDR * MRS ) ),Max( MDR,FirstVNF_RAM_Server ) ) - Min( CRS ,( Const * MDR ) ) ) ) + BR ) ) - ( AMS - BR ) )", "choosing": "( Max( MUR,CS ) - ( Min( ( RRSe + MUM ) ,Min( RCSe ,( ( CS + MUM ) * ( MLU * Max( MUR,Max( MUR,DS ) ) ) ) ) ) / ( ( MUR / ( ( DS - ( DS / DS ) ) + CS ) ) - MUC ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38995003243646337}, {"determining": "( ( PN - ( ( ( ( Min( CRS ,( BR * MRS ) ) + MDR ) * FirstVNF_CPU ) - ( FirstVNF_Mem_Server - CRS ) ) + BR ) ) - ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - DDR ) + ( ARS + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * RRS ) + ( ( MRS / FirstVNF_CPU_Server ) * Min( Const ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,Max( MLU,( RMSe * Max( Max( ( DS * ( ( RCSe - MUR ) - Min( RMSe ,CS ) ) ),MUM ),( Max( MLU,MUM ) + ( CS * MUR ) ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5192825432226909}, {"determining": "( PN - ( ( ( ( Min( CRS ,( Min( Const ,CRS ) * PN ) ) + MDR ) * ( ( FirstVNF_Mem_Server - CRS ) * Min( ( CRS + ( FirstVNF_CPU - MRS ) ) ,FirstVNF_Mem_Server ) ) ) * ARS ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,CS ) - ( ( Max( CS,DS ) * MUM ) + MLU ) )", "obj1": 0.6843065693430657, "obj2": 0.20247641602544922}]}