{"1": [{"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / DS ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( MLU,RMSe ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) - MDR ) + ARS ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / Min( ( RCSe / MUM ) ,( RMSe - MLU ) ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( Max( FirstVNF_Mem,Min( PN ,MDR ) ) / DDR ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( RCSe * MUR ) - Min( MUM ,RRSe ) ),Max( DS,RMSe ) ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) * ( ACS / Const ) )", "choosing": "( ( RRSe - MUR ) * Min( DS ,MUC ) )", "obj1": 0.3490566037735849, "obj2": 0.5791699780754357}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( MUM * MUR ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) )", "choosing": "( ( CS / CS ) / Min( DS ,CS ) )", "obj1": 0.5188679245283019, "obj2": 0.4354823064269744}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( FirstVNF_Mem * Max( FirstVNF_Mem_Server,ARS ) ) ,AMS ) )", "choosing": "( ( ( MUM / ( CS - ( MLU + RRSe ) ) ) + MLU ) * ( MUM * ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Min( ( ( Min( Min( Max( Const,ARS ) ,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_CPU_Server ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + Const ) ) ) ) ,FirstVNF_Mem_Server ) ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( ( MLU - MUR ) * CS ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUC - MUM ) ,( DS / DS ) ) + Min( ( MUC - MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.3283018867924528, "obj2": 0.5872849471027951}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( Max( FirstVNF_Mem_Server,PN ) * ( Const - ( ( Min( CRS ,MDR ) / ( BR * CRS ) ) * ACS ) ) ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( Min( Min( DS ,MUM ) ,( Min( RRSe ,Min( DS ,Min( MUC ,MLU ) ) ) - ( MUC / Max( ( RMSe / RRSe ),MUC ) ) ) ) / DS ) ) - ( ( RCSe - RMSe ) - RCSe ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) + ( ( CRS / FirstVNF_CPU ) + ( FirstVNF_RAM + MRS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC + MUR ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 0.360377358490566, "obj2": 0.56655115132628}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Max( ( BR / FirstVNF_Mem_Server ),( FirstVNF_Mem / PN ) ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + ( ( RRSe / MUM ) * ( DS + DS ) ) )", "obj1": 0.4849056603773585, "obj2": 0.4492607129413254}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Min( CS ,MUC ) ) + Min( Max( DS,CS ) ,Min( RRSe ,DS ) ) )", "obj1": 0.5056603773584906, "obj2": 0.43959161645377237}, {"determining": "( Min( ( PN / BR ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( ( MUR + MUR ) + ( Min( RRSe ,Max( RMSe,( Min( ( RMSe / MUC ) ,( CS / MUR ) ) / RRSe ) ) ) - MLU ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( ( FirstVNF_CPU * ( MRS / Const ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe + RCSe ) + ( MLU - RMSe ) ),( ( ( DS / DS ) + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUR + MLU ) - ( CS + CS ) ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.4339622641509434, "obj2": 0.48726661111337416}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( ( ( PN * FirstVNF_CPU ) * ARS ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( DDR ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( ( ( ( MUC - RCSe ) - ( RMSe * MUR ) ) * RMSe ) + MUR ) * ( MLU - RCSe ) ) )", "obj1": 0.25660377358490566, "obj2": 0.6654496425143182}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) )", "obj1": 0.24528301886792453, "obj2": 0.6807093699066564}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * CRS ),( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) )", "obj1": 0.5679245283018868, "obj2": 0.36675247715321546}, {"determining": "Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) ) )", "choosing": "Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.6015544526339333}, {"determining": "( ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) * ( ( FirstVNF_CPU + ACS ) * FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / MUR ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,( PN + DDR ) ) ) )", "choosing": "( ( ( RRSe + Max( ( RMSe + Max( Min( MUC ,( CS + RCSe ) ),( MLU - Min( DS ,RCSe ) ) ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,RRS ) ) ) )", "choosing": "Min( Min( ( ( MUC * MLU ) / ( MUC / MUR ) ) ,( ( MUR - RCSe ) * ( DS * RMSe ) ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.576464599446187}, {"determining": "Min( ( BR * MRS ) ,Min( ( MDR + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) ,( Min( ( MUR / MUC ) ,( MLU + RRSe ) ) - Min( ( MUM - MUM ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.5695113418073122}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( MDR * BR ) * Min( Max( FirstVNF_RAM_Server,( DDR - FirstVNF_RAM ) ) ,MRS ) )", "choosing": "Min( ( MUC + Max( ( Min( MUC ,Min( MUC ,( RCSe / ( MLU - RCSe ) ) ) ) + CS ),( DS * DS ) ) ) ,Min( MUC ,MUR ) )", "obj1": 0.4509433962264151, "obj2": 0.47928585981894867}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( ( ( RCSe * MLU ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( Max( BR,( Const * MDR ) ) - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( MUM * MLU ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( ( Max( Const,PN ) + ( FirstVNF_RAM_Server - Const ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( Max( ( MUR * RCSe ),( MUM - RCSe ) ) * ( ( CS * RRSe ) - ( MUM / RRSe ) ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.6313499839911025}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( ( Max( ARS,PN ) + Const ) + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RCSe + MUM ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}], "2": [{"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / DS ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( MLU,RMSe ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) - MDR ) + ARS ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / Min( ( RCSe / MUM ) ,( RMSe - MLU ) ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( Max( FirstVNF_Mem,Min( PN ,MDR ) ) / DDR ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( RCSe * MUR ) - Min( MUM ,RRSe ) ),Max( DS,RMSe ) ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( MUM * MUR ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( FirstVNF_Mem * Max( FirstVNF_Mem_Server,ARS ) ) ,AMS ) )", "choosing": "( ( ( MUM / ( CS - ( MLU + RRSe ) ) ) + MLU ) * ( MUM * ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Min( ( ( Min( Min( Max( Const,ARS ) ,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_CPU_Server ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + Const ) ) ) ) ,FirstVNF_Mem_Server ) ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( ( MLU - MUR ) * CS ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( Max( FirstVNF_Mem_Server,PN ) * ( Const - ( ( Min( CRS ,MDR ) / ( BR * CRS ) ) * ACS ) ) ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( Min( Min( DS ,MUM ) ,( Min( RRSe ,Min( DS ,Min( MUC ,MLU ) ) ) - ( MUC / Max( ( RMSe / RRSe ),MUC ) ) ) ) / DS ) ) - ( ( RCSe - RMSe ) - RCSe ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( Min( ( PN / BR ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( ( MUR + MUR ) + ( Min( RRSe ,Max( RMSe,( Min( ( RMSe / MUC ) ,( CS / MUR ) ) / RRSe ) ) ) - MLU ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( ( FirstVNF_CPU * ( MRS / Const ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe + RCSe ) + ( MLU - RMSe ) ),( ( ( DS / DS ) + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( ( ( PN * FirstVNF_CPU ) * ARS ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( DDR ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( ( ( ( MUC - RCSe ) - ( RMSe * MUR ) ) * RMSe ) + MUR ) * ( MLU - RCSe ) ) )", "obj1": 0.25660377358490566, "obj2": 0.6654496425143182}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) * ( ( FirstVNF_CPU + ACS ) * FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / MUR ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,( PN + DDR ) ) ) )", "choosing": "( ( ( RRSe + Max( ( RMSe + Max( Min( MUC ,( CS + RCSe ) ),( MLU - Min( DS ,RCSe ) ) ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( ( ( RCSe * MLU ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( Max( BR,( Const * MDR ) ) - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( MUM * MLU ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( ( Max( ARS,PN ) + Const ) + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RCSe + MUM ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( Min( Const ,ACS ) - ( Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) + AMS ) )", "choosing": "( ( Max( RRSe,Min( ( Max( MUC,MLU ) * ( RRSe * MUR ) ) ,( MUC - ( MUM + Min( MUR ,RRSe ) ) ) ) ) - MLU ) - ( ( RCSe - RMSe ) + ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * ( Min( ( BR + ARS ) ,AMS ) - Min( ( ARS * BR ) ,FirstVNF_Mem ) ) ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( ( ( CS * RMSe ) * Min( RMSe ,MUR ) ) + Max( ( DS * RMSe ),( MUR / RCSe ) ) ) ) ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( RRS ,Const ) + FirstVNF_RAM ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( MLU - RMSe ) ) - ( RCSe * MUR ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) )", "obj1": 0.3641509433962264, "obj2": 0.511033262712726}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ARS ) ,Max( Max( ( Min( ( MRS / RRS ) ,( MDR + AMS ) ) - FirstVNF_Mem_Server ),Min( MRS ,FirstVNF_Mem ) ),ACS ) )", "choosing": "( CS - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) / Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - MUR ) - ( RCSe * CS ) )", "obj1": 0.3283018867924528, "obj2": 0.5539613507526188}, {"determining": "Max( Max( RRS,Const ),Max( ACS,( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) ) )", "choosing": "Max( ( RCSe - CS ),( MUM * ( MUC / DS ) ) )", "obj1": 0.14528301886792452, "obj2": 0.7523430863271464}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - AMS ) ) ) )", "choosing": "( ( ( RCSe - ( RCSe + DS ) ) - ( DS + Max( RCSe,RMSe ) ) ) * ( MUM * RMSe ) )", "obj1": 0.27169811320754716, "obj2": 0.6375035695017863}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.16969925414123993}, {"determining": "( Min( BR ,( MDR / MRS ) ) * ( PN / AMS ) )", "choosing": "( ( ( ( DS / MUC ) - RMSe ) * Max( MUR,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.5849056603773585, "obj2": 0.3243174344337465}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( CS / CS ) / Min( DS ,CS ) ) + DS ) )", "obj1": 0.7849056603773585, "obj2": 0.152804996168316}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / Min( DS ,CS ) )", "obj1": 0.19622641509433963, "obj2": 0.678454997804438}, {"determining": "( ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) - Min( Min( ACS ,DDR ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * ( ( ( MLU * MUM ) + Min( ( MUM - MUR ) ,RMSe ) ) + MUR ) ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) )", "obj1": 0.8471698113207548, "obj2": 0.12453326448797493}, {"determining": "Min( CRS ,( ( CRS / ( MDR * FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) - Const ) ,FirstVNF_RAM_Server ) + ( Const * ( MRS - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * RMSe ) + Min( RMSe ,RCSe ) ) - ( RCSe + DS ) ) - Max( ( ( CS / RRSe ) / RMSe ),Max( RMSe,MLU ) ) )", "obj1": 0.7188679245283018, "obj2": 0.22127176918948233}, {"determining": "Max( ( PN / FirstVNF_RAM ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) + Max( RMSe,MUC ) )", "obj1": 0.42452830188679247, "obj2": 0.46647647168152095}, {"determining": "( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( ( AMS - ( FirstVNF_Mem_Server / PN ) ) ,AMS ) * ( PN + RRS ) ) )", "choosing": "( Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) - ( Min( RMSe ,CS ) - ( Max( ( MUM + RMSe ),Min( ( MUR - RCSe ) ,MUC ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) * ( AMS - ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "Max( ( MUM + RMSe ),Min( ( ( RCSe + CS ) - RCSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_CPU ) / Min( AMS ,AMS ) ) + ( ( CRS / FirstVNF_CPU ) + ( FirstVNF_RAM + MRS ) ) )", "choosing": "( ( RMSe - RRSe ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 0.5132075471698113, "obj2": 0.4115666875193623}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( PN * RRS ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( RMSe + ( Max( MUC,Min( Max( ( MUM * MUM ),RCSe ) ,MLU ) ) - Min( MUC ,MUR ) ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.6249659767852757}, {"determining": "( ( RRS * FirstVNF_Mem ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( CS ,CS ) / ( RMSe / CS ) ) - ( CS * ( ( DS * MUR ) - MUM ) ) ) * ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) - Min( ( Min( FirstVNF_RAM ,PN ) / Max( AMS,ACS ) ) ,( ( FirstVNF_CPU - ACS ) + ( FirstVNF_CPU_Server / ACS ) ) ) )", "choosing": "Max( ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) + ( ( RRSe * CS ) * Max( MUR,RCSe ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * ( ( CS - MLU ) + ( MLU / MUR ) ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( ( CS * RCSe ) * CS ) ) ,( ( CS - MLU ) + ( MLU / ( RRSe + Max( ( Max( DS,MUC ) * MLU ),DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS - AMS ),Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RCSe ),( ( DS + MLU ) * MUR ) )", "obj1": 0.5452830188679245, "obj2": 0.37174324082129656}, {"determining": "( ( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server - AMS ) ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,( Max( ( MUC + DS ),( RMSe / RMSe ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) ) ) )", "obj1": 0.1792452830188679, "obj2": 0.7229945295327436}, {"determining": "( ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( Max( CS,MLU ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( CRS / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.13584905660377358, "obj2": 0.7647967165553647}, {"determining": "( MRS - ( Const / Const ) )", "choosing": "( ( CS / CS ) / Min( DS ,Min( ( MUC + Max( DS,( DS * DS ) ) ) ,Min( MUC ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( RCSe * CS ) )", "obj1": 0.42830188679245285, "obj2": 0.4610710429324029}, {"determining": "( ( CRS - Const ) - ( Const / RRS ) )", "choosing": "( Min( Min( Max( MUC,RMSe ) ,Max( RMSe,MUR ) ) ,Max( ( RMSe + RRSe ),Min( CS ,RMSe ) ) ) / Min( Min( ( RCSe * ( ( ( RRSe / RCSe ) / RCSe ) + RMSe ) ) ,Min( MUM ,MUR ) ) ,( ( RMSe / RMSe ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / Max( MUR,( MUM / ( ( RRSe - MUM ) * MUR ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9584905660377359, "obj2": 0.009132548429615143}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.769811320754717, "obj2": 0.16316010640929227}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ( PN / FirstVNF_RAM ) - Const ) )", "choosing": "( Min( MUC ,CS ) * MUM )", "obj1": 0.9962264150943396, "obj2": 0.002370721200423035}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * ( ARS - CRS ) ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( MUR / CS ) - ( RCSe * CS ) ) * CS ) )", "obj1": 0.5622641509433962, "obj2": 0.3295037827700553}, {"determining": "( ACS / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) ) )", "obj1": 0.39811320754716983, "obj2": 0.48192710289689206}, {"determining": "( ( ARS + Const ) / Max( ( Max( DDR,( ( PN + PN ) - CRS ) ) - ( FirstVNF_CPU_Server * ARS ) ),BR ) )", "choosing": "Min( ( MUR * ( ( RCSe * RCSe ) / MUC ) ) ,Max( RCSe,MUR ) )", "obj1": 0.5037735849056604, "obj2": 0.4214488501846674}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) - Const ) )", "choosing": "( Min( MUC ,CS ) * ( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ( FirstVNF_Mem / Min( ( FirstVNF_Mem_Server - ACS ) ,( MRS - Const ) ) ) - Const ) )", "choosing": "( Min( MUC ,CS ) * ( DS / ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,AMS ) * ( DDR / PN ) ) * ( BR * ( MDR + Max( FirstVNF_Mem,( ( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( CRS + CRS ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) / DS ) ) - Max( ( Max( Min( ( Max( RRSe,( MUM + RRSe ) ) * DS ) ,RRSe ),MUM ) + MUM ),( MLU - DS ) ) )", "obj1": 0.6792452830188679, "obj2": 0.23843836285871414}, {"determining": "Max( Min( Min( ARS ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / ( MRS / FirstVNF_Mem_Server ) ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( DS / DS ) ) / ( ( RRSe - RCSe ) * ( MLU - RCSe ) ) )", "obj1": 0.25849056603773585, "obj2": 0.6499305879495847}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / ( PN / AMS ) ) )", "choosing": "( ( ( MUR + RRSe ) + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + Min( AMS ,MDR ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( Max( CS,( Min( ( ( RCSe - RRSe ) + ( MUC + ( RMSe - CS ) ) ) ,RMSe ) * Max( MUC,MUM ) ) ) + ( ( MUM + MLU ) - ( ( MLU + DS ) * MUM ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.9169811320754717, "obj2": 0.10714923862839619}, {"determining": "( Min( BR ,ARS ) - Max( CRS,( PN / MRS ) ) )", "choosing": "( Max( DS,MLU ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - ( RRSe + DS ) )", "obj1": 0.2943396226415094, "obj2": 0.5857247506132027}, {"determining": "( ( BR - ( FirstVNF_CPU / Const ) ) * ( RRS + MDR ) )", "choosing": "Max( ( MUM + RMSe ),Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM * ( RRS + MDR ) )", "choosing": "Max( ( MUM + RMSe ),( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) + ( ( RCSe - RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.15283018867924528, "obj2": 0.7507347491824826}, {"determining": "( ( ( Min( PN ,AMS ) * ( DDR / PN ) ) * ( BR * MDR ) ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( Max( ( Max( DS,MUM ) + MUM ),DS ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / Min( ( FirstVNF_Mem_Server - ACS ) ,( MRS - Const ) ) ) - Const ) + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( CS ,MLU ) + DS ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * ( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) / ( ( Const / Const ) - Const ) )", "choosing": "( ( MUM * MUR ) - Min( ( RMSe - ( ( RMSe - ( MUR + RRSe ) ) / CS ) ) ,( RMSe - RRSe ) ) )", "obj1": 0.47547169811320755, "obj2": 0.4393952602088993}], "3": [{"determining": "( ( ( Min( MRS ,MRS ) - ( ( CRS / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Max( ( MDR * ( FirstVNF_RAM + FirstVNF_RAM_Server ) ),( BR * FirstVNF_RAM_Server ) ) ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( Min( Min( Max( RCSe,DS ) ,CS ) ,RRSe ) * MUR ) - Min( MUM ,RRSe ) ),MLU ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.09433962264150944, "obj2": 0.7909222744975262}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / Max( MUR,( MUM / ( ( RRSe - MUM ) * MUR ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9584905660377359, "obj2": 0.009132548429615143}, {"determining": "( ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) - Min( Min( ACS ,DDR ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * ( ( ( MLU * MUM ) + Min( ( MUM - MUR ) ,RMSe ) ) + MUR ) ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) )", "obj1": 0.8471698113207548, "obj2": 0.12453326448797493}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( CS,( Min( ( ( RCSe - RRSe ) + ( MUC + ( RMSe - CS ) ) ) ,RMSe ) * Max( MUC,MUM ) ) ) )", "obj1": 0.9207547169811321, "obj2": 0.07722771983596537}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / Min( DS ,CS ) )", "obj1": 0.19622641509433963, "obj2": 0.678454997804438}, {"determining": "( Min( ARS ,RRS ) - ( ( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + Const ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,( ( Min( CS ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) ) )", "obj1": 0.6641509433962264, "obj2": 0.2965088057955768}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - ( RRSe + DS ) )", "obj1": 0.2943396226415094, "obj2": 0.5857247506132027}, {"determining": "( FirstVNF_RAM - ( MRS + MRS ) )", "choosing": "( Min( ( MUM * CS ) ,( MUC * DS ) ) + ( MUR * RRSe ) )", "obj1": 0.5415094339622641, "obj2": 0.36581033086167847}, {"determining": "( Min( BR ,ARS ) - ( MRS * ( ACS - BR ) ) )", "choosing": "( ( RMSe + RMSe ) / ( DS * MUC ) )", "obj1": 0.23773584905660378, "obj2": 0.6511302182901619}, {"determining": "( ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) * ( ( FirstVNF_CPU + ACS ) * FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / MUR ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * ( ARS - CRS ) ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( MUR / CS ) - ( RCSe * CS ) ) * CS ) )", "obj1": 0.5622641509433962, "obj2": 0.3295037827700553}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) - MDR ) + ARS ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / Min( ( RCSe / MUM ) ,( RMSe - MLU ) ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,CS ) + Min( DS ,MUR ) ) + ( MLU - CS ) )", "obj1": 0.5150943396226415, "obj2": 0.3780135513337445}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / Min( RCSe ,CS ) )", "obj1": 0.3283018867924528, "obj2": 0.5523613216020142}, {"determining": "( ( Const * ( BR / DDR ) ) / ( ARS + MDR ) )", "choosing": "( DS - Min( Max( RRSe,MUC ) ,Min( ( RRSe / ( RRSe / DS ) ) ,MUM ) ) )", "obj1": 0.39245283018867927, "obj2": 0.47586217735313735}, {"determining": "( Max( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ),Const ) / Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / MUR ) - ( RCSe * CS ) )", "obj1": 0.3433962264150943, "obj2": 0.5358494587990069}, {"determining": "( Min( ( Min( RRS ,Const ) + FirstVNF_RAM ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( MLU - RMSe ) ) - ( RCSe * MUR ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) )", "obj1": 0.3641509433962264, "obj2": 0.511033262712726}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "Max( ( PN / FirstVNF_RAM ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) + Max( RMSe,MUC ) )", "obj1": 0.42452830188679247, "obj2": 0.46647647168152095}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Min( DDR ,Const ) )", "choosing": "Max( ( RRSe + DS ),Min( DS ,DS ) )", "obj1": 0.6679245283018868, "obj2": 0.26696739468514624}, {"determining": "( ( ( BR - FirstVNF_CPU ) / Min( AMS ,AMS ) ) + ( ( CRS / FirstVNF_CPU ) + ( FirstVNF_RAM + MRS ) ) )", "choosing": "( ( RMSe - RRSe ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 0.5132075471698113, "obj2": 0.4115666875193623}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( Const / ( ARS - CRS ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( ( MUR / CS ) - ( RCSe * CS ) ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 0.44716981132075473, "obj2": 0.44527575360539784}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ( Const - DDR ) ) ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( Min( ( CS - MUM ) ,MLU ) + ( ( DS / RMSe ) + MUM ) ) * ( DS / MUM ) )", "obj1": 0.7075471698113207, "obj2": 0.22892556173656436}, {"determining": "( ( Min( PN ,AMS ) * ( DDR / PN ) ) * ( BR * ( MDR + Max( FirstVNF_Mem,( ( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( CRS + CRS ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) / DS ) ) - Max( ( Max( Min( ( Max( RRSe,( MUM + RRSe ) ) * DS ) ,RRSe ),MUM ) + MUM ),( MLU - DS ) ) )", "obj1": 0.6792452830188679, "obj2": 0.23843836285871414}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) - MDR ) + ARS ) ,Max( CRS,( PN / MRS ) ) )", "choosing": "( ( DS * MUM ) / Min( ( RCSe / ( Max( DS,MLU ) / Min( RRSe ,MUM ) ) ) ,( RMSe - MLU ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6340039093603279}, {"determining": "Max( ( ( FirstVNF_Mem / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) ) / ( CS / RMSe ) ) )", "obj1": 0.1660377358490566, "obj2": 0.7354302117693553}, {"determining": "( ( Const * ( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) / ( ( Const / Const ) - Const ) )", "choosing": "( ( MUM * MUR ) - Min( ( RMSe - ( ( RMSe - ( MUR + RRSe ) ) / CS ) ) ,( RMSe - RRSe ) ) )", "obj1": 0.47547169811320755, "obj2": 0.4393952602088993}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "Max( Min( Min( ARS ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / ( MRS / FirstVNF_Mem_Server ) ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( DS / DS ) ) / ( ( RRSe - RCSe ) * ( MLU - RCSe ) ) )", "obj1": 0.25849056603773585, "obj2": 0.6499305879495847}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( MUM * MUR ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "( Min( BR ,( MDR / MRS ) ) * ( PN / AMS ) )", "choosing": "( ( ( ( DS / MUC ) - RMSe ) * Max( MUR,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.5849056603773585, "obj2": 0.3243174344337465}, {"determining": "( ( ARS + Const ) / Max( ( Max( DDR,( ( PN + PN ) - CRS ) ) - ( FirstVNF_CPU_Server * ARS ) ),BR ) )", "choosing": "Min( ( MUR * ( ( RCSe * RCSe ) / MUC ) ) ,Max( RCSe,MUR ) )", "obj1": 0.5037735849056604, "obj2": 0.4214488501846674}, {"determining": "( ( Const * ( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) / Max( RRS,FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) - Min( ( RMSe - MLU ) ,( RMSe - ( CS * CS ) ) ) )", "obj1": 0.49433962264150944, "obj2": 0.4382765478347565}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( ( ( MUM * MUR ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) ) + ( MLU + RRSe ) ) )", "obj1": 0.42641509433962266, "obj2": 0.4492600829896045}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) - Const ) ,FirstVNF_RAM_Server ) + ( Const * ( MRS - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * RMSe ) + Min( RMSe ,RCSe ) ) - ( RCSe + DS ) ) - Max( ( ( CS / RRSe ) / RMSe ),Max( RMSe,MLU ) ) )", "obj1": 0.7188679245283018, "obj2": 0.22127176918948233}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( PN * RRS ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( RMSe + ( Max( MUC,Min( Max( ( MUM * MUM ),RCSe ) ,MLU ) ) - Min( MUC ,MUR ) ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.6249659767852757}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( ( ( RCSe * MLU ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( Max( ACS,Min( ( ( Min( Min( Max( Const,ARS ) ,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_CPU_Server ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + Const ) ) ) ) ,FirstVNF_Mem_Server ) ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( ( MLU - MUR ) * CS ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( ( ( DDR - PN ) + ( ACS + FirstVNF_RAM ) ) - ( ( Const * ( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) / Max( RRS,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) + ( ( MUM * MUR ) - Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) ) )", "obj1": 0.15283018867924528, "obj2": 0.7486371608947964}, {"determining": "Min( FirstVNF_CPU_Server ,( ARS + MDR ) )", "choosing": "( Min( Max( ( RCSe / DS ),RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7415094339622641, "obj2": 0.19366031249923404}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1725866517301806}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( MLU,RMSe ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,( PN + DDR ) ) ) )", "choosing": "( ( ( RRSe + Max( ( RMSe + Max( Min( MUC ,( CS + RCSe ) ),( MLU - Min( DS ,RCSe ) ) ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "Min( Max( ( RRS + FirstVNF_Mem_Server ),Const ) ,( Min( ( PN / BR ) ,( PN + Const ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( Min( ( ( MUC * MUM ) - Max( DS,Min( ( ( Min( RRSe ,RCSe ) / RCSe ) / MUM ) ,DS ) ) ) ,( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) ) ) * Max( ( CS / MUR ),( Max( DS,CS ) * ( CS / RMSe ) ) ) )", "obj1": 0.9113207547169812, "obj2": 0.104824425661416}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) / DDR ) ) )", "choosing": "( ( MLU - CS ) - MUR )", "obj1": 0.330188679245283, "obj2": 0.5468454874847758}, {"determining": "Max( ( PN / FirstVNF_RAM ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( ( RCSe / DS ) - ( CS * CS ) ) + Max( RMSe,MUC ) )", "obj1": 0.11132075471698114, "obj2": 0.7772428617108973}, {"determining": "( ( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server - AMS ) ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,( Max( ( MUC + DS ),( RMSe / RMSe ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) ) ) )", "obj1": 0.1792452830188679, "obj2": 0.7229945295327436}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( ( Max( ARS,PN ) + Const ) + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RCSe + MUM ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Max( Max( RRS,Const ),Max( ACS,( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) ) )", "choosing": "Max( ( RCSe - CS ),( MUM * ( MUC / DS ) ) )", "obj1": 0.14528301886792452, "obj2": 0.7523430863271464}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( PN / Min( MRS ,PN ) ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MLU - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) ) )", "obj1": 0.12452830188679245, "obj2": 0.77110816809734}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.769811320754717, "obj2": 0.16316010640929227}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.16969925414123993}, {"determining": "( ( Max( FirstVNF_Mem,Min( PN ,MDR ) ) / DDR ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( RCSe * MUR ) - Min( MUM ,RRSe ) ),Max( DS,RMSe ) ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( Max( FirstVNF_Mem_Server,PN ) * ( Const - ( ( Min( CRS ,MDR ) / ( BR * CRS ) ) * ACS ) ) ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( Min( Min( DS ,MUM ) ,( Min( RRSe ,Min( DS ,Min( MUC ,MLU ) ) ) - ( MUC / Max( ( RMSe / RRSe ),MUC ) ) ) ) / DS ) ) - ( ( RCSe - RMSe ) - RCSe ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( ( FirstVNF_CPU * ( MRS / Const ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe + RCSe ) + ( MLU - RMSe ) ),( ( ( DS / DS ) + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( CS / CS ) / Min( DS ,CS ) ) + DS ) )", "obj1": 0.7849056603773585, "obj2": 0.152804996168316}, {"determining": "( ( MDR + AMS ) * Max( MDR,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( RMSe / MUC ) ,( MUM / DS ) ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.12641509433962264, "obj2": 0.7670080861465784}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( Min( ( MUR * MLU ) ,Max( RCSe,MUR ) ),DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.15471218142401533}, {"determining": "Max( ( ( CRS / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.13584905660377358, "obj2": 0.7647967165553647}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ( PN / FirstVNF_RAM ) - Const ) )", "choosing": "( Min( MUC ,CS ) * MUM )", "obj1": 0.9962264150943396, "obj2": 0.002370721200423035}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( Max( MRS,FirstVNF_Mem ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( RCSe + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9886792452830189, "obj2": 0.002676124646248982}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( PN - FirstVNF_Mem_Server ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( ( ( DDR - PN ) + ( ACS + FirstVNF_RAM ) ) - ( BR * ( ACS / FirstVNF_CPU_Server ) ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( Max( MLU,( ( Min( ( RCSe / RCSe ) ,( MUM / RRSe ) ) + DS ) - CS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( Min( PN ,CRS ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( ( Max( ( DS / ( MLU / MUM ) ),Max( Max( RRSe,MLU ),( CS / MUC ) ) ) - CS ) - MUR ) ,Min( DS ,MUR ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Max( ( Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) * ( ( ARS + ACS ) * ( Max( FirstVNF_Mem_Server,Max( ACS,RRS ) ) * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,( ( ( Min( RRSe ,MUC ) / MUC ) - ( CS * CS ) ) + Max( RMSe,MUC ) ) ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.13773584905660377, "obj2": 0.7641515037422014}, {"determining": "( MRS * ( ( PN / FirstVNF_RAM ) - Const ) )", "choosing": "( Min( MUC ,CS ) * MUM )", "obj1": 0.9981132075471698, "obj2": 0.0012213550826377982}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( FirstVNF_Mem * Max( FirstVNF_Mem_Server,ARS ) ) ,AMS ) )", "choosing": "( ( ( MUM / ( CS - ( MLU + RRSe ) ) ) + MLU ) * ( MUM * ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( ( ( PN * FirstVNF_CPU ) * ARS ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( Max( BR,( Const * MDR ) ) - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( MUM * MLU ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) + AMS ) )", "choosing": "( ( Max( RRSe,Min( ( Max( MUC,MLU ) * ( RRSe * MUR ) ) ,( MUC - ( MUM + Min( MUR ,RRSe ) ) ) ) ) - MLU ) - ( ( RCSe - RMSe ) + ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * ( Min( ( BR + ARS ) ,AMS ) - Min( ( ARS * BR ) ,FirstVNF_Mem ) ) ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( ( ( CS * RMSe ) * Min( RMSe ,MUR ) ) + Max( ( DS * RMSe ),( MUR / RCSe ) ) ) ) ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ARS ) ,Max( Max( ( Min( ( MRS / RRS ) ,( MDR + AMS ) ) - FirstVNF_Mem_Server ),Min( MRS ,FirstVNF_Mem ) ),ACS ) )", "choosing": "( CS - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( ( CRS / ( MDR * FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( ( AMS - ( FirstVNF_Mem_Server / PN ) ) ,AMS ) * ( PN + RRS ) ) )", "choosing": "( Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) - ( Min( RMSe ,CS ) - ( Max( ( MUM + RMSe ),Min( ( MUR - RCSe ) ,MUC ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) * ( AMS - ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "Max( ( MUM + RMSe ),Min( ( ( RCSe + CS ) - RCSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( CS ,CS ) / ( RMSe / CS ) ) - ( CS * ( ( DS * MUR ) - MUM ) ) ) * ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) - Min( ( Min( FirstVNF_RAM ,PN ) / Max( AMS,ACS ) ) ,( ( FirstVNF_CPU - ACS ) + ( FirstVNF_CPU_Server / ACS ) ) ) )", "choosing": "Max( ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) + ( ( RRSe * CS ) * Max( MUR,RCSe ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * ( ( CS - MLU ) + ( MLU / MUR ) ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( ( CS * RCSe ) * CS ) ) ,( ( CS - MLU ) + ( MLU / ( RRSe + Max( ( Max( DS,MUC ) * MLU ),DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( Max( CS,MLU ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Const / Const ) )", "choosing": "( ( CS / CS ) / Min( DS ,Min( ( MUC + Max( DS,( DS * DS ) ) ) ,Min( MUC ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Const ) - ( Const / RRS ) )", "choosing": "( Min( Min( Max( MUC,RMSe ) ,Max( RMSe,MUR ) ) ,Max( ( RMSe + RRSe ),Min( CS ,RMSe ) ) ) / Min( Min( ( RCSe * ( ( ( RRSe / RCSe ) / RCSe ) + RMSe ) ) ,Min( MUM ,MUR ) ) ,( ( RMSe / RMSe ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) - Const ) )", "choosing": "( Min( MUC ,CS ) * ( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ( FirstVNF_Mem / Min( ( FirstVNF_Mem_Server - ACS ) ,( MRS - Const ) ) ) - Const ) )", "choosing": "( Min( MUC ,CS ) * ( DS / ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / ( PN / AMS ) ) )", "choosing": "( ( ( MUR + RRSe ) + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( ( ( AMS - MDR ) - FirstVNF_CPU_Server ) + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU - CS ) - Max( DS,MLU ) ) ) * ( CS * ( ( ( RMSe - RMSe ) / MUM ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( CRS / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR * Min( MRS ,PN ) )", "choosing": "( ( Max( ( ( RCSe * MUR ) - CS ),MLU ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.08113207547169811, "obj2": 0.7948646481021986}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( CS,( Min( ( ( RCSe - RRSe ) + ( MUC + ( RMSe - CS ) ) ) ,RMSe ) * Max( MUC,MUM ) ) ) )", "obj1": 0.9207547169811321, "obj2": 0.07722771983596537}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( ( Min( Min( Min( MUC ,MUR ) ,RCSe ) ,( RRSe / RCSe ) ) * MUR ) * DS ) - Max( DS,MLU ) )", "obj1": 0.8320754716981132, "obj2": 0.11044798944345127}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) ) ) - ( Const / Const ) )", "choosing": "( ( CS / CS ) / Min( DS ,Min( ( MUC + Max( DS,( DS * DS ) ) ) ,( ( CS / CS ) / Min( DS ,CS ) ) ) ) )", "obj1": 0.22075471698113208, "obj2": 0.6487622507969676}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / Min( DS ,CS ) )", "obj1": 0.19622641509433963, "obj2": 0.678454997804438}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / Max( MUR,( MUM / ( ( RRSe - MUM ) * MUR ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9584905660377359, "obj2": 0.009132548429615143}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) - MDR ) + ARS ) ,Max( CRS,( PN / MRS ) ) )", "choosing": "( ( DS * MUM ) / Min( ( RCSe / ( Max( DS,MLU ) / Min( RRSe ,MUM ) ) ) ,( RMSe - MLU ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6340039093603279}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) )", "choosing": "( ( Min( DS ,CS ) + Min( DS ,MUR ) ) + ( ( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( ( ( CS * MUR ) * RMSe ) * ( RMSe / MUM ) ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) ) - CS ) )", "obj1": 0.6433962264150943, "obj2": 0.2888698417723954}, {"determining": "( ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) * ( ( FirstVNF_CPU + ACS ) * FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / MUR ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * ( ARS - CRS ) ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( MUR / CS ) - ( RCSe * CS ) ) * CS ) )", "obj1": 0.5622641509433962, "obj2": 0.3295037827700553}, {"determining": "( ( ( Max( ( RRS * ( Min( ( BR + ARS ) ,AMS ) - Min( ( ARS * BR ) ,FirstVNF_Mem ) ) ),( RRS / PN ) ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / Min( Min( ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) ,MUR ) ,Max( MUR,DS ) ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.2792452830188679, "obj2": 0.6018516416958626}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) - MDR ) + ARS ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / Min( ( RCSe / MUM ) ,( RMSe - MLU ) ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,CS ) + Min( DS ,MUR ) ) + ( MLU - CS ) )", "obj1": 0.5150943396226415, "obj2": 0.3780135513337445}, {"determining": "( Min( ( BR + FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( ( ( CS / CS ) / Min( DS ,CS ) ) * MUR ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) )", "obj1": 0.6509433962264151, "obj2": 0.26153217037263177}, {"determining": "Max( Max( CRS,( PN / MRS ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUM ) + ( MLU - CS ) )", "obj1": 0.4811320754716981, "obj2": 0.4107583139127579}, {"determining": "( ( Const * ( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) / ( ( Const / Const ) - Const ) )", "choosing": "( ( MUM * MUR ) - Min( ( RMSe - ( ( RMSe - ( MUR + RRSe ) ) / CS ) ) ,( RMSe - RRSe ) ) )", "obj1": 0.47547169811320755, "obj2": 0.4393952602088993}, {"determining": "( FirstVNF_RAM - ( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "( Min( ( MUM * CS ) ,Min( ( MUR * MLU ) ,Max( RCSe,MUR ) ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) )", "obj1": 0.5132075471698113, "obj2": 0.40697735315551575}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - ( RRSe + DS ) )", "obj1": 0.2943396226415094, "obj2": 0.5857247506132027}, {"determining": "Max( Max( PN,( RRS / Max( Max( ( Max( ARS,BR ) - FirstVNF_RAM ),FirstVNF_RAM ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,PN ) ) )", "choosing": "( ( Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) ) - MUC ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.13962264150943396, "obj2": 0.7339342339144498}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( PN * RRS ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( RMSe + ( Max( MUC,Min( Max( ( MUM * MUM ),RCSe ) ,MLU ) ) - Min( MUC ,MUR ) ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.36438479511843896}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( Const / ( ARS - CRS ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( ( MUR / CS ) - ( RCSe * CS ) ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 0.44716981132075473, "obj2": 0.44527575360539784}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / ( ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) - Min( Min( ACS ,DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe + Max( ( RMSe + Max( RRSe,( MLU - Min( DS ,RCSe ) ) ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.2253894533695544}, {"determining": "( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ) + ( ( MLU - MLU ) + ( MLU * ( ( MLU - CS ) - Max( DS,MLU ) ) ) ) )", "obj1": 0.3113207547169811, "obj2": 0.5743720760494497}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "Max( ( ( FirstVNF_Mem / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * ( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * ( ARS - CRS ) ) ) ) ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( Max( RRSe,MUC ) ,( ( ( MUR / CS ) - ( RCSe * CS ) ) * CS ) ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) ) / ( CS / RMSe ) ) )", "obj1": 0.15660377358490565, "obj2": 0.7260127489143262}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_RAM + MDR ) )", "choosing": "( ( RCSe - MLU ) - ( ( RRSe - RMSe ) + ( MUR / RMSe ) ) )", "obj1": 0.7075471698113207, "obj2": 0.21138372533573122}, {"determining": "( Min( BR ,( MDR / MRS ) ) * ( PN / AMS ) )", "choosing": "( ( ( ( DS / MUC ) - RMSe ) * Max( MUR,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.5849056603773585, "obj2": 0.3243174344337465}, {"determining": "( FirstVNF_RAM - ( MRS + MRS ) )", "choosing": "( Min( ( MUM * CS ) ,( MUC * DS ) ) + ( MUR * RRSe ) )", "obj1": 0.5415094339622641, "obj2": 0.36581033086167847}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM_Server ,Min( ( BR + FirstVNF_RAM ) ,AMS ) ) )", "choosing": "( ( CS / CS ) / Min( ( ( RMSe / CS ) + ( MLU * DS ) ) ,CS ) )", "obj1": 0.35660377358490564, "obj2": 0.5020505048572309}, {"determining": "Max( ( PN / FirstVNF_RAM ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) + Max( RMSe,MUC ) )", "obj1": 0.42452830188679247, "obj2": 0.46647647168152095}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( ( ( MUM * MUR ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) ) + ( MLU + RRSe ) ) )", "obj1": 0.42641509433962266, "obj2": 0.4492600829896045}, {"determining": "( Max( ACS,( ( ACS / Const ) + ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) / DDR ) ) ) / ( ARS - CRS ) )", "choosing": "( MUR - ( RCSe * CS ) )", "obj1": 0.4037735849056604, "obj2": 0.47049299889151547}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( ( ( RCSe * MLU ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( ACS / ( Const + MDR ) )", "choosing": "( DS - Min( Min( ( RCSe * ( ( ( RRSe / RCSe ) / RCSe ) + RMSe ) ) ,Min( MUM ,MUR ) ) ,( ( CS * RCSe ) * CS ) ) )", "obj1": 0.3471698113207547, "obj2": 0.5190861173089942}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Const )", "choosing": "Min( Min( Max( ( CS + Max( RMSe,MUR ) ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7358490566037735, "obj2": 0.18872945292559742}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,CS ) )", "obj1": 0.31886792452830187, "obj2": 0.5571859041899072}, {"determining": "Max( ( Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) * ( ( ARS + ACS ) * ( Max( FirstVNF_Mem_Server,Max( ACS,RRS ) ) * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,( ( ( Min( RRSe ,MUC ) / MUC ) - ( CS * CS ) ) + Max( RMSe,MUC ) ) ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.13773584905660377, "obj2": 0.7641515037422014}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,( PN + DDR ) ) ) )", "choosing": "( ( ( RRSe + Max( ( RMSe + Max( Min( MUC ,( CS + RCSe ) ),( MLU - Min( DS ,RCSe ) ) ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( Max( ( ( MRS / CRS ) + ( Min( BR ,FirstVNF_CPU ) - FirstVNF_RAM ) ),Const ) / Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / ( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) + ( ( MUM * MUR ) - Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) ) ) ) - ( RCSe * CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5328532320495633}, {"determining": "( ( Max( CRS,( ( Max( FirstVNF_Mem,Min( PN ,MDR ) ) / DDR ) / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( Min( MUM ,RRSe ),MLU ) )", "obj1": 0.3905660377358491, "obj2": 0.4856303373961546}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) / DDR ) ) )", "choosing": "( ( MLU - CS ) - MUR )", "obj1": 0.330188679245283, "obj2": 0.5468454874847758}, {"determining": "( ( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server - AMS ) ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,( Max( ( MUC + DS ),( RMSe / RMSe ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) ) ) )", "obj1": 0.1792452830188679, "obj2": 0.7229945295327436}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( DDR,PN ) - ( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( Min( ( MUR * MLU ) ,Max( RCSe,MUR ) ),DS ) / ( MUC * MLU ) ),( ( ( MUM + DS ) / ( RCSe * DS ) ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7547169811320755, "obj2": 0.18020257761897407}, {"determining": "( ( Const * ( BR / DDR ) ) / ( ARS + MDR ) )", "choosing": "( DS - Min( Max( RRSe,MUC ) ,Min( ( RRSe / ( RRSe / DS ) ) ,MUM ) ) )", "obj1": 0.39245283018867927, "obj2": 0.47586217735313735}, {"determining": "( Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) )", "obj1": 0.969811320754717, "obj2": 0.005034524568811807}, {"determining": "( ( ACS / Max( ( MDR * ( FirstVNF_RAM + FirstVNF_RAM_Server ) ),( BR * FirstVNF_RAM_Server ) ) ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( Min( Min( Max( RCSe,DS ) ,CS ) ,RRSe ) * MUR ) - Min( MUM ,RRSe ) ),MLU ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.09811320754716982, "obj2": 0.7856428608642001}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( MLU,RMSe ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "( ( Min( PN ,AMS ) * ( DDR / PN ) ) * ( BR * ( MDR + Max( FirstVNF_Mem,( ( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( CRS + CRS ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) / DS ) ) - Max( ( Max( Min( ( Max( RRSe,( MUM + RRSe ) ) * DS ) ,RRSe ),MUM ) + MUM ),( MLU - DS ) ) )", "obj1": 0.6792452830188679, "obj2": 0.23843836285871414}, {"determining": "( Max( ACS,Min( ( ( Min( Min( Max( Const,ARS ) ,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_CPU_Server ) * ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + Const ) ) ) ) ,FirstVNF_Mem_Server ) ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( ( MLU - MUR ) * CS ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( ( ( Const * ( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) / Max( RRS,FirstVNF_Mem ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( Min( MUR ,DS ) * MUR ) )", "obj1": 0.08679245283018867, "obj2": 0.7893962727393744}, {"determining": "( Max( ( ( MRS / PN ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ),Const ) / Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MLU - ( MUC / ( ( RMSe + CS ) / ( CS * MLU ) ) ) ) ) * DS ) / MUR ) - ( RCSe * CS ) )", "obj1": 0.3452830188679245, "obj2": 0.5279154159494005}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "Min( Max( ( RRS + FirstVNF_Mem_Server ),Const ) ,( Min( ( PN / BR ) ,( PN + Const ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( Min( ( ( MUC * MUM ) - Max( DS,Min( ( ( Min( RRSe ,RCSe ) / RCSe ) / MUM ) ,DS ) ) ) ,( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) ) ) * Max( ( CS / MUR ),( Max( DS,CS ) * ( CS / RMSe ) ) ) )", "obj1": 0.9113207547169812, "obj2": 0.104824425661416}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / FirstVNF_RAM ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.5511483900526031}, {"determining": "Max( ( Min( BR ,ARS ) - ( Min( ( ARS + AMS ) ,ARS ) * ( ACS - BR ) ) ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( Min( MLU ,MLU ) / MUM ) + Max( RMSe,MUC ) )", "obj1": 0.10377358490566038, "obj2": 0.7782921886992692}, {"determining": "( ( Min( PN ,AMS ) * ( DDR / PN ) ) * ( BR * ( MDR + Max( FirstVNF_Mem,( ( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( CRS + CRS ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) / DS ) ) - Max( ( Max( Min( ( Max( RRSe,( MUM + RRSe ) ) * DS ) ,RRSe ),MUM ) + MUM ),( MLU - DS ) ) )", "obj1": 0.6792452830188679, "obj2": 0.23843836285871414}, {"determining": "Max( ( PN / FirstVNF_RAM ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( ( RCSe / DS ) - ( CS * CS ) ) + Max( RMSe,MUC ) )", "obj1": 0.11132075471698114, "obj2": 0.7772428617108973}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) ) ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + ( MLU - CS ) ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( CS / CS ) / Min( DS ,CS ) ) + DS ) )", "obj1": 0.7849056603773585, "obj2": 0.152804996168316}, {"determining": "( ( MDR + AMS ) * Max( MDR,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( RMSe / MUC ) ,( MUM / DS ) ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.12641509433962264, "obj2": 0.7670080861465784}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( ( Max( ARS,PN ) + Const ) + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RCSe + MUM ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Max( ( Const * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( RCSe / ( CS / RMSe ) ) )", "obj1": 0.1169811320754717, "obj2": 0.7724611640728297}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( Min( ( MUR * MLU ) ,Max( RCSe,MUR ) ),DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.15471218142401533}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * Min( MDR ,FirstVNF_RAM ) ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.769811320754717, "obj2": 0.16316010640929227}, {"determining": "Max( ( ( CRS / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.13584905660377358, "obj2": 0.7647967165553647}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUR ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1725866517301806}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM * ACS ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( RCSe / ( Min( Max( RMSe,MUR ) ,RCSe ) + MUC ) ) ) + ( ( ( MUM * RMSe ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008145273460998768}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.16969925414123993}, {"determining": "Min( Max( ( RRS + FirstVNF_Mem_Server ),Const ) ,( Min( Min( FirstVNF_RAM ,AMS ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( Min( ( ( MUC * MUM ) - Max( DS,MUM ) ) ,( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,CS ) ,( MUC - RCSe ) ) ) ) ) * Max( ( CS / MUR ),( Max( DS,CS ) * ( CS / RMSe ) ) ) )", "obj1": 0.9113207547169812, "obj2": 0.104824425661416}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) - Const ) ,FirstVNF_RAM_Server ) + Min( Const ,AMS ) )", "choosing": "( ( ( ( CS * RMSe ) + Min( RMSe ,( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ) - ( RCSe + DS ) ) - Max( ( ( CS / RRSe ) / RMSe ),Max( RMSe,MLU ) ) )", "obj1": 0.9962264150943396, "obj2": 0.0022834550941118787}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.769811320754717, "obj2": 0.16316010640929227}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( RRS * ACS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( DS * CS ) * Max( ( RMSe - MUC ),RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.16969925414123993}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( Max( MRS,FirstVNF_Mem ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( RCSe + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9886792452830189, "obj2": 0.002676124646248982}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( PN / Min( MRS ,PN ) ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MLU - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) ) )", "obj1": 0.12452830188679245, "obj2": 0.77110816809734}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + Max( Max( ( ( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server - AMS ) ) - ( MDR + AMS ) ),( RRS / FirstVNF_CPU_Server ) ),( PN / Min( MRS ,PN ) ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MLU - ( Max( RCSe,RRSe ) / ( CS / Max( DS,( Max( ( MUC + DS ),( RMSe / RMSe ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) ) ) ) ) ) )", "obj1": 0.12264150943396226, "obj2": 0.772214154741791}, {"determining": "Min( Min( PN ,CRS ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( ( Max( ( DS / ( MLU / MUM ) ),Max( Max( RRSe,MLU ),( CS / MUC ) ) ) - CS ) - MUR ) ,Min( DS ,MUR ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) - ( FirstVNF_CPU / ( PN / AMS ) ) ) )", "choosing": "( Min( ( MUR + RRSe ) ,CS ) * ( DS / MUC ) )", "obj1": 0.9981132075471698, "obj2": 0.0004616011095491192}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1725866517301806}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / Max( MUR,( MUM / ( ( RRSe - MUM ) * MUR ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.960377358490566, "obj2": 0.008609888296512186}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( PN - FirstVNF_Mem_Server ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( ( ( DDR - PN ) + ( ACS + FirstVNF_RAM ) ) - ( BR * ( ACS / FirstVNF_CPU_Server ) ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( Max( MLU,( ( Min( ( RCSe / RCSe ) ,( MUM / RRSe ) ) + DS ) - CS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( FirstVNF_Mem * Max( FirstVNF_Mem_Server,ARS ) ) ,AMS ) )", "choosing": "( ( ( MUM / ( CS - ( MLU + RRSe ) ) ) + MLU ) * ( MUM * ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( ( ( PN * FirstVNF_CPU ) * ARS ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( Max( BR,( Const * MDR ) ) - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( MUM * MLU ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * CRS ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( ( ( AMS - MDR ) - FirstVNF_CPU_Server ) + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU - CS ) - Max( DS,MLU ) ) ) * ( CS * ( ( ( RMSe - RMSe ) / MUM ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + AMS ) * Max( MDR,( ( FirstVNF_RAM / ARS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( RMSe / RMSe ) ,( MUM / DS ) ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.07924528301886792, "obj2": 0.7975286429442551}, {"determining": "( ( Max( CRS,( PN / ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU * DS ) - CS )", "obj1": 0.8547169811320755, "obj2": 0.07175550357501798}, {"determining": "( FirstVNF_RAM - ( Const - MRS ) )", "choosing": "( Min( ( MUM * CS ) ,( MUC * DS ) ) + ( Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) * RRSe ) )", "obj1": 0.939622641509434, "obj2": 0.04640552178411451}, {"determining": "( Min( Const ,ACS ) - Min( FirstVNF_RAM_Server ,Min( ( BR + FirstVNF_RAM ) ,AMS ) ) )", "choosing": "( ( CS / CS ) / Min( ( RMSe + ( MLU * DS ) ) ,CS ) )", "obj1": 0.49433962264150944, "obj2": 0.3641992159629334}, {"determining": "( ( Max( CRS,( PN / ( Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU * DS ) - Max( DS,Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) ) )", "obj1": 0.7924528301886793, "obj2": 0.0938871979794232}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) ) ) - ( Const / Const ) )", "choosing": "( ( CS / CS ) / Min( DS ,Min( ( MUC + Max( DS,( DS * DS ) ) ) ,( ( CS / CS ) / Min( DS ,CS ) ) ) ) )", "obj1": 0.22075471698113208, "obj2": 0.6487622507969676}, {"determining": "Max( Max( CRS,( PN / MRS ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUM ) + ( MLU - CS ) )", "obj1": 0.4811320754716981, "obj2": 0.4107583139127579}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / Min( Max( ( CS + ( MLU - CS ) ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6121380044638065}, {"determining": "Min( Max( Max( Min( CRS ,ACS ),ACS ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,( MLU - CS ) ) ,Min( DS ,MUR ) )", "obj1": 0.5528301886792453, "obj2": 0.33830392464641845}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / Min( DS ,CS ) )", "obj1": 0.19622641509433963, "obj2": 0.678454997804438}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( RMSe + ( RRSe - MUM ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6452830188679245, "obj2": 0.2613577759356787}, {"determining": "( ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) * ( ( FirstVNF_CPU + ACS ) * FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / MUR ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( Max( ACS,ACS ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.43528007673836105}, {"determining": "Max( PN,( PN * RRS ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( RMSe + ( Max( MUC,Min( Max( ( MUM * MUM ),RCSe ) ,CS ) ) - Min( MUC ,MUR ) ) ) ) )", "obj1": 0.590566037735849, "obj2": 0.29664800753089565}, {"determining": "( Max( ( ( MRS / CRS ) + ( Min( BR ,FirstVNF_CPU ) - FirstVNF_RAM ) ),Const ) / Min( ( Const - ( FirstVNF_RAM - ( MRS + MRS ) ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MLU - ( MUC / ( MUM * CS ) ) ) ) * DS ) / ( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) + ( ( MUM * MUR ) - Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) ) ) ) - ( RCSe * CS ) )", "obj1": 0.4188679245283019, "obj2": 0.4482672938227088}, {"determining": "( ( ( Max( ( RRS * ( Min( ( BR + ARS ) ,AMS ) - Min( ( ARS * BR ) ,FirstVNF_Mem ) ) ),( RRS / PN ) ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / Min( Min( ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) ,MUR ) ,Max( MUR,DS ) ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.2792452830188679, "obj2": 0.6018516416958626}, {"determining": "( Min( BR ,( MDR / MRS ) ) * ( PN / AMS ) )", "choosing": "( ( ( ( DS / MUC ) - RMSe ) * Max( MUR,MLU ) ) / ( MUM * MUR ) )", "obj1": 0.5849056603773585, "obj2": 0.3243174344337465}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - ( RRSe + DS ) )", "obj1": 0.2943396226415094, "obj2": 0.5857247506132027}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( CRS + CRS ) )", "choosing": "Min( ( RMSe - Min( ( Max( RRSe,( MUM + RRSe ) ) * DS ) ,RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 0.19056603773584907, "obj2": 0.7127004916056497}, {"determining": "Max( ( FirstVNF_Mem_Server - ( ( Min( FirstVNF_RAM ,AMS ) / ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) ),RRS )", "choosing": "( ( Min( DS ,CS ) + Min( DS ,MUR ) ) + ( ( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / Min( MUR ,MUR ) ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) ) - CS ) )", "obj1": 0.6358490566037736, "obj2": 0.2846562816705281}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( Min( MRS ,PN ) / Min( ( DDR + MRS ) ,( PN + DDR ) ) ) )", "choosing": "( ( ( RRSe + Max( ( ( ( RCSe * MUR ) - CS ) + Max( Min( MUC ,( CS + RCSe ) ),( MLU - Min( DS ,RCSe ) ) ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6226415094339622, "obj2": 0.29364631162881294}, {"determining": "( Max( ACS,( ( ACS / Const ) + ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) / DDR ) ) ) / ( ARS - CRS ) )", "choosing": "( MUR - ( RCSe * CS ) )", "obj1": 0.4037735849056604, "obj2": 0.47049299889151547}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + PN ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( Max( ( ( RCSe * MUR ) - CS ),MLU ) / DS ) )", "obj1": 0.9528301886792453, "obj2": 0.010271437380878603}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( ACS / ( ARS - CRS ) )", "choosing": "( ( ( MUR / CS ) - ( RCSe * CS ) ) - Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.48673164079177056}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM_Server ,Min( ( BR + FirstVNF_RAM ) ,AMS ) ) )", "choosing": "( ( CS / CS ) / Min( ( ( RMSe / CS ) + ( MLU * DS ) ) ,CS ) )", "obj1": 0.35660377358490564, "obj2": 0.5020505048572309}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_RAM + MDR ) )", "choosing": "( ( RCSe - MLU ) - ( ( RRSe - RMSe ) + ( MUR / RMSe ) ) )", "obj1": 0.7075471698113207, "obj2": 0.21138372533573122}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * ( ARS - CRS ) ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( MUR / CS ) - ( RCSe * CS ) ) * CS ) )", "obj1": 0.5622641509433962, "obj2": 0.3295037827700553}, {"determining": "( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( ( ( CS / CS ) / Min( DS ,CS ) ) * MLU ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) )", "obj1": 0.6867924528301886, "obj2": 0.22078465714943982}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( Const / ( ARS - CRS ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( ( MUR / CS ) - ( RCSe * CS ) ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 0.44716981132075473, "obj2": 0.44527575360539784}, {"determining": "Max( Max( PN,( FirstVNF_Mem - Const ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,( PN + DDR ) ) ) )", "choosing": "( ( ( RRSe + Max( ( RMSe + Max( Min( MUC ,( CS + RCSe ) ),MLU ) ),MUR ) ) - MUC ) / ( ( Max( CS,DS ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.22769421899821266}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Const )", "choosing": "Min( Min( Max( ( CS + Max( RMSe,MUR ) ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7358490566037735, "obj2": 0.18872945292559742}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( Const / Const ) )", "choosing": "( ( RCSe / DS ) + ( MLU - ( Max( RCSe,RRSe ) / ( CS / ( ( MUM / RCSe ) - ( ( ( CS / CS ) / Min( DS ,CS ) ) + DS ) ) ) ) ) )", "obj1": 0.13773584905660377, "obj2": 0.748727548215048}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / FirstVNF_RAM ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.5511483900526031}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( ( Max( CRS,( ( Max( FirstVNF_Mem,Min( PN ,MDR ) ) / DDR ) / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( Min( MUM ,RRSe ),MLU ) )", "obj1": 0.3905660377358491, "obj2": 0.4856303373961546}, {"determining": "( ( ( Const * ( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) / Max( RRS,FirstVNF_Mem ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( Min( MUR ,DS ) * MUR ) )", "obj1": 0.08679245283018867, "obj2": 0.7893962727393744}, {"determining": "Max( ( ( CRS / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.13584905660377358, "obj2": 0.7647967165553647}, {"determining": "( ( Const * ( BR / DDR ) ) / ( ARS + MDR ) )", "choosing": "( DS - Min( Max( RRSe,MUC ) ,Min( ( RRSe / ( RRSe / DS ) ) ,MUM ) ) )", "obj1": 0.39245283018867927, "obj2": 0.47586217735313735}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) - Min( FirstVNF_RAM_Server ,Min( ( BR + FirstVNF_RAM ) ,AMS ) ) )", "choosing": "( ( CS / CS ) / Min( ( ( RMSe / CS ) + MUM ) ,CS ) )", "obj1": 0.3283018867924528, "obj2": 0.5342553647914005}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS / CS ) / Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,CS ) )", "obj1": 0.31886792452830187, "obj2": 0.5571859041899072}, {"determining": "Max( ( PN / FirstVNF_RAM ),Min( Max( ( RRS + FirstVNF_Mem_Server ),Const ) ,( Min( Min( FirstVNF_RAM ,AMS ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) )", "choosing": "( ( ( RCSe / DS ) - ( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,CS ) ,( MUC - RCSe ) ) ) ) ) + Max( RMSe,MUC ) )", "obj1": 0.09811320754716982, "obj2": 0.780561455645733}, {"determining": "( ( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server - AMS ) ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,( Max( ( MUC + DS ),( RMSe / RMSe ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) ) ) )", "obj1": 0.1792452830188679, "obj2": 0.7229945295327436}, {"determining": "( ( RRS * CRS ) / ( Const + MDR ) )", "choosing": "( DS - Min( Min( ( RCSe * ( ( ( MUC / RCSe ) / RCSe ) + RMSe ) ) ,Min( MUM ,MUR ) ) ,( ( CS * RCSe ) * CS ) ) )", "obj1": 0.35283018867924526, "obj2": 0.5173183861887712}, {"determining": "( ( ( Max( ( RRS * ( Min( ( BR + ARS ) ,Min( PN ,MDR ) ) - Min( ( ARS * BR ) ,FirstVNF_Mem ) ) ),( RRS / PN ) ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / Min( Min( ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MUM * DS ) ) ) ,MUR ) ,Max( MUR,DS ) ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.3169811320754717, "obj2": 0.5708168853537944}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - Min( Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( RRS * ACS ) ) ) )", "choosing": "( ( ( RMSe / DS ) / CS ) / Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,CS ) )", "obj1": 0.14150943396226415, "obj2": 0.730326301765864}, {"determining": "Max( Max( Max( ( ( FirstVNF_Mem - Const ) * ( ( Max( ARS,PN ) + Const ) + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ),( RRS / Max( Max( ( Max( ARS,BR ) - FirstVNF_RAM ),FirstVNF_RAM ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,PN ) ) )", "choosing": "( ( Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) ) - MUM ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.7259882468606608}, {"determining": "( ACS / ( Max( ACS,( ( ACS / Const ) + ( ( ( MRS / CRS ) + ( ( FirstVNF_Mem - MRS ) - FirstVNF_RAM ) ) / DDR ) ) ) / ( ARS - CRS ) ) )", "choosing": "( DS - Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * ( RCSe * CS ) ) ) )", "obj1": 0.34150943396226413, "obj2": 0.5221505570218301}, {"determining": "Max( Max( PN,( RRS / Max( Max( ( Max( ARS,BR ) - FirstVNF_RAM ),FirstVNF_RAM ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,PN ) ) )", "choosing": "( ( Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) ) - MUC ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.13962264150943396, "obj2": 0.7339342339144498}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( DDR,PN ) - ( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( Min( ( MUR * MLU ) ,Max( RCSe,MUR ) ),DS ) / ( MUC * MLU ) ),( ( ( MUM + DS ) / ( RCSe * DS ) ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7547169811320755, "obj2": 0.18020257761897407}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - Max( CS,DS ) ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( ( MUC + MUM ),RRSe ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "Max( ( ( FirstVNF_Mem / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * ( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * ( ARS - CRS ) ) ) ) ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( Max( RRSe,MUC ) ,( ( ( MUR / CS ) - ( RCSe * CS ) ) * CS ) ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( Max( RCSe,( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) ) / ( CS / RMSe ) ) )", "obj1": 0.15660377358490565, "obj2": 0.7260127489143262}, {"determining": "( Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) )", "obj1": 0.969811320754717, "obj2": 0.005034524568811807}, {"determining": "( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ) + ( ( MLU - MLU ) + ( MLU * ( ( MLU - CS ) - Max( DS,MLU ) ) ) ) )", "obj1": 0.3113207547169811, "obj2": 0.5743720760494497}, {"determining": "Min( Max( DDR,PN ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,( Min( ( MUM * CS ) ,Min( ( MUR * MLU ) ,Max( RCSe,MUR ) ) ) + ( ( RMSe / CS ) + ( MLU * DS ) ) ) ) / ( MUC * MLU ) ),( Min( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7226415094339622, "obj2": 0.2097175748552951}, {"determining": "Max( ( PN / FirstVNF_RAM ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( ( RCSe / DS ) - ( CS * CS ) ) + Max( RMSe,MUC ) )", "obj1": 0.11132075471698114, "obj2": 0.7772428617108973}, {"determining": "( Max( ( ( MRS / CRS ) + ( Min( BR ,FirstVNF_CPU ) - FirstVNF_RAM ) ),Const ) / Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MLU - ( MUC / RRSe ) ) ) * DS ) / ( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) + ( ( MUM * MUR ) - Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) ) ) ) - ( RCSe * CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5328532320495633}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) ) ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + ( MLU - CS ) ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,( RRS / FirstVNF_CPU_Server ) ) ) ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * Max( ( DS / Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) ),Min( MUC ,RMSe ) ) ) ) + ( ( MLU - MLU ) + ( MLU * ( ( MLU - CS ) - Max( DS,MLU ) ) ) ) )", "obj1": 0.3113207547169811, "obj2": 0.5743720760494497}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( CS / CS ) / Min( DS ,CS ) ) + DS ) )", "obj1": 0.7849056603773585, "obj2": 0.152804996168316}, {"determining": "( ( MDR + AMS ) * Max( MDR,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( RMSe / MUC ) ,( MUM / DS ) ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.12641509433962264, "obj2": 0.7670080861465784}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,ARS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7471698113207547, "obj2": 0.18543463928528908}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( ( Max( ARS,PN ) + Const ) + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RCSe + MUM ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Max( ( Const * ( ( ARS + ACS ) * ( MRS * ARS ) ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) - ( RCSe / ( CS / RMSe ) ) )", "obj1": 0.1169811320754717, "obj2": 0.7724611640728297}, {"determining": "Max( ( Min( BR ,ARS ) - ( Min( ( ARS + AMS ) ,ARS ) * ( ACS - BR ) ) ),Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "( ( Min( MLU ,MLU ) / MUM ) + Max( RMSe,MUC ) )", "obj1": 0.10377358490566038, "obj2": 0.7782921886992692}, {"determining": "( MDR * Min( MRS ,PN ) )", "choosing": "( ( Max( ( ( RCSe * MUR ) - CS ),MLU ) / DS ) - ( RCSe / RMSe ) )", "obj1": 0.08113207547169811, "obj2": 0.7948646481021986}, {"determining": "( ACS / ( Const + MDR ) )", "choosing": "( DS - Min( Min( ( RCSe * ( ( ( RRSe / RCSe ) / RCSe ) + RMSe ) ) ,Min( MUM ,MUR ) ) ,( ( CS * RCSe ) * CS ) ) )", "obj1": 0.3471698113207547, "obj2": 0.5190861173089942}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( Min( ( MUR * MLU ) ,Max( RCSe,MUR ) ),DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.15471218142401533}, {"determining": "( ( Min( ( PN * FirstVNF_CPU ) ,AMS ) * ( DDR / PN ) ) * ( BR * ( MDR + Max( FirstVNF_Mem,( ( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( CRS + CRS ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) / DS ) ) - Max( ( Max( Min( ( Max( ( MLU / MUR ),( MUM + RRSe ) ) * DS ) ,RRSe ),MUM ) + MUM ),( MLU - DS ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1864269745381849}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1725866517301806}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * Min( MDR ,FirstVNF_RAM ) ) + Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( RRSe,( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.769811320754717, "obj2": 0.16316010640929227}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.16969925414123993}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM * ACS ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( RCSe / ( Min( Max( RMSe,MUR ) ,RCSe ) + MUC ) ) ) + ( ( ( MUM * RMSe ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008145273460998768}, {"determining": "( ( ( Min( ARS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( Max( MRS,FirstVNF_Mem ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR / CS ) - ( RCSe * CS ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9679245283018868, "obj2": 0.00544178805802501}, {"determining": "( FirstVNF_Mem_Server / Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MLU - ( ( ( MLU - CS ) - ( RRSe + DS ) ) / RRSe ) ) ) * DS ) / ( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) + ( ( MUM * MUR ) - Min( ( RMSe - MLU ) ,( RMSe - RRSe ) ) ) ) ) - ( RCSe * CS ) )", "obj1": 0.3339622641509434, "obj2": 0.532876336140389}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( ( ( ARS + ACS ) * ( Max( FirstVNF_Mem_Server,Max( ACS,RRS ) ) * ARS ) ) * ( PN + RRS ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Min( RRSe ,MUC ) / MUC ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUR ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7754716981132076, "obj2": 0.162704662220397}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( RRS * ( PN / FirstVNF_RAM ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( ( DS * CS ) * Max( ( ( CS * CS ) - MUC ),RRSe ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.16969925414123993}, {"determining": "( ( Min( PN ,AMS ) * ( DDR / ( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( Max( MRS,FirstVNF_Mem ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) ) * ( BR * ( MDR + Max( FirstVNF_Mem,( ( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( CRS + CRS ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) / DS ) ) - Max( ( Max( Min( ( Max( RRSe,( MUM + RMSe ) ) * DS ) ,RRSe ),MUM ) + MUM ),( MLU - DS ) ) )", "obj1": 0.9886792452830189, "obj2": 0.0026203562818829054}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( PN / Min( MRS ,PN ) ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MLU - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) ) )", "obj1": 0.12452830188679245, "obj2": 0.77110816809734}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) - Const ) ,FirstVNF_RAM_Server ) + Min( Const ,AMS ) )", "choosing": "( ( ( ( CS * RMSe ) + Min( RMSe ,( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ) - ( RCSe + DS ) ) - Max( ( ( CS / RRSe ) / RMSe ),Max( RMSe,MLU ) ) )", "obj1": 0.9962264150943396, "obj2": 0.0022834550941118787}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + Max( Max( ( ( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server - AMS ) ) - ( MDR + AMS ) ),( RRS / FirstVNF_CPU_Server ) ),( PN / Min( MRS ,PN ) ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MLU - ( Max( RCSe,RRSe ) / ( CS / Max( DS,( Max( ( MUC + DS ),( RMSe / RMSe ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) ) ) ) ) ) )", "obj1": 0.12264150943396226, "obj2": 0.772214154741791}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * Min( MDR ,FirstVNF_RAM ) ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.769811320754717, "obj2": 0.16316010640929227}, {"determining": "Min( Min( PN ,CRS ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( ( Max( ( DS / ( MLU / MUM ) ),Max( Max( RRSe,MLU ),( CS / MUC ) ) ) - CS ) - MUR ) ,Min( DS ,MUR ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( Min( Max( BR,( Const * MDR ) ) ,MRS ) * ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + Min( DDR ,MDR ) ) - ( FirstVNF_CPU / ( PN / AMS ) ) ) )", "choosing": "( Min( ( MUR + RRSe ) ,( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) ) * ( DS / MUC ) )", "obj1": 0.9981132075471698, "obj2": 0.0004040695992337729}, {"determining": "Min( Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) ) ,( FirstVNF_RAM + Min( BR ,ARS ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( ( DS * MUC ) ,MUR ) )", "obj1": 0.7245283018867924, "obj2": 0.20838362866320137}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,( Min( AMS ,AMS ) * ( PN + RRS ) ) ) ) ,Min( ( FirstVNF_RAM_Server - BR ) ,MRS ) )", "choosing": "Min( Min( Min( MUR ,DS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUR ) ) ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1725866517301806}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / Max( MUR,( MUM / ( ( RRSe - MUM ) * MUR ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.960377358490566, "obj2": 0.008609888296512186}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( ( DDR + MRS ) ,( PN + DDR ) ) ) ) + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / Max( MUR,( MUM / ( ( RRSe - Min( DS ,RCSe ) ) * MUR ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9566037735849057, "obj2": 0.0095666047086282}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( ( DDR / PN ) - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) / DS ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9547169811320755, "obj2": 0.00985233274291877}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( AMS * ( Const + ( ( ( DDR - PN ) + ( ACS + FirstVNF_RAM ) ) - ( BR * ( ACS / FirstVNF_CPU_Server ) ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( ( MUC + MLU ) ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / ( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) + ( Max( MUM,DS ) * Min( MLU ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( Max( CRS,( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / DDR ) / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( Min( RMSe ,RRSe ),MLU ) )", "obj1": 0.3905660377358491, "obj2": 0.4856303373961546}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + ( DDR + ( MDR + RRS ) ) ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / Max( MUR,( MUM / ( ( RRSe - MUM ) * MUR ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9584905660377359, "obj2": 0.009132548429615143}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( ( Max( ARS,PN ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( ( MUC * ( RMSe - MUC ) ) ,RRSe ) - ( MUM - RCSe ) ) ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RCSe + MUM ) )", "obj1": 0.9584905660377359, "obj2": 0.009132548429615143}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) - Const ) ,FirstVNF_RAM_Server ) + Const )", "choosing": "( ( ( ( CS * RMSe ) + Min( RMSe ,( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ) - ( RCSe + DS ) ) - Max( ( ( CS / CS ) / RMSe ),Max( RMSe,MLU ) ) )", "obj1": 0.9962264150943396, "obj2": 0.0022834550941118787}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( CRS / PN ) * ( ( ARS + ACS ) * ( MRS * ARS ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( Min( DS ,MUC ) + ( MUR + DS ) ) * ( RCSe / DS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}]}