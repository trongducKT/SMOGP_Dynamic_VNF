{"1": [{"determining": "( ( PN / Const ) / Max( FirstVNF_Mem,ACS ) )", "choosing": "( Max( DS,RMSe ) / ( MUM - MUC ) )", "obj1": 0.23703703703703705, "obj2": 0.7571455309594382}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "( ( RMSe * ( ( ( MUM - Min( MUR ,Max( Max( MUC,DS ),Min( MLU ,CS ) ) ) ) + RMSe ) * RCSe ) ) + ( MUM / ( MUC * Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( RMSe + MUC ) ) ) * ( RMSe - ( DS * Min( MLU ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( ( ARS + RRS ) / ( MDR + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + RRSe ) - Min( MUM ,RMSe ) )", "obj1": 0.18888888888888888, "obj2": 0.7382072494701368}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6790125376983234}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.6186329289864648}, {"determining": "Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MUM + RCSe ) )", "obj1": 0.29074074074074074, "obj2": 0.6801938022580455}, {"determining": "Min( ( AMS * PN ) ,( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / RRSe ) * ( MLU * MUR ) )", "obj1": 0.2518518518518518, "obj2": 0.725427062730466}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ARS ) - Min( RRS ,PN ) )", "choosing": "( ( MUC - MUC ) + ( RRSe + RRSe ) )", "obj1": 0.2814814814814815, "obj2": 0.6820631814378737}, {"determining": "( ( FirstVNF_RAM / CRS ) + ( ARS * ARS ) )", "choosing": "( ( MLU * MUM ) * Min( RMSe ,CS ) )", "obj1": 0.23333333333333334, "obj2": 0.7441216048156245}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + DDR ) )", "choosing": "( ( RMSe - DS ) / ( MLU + MUM ) )", "obj1": 0.20555555555555555, "obj2": 0.7773594975161484}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,ARS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC + MUC ) ,( RRSe - MLU ) )", "obj1": 0.21851851851851853, "obj2": 0.7392022865548045}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( MRS * ARS ) )", "choosing": "( Min( MLU ,RMSe ) * ( MLU / MUR ) )", "obj1": 0.2462962962962963, "obj2": 0.7389985480334926}, {"determining": "( ( DDR + ARS ) * ( FirstVNF_CPU - ARS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUR - MLU ) )", "obj1": 0.9037037037037037, "obj2": 0.09933656395274398}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) )", "choosing": "( ( MUR + MUR ) * Min( MUR ,CS ) )", "obj1": 0.28703703703703703, "obj2": 0.6878656382486388}, {"determining": "Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - Max( MUM,CS ) )", "obj1": 0.24259259259259258, "obj2": 0.7091936806483038}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "( ( BR * CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,DS ) ,( RRSe - MUC ) )", "obj1": 0.15185185185185185, "obj2": 0.7833043760552489}, {"determining": "( ( Const * PN ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe / RRSe ) ,Min( MLU ,MUR ) )", "obj1": 0.2574074074074074, "obj2": 0.7109670641725417}, {"determining": "( ( AMS + ( RRS + PN ) ) * Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( Min( MUR ,( MUC / MUR ) ) + ( CS / MUM ) )", "obj1": 0.26481481481481484, "obj2": 0.7622580834864058}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_RAM_Server ),( Const - MRS ) )", "choosing": "( Max( MUC,MUC ) * Min( MLU ,( ( MUC * MUM ) / RCSe ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6956990906965569}, {"determining": "( Max( MDR,MRS ) - ( FirstVNF_Mem * MRS ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - DS ) )", "obj1": 0.37592592592592594, "obj2": 0.5832198614390319}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( Max( FirstVNF_CPU_Server,AMS ) ,( FirstVNF_Mem - PN ) )", "choosing": "( ( CS + MUC ) * Max( MLU,RCSe ) )", "obj1": 0.26851851851851855, "obj2": 0.7182655431442547}, {"determining": "( Min( RRS ,FirstVNF_Mem ) * ( Const + CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( MUM + MLU ) )", "obj1": 0.3037037037037037, "obj2": 0.6675476857928265}, {"determining": "( Min( ACS ,ACS ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,MUR ) ,( DS * RRSe ) )", "obj1": 0.37592592592592594, "obj2": 0.5809676231843641}, {"determining": "( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RMSe * MLU ) / Min( MUR ,RMSe ) )", "obj1": 0.24444444444444444, "obj2": 0.7341866687792393}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,Max( ( ( FirstVNF_RAM_Server - CRS ) / FirstVNF_CPU ),DDR ) ) )", "choosing": "( ( Min( ( RRSe * CS ) ,MUC ) * MUM ) + Min( MUR ,RCSe ) )", "obj1": 0.24814814814814815, "obj2": 0.7269249861541993}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM ) + Min( RRS ,CRS ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( MUR / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.25, "obj2": 0.7158315100588484}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( RRSe * RCSe ) - ( DS / RRSe ) )", "obj1": 0.8981481481481481, "obj2": 0.08683880369879197}, {"determining": "Min( Min( FirstVNF_Mem_Server ,CRS ) ,Max( PN,Const ) )", "choosing": "( Max( DS,CS ) - ( MLU + MUC ) )", "obj1": 0.2814814814814815, "obj2": 0.7151829912569616}, {"determining": "Min( Min( Min( FirstVNF_CPU ,PN ) ,ARS ) ,Min( FirstVNF_RAM_Server ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( CS - MUM ) + ( MUM + MUC ) ) - ( ( MLU + MUR ) / CS ) )", "obj1": 0.2518518518518518, "obj2": 0.763458321964002}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,( MRS / ACS ) ) ) )", "choosing": "( ( Max( ( ( ( ( MUM * RCSe ) * CS ) + ( MUR / MLU ) ) / CS ),DS ) / ( RRSe - RRSe ) ) / Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6617697542670059}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM + RMSe ) * Max( CS,RMSe ) ) + ( Max( MUR,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3440973987059831}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const / BR ) ,( PN / Const ) ) / Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) )", "choosing": "( ( MUC * MUM ) * ( ( MUC / MUR ) / ( MUM / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.6691277747760228}, {"determining": "( ( MRS / PN ) / ( ACS - ACS ) )", "choosing": "( ( ( RMSe * MUC ) / RCSe ) * Max( Max( RMSe,RCSe ),DS ) )", "obj1": 0.3074074074074074, "obj2": 0.6677591396568382}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.7237778128986074}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) * ( Min( RRS ,Const ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( RMSe + RCSe ) - ( RCSe + CS ) ) ,( ( MUR + MUC ) / Max( CS,RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.681097724714827}, {"determining": "( ( ( BR + AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) * Max( Min( Const ,FirstVNF_Mem ),( DDR - Const ) ) )", "choosing": "( ( ( MLU + DS ) + Min( RCSe ,RMSe ) ) * Max( ( RMSe + MLU ),( RCSe * MUC ) ) )", "obj1": 0.26666666666666666, "obj2": 0.7072241352371169}, {"determining": "Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) )", "choosing": "( ( ( MUC + MUR ) * ( MUR / DS ) ) - Min( ( MLU / MUM ) ,( RMSe - MUR ) ) )", "obj1": 0.1425925925925926, "obj2": 0.8187085965126849}, {"determining": "Max( ( Min( CRS ,FirstVNF_Mem ) + AMS ),( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - MLU ) + ( MUC - RMSe ) ) + ( Max( CS,Max( CS,MUC ) ) / RMSe ) )", "obj1": 0.2962962962962963, "obj2": 0.6198356226596747}, {"determining": "Max( ( RRS - PN ),Max( Const,Min( ARS ,AMS ) ) )", "choosing": "Min( ( ( DS + MUC ) - ( RRSe - RCSe ) ) ,Max( ( RMSe + ( RCSe - DS ) ),MUC ) )", "obj1": 0.3574074074074074, "obj2": 0.60128738776056}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ACS ) / MRS ) - Max( MRS,FirstVNF_Mem_Server ) ) + ( ( CRS - DDR ) / ( FirstVNF_RAM / MDR ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( CS - RRSe ) ) * ( Max( RMSe,DS ) / Max( RMSe,RMSe ) ) )", "obj1": 0.2777777777777778, "obj2": 0.7049065615343285}, {"determining": "( ( ( ARS - MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( ( DDR + ARS ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,RCSe ) - ( MUM * ( CS / MUR ) ) )", "obj1": 0.3, "obj2": 0.661519966380234}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_RAM ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( ( RRSe + RRSe ) + Max( CS,MUM ) ) )", "obj1": 0.3074074074074074, "obj2": 0.6255269242945682}, {"determining": "( ( CRS / ( AMS / Const ) ) + Max( MRS,PN ) )", "choosing": "Max( ( ( MLU / MUM ) / CS ),( ( MUM - MUR ) + ( MUM + MLU ) ) )", "obj1": 0.24444444444444444, "obj2": 0.7420289679592713}, {"determining": "Max( ( ( ACS - MDR ) + ( ACS / FirstVNF_CPU_Server ) ),Min( ( BR - PN ) ,Max( MDR,CRS ) ) )", "choosing": "Max( Max( Max( MUR,RRSe ),RMSe ),( MUM + MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.6933407015901794}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( FirstVNF_RAM + Min( PN ,( RRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Max( Min( MUM ,MUC ),( RRSe - MUR ) ) ) / Min( MUM ,Max( MLU,RRSe ) ) )", "obj1": 0.6574074074074074, "obj2": 0.3225371830896669}, {"determining": "( ( ( MDR - Const ) / ARS ) + ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,MRS ) ,( BR - Max( PN,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( RCSe / ( CS * ( Max( ( RRSe + MUM ),MUC ) * ( ( MUR - MUM ) / MUM ) ) ) ) - Min( ( MLU + MLU ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) - ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ACS * MDR ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( RRSe - RRSe ) ) - ( ( RMSe / RMSe ) / ( CS + RRSe ) ) )", "obj1": 0.35185185185185186, "obj2": 0.6427821913715784}, {"determining": "Max( Max( ( Const / ARS ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( CS + ( RCSe - RMSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6994431402893201}, {"determining": "Max( ( ( ( Min( ( BR - RRS ) ,FirstVNF_Mem ) + AMS ) + FirstVNF_RAM ) / ( Const / RRS ) ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * ( ( Min( Max( RMSe,MUC ) ,MUM ) * RCSe ) * ( RMSe * Min( RMSe ,RMSe ) ) ) ) * Max( CS,MUM ) )", "obj1": 0.17222222222222222, "obj2": 0.7512673453939724}, {"determining": "Max( ( ACS + ARS ),Max( ( RRS / BR ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( CS,MUR ) + CS ),( RMSe + Max( MLU,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.8045851157447068}, {"determining": "( ( ( MDR / MDR ) - Min( FirstVNF_RAM ,DDR ) ) / ( Max( Const,FirstVNF_Mem ) * ( MRS * Const ) ) )", "choosing": "( ( DS - ( MUM / MUR ) ) - ( ( CS - RMSe ) / ( MUC * MUM ) ) )", "obj1": 0.29444444444444445, "obj2": 0.6533932900395362}, {"determining": "Max( ( FirstVNF_Mem_Server - Min( RRS ,FirstVNF_Mem_Server ) ),Max( ARS,PN ) )", "choosing": "( ( ( CS / CS ) + Max( MUM,MUM ) ) + ( RRSe / ( RCSe - RCSe ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6955433588203348}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,Min( BR ,FirstVNF_CPU_Server ) ) ,( ( PN * ( DDR * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) )", "choosing": "( ( MLU / ( ( CS + ( MUC * ( MUR * RCSe ) ) ) / MUC ) ) + ( ( RRSe - MUR ) / RCSe ) )", "obj1": 0.22592592592592592, "obj2": 0.6843438581654583}, {"determining": "( ( FirstVNF_RAM / BR ) - ( Min( MRS ,PN ) - FirstVNF_RAM ) )", "choosing": "( ( RMSe * MLU ) + ( MLU / ( MUC - RRSe ) ) )", "obj1": 0.26666666666666666, "obj2": 0.7115764731078863}, {"determining": "( ( CRS + MRS ) + ( MRS * ARS ) )", "choosing": "( Max( DS,Min( ( RMSe + RCSe ) ,( CS / MUC ) ) ) + Min( ( ( ( Max( ( MUC - ( RRSe - DS ) ),CS ) / CS ) / DS ) / ( MUR * DS ) ) ,( ( CS - RCSe ) * MUC ) ) )", "obj1": 0.2462962962962963, "obj2": 0.7840787318651896}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Min( MUR ,CS ) / Max( RRSe,MUC ) ) - ( ( CS - MLU ) - ( MUR + RMSe ) ) ) ,( ( Max( RMSe,MLU ) + ( MUM - RMSe ) ) * Max( ( DS * RMSe ),Max( RCSe,MUR ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6945635319716538}, {"determining": "( Max( Min( ( MRS / FirstVNF_RAM ) ,( ACS - RRS ) ),( Min( FirstVNF_RAM_Server ,MRS ) * ( FirstVNF_CPU / MRS ) ) ) * ( Min( Max( CRS,FirstVNF_Mem ) ,( FirstVNF_RAM * DDR ) ) * Max( ( FirstVNF_CPU_Server - MDR ),( Const / FirstVNF_CPU ) ) ) )", "choosing": "( Max( CS,Max( MUM,MUM ) ) * Max( MUM,MUR ) )", "obj1": 0.2722222222222222, "obj2": 0.7179986978489448}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - ( ARS * ACS ) ) ,( MRS * ACS ) ) + Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUR * Min( DS ,RMSe ) ) ,MUR ) * DS ) / ( ( RCSe / MUR ) / ( ( RMSe - MLU ) - MUR ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - ARS ) - RRS ) ) - ( ( AMS * Const ) - Min( ( MRS / FirstVNF_Mem ) ,PN ) ) )", "choosing": "( ( MUC * Min( RRSe ,DS ) ) / ( MUR - ( RCSe / ( MLU - RCSe ) ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6927325093698901}, {"determining": "( ( Max( Max( CRS,ACS ),FirstVNF_CPU ) * MRS ) * ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.5405445940727835}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + BR ) / Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( RRSe / CS ) + ( MUM / CS ) ),( ( MUR + RCSe ) * ( ( MUC - ( Max( MUR,( RRSe - CS ) ) * Min( Min( CS ,RCSe ) ,( RRSe + MUM ) ) ) ) + RMSe ) ) ) + ( Min( ( MLU + RMSe ) ,( DS - RCSe ) ) * ( Min( CS ,RRSe ) * Min( RRSe ,RCSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.7263171469594418}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( AMS,( Min( ARS ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,ARS ),( ( Const / FirstVNF_RAM ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( RRSe - DS ) * Min( MUR ,RCSe ) ),( RRSe - MUR ) ) * ( Min( ( RRSe / CS ) ,( CS * MLU ) ) / Max( Max( MUC,CS ),Max( ( Max( RCSe,RCSe ) * Min( RMSe ,( CS / RCSe ) ) ),MLU ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.727166585080349}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( MLU * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.6611111111111111, "obj2": 0.31746754418288703}, {"determining": "Max( ( ( CRS - MRS ) * Const ),( Const + FirstVNF_CPU ) )", "choosing": "Min( ( RMSe - MLU ) ,Max( CS,MLU ) )", "obj1": 0.2462962962962963, "obj2": 0.7265345745189491}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) - ( Const + RRS ) )", "choosing": "( Min( ( Min( RRSe ,RMSe ) - Min( RCSe ,RCSe ) ) ,Min( ( RRSe * RMSe ) ,Max( MLU,RCSe ) ) ) + Min( ( ( RMSe * MUC ) + ( MUM / MUM ) ) ,( ( MLU * MUM ) + ( MLU - MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.35086818847532875}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( Min( ( MRS / ARS ) ,Min( ACS ,FirstVNF_Mem_Server ) ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( Min( DS ,RMSe ) / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.26666666666666666, "obj2": 0.7004196861144188}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( MUC * CS ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( CRS - FirstVNF_RAM ) ),Min( ( MRS / FirstVNF_Mem ) ,( FirstVNF_Mem * DDR ) ) ) * ( MRS + MDR ) )", "choosing": "( ( Max( ( MUC / RMSe ),RCSe ) / ( RRSe * MUR ) ) - ( ( MUM / ( CS + DS ) ) / ( ( CS - CS ) + ( MUR / MUC ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.8261112797195264}, {"determining": "Min( ( PN / ARS ) ,( ( ( ( RRS / FirstVNF_RAM_Server ) + ACS ) * FirstVNF_RAM_Server ) / ( Max( FirstVNF_RAM,MDR ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + MLU ) - ( RRSe + MUC ) ) * Min( RCSe ,( MUM - RMSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.8447799398492546}, {"determining": "( ( ( ( ( MDR / MRS ) - AMS ) + Min( FirstVNF_CPU_Server ,CRS ) ) + Max( ( MRS * ARS ),( AMS / DDR ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + Max( MDR,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * Max( MRS,MRS ) ) ) )", "choosing": "( ( RCSe * CS ) - ( MUR / Min( ( CS - DS ) ,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6662239432466548}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( CRS - Max( PN,ARS ) ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( Const * MRS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( Min( Max( CS,( RRSe + DS ) ) ,Max( RCSe,MUR ) ),( ( MUM / Min( MUC ,MUC ) ) + MUC ) ) ) - Max( ( Max( MUR,MUM ) * Max( CS,MUR ) ),MUC ) ),( Min( RCSe ,RRSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( CS,RMSe ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( Max( Min( ( CS * RMSe ) ,( MUM * MUC ) ),Max( ( CS * DS ),( RMSe / DS ) ) ) / Max( Max( Max( MUR,RRSe ),Min( MUM ,RCSe ) ),( ( RRSe * RCSe ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.8562523425311462}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( Max( MRS,FirstVNF_RAM_Server ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / CS ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5693552967379886}, {"determining": "( ( ( Max( RRS,CRS ) + Max( MDR,FirstVNF_CPU ) ) / ( Max( ( Max( RRS,RRS ) + MDR ),FirstVNF_Mem_Server ) / ( AMS * AMS ) ) ) * ( Max( ( AMS * FirstVNF_CPU ),( BR * MDR ) ) + Max( ( MRS / PN ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) + Max( CS,CS ) ) + ( Max( MLU,RRSe ) + Max( MLU,( DS / MUR ) ) ) ) - Min( ( ( CS * MUR ) - ( RCSe - MUC ) ) ,Min( ( RCSe * DS ) ,( MUR / MUM ) ) ) )", "obj1": 0.1574074074074074, "obj2": 0.8077057305664985}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( Min( ( Min( FirstVNF_RAM ,RRS ) * Min( AMS ,Const ) ) ,BR ) * MRS ) + Max( FirstVNF_CPU_Server,( AMS / BR ) ) ) ) ,( BR + FirstVNF_RAM ) )", "choosing": "( ( ( Min( Min( ( RRSe * Max( Min( MLU ,MLU ),MUC ) ) ,( ( MUR + MUR ) - Max( Max( RRSe,MLU ),DS ) ) ) ,MLU ) - ( ( MUC - RCSe ) * MUM ) ) / MLU ) + ( Max( ( ( Max( MUM,( RMSe / MUC ) ) / MUM ) * ( MUM / CS ) ),MUM ) / ( DS / RRSe ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7728775473912368}, {"determining": "( Min( PN ,ARS ) / Min( ( FirstVNF_RAM / ( MDR + FirstVNF_RAM ) ) ,( Max( DDR,BR ) * ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( ( MUR / MUM ) ,( CS * RMSe ) ),( Max( MUR,CS ) / ( RMSe + MLU ) ) ) * Max( ( ( RRSe - MUR ) - ( RCSe * CS ) ),Max( ( CS - RCSe ),( CS * MUR ) ) ) )", "obj1": 0.25, "obj2": 0.7487155008214116}, {"determining": "( ( ACS + ( CRS / ( ARS * DDR ) ) ) + ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - ( ( CS + MUM ) * RRSe ) ),( ( RCSe * RMSe ) / RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.6706756522497972}, {"determining": "Max( ( Const * ARS ),( FirstVNF_RAM * ( FirstVNF_RAM * ( MRS * FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,Min( MUR ,RMSe ) )", "obj1": 0.26851851851851855, "obj2": 0.7075746440272271}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - CRS ),( ( AMS - RRS ) / PN ) )", "choosing": "( Min( ( ( MLU / MLU ) - ( DS / RMSe ) ) ,( Min( MUR ,RMSe ) * ( MLU * RCSe ) ) ) + Min( ( ( RMSe - DS ) * Min( DS ,CS ) ) ,( ( MUR + MLU ) + ( MUR + MLU ) ) ) )", "obj1": 0.24259259259259258, "obj2": 0.7212397643090506}, {"determining": "( Min( ( ( BR - MRS ) / ( RRS - FirstVNF_RAM_Server ) ) ,Min( Max( MDR,RRS ) ,Min( MDR ,FirstVNF_RAM ) ) ) + ( Max( ( Const / MRS ),( FirstVNF_Mem_Server / DDR ) ) - Min( Max( FirstVNF_CPU,RRS ) ,( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Max( ( DS * RMSe ),( MUR + MLU ) ) / ( ( CS / CS ) + ( CS / RRSe ) ) ),( Max( Max( MUC,MUC ),Min( MLU ,MUM ) ) / ( ( MUC + CS ) + ( RCSe * MUR ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6891088704551508}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / PN ) + ( ( Const / FirstVNF_CPU_Server ) + BR ) )", "choosing": "Max( ( MUC * RCSe ),( DS - RRSe ) )", "obj1": 0.26851851851851855, "obj2": 0.6987939248050918}], "2": [{"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "( ( RMSe * ( ( ( MUM - Min( MUR ,Max( Max( MUC,DS ),Min( MLU ,CS ) ) ) ) + RMSe ) * RCSe ) ) + ( MUM / ( MUC * Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( RMSe + MUC ) ) ) * ( RMSe - ( DS * Min( MLU ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / PN ) + ( ( Const / FirstVNF_CPU_Server ) + BR ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Const * PN ) ) )", "choosing": "Max( ( DS * RMSe ),Min( ( RMSe / RRSe ) ,Min( MLU ,MUR ) ) )", "obj1": 0.8907407407407407, "obj2": 0.08469650009747527}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7870370370370371, "obj2": 0.24526943451765781}, {"determining": "( ( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM + RMSe ) * Max( CS,RMSe ) ) + ( Max( MUR,RRSe ) / ( Min( ( MUR + DS ) ,( CS * RCSe ) ) / DS ) ) )", "obj1": 0.4648148148148148, "obj2": 0.5236770367637269}, {"determining": "( ( ( MDR * ACS ) - Max( FirstVNF_CPU,Const ) ) * ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) - Max( Max( MUM,CS ),( DS / DS ) ) )", "obj1": 0.5537037037037037, "obj2": 0.4440813463872653}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) - ( Const + RRS ) )", "choosing": "Min( ( MLU * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.7055555555555556, "obj2": 0.2903575109142413}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "( ( ( ARS - MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Max( Const,Min( ARS ,AMS ) ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,RCSe ) - ( MUM * ( RCSe / MUR ) ) )", "obj1": 0.6240740740740741, "obj2": 0.3366612111801548}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( ( ( Min( ( Const / BR ) ,( PN / Const ) ) / Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) ) * ACS ) - Max( FirstVNF_CPU,Const ) ) * ( ( RRS / RRS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( ( ( MUC / MUR ) / ( MUM / MUM ) ) / ( MLU + DS ) ) - Max( Max( MUM,CS ),( DS / DS ) ) )", "obj1": 0.674074074074074, "obj2": 0.315011048214351}, {"determining": "Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - ( ( Min( MUR ,CS ) / Max( RRSe,MUC ) ) - ( ( CS - MLU ) - ( MUR + RMSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.13148148148148148, "obj2": 0.825137509345844}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( Const,AMS ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / RCSe ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5592592592592592, "obj2": 0.4090345699274048}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( Max( MRS,FirstVNF_RAM_Server ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / CS ) ) ) )", "obj1": 0.3574074074074074, "obj2": 0.5853569666143439}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - Const ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( Min( ( ( RMSe * MUC ) + ( MUM / MUM ) ) ,( ( MLU * MUM ) + ( MLU - MLU ) ) ) * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.6407407407407407, "obj2": 0.33215158400640454}, {"determining": "( ( ( DDR * AMS ) * FirstVNF_CPU_Server ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - CS ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.7110608742727252}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( Const * PN ) + ( FirstVNF_RAM - ( DDR + ( BR - BR ) ) ) )", "choosing": "Max( ( DS * RMSe ),Max( MLU,Min( RRSe ,Max( ( Max( ( Max( MUR,MUR ) + RCSe ),CS ) - Max( CS,RRSe ) ),MUM ) ) ) )", "obj1": 0.34074074074074073, "obj2": 0.6029939085661757}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( CS + MUC ) * Max( MLU,RCSe ) )", "obj1": 0.9166666666666666, "obj2": 0.07344253424139245}, {"determining": "Max( ( ( ( Min( ( BR - RRS ) ,FirstVNF_Mem ) + AMS ) + FirstVNF_RAM ) / ( Const / RRS ) ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * ( ( Min( Max( RMSe,MUC ) ,MUM ) * RCSe ) * ( RMSe * Min( RMSe ,RMSe ) ) ) ) * Max( CS,MUM ) )", "obj1": 0.17222222222222222, "obj2": 0.7512673453939724}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) ) / Max( Max( Max( MUR,RRSe ),Min( MUM ,RCSe ) ),( ( RRSe * RCSe ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.7119515114752688}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "Min( Min( MRS ,Min( BR ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / DDR ) )", "choosing": "( ( MLU / CS ) + ( ( RRSe - MUR ) / MUC ) )", "obj1": 0.22592592592592592, "obj2": 0.6843438581654583}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.6186329289864648}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( CRS + Max( ARS,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) + Min( Min( MRS ,Min( BR ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "( Max( DS,( ( MLU / CS ) + ( ( RRSe - MUR ) / MUC ) ) ) + Min( ( ( MUR * DS ) / ( MUM + CS ) ) ,( ( CS - RCSe ) * MUC ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6668904308500343}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.23333333333333334, "obj2": 0.6769552326974863}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( Max( MRS,FirstVNF_RAM_Server ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / CS ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5693552967379886}, {"determining": "Min( Min( MRS ,MRS ) ,Min( RRS ,MDR ) )", "choosing": "( ( Min( RRSe ,( DS - RMSe ) ) - Min( RCSe ,RMSe ) ) - Min( ( MLU + MLU ) ,( MUR - RMSe ) ) )", "obj1": 0.32037037037037036, "obj2": 0.610090687177085}, {"determining": "Min( Max( FirstVNF_CPU_Server,AMS ) ,( FirstVNF_Mem - PN ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6331306152842255}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - ARS ) - RRS ) ) - ( ( AMS * Const ) - Min( ( MRS / FirstVNF_Mem ) ,PN ) ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.6252737011009482}, {"determining": "Min( ( AMS * PN ) ,( FirstVNF_Mem / ( ( FirstVNF_CPU * ARS ) - Min( RRS ,PN ) ) ) )", "choosing": "( ( MUC - MUC ) * ( MLU * MUR ) )", "obj1": 0.24259259259259258, "obj2": 0.6551197886570294}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - ( ARS * ACS ) ) ,( MRS * ACS ) ) + Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUR * Min( DS ,RMSe ) ) ,MUR ) * DS ) / ( ( RCSe / MUR ) / ( ( RMSe - MLU ) - MUR ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( ( ARS - MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( ( DDR + ARS ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,RCSe ) - ( MUM * ( CS / MUR ) ) )", "obj1": 0.3351851851851852, "obj2": 0.6066490902469415}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( FirstVNF_RAM + Min( PN ,( RRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Max( Min( MUM ,MUC ),( RRSe - MUR ) ) ) / Min( MUM ,Max( MLU,RRSe ) ) )", "obj1": 0.6574074074074074, "obj2": 0.3225371830896669}, {"determining": "( Min( ACS ,ACS ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,MUR ) ,( DS * RRSe ) )", "obj1": 0.37592592592592594, "obj2": 0.5809676231843641}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( MUC - ( CS * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6496094782892423}, {"determining": "( ( CRS / PN ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.2537037037037037, "obj2": 0.6474171918953645}, {"determining": "( Min( MRS ,ARS ) * FirstVNF_Mem )", "choosing": "( ( MUC + DS ) / Max( CS,RMSe ) )", "obj1": 0.32222222222222224, "obj2": 0.6091787161758643}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( MLU * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.6611111111111111, "obj2": 0.31746754418288703}, {"determining": "( ( RRS * FirstVNF_RAM ) + Min( RRS ,( MDR - FirstVNF_CPU ) ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( DS / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.05845763362417023}, {"determining": "( ( PN - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( ( ( CS - MUM ) + ( MUM + MUC ) ) * RCSe ) - ( DS / RRSe ) )", "obj1": 0.9185185185185185, "obj2": 0.07066937698604808}, {"determining": "( Max( MDR,MRS ) - ( FirstVNF_Mem * MRS ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - DS ) )", "obj1": 0.37037037037037035, "obj2": 0.5839493140767197}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( MUR / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9203703703703704, "obj2": 0.060623228895157505}, {"determining": "Max( ( Min( CRS ,FirstVNF_Mem ) + AMS ),( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - MLU ) + ( MUC - RMSe ) ) + ( Max( CS,Max( CS,MUC ) ) / RMSe ) )", "obj1": 0.2962962962962963, "obj2": 0.6198356226596747}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6574074074074074, "obj2": 0.3225371830896669}, {"determining": "Min( Min( MRS ,Min( BR ,FirstVNF_CPU_Server ) ) ,( ( PN * ( DDR * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) )", "choosing": "( ( MLU / ( ( CS + ( MUC * ( MUR * RCSe ) ) ) / MUC ) ) + ( ( RRSe - MUR ) / RCSe ) )", "obj1": 0.22592592592592592, "obj2": 0.6843438581654583}, {"determining": "( Max( MDR,MRS ) - ( FirstVNF_Mem * MRS ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - DS ) )", "obj1": 0.37592592592592594, "obj2": 0.5832198614390319}, {"determining": "( ( ( MDR / MDR ) - Min( FirstVNF_RAM ,DDR ) ) / ( Max( Const,FirstVNF_Mem ) * ( MRS * Const ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7512673453939724}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( MLU * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.6611111111111111, "obj2": 0.31746754418288703}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / ARS ) + ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,MRS ) ,( BR - Max( PN,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( RCSe / ( CS * ( Max( ( RRSe + MUM ),MUC ) * ( ( MUR - MUM ) / MUM ) ) ) ) - Min( ( MLU + MLU ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( MUC * CS ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( CRS - Max( PN,ARS ) ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( Const * MRS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( Min( Max( CS,( RRSe + DS ) ) ,Max( RCSe,MUR ) ),( ( MUM / Min( MUC ,MUC ) ) + MUC ) ) ) - Max( ( Max( MUR,MUM ) * Max( CS,MUR ) ),MUC ) ),( Min( RCSe ,RRSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( CS,RMSe ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / ( Max( ARS,AMS ) / ARS ) ) ,( AMS + FirstVNF_Mem_Server ) ) ,Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Max( ( RCSe * DS ),( MUR - Max( RCSe,MUC ) ) ) * Max( MUR,MUR ) ) - DS ) ,( ( ( Min( Min( Min( RRSe ,( CS - RMSe ) ) ,RMSe ) ,( MLU * Max( MUR,( DS - RRSe ) ) ) ) * RMSe ) - ( ( CS - MUC ) + RRSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * Max( Min( Const ,FirstVNF_CPU_Server ),( ( CRS - Max( FirstVNF_Mem_Server,( RRS / FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) ) * PN ) ,Max( MDR,( ( PN + ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) * PN ) * RRS ) ) * PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUR / ( ( MUM * RMSe ) * Min( MUC ,CS ) ) ) ),( CS - Min( ( CS / MLU ) ,Max( RRSe,RMSe ) ) ) ) ,( ( DS * ( RRSe - ( RCSe * RCSe ) ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Const ) - ( ( ( ( Max( ( ( RRS + FirstVNF_Mem_Server ) + ACS ),Max( FirstVNF_CPU_Server,ACS ) ) / BR ) - AMS ) * FirstVNF_Mem ) - ( FirstVNF_RAM / ( Max( AMS,DDR ) - Const ) ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU * ARS ) ) * ( CRS + MRS ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( ( MUC - MUC ) + ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( ( RMSe - DS ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( PN * ARS ) )", "choosing": "Max( Max( RMSe,CS ),( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( PN * ARS ) )", "choosing": "Min( ( MUC + MUC ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( PN * ARS ) )", "choosing": "Max( Max( RMSe,CS ),( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,MRS ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - Max( MLU,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,FirstVNF_Mem ) * ( Const + CRS ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( ( Min( RMSe ,DS ) + ( MUM + MLU ) ) * MLU ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,RRS ) - Min( FirstVNF_CPU ,DDR ) )", "choosing": "( ( ( MUM + MLU ) + ( RMSe * RCSe ) ) + Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Max( MUM,CS ),( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "( ( RMSe * ( ( ( MUM - Min( MUR ,Max( Max( MUC,DS ),Min( MLU ,CS ) ) ) ) + RMSe ) * RCSe ) ) + ( MUM / ( MUC * Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( RMSe + MUC ) ) ) * ( RMSe - ( DS * Min( MLU ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS + CRS ),( Const - FirstVNF_RAM ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( Min( ( ( CRS - FirstVNF_Mem ) + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Max( DS,MUC ) / ( ( DS + ( ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) ) + MLU ) )", "obj1": 0.8481481481481481, "obj2": 0.13322467926585052}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) - ( Const + RRS ) )", "choosing": "Min( ( MLU * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.7055555555555556, "obj2": 0.2903575109142413}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7870370370370371, "obj2": 0.24526943451765781}, {"determining": "( ( PN - ACS ) / ( Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU ) )", "choosing": "Max( Max( MUM,CS ),( RRSe * CS ) )", "obj1": 0.5185185185185185, "obj2": 0.5179765267844605}, {"determining": "( ( ( MDR * ACS ) - Max( FirstVNF_CPU,Const ) ) * ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) - Max( Max( MUM,CS ),( DS / DS ) ) )", "obj1": 0.5537037037037037, "obj2": 0.4440813463872653}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Const * PN ) ) )", "choosing": "Max( ( DS * RMSe ),Min( ( RMSe / RRSe ) ,Min( MLU ,MUR ) ) )", "obj1": 0.8907407407407407, "obj2": 0.08469650009747527}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM + RMSe ) * Max( CS,RMSe ) ) + ( Max( MUR,RRSe ) / ( Min( ( MUR + DS ) ,( CS * RCSe ) ) / DS ) ) )", "obj1": 0.4648148148148148, "obj2": 0.5236770367637269}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "( ( PN - ( Max( FirstVNF_Mem_Server,Min( ( ( ( MDR + FirstVNF_Mem_Server ) / ( FirstVNF_RAM - CRS ) ) * FirstVNF_Mem_Server ) ,AMS ) ) + MDR ) ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( MRS * ( FirstVNF_Mem_Server + PN ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ACS ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,Min( MUR ,MUC ) ) * RCSe ) ,RCSe ) ) / Min( MUR ,RRSe ) )", "obj1": 0.32037037037037036, "obj2": 0.6014709247546662}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) ) ,CRS ) )", "choosing": "( ( DS * RMSe ) + ( DS * RMSe ) )", "obj1": 0.42592592592592593, "obj2": 0.5257052331482127}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - ( ( Min( MUR ,CS ) / Max( RRSe,MUC ) ) - ( ( CS - MLU ) - ( MUR + RMSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.13148148148148148, "obj2": 0.825137509345844}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) ) / Max( Max( Max( MUR,RRSe ),Min( MUM ,RCSe ) ),( ( RRSe * RCSe ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.7119515114752688}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( Min( ARS ,Min( BR ,FirstVNF_CPU_Server ) ) ,( ( PN * ( DDR * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) )", "choosing": "( ( MLU / ( ( CS + ( MUC * ( MUR * RCSe ) ) ) / MUC ) ) + ( DS / RCSe ) )", "obj1": 0.30185185185185187, "obj2": 0.6127338713770683}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( CS + MUC ) * Max( MLU,RCSe ) )", "obj1": 0.9166666666666666, "obj2": 0.07344253424139245}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * ( ( FirstVNF_CPU * ARS ) - FirstVNF_Mem ) )", "choosing": "Min( RRSe ,( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.42339982532263043}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( AMS * AMS ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Max( MLU,RRSe ) - MUM ) / RRSe ) ,Min( MLU ,MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6604725712510483}, {"determining": "( ( ( MDR * ACS ) - Max( FirstVNF_CPU,Const ) ) * ( ( RRS / ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,CS ),( CS + RMSe ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7510370616822863}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( Const,AMS ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / RCSe ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5592592592592592, "obj2": 0.4090345699274048}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( Max( FirstVNF_CPU_Server,AMS ) ,( FirstVNF_Mem - PN ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6331306152842255}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - ARS ) - RRS ) ) - ( ( AMS * Const ) - Min( ( MRS / FirstVNF_Mem ) ,PN ) ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.6252737011009482}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "Max( ( Min( CRS ,FirstVNF_Mem ) + AMS ),( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - MLU ) + ( MUC - RMSe ) ) + ( Max( CS,Max( CS,MUC ) ) / RMSe ) )", "obj1": 0.2962962962962963, "obj2": 0.6198356226596747}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "Min( ( AMS * PN ) ,( FirstVNF_Mem / ( ( FirstVNF_CPU * ARS ) - Min( RRS ,PN ) ) ) )", "choosing": "( ( MUC - MUC ) * ( MLU * MUR ) )", "obj1": 0.24259259259259258, "obj2": 0.6551197886570294}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,RMSe ) - MUC )", "obj1": 0.25, "obj2": 0.6470042057811836}, {"determining": "Min( Min( MRS ,CRS ) ,( ( RRS / RRS ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.16666666666666666, "obj2": 0.751094963376255}, {"determining": "( ( RRS * FirstVNF_RAM ) + Min( RRS ,( MDR - FirstVNF_CPU ) ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( DS / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.05845763362417023}, {"determining": "( ( PN - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( ( ( CS - MUM ) + ( MUM + MUC ) ) * RCSe ) - ( DS / RRSe ) )", "obj1": 0.9185185185185185, "obj2": 0.07066937698604808}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( MUR / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9203703703703704, "obj2": 0.060623228895157505}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( MUC - ( CS * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6496094782892423}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( FirstVNF_CPU_Server - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - DS ) + ( MUC - RMSe ) ) + ( ( DS / MUC ) / RMSe ) )", "obj1": 0.26851851851851855, "obj2": 0.6420699098112033}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_CPU_Server + DDR ) )", "choosing": "( MLU / ( MLU + MUM ) )", "obj1": 0.27037037037037037, "obj2": 0.6407436931822055}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - ( ARS * ACS ) ) ,( MRS * ACS ) ) + Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUR * Min( DS ,RMSe ) ) ,MUR ) * DS ) / ( ( RCSe / MUR ) / ( ( RMSe - MLU ) - MUR ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / ARS ) + ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,MRS ) ,( BR - Max( PN,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( RCSe / ( CS * ( Max( ( RRSe + MUM ),MUC ) * ( ( MUR - MUM ) / MUM ) ) ) ) - Min( ( MLU + MLU ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( MUC * CS ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( CRS - Max( PN,ARS ) ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( Const * MRS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( Min( Max( CS,( RRSe + DS ) ) ,Max( RCSe,MUR ) ),( ( MUM / Min( MUC ,MUC ) ) + MUC ) ) ) - Max( ( Max( MUR,MUM ) * Max( CS,MUR ) ),MUC ) ),( Min( RCSe ,RRSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( CS,RMSe ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / ( Max( ARS,AMS ) / ARS ) ) ,( AMS + FirstVNF_Mem_Server ) ) ,Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Max( ( RCSe * DS ),( MUR - Max( RCSe,MUC ) ) ) * Max( MUR,MUR ) ) - DS ) ,( ( ( Min( Min( Min( RRSe ,( CS - RMSe ) ) ,RMSe ) ,( MLU * Max( MUR,( DS - RRSe ) ) ) ) * RMSe ) - ( ( CS - MUC ) + RRSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * Max( Min( Const ,FirstVNF_CPU_Server ),( ( CRS - Max( FirstVNF_Mem_Server,( RRS / FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) ) * PN ) ,Max( MDR,( ( PN + ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) * PN ) * RRS ) ) * PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUR / ( ( MUM * RMSe ) * Min( MUC ,CS ) ) ) ),( CS - Min( ( CS / MLU ) ,Max( RRSe,RMSe ) ) ) ) ,( ( DS * ( RRSe - ( RCSe * RCSe ) ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Const ) - ( ( ( ( Max( ( ( RRS + FirstVNF_Mem_Server ) + ACS ),Max( FirstVNF_CPU_Server,ACS ) ) / BR ) - AMS ) * FirstVNF_Mem ) - ( FirstVNF_RAM / ( Max( AMS,DDR ) - Const ) ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU * ARS ) ) * ( CRS + MRS ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( ( MUC - MUC ) + ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( ( RMSe - DS ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( PN * ARS ) )", "choosing": "Max( Max( RMSe,CS ),( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( PN * ARS ) )", "choosing": "Min( ( MUC + MUC ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( PN * ARS ) )", "choosing": "Max( Max( RMSe,CS ),( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,MRS ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - Max( MLU,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,FirstVNF_Mem ) * ( Const + CRS ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( ( Min( RMSe ,DS ) + ( MUM + MLU ) ) * MLU ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,RRS ) - Min( FirstVNF_CPU ,DDR ) )", "choosing": "( ( ( MUM + MLU ) + ( RMSe * RCSe ) ) + Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Max( MUM,CS ),( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM * ( Max( Max( Min( Const ,Min( DDR ,ACS ) ),FirstVNF_RAM ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) / DDR ) )", "choosing": "( ( Min( MUM ,( CS / MLU ) ) + RCSe ) + ( Min( DS ,Min( Max( ( ( MLU - ( CS + MUC ) ) + DS ),RRSe ) ,( CS * ( MUC - MUC ) ) ) ) - ( MUM / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,Min( Min( RCSe ,RRSe ) ,MLU ) ) * MUC ) + Max( ( MUR / ( DS + ( Max( Min( MLU ,MUC ),MUC ) * ( ( CS / MLU ) / Max( RRSe,( DS / MUR ) ) ) ) ) ),RMSe ) )", "obj1": 0.12222222222222222, "obj2": 0.8438260749172118}, {"determining": "( Min( ( ( CRS - FirstVNF_Mem ) + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Max( DS,MUC ) / ( ( DS + ( ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) ) + MLU ) )", "obj1": 0.8481481481481481, "obj2": 0.13322467926585052}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7870370370370371, "obj2": 0.24526943451765781}, {"determining": "( ( PN - ACS ) / ( Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU ) )", "choosing": "Max( Max( MUM,CS ),( RRSe * CS ) )", "obj1": 0.5185185185185185, "obj2": 0.5179765267844605}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "( ( ( MDR * ACS ) - Max( FirstVNF_CPU,Const ) ) * ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) - Max( Max( MUM,CS ),( DS / DS ) ) )", "obj1": 0.5537037037037037, "obj2": 0.4440813463872653}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "( ( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM + RMSe ) * Max( CS,RMSe ) ) + ( Max( MUR,RRSe ) / ( Min( ( MUR + DS ) ,( CS * RCSe ) ) / DS ) ) )", "obj1": 0.4648148148148148, "obj2": 0.5236770367637269}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) ) ,CRS ) )", "choosing": "( ( DS * RMSe ) + ( DS * RMSe ) )", "obj1": 0.42592592592592593, "obj2": 0.5257052331482127}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( RRS - ACS ) )", "choosing": "( Max( MUM,( MUM * RCSe ) ) - ( MLU + RRSe ) )", "obj1": 0.7425925925925926, "obj2": 0.2500608339720458}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Max( ( FirstVNF_CPU_Server + ( FirstVNF_RAM / MRS ) ),( DDR - ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( Min( Max( ( ( DS + RMSe ) - RMSe ),MUM ) ,Min( ( CS / RMSe ) ,DS ) ) + MUM ) - CS ) - Min( DS ,MUM ) )", "obj1": 0.7425925925925926, "obj2": 0.2500608339720458}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * ( ( FirstVNF_CPU * ARS ) - FirstVNF_Mem ) )", "choosing": "Min( RRSe ,( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.42339982532263043}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( Const,AMS ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / RCSe ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5592592592592592, "obj2": 0.4090345699274048}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( CS + MUC ) * Max( MLU,RCSe ) )", "obj1": 0.9166666666666666, "obj2": 0.07344253424139245}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( MRS - ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + ( ( MLU - MLU ) * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7398946602332452}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( ( MDR * ACS ) - Max( FirstVNF_CPU,Const ) ) * ( ( RRS / ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,CS ),( CS + RMSe ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7510370616822863}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - MUM ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6783416293676591}, {"determining": "Min( ( AMS * PN ) ,( FirstVNF_Mem / ( ( FirstVNF_CPU * ARS ) - Min( RRS ,PN ) ) ) )", "choosing": "( ( MUC - MUC ) * ( MLU * MUR ) )", "obj1": 0.24259259259259258, "obj2": 0.6551197886570294}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "( ( ARS * Min( AMS ,AMS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.26851851851851855, "obj2": 0.6406953492338874}, {"determining": "Min( Min( MRS ,CRS ) ,( ( RRS / RRS ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.16666666666666666, "obj2": 0.751094963376255}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "( ( PN - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( ( ( CS - MUM ) + ( MUM + MUC ) ) * RCSe ) - ( DS / RRSe ) )", "obj1": 0.9185185185185185, "obj2": 0.07066937698604808}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( MUR / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9203703703703704, "obj2": 0.060623228895157505}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( MUC - ( CS * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6496094782892423}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RRSe * ( MLU / MUR ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6425721601785434}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,RMSe ) - MUC )", "obj1": 0.25, "obj2": 0.6470042057811836}, {"determining": "( ( ACS * Const ) - ( ( ( ( Max( ( ( RRS + FirstVNF_Mem_Server ) + ACS ),Max( FirstVNF_CPU_Server,ACS ) ) / BR ) - AMS ) * FirstVNF_Mem ) - ( FirstVNF_RAM / ( Max( AMS,DDR ) - Const ) ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.924074074074074, "obj2": 0.056179346082079834}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RCSe - RMSe ) / ( RCSe / DS ) ) * ( MLU / MUR ) )", "obj1": 0.25555555555555554, "obj2": 0.6463471260314487}, {"determining": "( ( RRS * FirstVNF_RAM ) + Min( RRS ,( MDR - FirstVNF_CPU ) ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( DS / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.05845763362417023}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "Max( CRS,( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2574074074074074, "obj2": 0.645778300777174}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( CRS / DDR ) * Min( Max( ( ARS / AMS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) ) ) ,RRSe ) )", "obj1": 0.924074074074074, "obj2": 0.056179346082079834}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / ARS ) + ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,MRS ) ,( BR - Max( PN,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( RCSe / ( CS * ( Max( ( RRSe + MUM ),MUC ) * ( ( MUR - MUM ) / MUM ) ) ) ) - Min( ( MLU + MLU ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( MUC * CS ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( CRS - Max( PN,ARS ) ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( Const * MRS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( Min( Max( CS,( RRSe + DS ) ) ,Max( RCSe,MUR ) ),( ( MUM / Min( MUC ,MUC ) ) + MUC ) ) ) - Max( ( Max( MUR,MUM ) * Max( CS,MUR ) ),MUC ) ),( Min( RCSe ,RRSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( CS,RMSe ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / ( Max( ARS,AMS ) / ARS ) ) ,( AMS + FirstVNF_Mem_Server ) ) ,Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Max( ( RCSe * DS ),( MUR - Max( RCSe,MUC ) ) ) * Max( MUR,MUR ) ) - DS ) ,( ( ( Min( Min( Min( RRSe ,( CS - RMSe ) ) ,RMSe ) ,( MLU * Max( MUR,( DS - RRSe ) ) ) ) * RMSe ) - ( ( CS - MUC ) + RRSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * Max( Min( Const ,FirstVNF_CPU_Server ),( ( CRS - Max( FirstVNF_Mem_Server,( RRS / FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) ) * PN ) ,Max( MDR,( ( PN + ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) * PN ) * RRS ) ) * PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUR / ( ( MUM * RMSe ) * Min( MUC ,CS ) ) ) ),( CS - Min( ( CS / MLU ) ,Max( RRSe,RMSe ) ) ) ) ,( ( DS * ( RRSe - ( RCSe * RCSe ) ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Const ) - ( ( ( ( Max( ( ( RRS + FirstVNF_Mem_Server ) + ACS ),Max( FirstVNF_CPU_Server,ACS ) ) / BR ) - AMS ) * FirstVNF_Mem ) - ( FirstVNF_RAM / ( Max( AMS,DDR ) - Const ) ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU * ARS ) ) * ( CRS + MRS ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( ( MUC - MUC ) + ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "( ( CRS / DDR ) * Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU,( DDR * ( Const - RRS ) ) ) / Max( FirstVNF_Mem,ARS ) ) ) ) ,BR ) )", "choosing": "Min( Max( ( MUM * ( ( MUC - ( MUM * Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ) + RMSe ) ),RMSe ) ,( MUR - MLU ) )", "obj1": 0.8444444444444444, "obj2": 0.11218394865691372}, {"determining": "( Max( AMS,PN ) + Min( ( ( Const / Min( ( ( BR + RRS ) - MRS ) ,DDR ) ) * ( ( MRS + ARS ) - ARS ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / ( RRSe + Min( ( MUR + ( ( ( RMSe / MUC ) * ( RRSe - MUC ) ) * CS ) ) ,( MUC - RMSe ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.5074074074074074, "obj2": 0.45015335106001264}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7870370370370371, "obj2": 0.24526943451765781}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( Max( ( AMS / ARS ),Min( RRS ,BR ) ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ),( MUM / ( MUM / DS ) ) )", "obj1": 0.5462962962962963, "obj2": 0.4082763097136329}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * RRS )", "choosing": "( Max( Max( RMSe,Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.8414453843799207}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Max( ( FirstVNF_CPU_Server + ( FirstVNF_RAM / MRS ) ),( DDR - ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( Min( Max( ( ( DS + RMSe ) - RMSe ),MUM ) ,Min( ( CS / RMSe ) ,DS ) ) + MUM ) - CS ) - Min( DS ,MUM ) )", "obj1": 0.7425925925925926, "obj2": 0.2500608339720458}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( RRS - ACS ) )", "choosing": "( Max( MUM,( MUM * RCSe ) ) - ( MLU + RRSe ) )", "obj1": 0.7425925925925926, "obj2": 0.2500608339720458}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( CS + MUC ) * Max( MLU,RCSe ) )", "obj1": 0.9166666666666666, "obj2": 0.07344253424139245}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( MRS - ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + ( ( MLU - MLU ) * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7398946602332452}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( ( ( MDR - ( Max( AMS,CRS ) + FirstVNF_RAM ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( ( BR * FirstVNF_RAM_Server ) * Const ) ) ) ,Max( ( ( PN + Const ) + FirstVNF_CPU ),( Min( ( DDR * FirstVNF_RAM_Server ) ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU + DDR ) ) + PN ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( MUR / ( ( RRSe / RRSe ) * DS ) ) ) ,( ( Min( RRSe ,DS ) - ( MUM + Min( ( RCSe + Min( ( MUM * RMSe ) ,Min( MUR ,CS ) ) ) ,( ( RCSe + RRSe ) / MLU ) ) ) ) * ( MUM + RCSe ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( MDR * ACS ) - Max( FirstVNF_CPU,Const ) ) * ( ( RRS / ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,CS ),( CS + RMSe ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7510370616822863}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - MUM ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6783416293676591}, {"determining": "Min( ( AMS * PN ) ,( FirstVNF_Mem / ( ( FirstVNF_CPU * ARS ) - Min( RRS ,PN ) ) ) )", "choosing": "( ( MUC - MUC ) * ( MLU * MUR ) )", "obj1": 0.24259259259259258, "obj2": 0.6551197886570294}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( Min( MRS ,CRS ) ,( ( RRS / RRS ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.16666666666666666, "obj2": 0.751094963376255}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,( CS / ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) ) ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.062252524493499876}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RRSe * ( MLU / MUR ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6425721601785434}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( MUC - ( CS * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6496094782892423}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( RCSe + ( CS / ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) ) ) + Min( ( RCSe + ( CS / ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) ) ) ,RRSe ) )", "obj1": 0.924074074074074, "obj2": 0.05144932571459208}, {"determining": "( ( RRS * FirstVNF_RAM ) + Min( RRS ,( MDR - FirstVNF_CPU ) ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( DS / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.05845763362417023}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,RMSe ) - MUC )", "obj1": 0.25, "obj2": 0.6470042057811836}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RCSe - RMSe ) / ( RCSe / DS ) ) * ( MLU / MUR ) )", "obj1": 0.25555555555555554, "obj2": 0.6463471260314487}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( AMS ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,Min( Min( RCSe ,RRSe ) ,MLU ) ) * MUC ) + Max( ( MUR / ( DS + ( Max( Min( MLU ,MUC ),MUC ) * ( ( CS / MLU ) / Max( RRSe,( DS / MUR ) ) ) ) ) ),RMSe ) )", "obj1": 0.12222222222222222, "obj2": 0.8438260749172118}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( MUM + MLU ) + ( ( DS / ( ( ( RRSe + ( CS + ( MUR / MUR ) ) ) - MUM ) + Min( ( Max( MUC,MLU ) + DS ) ,MUM ) ) ) * RMSe ) )", "obj1": 0.9203703703703704, "obj2": 0.060623228895157505}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12222222222222222, "obj2": 0.8438260749172118}, {"determining": "Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( CS * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "Max( CRS,( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2574074074074074, "obj2": 0.645778300777174}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( CRS / DDR ) * Min( Max( ( ARS / AMS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Max( ( AMS + PN ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( ( ( ( MUC + MUR ) - Min( RMSe ,( MUM + Min( MUR ,CS ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / ARS ) + ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,MRS ) ,( BR - Max( PN,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( RCSe / ( CS * ( Max( ( RRSe + MUM ),MUC ) * ( ( MUR - MUM ) / MUM ) ) ) ) - Min( ( MLU + MLU ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( MUC * CS ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( CRS - Max( PN,ARS ) ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( Const * MRS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( Min( Max( CS,( RRSe + DS ) ) ,Max( RCSe,MUR ) ),( ( MUM / Min( MUC ,MUC ) ) + MUC ) ) ) - Max( ( Max( MUR,MUM ) * Max( CS,MUR ) ),MUC ) ),( Min( RCSe ,RRSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( CS,RMSe ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / ( Max( ARS,AMS ) / ARS ) ) ,( AMS + FirstVNF_Mem_Server ) ) ,Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Max( ( RCSe * DS ),( MUR - Max( RCSe,MUC ) ) ) * Max( MUR,MUR ) ) - DS ) ,( ( ( Min( Min( Min( RRSe ,( CS - RMSe ) ) ,RMSe ) ,( MLU * Max( MUR,( DS - RRSe ) ) ) ) * RMSe ) - ( ( CS - MUC ) + RRSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "( Max( AMS,PN ) + Min( ( ( Const / Min( ( ( BR + RRS ) - MRS ) ,DDR ) ) * ( ( MRS + ARS ) - ARS ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / ( RRSe + Min( ( MUR + ( ( ( RMSe / MUC ) * ( RRSe - MUC ) ) * CS ) ) ,( MUC - RMSe ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.5074074074074074, "obj2": 0.45015335106001264}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "( ( CRS / DDR ) * Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU,( DDR * ( Const - RRS ) ) ) / Max( FirstVNF_Mem,ARS ) ) ) ) ,BR ) )", "choosing": "Min( Max( ( MUM * ( ( MUC - ( MUM * Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ) + RMSe ) ),RMSe ) ,( MUR - MLU ) )", "obj1": 0.8444444444444444, "obj2": 0.11218394865691372}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( Max( ( AMS / ARS ),Min( RRS ,BR ) ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ),( MUM / ( MUM / DS ) ) )", "obj1": 0.5462962962962963, "obj2": 0.4082763097136329}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( RRS - ( BR + ( ARS - Max( FirstVNF_RAM_Server,( BR * ( DDR + ACS ) ) ) ) ) ) )", "choosing": "( Max( MUM,( MUM * RCSe ) ) - ( MLU + MUM ) )", "obj1": 0.7685185185185185, "obj2": 0.21970719883680975}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( RRS - ACS ) )", "choosing": "( Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) - MUM ) ,( MUR - CS ) ) - Max( MUM,CS ) )", "obj1": 0.7814814814814814, "obj2": 0.1993439414006892}, {"determining": "Max( ( FirstVNF_CPU_Server + ( FirstVNF_RAM / MRS ) ),( DDR - ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( Min( Max( ( ( DS + RMSe ) - RMSe ),MUM ) ,Min( ( CS / RMSe ) ,DS ) ) + MUM ) - CS ) - Min( DS ,MUM ) )", "obj1": 0.8111111111111111, "obj2": 0.16596480741755942}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( Max( ( ( DS + RMSe ) - RMSe ),MUM ) ,Min( ( CS / RMSe ) ,DS ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.8111111111111111, "obj2": 0.16596480741755942}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( CS + MUC ) * Max( MLU,RCSe ) )", "obj1": 0.9166666666666666, "obj2": 0.07344253424139245}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( MRS - ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + ( ( MLU - MLU ) * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7398946602332452}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( MUC + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7492930675023441}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RRSe * ( MLU / MUR ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6425721601785434}, {"determining": "Min( ( AMS * PN ) ,( FirstVNF_Mem / ( ( FirstVNF_CPU * ARS ) - Min( RRS ,PN ) ) ) )", "choosing": "( ( MUC - MUC ) * ( MLU * MUR ) )", "obj1": 0.24259259259259258, "obj2": 0.6551197886570294}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) * DDR ) ) )", "choosing": "( ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.924074074074074, "obj2": 0.05081166625944162}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU_Server + DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,RMSe ) - MUC )", "obj1": 0.25, "obj2": 0.6470042057811836}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( MUC - ( CS * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6496094782892423}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( CRS / DDR ) * Min( ( FirstVNF_RAM_Server - ( ARS * FirstVNF_CPU_Server ) ) ,BR ) )", "choosing": "( ( ( RRSe / MUR ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.24444444444444444, "obj2": 0.6528664709866827}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RCSe - RMSe ) / ( RCSe / DS ) ) * ( MLU / MUR ) )", "obj1": 0.25555555555555554, "obj2": 0.6463471260314487}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Min( ( ( MDR - ( Max( AMS,CRS ) + FirstVNF_RAM ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( ( BR * FirstVNF_RAM_Server ) * Const ) ) ) ,Max( ( ( PN + Const ) + FirstVNF_CPU ),( Min( ( DDR * FirstVNF_RAM_Server ) ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU + DDR ) ) + PN ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( MUR / ( ( RRSe / RRSe ) * DS ) ) ) ,( ( Min( RRSe ,DS ) - ( MUM + Min( ( RCSe + Min( ( MUM * RMSe ) ,Min( MUR ,CS ) ) ) ,( ( RCSe + RRSe ) / MLU ) ) ) ) * ( MUM + RCSe ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Max( CRS,( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2574074074074074, "obj2": 0.645778300777174}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( CRS / DDR ) * Min( Max( ( ARS / AMS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Max( ( AMS + PN ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( ( ( ( MUC + MUR ) - Min( RMSe ,( MUM + Min( MUR ,CS ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( Max( ( AMS + PN ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( ( ( ( MUC + MUR ) - Min( RMSe ,( MUM + Min( MUR ,CS ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / ARS ) + ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,MRS ) ,( BR - Max( PN,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( RCSe / ( CS * ( Max( ( RRSe + MUM ),MUC ) * ( ( MUR - MUM ) / MUM ) ) ) ) - Min( ( MLU + MLU ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( MUC * CS ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( CRS - Max( PN,ARS ) ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( Const * MRS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( Min( Max( CS,( RRSe + DS ) ) ,Max( RCSe,MUR ) ),( ( MUM / Min( MUC ,MUC ) ) + MUC ) ) ) - Max( ( Max( MUR,MUM ) * Max( CS,MUR ) ),MUC ) ),( Min( RCSe ,RRSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( CS,RMSe ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( BR + ACS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( ( ( MDR / DDR ) + DDR ) * FirstVNF_CPU ) ) * ( ( ( ( ARS / MRS ) + FirstVNF_RAM_Server ) * ( ( CRS + ( FirstVNF_Mem / MRS ) ) + ( ( AMS / CRS ) * ARS ) ) ) - Min( MDR ,( ( RRS * ACS ) - PN ) ) ) ) - ( ( ( FirstVNF_CPU_Server * MRS ) * FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( Max( Min( MUR ,Max( MUC,MLU ) ),( MUM - Max( ( ( Max( RMSe,MUR ) * Max( DS,RMSe ) ) - Min( Min( MUC ,CS ) ,( RCSe / RMSe ) ) ),MUM ) ) ) ,MUR ) ,( ( Min( ( Max( ( MUM + RMSe ),MUR ) / MUM ) ,( MUC * MLU ) ) / RMSe ) + Min( RRSe ,( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( Max( AMS,PN ) + Min( ( ( Const / Min( ( ( BR + RRS ) - MRS ) ,DDR ) ) * ( ( MRS + ARS ) - ARS ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / ( RRSe + Min( ( MUR + ( ( ( RMSe / MUC ) * ( RRSe - MUC ) ) * CS ) ) ,( MUC - RMSe ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.5074074074074074, "obj2": 0.45015335106001264}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) ) ) ,RRSe ) )", "obj1": 0.46296296296296297, "obj2": 0.5046972564296919}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( Max( ( AMS / ARS ),Min( RRS ,BR ) ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ),( MUM / ( MUM / DS ) ) )", "obj1": 0.5462962962962963, "obj2": 0.4082763097136329}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.912962962962963, "obj2": 0.07151127626614884}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( Max( Const,CRS ),Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( Min( Max( CS,RMSe ) ,CS ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.1112793104015341}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.1685185185185185, "obj2": 0.7419525939773345}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( MRS - ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + ( ( MLU - MLU ) * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7398946602332452}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Max( CRS,( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2574074074074074, "obj2": 0.645778300777174}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * DDR ) - MRS ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + DS ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.682171953054102}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RRSe * ( MLU / MUR ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6425721601785434}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) * DDR ) ) )", "choosing": "( ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.924074074074074, "obj2": 0.05081166625944162}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7490478786467148}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( Max( Max( Max( Max( Max( Const,AMS ),MDR ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / DDR ) / ( FirstVNF_CPU_Server * Const ) ) ),FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RCSe ,( MUC + ( ( Min( ( ( MUR + RRSe ) * ( MUR / MUM ) ) ,DS ) + Max( RCSe,( MLU * RMSe ) ) ) + Max( Min( MLU ,DS ),( MLU / CS ) ) ) ) ) ,( ( MLU * ( CS / ( Max( MUC,DS ) / ( MUR + RRSe ) ) ) ) / Max( Max( Max( ( Min( RMSe ,Max( MUC,MLU ) ) * MUM ),( Min( ( MLU * CS ) ,MUR ) - ( RMSe - ( CS * MUC ) ) ) ),MLU ),CS ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7490478786467148}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( CRS / DDR ) * Min( Max( ( ARS / AMS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Max( ( ( ( BR / PN ) + MDR ) * ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( ACS * ACS ) ) / FirstVNF_RAM ) / ( FirstVNF_RAM + ( Const / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( Min( ( ( MUC + Min( MUC ,RMSe ) ) - ( MUC + Min( MUC ,RMSe ) ) ) ,CS ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( Max( ( AMS + PN ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( ( ( ( MUC + MUR ) - Min( RMSe ,( MUM + Min( MUR ,CS ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / ARS ) + ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,MRS ) ,( BR - Max( PN,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( RCSe / ( CS * ( Max( ( RRSe + MUM ),MUC ) * ( ( MUR - MUM ) / MUM ) ) ) ) - Min( ( MLU + MLU ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( MUC * CS ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( CRS - Max( PN,ARS ) ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( Const * MRS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( Min( Max( CS,( RRSe + DS ) ) ,Max( RCSe,MUR ) ),( ( MUM / Min( MUC ,MUC ) ) + MUC ) ) ) - Max( ( Max( MUR,MUM ) * Max( CS,MUR ) ),MUC ) ),( Min( RCSe ,RRSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( CS,RMSe ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "( Max( AMS,PN ) + Min( ( ( Const / Min( ( ( BR + RRS ) - MRS ) ,DDR ) ) * ( ( MRS + ARS ) - ARS ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / ( RRSe + Min( ( MUR + ( ( ( RMSe / MUC ) * ( RRSe - MUC ) ) * CS ) ) ,( MUC - RMSe ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.5074074074074074, "obj2": 0.45015335106001264}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - RCSe ) ) ) ,RRSe ) )", "obj1": 0.46296296296296297, "obj2": 0.5046972564296919}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12143913989333743}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7, "obj2": 0.2922698132838131}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( Max( Const,CRS ),Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( Min( Max( CS,RMSe ) ,CS ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.1112793104015341}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Max( CRS,( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2574074074074074, "obj2": 0.645778300777174}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) )", "obj1": 0.9907407407407407, "obj2": 0.00466650915314632}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( Max( ( ( ( BR / PN ) + MDR ) * ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( ACS * ACS ) ) / FirstVNF_RAM ) / ( FirstVNF_RAM + ( Const / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( Min( ( ( MUC + Min( MUC ,RMSe ) ) - ( MUC + Min( MUC ,RMSe ) ) ) ,CS ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( CRS / DDR ) * Min( Max( ( ARS / AMS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( Max( ( AMS + PN ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( ( ( ( MUC + MUR ) - Min( RMSe ,( MUM + Min( MUR ,CS ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( ARS - Const ) ,( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( MLU * RCSe ) ,( MUR - ( ( ( ( RMSe - MUM ) - ( Max( ( DS * MUM ),RCSe ) / RCSe ) ) - RCSe ) - ( Max( CS,MUR ) * Min( DS ,Max( DS,RMSe ) ) ) ) ) )", "obj1": 0.7, "obj2": 0.2922698132838131}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe - MLU ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU - BR ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem ,BR ) ) ) ) ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,ACS ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Max( MLU,Max( DS,DS ) ) * Min( MUC ,Max( MUC,Min( Max( RRSe,MUM ) ,( MUM / CS ) ) ) ) ) + MUC ) - DS ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) * ( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ) / Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( ( Max( Max( MUR,RCSe ),DS ) / Min( ( RCSe - Max( Min( DS ,MUR ),RRSe ) ) ,CS ) ),RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ACS ) / FirstVNF_Mem_Server ) - ( AMS * ( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ACS + BR ) ) * DDR ) * CRS ) * Const ) ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU + ( ( ( RMSe / MUC ) - ( MUC / DS ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( ( ( RMSe * ( CS - ( RCSe - CS ) ) ) * ( Min( MUM ,MLU ) + MUC ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / Const ) - ( MDR + MDR ) ) / ( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ),( FirstVNF_RAM_Server * MRS ) ) + ( CRS / DDR ) ) )", "choosing": "Max( Max( RRSe,Max( ( ( MUC * ( MUR + ( RCSe + ( RMSe - MUC ) ) ) ) - ( MUR - ( ( ( MUR / CS ) / ( RRSe + MUC ) ) / RMSe ) ) ),( ( ( MUR + DS ) * RRSe ) - ( ( ( CS + Min( DS ,MUR ) ) * MUR ) / DS ) ) ) ),( ( ( MUC - RRSe ) / Max( ( RCSe / MUR ),( Min( MLU ,RMSe ) / RRSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( MUC,DS ) / ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12143913989333743}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( DDR / Min( Const ,( Max( Min( MDR ,RRS ),FirstVNF_Mem ) - DDR ) ) ) * ( Min( FirstVNF_Mem_Server ,( DDR - ( FirstVNF_CPU_Server * ( ACS + RRS ) ) ) ) - ( ( ( ( CRS / ( Min( ACS ,MDR ) / BR ) ) - ACS ) + MRS ) - Min( RRS ,RRS ) ) ) )", "choosing": "( Max( MUC,( RRSe / MLU ) ) - ( ( RMSe / RMSe ) - ( RMSe + ( DS + Max( ( DS * ( ( DS + MLU ) / ( CS / MUC ) ) ),RMSe ) ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.46233437724008475}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7, "obj2": 0.2922698132838131}, {"determining": "( ( Min( ( RRS * RRS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( Min( MDR ,Const ) / Max( Const,AMS ) ) ) - Max( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ),( ( FirstVNF_CPU_Server - BR ) - Max( ACS,MRS ) ) ) )", "choosing": "Max( ( DS + ( MUR / ( MLU + RCSe ) ) ),( RCSe + ( MUR + RCSe ) ) )", "obj1": 0.987037037037037, "obj2": 0.01526612258709161}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( Max( AMS,PN ) + Min( ( ( Const / Min( ( ( BR + RRS ) - MRS ) ,DDR ) ) * ( ( MRS + ARS ) - ARS ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / ( RRSe + Min( ( MUR + ( ( ( RMSe / MUC ) * ( RRSe - MUC ) ) * CS ) ) ,( MUC - RMSe ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.5074074074074074, "obj2": 0.45015335106001264}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( ( MDR * DDR ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) / MDR ) )", "choosing": "Min( ( MUR + ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( ( ( RRSe * MUR ) - DS ),RMSe ) ) ) ) ) ,( ( MUM + MUC ) - MUM ) )", "obj1": 0.4537037037037037, "obj2": 0.4947818046572343}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( ( DS - DS ),RMSe ) ) ) ) ) ,( ( MUM + MUC ) - MUM ) )", "obj1": 0.4537037037037037, "obj2": 0.4947818046572343}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( CS + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( Min( RRSe ,Max( ( DS - DS ),RMSe ) ) / MUR ) + RCSe ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5085859959629774}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) )", "choosing": "Min( Min( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7537037037037037, "obj2": 0.11408368926020254}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Max( Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( Const - RRS ) ) )", "choosing": "( ( RCSe * MLU ) - ( MUC * MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7289629586656489}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) )", "obj1": 0.9907407407407407, "obj2": 0.00466650915314632}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( FirstVNF_Mem * ( CRS - MRS ) ) - ARS ) - MDR ) ) ) * Min( ( ARS / ( Max( ( FirstVNF_CPU_Server + DDR ),AMS ) - MDR ) ) ,AMS ) )", "choosing": "( ( ( CS + RMSe ) * ( RCSe * ( ( RRSe / MUM ) - ( MLU + ( Max( MUR,Min( MLU ,MUC ) ) - MUM ) ) ) ) ) - ( RMSe + MUC ) )", "obj1": 0.2574074074074074, "obj2": 0.645500934305367}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( Max( Const,CRS ),Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( Min( Max( CS,RMSe ) ,CS ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.1112793104015341}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12143913989333743}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( Max( ( ( ( BR / PN ) + MDR ) * ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( ACS * ACS ) ) / FirstVNF_RAM ) / ( FirstVNF_RAM + ( Const / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( Min( ( ( MUC + Min( MUC ,RMSe ) ) - ( MUC + Min( MUC ,RMSe ) ) ) ,CS ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( CRS / DDR ) * Min( Max( ( ARS / AMS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( Max( ( AMS + PN ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( ( ( ( MUC + MUR ) - Min( RMSe ,( MUM + Min( MUR ,CS ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_RAM_Server - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.645500934305367}, {"determining": "Min( ( ARS - Const ) ,( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( MLU * RCSe ) ,( MUR - ( ( ( ( RMSe - MUM ) - ( Max( ( DS * MUM ),RCSe ) / RCSe ) ) - RCSe ) - ( Max( CS,MUR ) * Min( DS ,Max( DS,RMSe ) ) ) ) ) )", "obj1": 0.7, "obj2": 0.2922698132838131}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( Min( ( Max( Min( RMSe ,MUC ),CS ) / RMSe ) ,RMSe ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( Max( AMS,PN ) + Min( ( ( Const / Min( ( ( BR + RRS ) - MRS ) ,DDR ) ) * ( ( MRS + ARS ) - ARS ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / ( RRSe + Min( ( MUR + ( ( ( RMSe / MUC ) * ( RRSe - MUC ) ) * CS ) ) ,( MUC - RMSe ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.5074074074074074, "obj2": 0.45015335106001264}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7, "obj2": 0.2922698132838131}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02530143389877016}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( CS + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( Min( RRSe ,Max( ( DS - DS ),RMSe ) ) / MUR ) + RCSe ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5085859959629774}, {"determining": "( Min( MDR ,RRS ) - ( ( ( RRS * ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_CPU_Server / ( ( CRS / Min( Max( AMS,BR ) ,( ARS * FirstVNF_RAM ) ) ) + Const ) ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( MUM - ( ( RMSe + ( RRSe + MUM ) ) + CS ) ),( RCSe / RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.0063563782540384875}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUC,MUM ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.9796296296296296, "obj2": 0.0063563782540384875}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( Min( Const ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( Max( MUR,( Min( MUM ,RMSe ) / ( MUR / MUR ) ) ) - MUR ) )", "obj1": 0.3962962962962963, "obj2": 0.5340864794635398}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) )", "choosing": "Min( Min( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7537037037037037, "obj2": 0.11408368926020254}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / MUR ) - RMSe ) / ( RCSe / ( ( MUR + RCSe ) + RCSe ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6446425897719835}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) )", "obj1": 0.9907407407407407, "obj2": 0.00466650915314632}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.11055488941620817}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( Max( ( ( ( BR / PN ) + MDR ) * ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( ACS * ACS ) ) / FirstVNF_RAM ) / ( FirstVNF_RAM + ( Const / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( Min( ( ( MUC + Min( MUC ,RMSe ) ) - ( MUC + Min( MUC ,RMSe ) ) ) ,CS ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( CRS / DDR ) * Min( Max( ( ARS / AMS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( Max( ( AMS + PN ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( ( ( ( MUC + MUR ) - Min( RMSe ,( MUM + Min( MUR ,CS ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}], "11": [{"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7, "obj2": 0.2922698132838131}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Max( ( ( ( BR / PN ) * MDR ) * ( ( ( ( ( CRS - FirstVNF_RAM ) / ( ACS / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server - AMS ) ) / ( ( MDR / FirstVNF_Mem ) + ( ( FirstVNF_CPU + DDR ) / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem - ( ( ( ( CRS - FirstVNF_RAM ) / ( ACS / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server - AMS ) ) / ( ( MDR / FirstVNF_Mem ) + ( ( FirstVNF_CPU + DDR ) / Const ) ) ) ) - ARS ) )", "choosing": "Min( Min( Min( Min( RCSe ,Max( DS,RCSe ) ) ,Max( RCSe,Min( MUR ,DS ) ) ) ,Max( DS,RCSe ) ) ,Max( RCSe,Min( MUR ,DS ) ) )", "obj1": 0.6037037037037037, "obj2": 0.34560790211994225}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( Max( AMS,PN ) + Min( ( ( Const / Min( ( ( BR + RRS ) - MRS ) ,DDR ) ) * ( ( MRS + ARS ) - ARS ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / ( RRSe + Min( ( MUR + ( ( ( RMSe / MUC ) * ( RRSe - MUC ) ) * CS ) ) ,( MUC - RMSe ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.5074074074074074, "obj2": 0.45015335106001264}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( ( ( MLU + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * DS ) ) ) ,( MLU - ( Min( MUM ,( MUC - RMSe ) ) + ( ( CS / MUM ) - ( MUC + RCSe ) ) ) ) ) ) - ( ( MUC - RRSe ) - ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( MLU + RMSe ) ) - ( ( DS / ( CS - Max( MLU,RRSe ) ) ) + RMSe ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004874912001433211}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.40149550077505125}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( MRS / PN ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5547064989086942}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( CS + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( Min( RRSe ,Max( ( DS - DS ),RMSe ) ) / MUR ) + RCSe ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5085859959629774}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( Min( Const ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( Max( MUR,( Min( MUM ,RMSe ) / ( MUR / MUR ) ) ) - MUR ) )", "obj1": 0.3962962962962963, "obj2": 0.5340864794635398}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) )", "choosing": "Min( Min( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7537037037037037, "obj2": 0.11408368926020254}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / MUR ) - RMSe ) / ( RCSe / ( ( MUR + RCSe ) + RCSe ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6446425897719835}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) )", "obj1": 0.9907407407407407, "obj2": 0.00466650915314632}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.5567879895841681}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.11055488941620817}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( Max( ( ( ( BR / PN ) + MDR ) * ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( ACS * ACS ) ) / FirstVNF_RAM ) / ( FirstVNF_RAM + ( Const / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( Min( ( ( MUC + Min( MUC ,RMSe ) ) - ( MUC + Min( MUC ,RMSe ) ) ) ,CS ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.11055488941620817}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}], "12": [{"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,CS ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "Min( ( ( MRS + CRS ) / MDR ) ,( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / MUM ) - MUR ) - ( MUR * Max( CS,DS ) ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7, "obj2": 0.2922698132838131}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Const * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUC ,Min( ( RMSe * ( ( RCSe + MUC ) * CS ) ) ,RMSe ) ),( ( ( Max( RCSe,Min( RRSe ,DS ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) - ( MLU + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.340205279963678}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - MDR ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( CS - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.4185185185185185, "obj2": 0.5054950331986027}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( Min( Const ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( Max( MUR,( Min( MUM ,RMSe ) / ( MUR / MUR ) ) ) - MUR ) )", "obj1": 0.3962962962962963, "obj2": 0.5340864794635398}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( CS + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( Min( RRSe ,Max( ( DS - DS ),RMSe ) ) / MUR ) + RCSe ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5085859959629774}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( RRSe ,MUR ) + ( DS * MUR ) ) / RCSe ) - RCSe ) * Max( MUM,RMSe ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) )", "choosing": "Min( Min( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7537037037037037, "obj2": 0.11408368926020254}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / MUR ) - RMSe ) / ( RCSe / ( ( MUR + RCSe ) + RCSe ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6446425897719835}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( Max( ( AMS / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Max( ( RCSe / DS ),( MUM - DS ) ) / DS ),( MUM - DS ) )", "obj1": 0.11851851851851852, "obj2": 0.8409179859476577}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.2351851851851852, "obj2": 0.6583756270866485}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.11055488941620817}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( Max( ( ARS / FirstVNF_Mem ),( RRS * MRS ) ) * MRS ) * ( CRS / DDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1388888888888889, "obj2": 0.7690000286295159}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Max( ( ( ( BR / PN ) + MDR ) * ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( ACS * ACS ) ) / FirstVNF_RAM ) / ( FirstVNF_RAM + ( Const / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( Min( ( ( MUC + Min( MUC ,RMSe ) ) - ( MUC + Min( MUC ,RMSe ) ) ) ,CS ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( FirstVNF_CPU - ACS ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 0.13703703703703704, "obj2": 0.7695563571981268}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}], "13": [{"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - Max( PN,( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_Mem,CRS ) ) ) ) + ACS ) ) )", "choosing": "( ( ( Min( Max( ( DS * MUR ),MUM ) ,Min( ( CS / RMSe ) ,DS ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.7, "obj2": 0.2722820972622934}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Const * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUC ,Min( ( RMSe * ( ( RCSe + MUC ) * CS ) ) ,RMSe ) ),( ( ( Max( RCSe,Min( RRSe ,DS ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) - ( MLU + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.340205279963678}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "( Min( Const ,( Min( ( RRS * FirstVNF_RAM_Server ) ,RRS ) * ( FirstVNF_RAM_Server / BR ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( MUM - ( ( RMSe / MLU ) * ( MLU - ( DS * RMSe ) ) ) ) + ( DS * RMSe ) )", "obj1": 0.9333333333333333, "obj2": 0.043214023378340856}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) * ( Min( ARS ,ACS ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RMSe ) - CS ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05580694151403821}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( RRSe ,MUR ) + ( DS * MUR ) ) / RCSe ) - RCSe ) * Max( MUM,RMSe ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) )", "choosing": "Min( Min( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7537037037037037, "obj2": 0.11408368926020254}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( Min( Const ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( Max( MUR,( Min( MUM ,RMSe ) / ( MUR / MUR ) ) ) - MUR ) )", "obj1": 0.3962962962962963, "obj2": 0.5340864794635398}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / MUR ) - RMSe ) / ( RCSe / ( ( MUR + RCSe ) + RCSe ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6446425897719835}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( Max( ( AMS / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Max( ( RCSe / DS ),( MUM - DS ) ) / DS ),( MUM - DS ) )", "obj1": 0.11851851851851852, "obj2": 0.8409179859476577}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.11055488941620817}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - Max( ( AMS / FirstVNF_RAM ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( Min( ( RRSe * Max( ( MUR + RRSe ),MUC ) ) ,RCSe ) - RRSe ) + CS ) )", "obj1": 0.9222222222222223, "obj2": 0.052996181288247256}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "( ( MUM - CS ) + ( DS * RMSe ) )", "obj1": 0.9296296296296296, "obj2": 0.044774677144949045}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ACS + ( BR - ( PN / ( ( FirstVNF_RAM - ( MRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( RRSe / Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.5255671276016762}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Max( ( ( ( BR / PN ) + MDR ) * ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( ACS * ACS ) ) / FirstVNF_RAM ) / ( FirstVNF_RAM + ( Const / Const ) ) ) - Const ) ),FirstVNF_RAM ) ,( ( FirstVNF_Mem / ( CRS + RRS ) ) - ARS ) )", "choosing": "Min( Min( ( ( MUC + Min( MUC ,RMSe ) ) - ( MUC + Min( MUC ,RMSe ) ) ) ,CS ) ,( RCSe - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.644128198650585}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( ( MDR / ACS ) - Max( FirstVNF_CPU,Const ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "( ( Min( ( ( ( MUM * RRSe ) + MLU ) * RMSe ) ,( MUM + RCSe ) ) - MUC ) + Min( ( RCSe + ( CS / ( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( MLU + MUM ) ),Min( DS ,DS ) ) ) ) ) ,RRSe ) )", "obj1": 0.9277777777777778, "obj2": 0.04791432559911659}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( CRS / FirstVNF_Mem ) - Min( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,DDR ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( MUC - CS ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 0.14074074074074075, "obj2": 0.7684177478741293}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.39814814814814814, "obj2": 0.5297865188522194}, {"determining": "( ( FirstVNF_CPU_Server / Const ) / ( ( BR - MDR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.9981481481481481, "obj2": 0.00088169776158228}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}], "14": [{"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Const * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUC ,Min( ( RMSe * ( ( RCSe + MUC ) * CS ) ) ,RMSe ) ),( ( ( Max( RCSe,Min( RRSe ,DS ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) - ( MLU + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.340205279963678}, {"determining": "( ( ( CRS - ( Max( CRS,( ARS + ( Min( BR ,Const ) * ACS ) ) ) * Const ) ) + Min( AMS ,AMS ) ) * ( Max( ACS,FirstVNF_RAM_Server ) - AMS ) )", "choosing": "( ( ( Max( Min( RRSe ,DS ),RRSe ) - ( MUR * ( ( ( Min( RRSe ,MUM ) - DS ) / Min( MUR ,MUM ) ) * ( MUM - CS ) ) ) ) + MUM ) - ( RRSe / ( ( CS - MUM ) / Max( MUC,MUM ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.2881886565775457}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "( ( ( ( ACS * ARS ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 0.5, "obj2": 0.43878205931488323}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "( MRS - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - ( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS * MLU ) ) + ( MUM * MUM ) )", "obj1": 0.7018518518518518, "obj2": 0.2709815516105121}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,Max( MUC,MLU ) ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6962962962962963, "obj2": 0.27797336834455694}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( RRSe ,MUR ) + ( DS * MUR ) ) / RCSe ) - RCSe ) * Max( MUM,RMSe ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) )", "choosing": "Min( Min( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7537037037037037, "obj2": 0.11408368926020254}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / MUR ) - RMSe ) / ( RCSe / ( ( MUR + RCSe ) + RCSe ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6446425897719835}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( Max( ( AMS / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Max( ( RCSe / DS ),( MUM - DS ) ) / DS ),( MUM - DS ) )", "obj1": 0.11851851851851852, "obj2": 0.8409179859476577}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.11055488941620817}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( MUC - CS ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 0.14074074074074075, "obj2": 0.7684177478741293}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012435144757762409}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( ACS - FirstVNF_Mem_Server ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( Max( MUC,MLU ) * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6981481481481482, "obj2": 0.27497841083637514}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( FirstVNF_CPU_Server / Const ) - ( ( MDR - BR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "Min( ( MUR - ( ( ( MUR * MUR ) * RCSe ) * DS ) ) ,( MLU - MLU ) )", "obj1": 0.25925925925925924, "obj2": 0.6439658560109017}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - Max( PN,( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_Mem,CRS ) ) ) ) + ACS ) ) )", "choosing": "( ( ( Min( Max( ( DS * MUR ),MUM ) ,Min( ( CS / RMSe ) ,DS ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.7, "obj2": 0.2722820972622934}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( CRS + BR ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.9944444444444445, "obj2": 0.002428132500720676}, {"determining": "( ( FirstVNF_CPU_Server / Const ) / ( ( BR - MDR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.9981481481481481, "obj2": 0.00088169776158228}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,AMS ) * ( CRS - ( FirstVNF_Mem_Server * Max( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,( ACS + FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) ) * Min( ( ARS + BR ) ,ACS ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - DS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,AMS ) * ( CRS - ( FirstVNF_Mem_Server * Max( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,( MDR + FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) ) * Min( ( ARS + BR ) ,ACS ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Min( MUC ,DS ) ,RCSe ) ,( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Const * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUC ,Min( ( RMSe * ( ( RCSe + MUC ) * CS ) ) ,RMSe ) ),( ( ( Max( RCSe,Min( RRSe ,DS ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) - ( MLU + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.340205279963678}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "( ( ( ( ACS * ARS ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 0.5, "obj2": 0.43878205931488323}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + ( MUC / Min( MUM ,MUR ) ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2, "obj2": 0.7117894350590249}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( MUR ,RRSe ) + ( DS * MUR ) ) / RCSe ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) )", "choosing": "Min( Min( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7537037037037037, "obj2": 0.11408368926020254}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( ( CRS - ( RRS / FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM + MUC ) ) + ( ( ( RRSe + MUC ) - ( MUM + MUC ) ) - Max( RCSe,MUM ) ) )", "obj1": 0.2574074074074074, "obj2": 0.644334398796752}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( Max( ( AMS / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Max( ( RCSe / DS ),( MUM - DS ) ) / DS ),( MUM - DS ) )", "obj1": 0.11851851851851852, "obj2": 0.8409179859476577}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - MUC ) )", "obj1": 0.7574074074074074, "obj2": 0.11055488941620817}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( MUC - CS ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 0.14074074074074075, "obj2": 0.7684177478741293}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012435144757762409}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( FirstVNF_CPU_Server / Const ) - ( ( MDR - BR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "Min( ( MUR - ( ( ( MUR * MUR ) * RCSe ) * DS ) ) ,( MLU - MLU ) )", "obj1": 0.25925925925925924, "obj2": 0.6439658560109017}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS * ( ( ( DDR - Min( Max( ( AMS / FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) ,PN ) ) + CRS ) * Const ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( ( ( MUC / RMSe ) + Max( MUR,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ) + Min( ( DS - ( ( ( MUC / MUM ) - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0022065431971396987}, {"determining": "( ( FirstVNF_CPU_Server / Const ) / ( ( BR - MDR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.9981481481481481, "obj2": 0.00088169776158228}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( RRSe ,MUR ) + ( DS * MUR ) ) / RCSe ) - RCSe ) * Max( MUM,RMSe ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,AMS ) * ( CRS - ( FirstVNF_Mem_Server * Max( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,( ACS + FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) ) * Min( ( ARS + BR ) ,ACS ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - DS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,AMS ) * ( CRS - ( FirstVNF_Mem_Server * Max( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,( MDR + FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) ) * Min( ( ARS + BR ) ,ACS ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS + ( ( ARS - ( ARS / AMS ) ) - MDR ) ) ,ACS ) * ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS - ( Max( ( ( MDR * ( FirstVNF_Mem_Server * ACS ) ) * Min( FirstVNF_CPU_Server ,( MDR + FirstVNF_Mem_Server ) ) ),Min( DDR ,RRS ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUR / ( MUR + MUR ) ) / ( RMSe - MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "Min( ( Max( Max( ( ( RRS * DDR ) + Max( BR,AMS ) ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ) / FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( MUM + ( CS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Min( MUC ,DS ) ,RCSe ) ,( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.24565201301363154}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Const * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUC ,Min( ( RMSe * ( ( RCSe + MUC ) * CS ) ) ,RMSe ) ),( ( ( Max( RCSe,Min( RRSe ,DS ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) - ( MLU + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.340205279963678}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "( ( PN - ( ( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ,AMS ) ) + MDR ) ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - Max( ( MRS * ( FirstVNF_Mem_Server + PN ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ACS ) ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM + MUC ) ) + ( ( RMSe / DS ) - Max( RCSe,MUM ) ) )", "obj1": 0.5740740740740741, "obj2": 0.3833588288791138}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( Min( ( ( FirstVNF_Mem / MRS ) * ( AMS / FirstVNF_CPU ) ) ,BR ) * MRS ) + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU_Server * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Max( ( ( Max( MUM,( RMSe / ( RMSe / DS ) ) ) / MUM ) * ( CS / MUM ) ),MUR ) / ( DS / RRSe ) ) )", "obj1": 0.12222222222222222, "obj2": 0.8153030643501027}, {"determining": "( ( ( ( ACS * ARS ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 0.5, "obj2": 0.43878205931488323}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 0.5888888888888889, "obj2": 0.365912671381057}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + ( MUC / Min( MUM ,MUR ) ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2, "obj2": 0.7117894350590249}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( MUC,( RCSe + RRSe ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9685185185185186, "obj2": 0.019813872869000316}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS - MUR ),MUC ) ) ) ) - ( CS + CS ) )", "obj1": 0.7518518518518519, "obj2": 0.10901600434500183}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( ( CRS / ( ARS + ( ( FirstVNF_Mem + MRS ) - Min( RRS ,RRS ) ) ) ) * MDR ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( RRSe - ( MUM + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7391092412593231}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( AMS / ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,CS ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( ( MUR / DS ) + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8486683572215905}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( ( CRS - ( RRS / FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM + MUC ) ) + ( ( ( RRSe + MUC ) - ( MUM + MUC ) ) - Max( RCSe,MUM ) ) )", "obj1": 0.2574074074074074, "obj2": 0.644334398796752}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - FirstVNF_Mem ) - ( CRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR - Min( RRSe ,Max( DS,RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21666666666666667, "obj2": 0.6849706430463829}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( Max( ( AMS / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Max( ( RCSe / DS ),( MUM - DS ) ) / DS ),( MUM - DS ) )", "obj1": 0.11851851851851852, "obj2": 0.8409179859476577}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Max( ( ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( ( ( Min( PN ,FirstVNF_RAM_Server ) / CRS ) - FirstVNF_Mem ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe / CS ) - RMSe ) / ( RCSe / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6401935924247748}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( ( ( MUC - CS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( MUC - CS ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 0.14074074074074075, "obj2": 0.7684177478741293}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( Max( ( PN * ARS ),Min( RRS ,BR ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7661320652617589}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "( ( FirstVNF_CPU_Server / Const ) - ( ( MDR - BR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "Min( ( MUR - ( ( ( MUR * MUR ) * RCSe ) * DS ) ) ,( MLU - MLU ) )", "obj1": 0.25925925925925924, "obj2": 0.6439658560109017}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS * ( ( ( DDR - Min( Max( ( AMS / FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) ,PN ) ) + CRS ) * Const ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( ( ( MUC / RMSe ) + Max( MUR,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ) + Min( ( DS - ( ( ( MUC / MUM ) - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0022065431971396987}, {"determining": "( ( FirstVNF_CPU_Server / Const ) / ( ( BR - MDR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.9981481481481481, "obj2": 0.00088169776158228}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( MUR ,RRSe ) + ( DS * MUR ) ) / RCSe ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,AMS ) * ( CRS - ( FirstVNF_Mem_Server * Max( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,( ACS + FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) ) * Min( ( ARS + BR ) ,ACS ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - DS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "Min( ( Max( Max( ( ( RRS * DDR ) + Max( BR,AMS ) ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ) / FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( MUM + ( CS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ( ( RRS * DDR ) + Max( BR,AMS ) ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ) / FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( MUM + ( CS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( Min( ( ( FirstVNF_Mem / MRS ) * ( AMS / FirstVNF_CPU ) ) ,BR ) * MRS ) + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU_Server * DDR ) - MRS ) )", "choosing": "( ( MUC / MLU ) + ( Max( ( ( Max( MUM,( RMSe / ( RMSe / DS ) ) ) / MUM ) * ( CS / MUM ) ),MUR ) / ( DS / RRSe ) ) )", "obj1": 0.12222222222222222, "obj2": 0.8153030643501027}, {"determining": "( ( ( ( ACS * ARS ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 0.5, "obj2": 0.43878205931488323}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( PN - ( Max( FirstVNF_Mem_Server,Min( ( Max( FirstVNF_RAM,( FirstVNF_Mem - BR ) ) * FirstVNF_Mem_Server ) ,AMS ) ) + MDR ) ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - Max( ( MRS * ( Min( BR ,MDR ) + PN ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ACS ) ) )", "choosing": "( ( Min( MUC ,( DS - RRSe ) ) / Min( ( Max( ( RRSe + RMSe ),Min( ( MUC + MLU ) ,DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( DS - RRSe ) ) )", "obj1": 0.587037037037037, "obj2": 0.3622772081064366}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Const * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUC ,Min( ( RMSe * ( ( RCSe + MUC ) * CS ) ) ,RMSe ) ),( ( ( Max( RCSe,Min( RRSe ,DS ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) - ( MLU + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.340205279963678}, {"determining": "( ( PN - ( ( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ,AMS ) ) + MDR ) ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - Max( ( MRS * ( FirstVNF_Mem_Server + PN ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ACS ) ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM + MUC ) ) + ( ( RMSe / DS ) - Max( RCSe,MUM ) ) )", "obj1": 0.5740740740740741, "obj2": 0.3833588288791138}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + ( MUC / Min( MUM ,MUR ) ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2, "obj2": 0.7117894350590249}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( FirstVNF_Mem_Server * Max( PN,MRS ) ) - ( AMS * ( ( CRS + ( DDR - Min( Min( ( AMS + FirstVNF_RAM ) ,( AMS - FirstVNF_Mem ) ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) * Min( AMS ,AMS ) ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + RMSe ) - Max( ( RRSe + MLU ),DS ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * Max( MUR,MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.5685185185185185, "obj2": 0.39229784806093515}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( MUC,( RCSe + RRSe ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9685185185185186, "obj2": 0.019813872869000316}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) * Min( ( MRS - RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( Max( RMSe,CS ),( MUR / DS ) ) ),( MUM / DS ) ) + ( MUM - ( ( RMSe * MLU ) * Min( MUC ,Min( ( ( DS + Min( MUR ,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ,MLU ) ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8363792990929294}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS - MUR ),MUC ) ) ) ) - ( CS + CS ) )", "obj1": 0.7518518518518519, "obj2": 0.10901600434500183}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( Max( ( AMS / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Max( ( RCSe / DS ),( MUM - DS ) ) / DS ),( MUM - DS ) )", "obj1": 0.11851851851851852, "obj2": 0.8409179859476577}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( MUR ,RRSe ) + ( DS * MUR ) ) / RCSe ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS * ( ( ( DDR - Min( Max( ( AMS / FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) ,PN ) ) + CRS ) * Const ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( ( ( MUC / RMSe ) + Max( MUR,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ) + Min( ( DS - ( ( ( MUC / MUM ) - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0022065431971396987}, {"determining": "( ( FirstVNF_CPU_Server / Const ) / ( ( BR - MDR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.9981481481481481, "obj2": 0.00088169776158228}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Min( MUC ,DS ) ,RCSe ) ,( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,AMS ) * ( CRS - ( FirstVNF_Mem_Server * Max( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,( ACS + FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) ) * Min( ( ARS + BR ) ,ACS ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - DS ) * ( CS - Max( Max( ( RCSe * DS ),MLU ),( MLU - ( ( RRSe / MUR ) + ( DS / MUR ) ) ) ) ) ) - MUC ) - ( ( RCSe - RRSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "Min( Max( Max( Max( Max( MDR,MDR ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ),FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RCSe ,( MUC + ( ( ( ( DS + RRSe ) * DS ) + Max( RCSe,( MLU * RMSe ) ) ) + Max( Min( MLU ,DS ),( MLU / CS ) ) ) ) ) ,( ( MLU * ( CS / RMSe ) ) / Max( Max( Max( ( Min( RMSe ,Max( MUC,MLU ) ) * MUM ),( Min( Max( MLU,CS ) ,MUR ) - ( RMSe - ( CS * MUC ) ) ) ),MLU ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ( ( RRS * DDR ) + Max( BR,AMS ) ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ) / FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( MUM + ( CS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( RCSe ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.7277777777777777, "obj2": 0.12142629609158354}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "( ( ( ( ACS * ARS ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 0.5, "obj2": 0.43878205931488323}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( PN - ( Max( FirstVNF_Mem_Server,Min( ( Max( FirstVNF_RAM,( FirstVNF_Mem - BR ) ) * FirstVNF_Mem_Server ) ,AMS ) ) + MDR ) ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - Max( ( MRS * ( Min( BR ,MDR ) + PN ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ACS ) ) )", "choosing": "( ( Min( MUC ,( DS - RRSe ) ) / Min( ( Max( ( RRSe + RMSe ),Min( ( MUC + MLU ) ,DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( DS - RRSe ) ) )", "obj1": 0.587037037037037, "obj2": 0.3622772081064366}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Const * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUC ,Min( ( RMSe * ( ( RCSe + MUC ) * CS ) ) ,RMSe ) ),( ( ( Max( RCSe,Min( RRSe ,DS ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) - ( MLU + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.340205279963678}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + ( MUC / Min( MUM ,MUR ) ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2, "obj2": 0.7117894350590249}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( MUC,( RCSe + RRSe ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9685185185185186, "obj2": 0.019813872869000316}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS - MUR ),MUC ) ) ) ) - ( CS + CS ) )", "obj1": 0.7518518518518519, "obj2": 0.10901600434500183}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS * ( ( ( DDR - Min( Max( ( AMS / FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) ,PN ) ) + CRS ) * Const ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( ( ( MUC / RMSe ) + Max( MUR,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ) + Min( ( DS - ( ( ( MUC / MUM ) - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0022065431971396987}, {"determining": "( ( FirstVNF_CPU_Server / Const ) / ( ( BR - MDR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.9981481481481481, "obj2": 0.00088169776158228}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( MUR ,RRSe ) + ( DS * MUR ) ) / RCSe ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( Max( Max( ( ( RRS * DDR ) + Max( BR,AMS ) ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ) / FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( MUM + ( CS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Min( MUC ,DS ) ,RCSe ) ,( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "Min( Max( Max( Max( Max( Max( Const,AMS ),MDR ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / DDR ) / ( FirstVNF_CPU_Server * Const ) ) ),FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RCSe ,( MUC + ( ( Min( ( ( MUR + RRSe ) * ( MUR / MUM ) ) ,DS ) + Max( RCSe,( MLU * RMSe ) ) ) + Max( Min( MLU ,DS ),( MLU / CS ) ) ) ) ) ,( ( MLU * ( CS / ( Max( MUC,DS ) / ( MUR + RRSe ) ) ) ) / Max( Max( Max( ( Min( RMSe ,Max( MUC,MLU ) ) * MUM ),( Min( ( MLU * CS ) ,MUR ) - ( RMSe - ( CS * MUC ) ) ) ),MLU ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Max( Max( MDR,MDR ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ),FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RCSe ,( MUC + ( ( ( ( DS + RRSe ) * DS ) + Max( RCSe,( MLU * RMSe ) ) ) + Max( Min( MLU ,DS ),( MLU / CS ) ) ) ) ) ,( ( MLU * ( CS / RMSe ) ) / Max( Max( Max( ( Min( RMSe ,Max( MUC,MLU ) ) * MUM ),( Min( Max( MLU,CS ) ,MUR ) - ( RMSe - ( CS * MUC ) ) ) ),MLU ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( ARS - Max( Max( Const,FirstVNF_RAM ),( ( MDR - AMS ) - PN ) ) ) ,( MDR * ( CRS * FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( Max( RCSe,( MLU + ( Min( DS ,MLU ) * Max( CS,RMSe ) ) ) ) + DS ) - MUR ) )", "obj1": 0.5425925925925926, "obj2": 0.4365599344885877}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "( ( ( ( ACS * ARS ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 0.5, "obj2": 0.43878205931488323}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( PN - ( Max( FirstVNF_Mem_Server,Min( ( Max( FirstVNF_RAM,( FirstVNF_Mem - BR ) ) * FirstVNF_Mem_Server ) ,AMS ) ) + MDR ) ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - Max( ( MRS * ( Min( BR ,MDR ) + PN ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ACS ) ) )", "choosing": "( ( Min( MUC ,( DS - RRSe ) ) / Min( ( Max( ( RRSe + RMSe ),Min( ( MUC + MLU ) ,DS ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( DS - RRSe ) ) )", "obj1": 0.587037037037037, "obj2": 0.3622772081064366}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + ( MUC / Min( MUM ,MUR ) ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2, "obj2": 0.7117894350590249}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( DDR - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) + MLU ) - CS ) - ( MLU + RRSe ) )", "obj1": 0.5444444444444444, "obj2": 0.4072303500191198}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( MUC,( RCSe + RRSe ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9685185185185186, "obj2": 0.019813872869000316}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( MUR ,RRSe ) + ( DS * MUR ) ) / RCSe ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR - MDR ) )", "choosing": "Min( ( MUR - ( Min( RRSe ,Max( DS,RMSe ) ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.2222222222222222, "obj2": 0.670691312626251}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS * ( ( ( DDR - Min( Max( ( AMS / FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) ,PN ) ) + CRS ) * Const ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( ( ( MUC / RMSe ) + Max( MUR,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ) + Min( ( DS - ( ( ( MUC / MUM ) - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0022065431971396987}, {"determining": "( ( FirstVNF_CPU_Server / Const ) / ( ( BR - MDR ) - Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Min( ( ( ( ( RCSe * Max( ( MUC - MLU ),( RRSe - RMSe ) ) ) - Max( DS,MUC ) ) / Max( ( RMSe + ( MLU + Max( MLU,MLU ) ) ),( Min( ( CS / RMSe ) ,Min( RMSe ,MUR ) ) * RCSe ) ) ) - Min( MLU ,MLU ) ) ,( MUR - MLU ) ) + ( Min( MUR ,( CS + RCSe ) ) + RCSe ) )", "obj1": 0.9981481481481481, "obj2": 0.00088169776158228}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( Max( Max( ( ( RRS * DDR ) + Max( BR,AMS ) ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ) / FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( MUM + ( CS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ( ( RRS * DDR ) + Max( BR,AMS ) ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ) / FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( MUM + ( CS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Min( MUC ,DS ) ,RCSe ) ,( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ACS ) ,( ( MRS - PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( FirstVNF_RAM * ( Max( Max( ( CRS - FirstVNF_CPU_Server ),FirstVNF_RAM ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * MRS ) ) - ( ( FirstVNF_RAM * ( Max( Max( ( CRS - FirstVNF_CPU_Server ),FirstVNF_RAM ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * MRS ) ) / DDR ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM / MUC ) ) + ( ( ( ( Max( MUR,MUC ) / Min( Min( DS ,MUC ) ,MLU ) ) / Min( Min( DS ,MUC ) ,MLU ) ) - MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Max( Max( Max( Const,AMS ),MDR ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / DDR ) / ( FirstVNF_CPU_Server * Const ) ) ),FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RCSe ,( MUC + ( ( Min( ( ( MUR + RRSe ) * ( MUR / MUM ) ) ,DS ) + Max( RCSe,( MLU * RMSe ) ) ) + Max( Min( MLU ,DS ),( MLU / CS ) ) ) ) ) ,( ( MLU * ( CS / ( Max( MUC,DS ) / ( MUR + RRSe ) ) ) ) / Max( Max( Max( ( Min( RMSe ,Max( MUC,MLU ) ) * MUM ),( Min( ( MLU * CS ) ,MUR ) - ( RMSe - ( CS * MUC ) ) ) ),MLU ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( ( AMS / FirstVNF_RAM ) / Const ) - ( ARS / FirstVNF_Mem ) )", "choosing": "( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.5481481481481482, "obj2": 0.39810571788692883}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( ( ( ACS * ARS ) / Max( ACS,Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "Min( Min( Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,RRSe ) ,MUC ) ,Max( Max( ( MUM - CS ),Min( RRSe ,RCSe ) ),RCSe ) ) ) ) ,RRSe ) ,( RCSe - MUC ) )", "obj1": 0.5, "obj2": 0.43878205931488323}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + ( MUC / Min( MUM ,MUR ) ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2, "obj2": 0.7117894350590249}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( MUC,( RCSe + RRSe ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9685185185185186, "obj2": 0.019813872869000316}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ACS * ARS ) / Max( ( MDR / ACS ),Const ) ) + Min( ( PN - Const ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) + Max( ( ( ARS / ( DDR + AMS ) ) + Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ),ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( Min( ( DS / RMSe ) ,RRSe ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.4888888888888889, "obj2": 0.450025539066831}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( ( Min( BR ,MDR ) - ( ( BR / PN ) + MDR ) ) + ACS ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Max( RMSe,( DS * MUR ) ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / ( ( Min( MUR ,CS ) - MUM ) * DS ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7174709633032218}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( MDR / FirstVNF_Mem ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,CS )", "obj1": 0.9925925925925926, "obj2": 0.004370622994226806}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( RRS ,BR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUM / DS ),RMSe ) )", "obj1": 0.15, "obj2": 0.7555971736349236}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS * ( ( ( DDR - Min( Max( ( AMS / FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) ,PN ) ) + CRS ) * Const ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( ( ( MUC / RMSe ) + Max( MUR,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ) + Min( ( DS - ( ( ( MUC / MUM ) - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0022065431971396987}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( ( ( ( ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( Min( RMSe ,MUR ) / RRSe ) - ( CS + CS ) )", "obj1": 0.9981481481481481, "obj2": 0.0003914136064864442}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.9981481481481481, "obj2": 0.0003914136064864442}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( MUR ,RRSe ) + ( DS * MUR ) ) / RCSe ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( Max( Max( Max( Max( MDR,MDR ),FirstVNF_CPU ),( ( FirstVNF_CPU_Server / AMS ) / RRS ) ),FirstVNF_CPU ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RCSe ,( MUC + ( ( ( ( DS + RRSe ) * DS ) + Max( RCSe,( MLU * RMSe ) ) ) + Max( Min( MLU ,DS ),( MLU / CS ) ) ) ) ) ,( ( MLU * ( CS / RMSe ) ) / Max( Max( Max( ( Min( RMSe ,Max( MUC,MLU ) ) * MUM ),( Min( Max( MLU,CS ) ,MUR ) - ( RMSe - ( CS * MUC ) ) ) ),MLU ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "Min( ( ( PN * ( ( PN * PN ) / ARS ) ) - ( FirstVNF_Mem_Server / MRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( ( MUC - RRSe ) * MUC ) ) + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( Max( Max( ( CRS - FirstVNF_CPU_Server ),FirstVNF_RAM ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * MRS ) ) - ( ( FirstVNF_RAM * ( Max( Max( ( CRS - FirstVNF_CPU_Server ),FirstVNF_RAM ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * MRS ) ) / DDR ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM / MUC ) ) + ( ( ( ( Max( MUR,MUC ) / Min( Min( DS ,MUC ) ,MLU ) ) / Min( Min( DS ,MUC ) ,MLU ) ) - MUR ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( MUC,( RCSe + RRSe ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9685185185185186, "obj2": 0.019813872869000316}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( RRSe + Max( ( ( ( ( Min( MUR ,RRSe ) + ( DS * MUR ) ) / RCSe ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( RRSe * MUR ) ) ) - ( CS * RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( BR ,BR ) ) - Min( ( ARS * FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( RRS / FirstVNF_Mem ),( CRS / MRS ) ),( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) / ( RRS - BR ) ) )", "choosing": "( ( ( RCSe / ( MUM / ( MLU + RCSe ) ) ) / CS ) + ( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ) - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6375934896470449}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.9925925925925926, "obj2": 0.002773544998687966}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( Min( Max( ( CRS / FirstVNF_Mem ),( AMS - MRS ) ) ,CRS ) ,PN )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( Max( MUM,CS ),( RRSe * MUR ) ) * Min( RRSe ,Max( DS,MUR ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.7743358441731625}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6712150061255422}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( AMS * ( ( ( DDR - Min( Max( ( AMS / FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) ,PN ) ) + CRS ) * Const ) ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( ( ( MUC / RMSe ) + Max( MUR,RMSe ) ) - Max( MUR,( CS - MUR ) ) ) ) + Min( ( DS - ( ( ( MUC / MUM ) - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) / ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0022065431971396987}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.002773544998687966}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}], "22": [{"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( ( MUC - RRSe ) * MUC ) ) + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * PN ) / ARS ) ) - ( FirstVNF_Mem_Server / MRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( ( MUC - RRSe ) * MUC ) ) + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ),Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.8722222222222222, "obj2": 0.0949013784026367}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( BR / FirstVNF_CPU ) * ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( Min( AMS ,Min( ( ( FirstVNF_CPU_Server / BR ) * FirstVNF_CPU ) ,CRS ) ) / BR ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( ( ( Min( CS ,MUC ) - CS ) / CS ) - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.5518518518518518, "obj2": 0.38215892912308563}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( MUC,( RCSe + RRSe ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9685185185185186, "obj2": 0.019813872869000316}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( Max( Max( FirstVNF_Mem_Server,Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ,Min( CRS ,BR ) ) ),Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) / ACS ) ,( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUC + ( DS * DS ) ) ,RRSe ) ,Min( ( DS + RCSe ) ,( ( MUR + RMSe ) * ( MUM - ( ( MUM * ( ( MUC + CS ) / MUC ) ) * RMSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10860895793806019}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( MDR * ( Max( Min( MRS ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) )", "obj1": 0.20185185185185187, "obj2": 0.7006372447850227}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) / ( RRS - BR ) ) )", "choosing": "( ( ( RCSe / ( MUM / ( MLU + RCSe ) ) ) / CS ) + ( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ) - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6375934896470449}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.9925925925925926, "obj2": 0.002773544998687966}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( ( MRS * FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) ),( RRS / ARS ) )", "choosing": "( ( MLU + RRSe ) - ( ( MUR + MUR ) * Min( MUR ,CS ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6334999351340176}, {"determining": "( ( ARS * MRS ) / Min( ( FirstVNF_RAM_Server / BR ) ,( FirstVNF_Mem + ( BR - ( PN / ( ( ( Const - FirstVNF_Mem ) - ( MRS * FirstVNF_CPU ) ) + Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,CS ) / Min( ( Min( ( Max( RMSe,( MUR * DS ) ) * RCSe ) ,RCSe ) * RCSe ) ,RCSe ) ) * Min( MUC ,( MUC / RRSe ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6338459877988717}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( ( MUM * RRSe ) + MLU ) * RMSe ) ) - ( ( MUR - ( MUR * ( MUM * MLU ) ) ) / CS ) ) + Min( ( RCSe + ( ( ( ( Min( MUR ,RCSe ) / RMSe ) - CS ) - RMSe ) / CS ) ) ,RRSe ) )", "obj1": 0.9481481481481482, "obj2": 0.02326221991354168}], "23": [{"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( ( MUC - RRSe ) * MUC ) ) + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( ( MUC - RRSe ) * MUC ) ) + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ),Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.8722222222222222, "obj2": 0.0949013784026367}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUR ) + Min( RMSe ,RRSe ) )", "obj1": 0.48148148148148145, "obj2": 0.4526076429155074}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,DS ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5, "obj2": 0.40389657398552437}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "( ( FirstVNF_RAM + Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) ) - Max( AMS,( Const * ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) ) ) )", "choosing": "( ( RMSe - Min( ( MLU * ( MUR / RRSe ) ) ,Max( ( MUM / ( DS / MUR ) ),( MUR * Min( RMSe ,RRSe ) ) ) ) ) - ( RMSe - Min( ( MLU * ( MUR / RRSe ) ) ,Max( ( MUM / ( DS / MUR ) ),( MUR * Min( RMSe ,RRSe ) ) ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.07247408909168801}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( MDR * ( Max( Min( MRS ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) )", "obj1": 0.20185185185185187, "obj2": 0.7006372447850227}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) * BR ) - ARS ) * MDR ) ) / AMS ) * ( ( Min( MRS ,Min( DDR ,BR ) ) * ( BR - Min( ( PN - ARS ) ,Min( FirstVNF_RAM ,RRS ) ) ) ) + PN ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2388888888888889, "obj2": 0.6564046264171145}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) / ( RRS - BR ) ) )", "choosing": "( ( ( RCSe / ( MUM / ( MLU + RCSe ) ) ) / CS ) + ( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ) - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6375934896470449}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.9925925925925926, "obj2": 0.002773544998687966}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Min( ( FirstVNF_CPU_Server - ( Min( ACS ,MDR ) / BR ) ) ,MRS ) )", "choosing": "Min( ( ( RCSe + Min( ( DS - Max( RRSe,( MUM * DS ) ) ) ,( MLU - ( ( ( MUC - RRSe ) * DS ) + ( ( CS / MUM ) - ( RMSe + CS ) ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}], "24": [{"determining": "Min( ( MRS / FirstVNF_RAM_Server ) ,( BR / Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ) )", "choosing": "Min( ( ( CS - MUC ) + MUM ) ,Min( Max( Max( MLU,Max( ( Max( DS,Min( RMSe ,CS ) ) * RMSe ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * DS ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( ( MUC - RRSe ) * MUC ) ) + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ),Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.8722222222222222, "obj2": 0.0949013784026367}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( Const * ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) ) ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44365238368748616}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( ( MDR / ACS ) - Max( FirstVNF_CPU,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ( RRS + FirstVNF_CPU ) ) ) ) ) ) * ( Min( ARS ,ACS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MLU + DS ) ) - Max( Max( MUM,( ( MUM * RRSe ) + MUM ) ),Min( DS ,DS ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06923426350993629}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,DS ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5, "obj2": 0.40389657398552437}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( FirstVNF_RAM + Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) ) - Max( AMS,( Const * ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) ) ) )", "choosing": "( ( RMSe - Min( ( MLU * ( MUR / RRSe ) ) ,Max( ( MUM / ( DS / MUR ) ),( MUR * Min( RMSe ,RRSe ) ) ) ) ) - ( RMSe - Min( ( MLU * ( MUR / RRSe ) ) ,Max( ( MUM / ( DS / MUR ) ),( MUR * Min( RMSe ,RRSe ) ) ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.07247408909168801}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( MDR * ( Max( Min( MRS ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) )", "obj1": 0.20185185185185187, "obj2": 0.7006372447850227}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) * BR ) - ARS ) * MDR ) ) / AMS ) * ( ( Min( MRS ,Min( DDR ,BR ) ) * ( BR - Min( ( PN - ARS ) ,Min( FirstVNF_RAM ,RRS ) ) ) ) + PN ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2388888888888889, "obj2": 0.6564046264171145}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) / ( RRS - BR ) ) )", "choosing": "( ( ( RCSe / ( MUM / ( MLU + RCSe ) ) ) / CS ) + ( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ) - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6375934896470449}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.9925925925925926, "obj2": 0.002773544998687966}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( Min( Min( CS ,RMSe ) ,( RCSe - MUC ) ) - MUC ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + ( FirstVNF_RAM * Const ) ) ) / MRS ),DDR ) ,Min( AMS ,BR ) )", "choosing": "Max( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( DS / ( MUC * MUR ) ) ) ) ,DS ) / DS ),( MUM - DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6576164669080888}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7528128933820223}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}], "25": [{"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( ( MUM * ( ( Min( CS ,Min( Min( MUR ,CS ) ,CS ) ) - MLU ) / MUM ) ) ,MUM ) ,( ( RMSe * Min( ( MLU / ( RCSe * ( CS - CS ) ) ) ,Min( CS ,MLU ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / FirstVNF_RAM_Server ) ,( BR / Min( ( ( Const * RRS ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - Const ) ) ) )", "choosing": "Min( ( ( CS - MUC ) + MUM ) ,Min( Max( Max( MLU,Max( ( Max( DS,Min( RMSe ,CS ) ) * RMSe ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * DS ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( Const * ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) ) ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44365238368748616}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * Min( BR ,CRS ) )", "choosing": "( Max( MUM,Min( Min( MUM ,Min( RRSe ,Min( MUM ,MUM ) ) ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.8944444444444445, "obj2": 0.047141346321563235}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( BR / FirstVNF_CPU ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + CS ) ) ) - ( MUM + MUC ) )", "obj1": 0.9388888888888889, "obj2": 0.030302358672647037}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,DS ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5, "obj2": 0.40389657398552437}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( MDR * ( Max( Min( MRS ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) )", "obj1": 0.20185185185185187, "obj2": 0.7006372447850227}, {"determining": "Min( ( ( CRS - FirstVNF_Mem ) + Max( RRS,( ARS / FirstVNF_Mem ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUM - MUM ) ,( MLU - MLU ) )", "obj1": 0.26851851851851855, "obj2": 0.6374569307115953}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( BR / FirstVNF_CPU ) * ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) )", "choosing": "( ( RRSe - ( Max( MUM,Min( RRSe ,Min( MUM ,MUM ) ) ) / ( MLU + RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44365238368748616}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - ( ( ( Max( ARS,AMS ) + DDR ) - CRS ) / ( RRS - BR ) ) )", "choosing": "( ( ( RCSe / ( MUM / ( MLU + RCSe ) ) ) / CS ) + ( ( ( ( ( CS * MLU ) - CS ) * ( CS - MUM ) ) - RRSe ) - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6375934896470449}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) * BR ) - ARS ) * MDR ) ) / AMS ) * ( ( Min( MRS ,Min( DDR ,BR ) ) * ( BR - Min( ( PN - ARS ) ,Min( FirstVNF_RAM ,RRS ) ) ) ) + PN ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2388888888888889, "obj2": 0.6564046264171145}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS / FirstVNF_CPU ) - BR ) ,( BR / MDR ) ) - ( ( ( FirstVNF_Mem_Server / RRS ) - CRS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MUC / Min( MUM ,MUR ) ) / MLU ) + ( ( MUM - Min( ( Max( ( DS / RMSe ),( DS / MUR ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( MUC + RMSe ) )", "obj1": 0.9962962962962963, "obj2": 0.001734751447837303}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}], "26": [{"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( ( ( CS - MUC ) + MUM ) ,Min( Max( Max( MLU,Max( ( Max( DS,Min( CS ,CS ) ) * RMSe ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * DS ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( ( MUM * ( ( Min( CS ,Min( Min( MUR ,CS ) ,CS ) ) - MLU ) / MUM ) ) ,MUM ) ,( ( RMSe * Min( ( MLU / ( RCSe * ( CS - CS ) ) ) ,Min( CS ,MLU ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Const * PN ) - ( FirstVNF_RAM * ( DDR + MRS ) ) )", "choosing": "( ( DS * RMSe ) / Max( MLU,Min( RRSe ,Max( MLU,RMSe ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.0748808337802774}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( Const * ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) ) ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44365238368748616}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * Min( BR ,CRS ) )", "choosing": "( Max( MUM,Min( Min( MUM ,Min( RRSe ,Min( MUM ,MUM ) ) ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.8944444444444445, "obj2": 0.047141346321563235}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( BR / FirstVNF_CPU ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + CS ) ) ) - ( MUM + MUC ) )", "obj1": 0.9388888888888889, "obj2": 0.030302358672647037}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( Min( BR ,CRS ) * ( Max( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ),Max( PN,Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUM,Min( Min( ( Max( ( RRSe / ( MUM * CS ) ),( Min( RRSe ,MUM ) - ( MUC - CS ) ) ) * RMSe ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6372426845977062}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) * BR ) - ARS ) * MDR ) ) / AMS ) * ( ( Min( MRS ,Min( DDR ,BR ) ) * ( BR - Min( ( PN - ARS ) ,Min( FirstVNF_RAM ,RRS ) ) ) ) + PN ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2388888888888889, "obj2": 0.6564046264171145}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( MDR * ( Max( Min( MRS ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) )", "obj1": 0.20185185185185187, "obj2": 0.7006372447850227}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( BR / FirstVNF_CPU ) * ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) )", "choosing": "( ( RRSe - ( Max( MUM,Min( RRSe ,Min( MUM ,MUM ) ) ) / ( MLU + RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.013179759179859423}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44365238368748616}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( ( ( ( ( RRS - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( ( AMS + AMS ) * BR ) ) / BR ) ) - ACS ) + MRS ) - Max( RRS,DDR ) )", "choosing": "( ( RRSe / ( ( RCSe / MUC ) / Min( MLU ,Max( ( CS * MUR ),MUC ) ) ) ) - Max( MUC,( MLU * MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.012382898364559226}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,DS ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5, "obj2": 0.40389657398552437}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}], "27": [{"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( ( ( CS - MUC ) + MUM ) ,Min( Max( Max( MLU,Max( ( Max( DS,Min( CS ,CS ) ) * RMSe ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * DS ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( ( ( CS - MUC ) + MUM ) ,Min( Max( Max( MLU,Max( ( Max( DS,Min( CS ,CS ) ) * RMSe ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * DS ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( Const * ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) ) ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44365238368748616}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( AMS * BR ),FirstVNF_RAM_Server ) ) ,DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,Min( DS ,Min( MUM ,MUM ) ) ) ) ) - ( RMSe - ( RMSe / MUM ) ) )", "obj1": 0.42777777777777776, "obj2": 0.48997121567604884}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( BR / FirstVNF_CPU ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + CS ) ) ) - ( MUM + MUC ) )", "obj1": 0.9388888888888889, "obj2": 0.030302358672647037}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "( Min( BR ,CRS ) * ( Max( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ),Max( PN,Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUM,Min( Min( ( Max( ( RRSe / ( MUM * CS ) ),( Min( RRSe ,MUM ) - ( MUC - CS ) ) ) * RMSe ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6372426845977062}, {"determining": "( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * Min( BR ,CRS ) )", "choosing": "( Max( MUM,Min( Min( MUM ,Min( RRSe ,Min( MUM ,MUM ) ) ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.8944444444444445, "obj2": 0.047141346321563235}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( MDR * ( Max( Min( MRS ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) )", "obj1": 0.20185185185185187, "obj2": 0.7006372447850227}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( BR / FirstVNF_CPU ) * ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) )", "choosing": "( ( RRSe - ( Max( MUM,Min( RRSe ,Min( MUM ,MUM ) ) ) / ( MLU + RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( Min( MUM ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44365238368748616}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "( ( Min( ( BR - BR ) ,PN ) / Min( ( Const / FirstVNF_CPU_Server ) ,MRS ) ) + Max( Max( ( Max( MRS,FirstVNF_Mem_Server ) + FirstVNF_Mem ),Const ),MRS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6580565291305068}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,DS ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5, "obj2": 0.40389657398552437}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe - ( Max( RRSe,MLU ) - ( CS - MUM ) ) ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6854301047167095}], "28": [{"determining": "( Max( ( AMS / ACS ),DDR ) / Min( ( Min( ( PN / MRS ) ,DDR ) - AMS ) ,RRS ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( MUC * ( MUC - RRSe ) ) ) + RMSe ) * RCSe ) ) + ( ( RCSe * Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( DS * Min( MLU ,RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( ( ( CS - MUC ) + MUM ) ,Min( Max( Max( MLU,Max( ( Max( DS,Min( CS ,CS ) ) * RMSe ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * DS ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( DS / RMSe ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_RAM_Server ) ) ,DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( Min( RMSe ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44351519289557395}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( AMS * BR ),FirstVNF_RAM_Server ) ) ,DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,Min( DS ,Min( MUM ,MUM ) ) ) ) ) - ( RMSe - ( RMSe / MUM ) ) )", "obj1": 0.42777777777777776, "obj2": 0.48997121567604884}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * Min( RRSe ,Max( DS,MLU ) ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.9185185185185185, "obj2": 0.03450891355291369}, {"determining": "( ( BR / FirstVNF_CPU ) * ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + CS ) ) ) - ( MUM + MUC ) )", "obj1": 0.9388888888888889, "obj2": 0.030302358672647037}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( CRS ,FirstVNF_RAM_Server ) ) + ( ( Min( Max( Const,Const ) ,Max( ARS,RRS ) ) * ACS ) + FirstVNF_RAM ) ) ,Min( ( Max( AMS,Max( ( ACS + FirstVNF_CPU ),Min( Max( Max( ACS,FirstVNF_CPU ),CRS ) ,Min( Min( PN ,DDR ) ,( MRS - ARS ) ) ) ) ) - BR ) ,( ( PN / ( ARS + ( MDR / CRS ) ) ) - Min( Max( ( Max( Min( BR ,FirstVNF_RAM_Server ),AMS ) - RRS ),RRS ) ,( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( RCSe + RCSe ) ,Max( ( ( MLU + RMSe ) * Min( Min( MUM ,( DS / CS ) ) ,DS ) ),( Max( RRSe,( Min( Max( MUM,MUR ) ,RMSe ) * DS ) ) - MUM ) ) ) ,Max( Max( Max( ( Min( RRSe ,Min( MLU ,CS ) ) - CS ),( ( Max( CS,Max( RMSe,MUM ) ) - RRSe ) / MLU ) ),DS ),MUC ) )", "obj1": 0.8981481481481481, "obj2": 0.0446509135470206}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,( ( ( RRS - FirstVNF_RAM_Server ) / Const ) / MRS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( ( RMSe / DS ) * MUM ) * Max( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ),Max( ( MUC / RRSe ),RMSe ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.3888888888888889, "obj2": 0.5331430832710657}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( ( Min( CRS ,MDR ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,Const ) ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUM,Min( Min( ( Max( ( RRSe / ( MUM * CS ) ),( Min( DS ,MUM ) - ( MUC - CS ) ) ) * RMSe ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6372426845977062}, {"determining": "( ( BR / FirstVNF_CPU ) * ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) )", "choosing": "( ( RRSe - ( Max( MUM,Min( RRSe ,Min( MUM ,MUM ) ) ) / ( MLU + RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "( Min( BR ,CRS ) * ( Max( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ),Max( PN,Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUM,Min( Min( ( Max( ( RRSe / ( MUM * CS ) ),( Min( RRSe ,MUM ) - ( MUC - CS ) ) ) * RMSe ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6372426845977062}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "( ( Min( ( BR - BR ) ,PN ) / Min( ( Const / FirstVNF_CPU_Server ) ,MRS ) ) + Max( Max( ( Max( MRS,FirstVNF_Mem_Server ) + FirstVNF_Mem ),Const ),MRS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6580565291305068}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * Min( BR ,CRS ) )", "choosing": "( Max( MUM,Min( Min( MUM ,Min( RRSe ,Min( MUM ,MUM ) ) ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.8944444444444445, "obj2": 0.047141346321563235}, {"determining": "Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,DS ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5, "obj2": 0.40389657398552437}], "29": [{"determining": "( Max( ( AMS / ACS ),DDR ) / Min( ( Min( ( PN / MRS ) ,DDR ) - AMS ) ,RRS ) )", "choosing": "Min( Min( ( MUM * ( ( Min( CS ,Min( Min( MUR ,CS ) ,CS ) ) - MLU ) / MUM ) ) ,MUM ) ,( ( RMSe * Min( ( MLU / ( RCSe * ( CS - CS ) ) ) ,Min( CS ,MLU ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS / ACS ),DDR ) / Min( ( Min( ( PN / MRS ) ,DDR ) - AMS ) ,RRS ) )", "choosing": "( ( RMSe * ( ( ( MUM + ( MUC * ( MUC - RRSe ) ) ) + RMSe ) * RCSe ) ) + ( ( RCSe * Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( DS * Min( MLU ,RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4456474520347344}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_RAM_Server ) ) ,DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( Min( RMSe ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44351519289557395}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( Max( RRSe,RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( ( Max( ( MLU * RMSe ),RCSe ) / MLU ) * ( RRSe - RRSe ) ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9333333333333333, "obj2": 0.030066907617116338}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( Min( BR ,CRS ) * ( Max( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_Mem ,AMS ) ) + MRS ) ),Max( PN,Max( DDR,Const ) ) ) + ARS ) )", "choosing": "( Max( MUM,Min( Min( ( Max( ( RRSe / ( MUM * CS ) ),( Min( RRSe ,MUM ) - ( MUC - CS ) ) ) * RMSe ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6372426845977062}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( ( Min( CRS ,MDR ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,Const ) ) * Min( AMS ,AMS ) )", "choosing": "( Max( MUM,Min( Min( ( Max( ( RRSe / ( MUM * CS ) ),( Min( DS ,MUM ) - ( MUC - CS ) ) ) * RMSe ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6372426845977062}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5266389898143058}, {"determining": "( ( Min( ( BR - BR ) ,PN ) / Min( ( Const / FirstVNF_CPU_Server ) ,MRS ) ) + Max( Max( ( Max( MRS,FirstVNF_Mem_Server ) + FirstVNF_Mem ),Const ),MRS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6580565291305068}, {"determining": "( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * Min( BR ,CRS ) )", "choosing": "( Max( MUM,Min( Min( MUM ,Min( RRSe ,Min( MUM ,MUM ) ) ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.8944444444444445, "obj2": 0.047141346321563235}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}, {"determining": "Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,DS ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5, "obj2": 0.40389657398552437}], "30": [{"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( ( ( CS - RRSe ) + MUM ) ,Min( Max( Max( MLU,Max( ( RRSe + CS ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( MLU / DS ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS / ACS ),DDR ) / Min( ( Min( ( PN / MRS ) ,DDR ) - AMS ) ,RRS ) )", "choosing": "Min( Min( ( MUM * ( ( Min( CS ,Min( Min( MUR ,CS ) ,CS ) ) - MLU ) / MUM ) ) ,MUM ) ,( ( RMSe * Min( ( MLU / ( RCSe * ( CS - CS ) ) ) ,Min( CS ,MLU ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4456474520347344}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_RAM_Server ) ) ,DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( Min( RMSe ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44351519289557395}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,( ( RRS * ( Min( CRS ,FirstVNF_Mem ) + Min( CRS ,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) ) - FirstVNF_CPU_Server ) ,( ( Max( MDR,Max( Const,PN ) ) + MRS ) * ( ( ( ( FirstVNF_CPU_Server * CRS ) / ( ( PN + Const ) / ( DDR / FirstVNF_CPU_Server ) ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) + RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( ( Const * PN ) ,AMS ) ) ) ) )", "choosing": "( Max( Min( ( ( Min( RCSe ,MUR ) - ( MUC / Min( ( MUR * RRSe ) ,RRSe ) ) ) / MUC ) ,RMSe ),RMSe ) - ( MUM * MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( Min( ( ( ARS + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) + ( ( ( ARS / AMS ) - ARS ) - MDR ) ) ,AMS ) * Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) - ( Max( Min( RMSe ,( ( ( MUR / ( RMSe + MUR ) ) / Min( RMSe ,MUC ) ) / Min( RCSe ,RRSe ) ) ),( Max( RMSe,MLU ) + Max( RRSe,( MUR + MUC ) ) ) ) + MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6380936487680792}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "( Min( ( Max( AMS,DDR ) * Min( RRS ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ( Min( ( ( CRS - Max( Max( FirstVNF_CPU_Server,BR ),Max( RRS,Const ) ) ) + DDR ) ,( ARS * BR ) ) / ( ( RRS - MRS ) - ( ( MDR + PN ) * ( ( FirstVNF_CPU_Server * CRS ) * Min( BR ,FirstVNF_RAM ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( ( MLU * RMSe ) * Min( MUC ,Min( ( ( Max( MUM,MUM ) + Min( MUR ,RMSe ) ) - ( ( CS / DS ) * ( MUR - RCSe ) ) ) ,RMSe ) ) ) ) + Max( ( MUR / Min( MUM ,RCSe ) ),RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720527439386521}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5266389898143058}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "( ( Min( PN ,Max( ( ARS / FirstVNF_RAM ),FirstVNF_RAM_Server ) ) - DDR ) * Min( BR ,CRS ) )", "choosing": "( Max( MUM,Min( Min( MUM ,Min( RRSe ,Min( MUM ,MUM ) ) ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.8944444444444445, "obj2": 0.047141346321563235}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( Max( RRSe,RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( ( Max( ( MLU * RMSe ),RCSe ) / MLU ) * ( RRSe - RRSe ) ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9296296296296296, "obj2": 0.032307149588451975}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}, {"determining": "( ( Min( ( BR - BR ) ,PN ) / Min( ( Const / FirstVNF_CPU_Server ) ,MRS ) ) + Max( Max( ( Max( MRS,FirstVNF_Mem_Server ) + FirstVNF_Mem ),Const ),MRS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6580565291305068}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - MUR ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5585071047387171}], "31": [{"determining": "( Max( ( FirstVNF_CPU - DDR ),DDR ) / Min( RRS ,( Min( ( PN / MRS ) ,DDR ) - AMS ) ) )", "choosing": "Min( ( ( CS - RRSe ) + MUM ) ,Min( Max( Max( MLU,Max( ( RRSe + CS ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( MLU / DS ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,CRS ) ) / ARS ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) * DDR ) * ( PN + Max( DDR,AMS ) ) ) )", "choosing": "Min( ( ( CS - RRSe ) + MUM ) ,Min( Max( Max( MLU,Max( ( RRSe + CS ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( MLU / DS ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( AMS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_RAM_Server ) ) ,DDR ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( Min( RMSe ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.48148148148148145, "obj2": 0.44351519289557395}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5266389898143058}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( ( MUM + MUC ) * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6436903502823532}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4456474520347344}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}, {"determining": "Min( ACS ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - RCSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17592592592592593, "obj2": 0.7280673879483849}], "32": [{"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( RCSe - ( RRSe * ( ( CS - ( Max( MUR,MUC ) / ( MUM / CS ) ) ) / Min( MUM ,( RMSe * ( MUR + MUR ) ) ) ) ) ) + ( MUM / MUR ) ) ,Min( Max( Max( MLU,Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( MLU / DS ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe + MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - DDR ),DDR ) / Min( RRS ,( Min( ( PN / MRS ) ,DDR ) - AMS ) ) )", "choosing": "Min( ( ( CS - RRSe ) + MUM ) ,Min( Max( Max( MLU,Max( ( RRSe + CS ),( Min( ( DS - CS ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( MLU / DS ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe * MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( AMS + ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( ( DDR * DDR ) * AMS ) ) ) * Min( Const ,( ( ACS * ( RRS - Const ) ) + ARS ) ) ) - ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( Const - FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) ) ) * FirstVNF_CPU ) ) * ( ( RRS / FirstVNF_Mem ) - ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,( RMSe / MUM ) ) - Max( DS,MUR ) ) - ( ( RMSe * ( RRSe * ( MUC / MUC ) ) ) - MUC ) ) / ( ( Max( RMSe,RRSe ) - Max( MUR,MUC ) ) / MLU ) ),Min( ( DS * DS ) ,( RCSe / ( ( MUC * MLU ) / ( MUR + CS ) ) ) ) ) ,( RRSe - ( ( RRSe * ( MUC / MUC ) ) + ( ( MUC - MUC ) + DS ) ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8455767982221636}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( ( ( DDR * MDR ) / ( MDR + ( ARS * FirstVNF_RAM ) ) ) ,Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Max( MUR,MUM ) ) - ( RCSe + ( MUC - Max( MUR,MUM ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7380338069300302}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( ( MUM + MUC ) * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6436903502823532}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,Min( AMS ,ACS ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( MUC / MUR ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) - ( ( ( ( ( ( Max( DDR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) + FirstVNF_RAM_Server ) - BR ) - ARS ) / Max( ( ARS + FirstVNF_Mem ),AMS ) ) + ( RRS / ( MDR * Min( BR ,Max( MRS,Min( MRS ,CRS ) ) ) ) ) ) )", "choosing": "Max( Max( DS,( Max( RCSe,RCSe ) / ( ( ( RCSe * Min( ( CS - CS ) ,Max( RRSe,CS ) ) ) + ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) - RMSe ) ) * ( ( Min( ( MUR * RCSe ) ,MLU ) / MUM ) + RCSe ) ) ) ),( Max( MLU,MUR ) / MUM ) )", "obj1": 0.18518518518518517, "obj2": 0.7223348226175796}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,( MDR * Max( CRS,( FirstVNF_RAM + MRS ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) + MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.770005561294448}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}], "33": [{"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( RCSe - ( RRSe * ( ( ( MUC * ( MUM - MUC ) ) - ( Max( MUR,MUC ) / ( MUM / CS ) ) ) / Max( MUM,( RMSe * ( MUR + MUR ) ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( RRSe + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( RCSe - ( RRSe * ( ( CS - ( Max( MUR,MUC ) / ( MUM / CS ) ) ) / Min( MUM ,( RMSe * ( MUR + MUR ) ) ) ) ) ) + ( MUM / MUR ) ) ,Min( Max( Max( MLU,Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ,Max( Max( DS,CS ),( MLU - Min( Min( Min( ( MLU / DS ) ,Min( MUM ,MLU ) ) ,MUC ) ,Min( Min( ( DS / MUM ) ,( RMSe + MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( AMS + ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( ( DDR * DDR ) * AMS ) ) ) * Min( Const ,( ( ACS * ( RRS - Const ) ) + ARS ) ) ) - ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( Const - FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) ) ) * FirstVNF_CPU ) ) * ( ( RRS / FirstVNF_Mem ) - ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,( RMSe / MUM ) ) - Max( DS,MUR ) ) - ( ( RMSe * ( RRSe * ( MUC / MUC ) ) ) - MUC ) ) / ( ( Max( RMSe,RRSe ) - Max( MUR,MUC ) ) / MLU ) ),Min( ( DS * DS ) ,( RCSe / ( ( MUC * MLU ) / ( MUR + CS ) ) ) ) ) ,( RRSe - ( ( RRSe * ( MUC / MUC ) ) + ( ( MUC - MUC ) + DS ) ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8455767982221636}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "Min( ( Min( MUC ,RCSe ) - ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * Max( Max( MUR,CS ),( MUM / MUM ) ) ) / RRSe ) ) ) ) ,Max( ( CS / MLU ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,RCSe ) ) ) ) - MUC ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7368456033828275}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( ( MUM + MUC ) * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6436903502823532}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( MUR + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) - ( ( ( ( ( ( Max( DDR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) + FirstVNF_RAM_Server ) - BR ) - ARS ) / Max( ( ARS + FirstVNF_Mem ),AMS ) ) + ( RRS / ( MDR * Min( BR ,Max( MRS,Min( MRS ,CRS ) ) ) ) ) ) )", "choosing": "Max( Max( DS,( Max( RCSe,RCSe ) / ( ( ( RCSe * Min( ( CS - CS ) ,Max( RRSe,CS ) ) ) + ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) - RMSe ) ) * ( ( Min( ( MUR * RCSe ) ,MLU ) / MUM ) + RCSe ) ) ) ),( Max( MLU,MUR ) / MUM ) )", "obj1": 0.18518518518518517, "obj2": 0.7223348226175796}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,( MDR * Max( CRS,( FirstVNF_RAM + MRS ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) + MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.770005561294448}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Min( MDR ,CRS ) ) ,Max( ( MDR * DDR ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe + Max( MUR,CS ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Max( Min( MLU ,RCSe ),DS ) ) ) ) ,( ( ( ( Max( MLU,( MUM / Min( RRSe ,RMSe ) ) ) - CS ) / DS ) + RMSe ) - ( MUM * ( ( DS / MUR ) + RCSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7588767399294114}], "34": [{"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,Min( RRS ,MRS ) ) ) / BR ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( MRS + Max( DDR,AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( Min( ( ( RRSe - ( MUR / CS ) ) * ( ( Min( CS ,Min( Min( MUR ,CS ) ,CS ) ) - MLU ) / MUM ) ) ,MLU ) ,( ( RMSe * ( MLU / MUM ) ) / ( ( CS - DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( RCSe - ( RRSe * ( ( ( MUC * ( MUM - MUC ) ) - ( Max( MUR,MUC ) / ( MUM / CS ) ) ) / Max( MUM,( RMSe * ( MUR + MUR ) ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( RRSe + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( MUR + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( AMS + ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( ( DDR * DDR ) * AMS ) ) ) * Min( Const ,( ( ACS * ( RRS - Const ) ) + ARS ) ) ) - ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( Const - FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) ) ) * FirstVNF_CPU ) ) * ( ( RRS / FirstVNF_Mem ) - ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,( RMSe / MUM ) ) - Max( DS,MUR ) ) - ( ( RMSe * ( RRSe * ( MUC / MUC ) ) ) - MUC ) ) / ( ( Max( RMSe,RRSe ) - Max( MUR,MUC ) ) / MLU ) ),Min( ( DS * DS ) ,( RCSe / ( ( MUC * MLU ) / ( MUR + CS ) ) ) ) ) ,( RRSe - ( ( RRSe * ( MUC / MUC ) ) + ( ( MUC - MUC ) + DS ) ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8455767982221636}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( ( MDR - ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) - ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) )", "obj1": 0.3592592592592593, "obj2": 0.5401559198466245}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( MDR + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( Max( Max( CS,MUM ),Max( MLU,RRSe ) ) + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.684936754303668}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( ( MUM + MUC ) * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6436903502823532}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "Min( ( MDR / ACS ) ,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * RCSe ) ) + ( ( RCSe / Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( DS + MUC ) ) ) + ( RMSe - ( RMSe - ( RMSe + RMSe ) ) ) ) ) ) / MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7437367933516196}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "( Min( AMS ,ACS ) * ( Min( Min( Min( ( ( RRS * MRS ) / BR ) ,FirstVNF_CPU ) ,CRS ) ,FirstVNF_Mem_Server ) * ( ( Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) / ( Min( ( AMS / DDR ) ,ACS ) - Max( AMS,FirstVNF_Mem ) ) ) * Max( Min( BR ,MRS ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) - ( ( ( ( ( ( Max( DDR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) + FirstVNF_RAM_Server ) - BR ) - ARS ) / Max( ( ARS + FirstVNF_Mem ),AMS ) ) + ( RRS / ( MDR * Min( BR ,Max( MRS,Min( MRS ,CRS ) ) ) ) ) ) )", "choosing": "Max( Max( DS,( Max( RCSe,RCSe ) / ( ( ( RCSe * Min( ( CS - CS ) ,Max( RRSe,CS ) ) ) + ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) - RMSe ) ) * ( ( Min( ( MUR * RCSe ) ,MLU ) / MUM ) + RCSe ) ) ) ),( Max( MLU,MUR ) / MUM ) )", "obj1": 0.18518518518518517, "obj2": 0.7223348226175796}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + ARS ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,CRS ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,MUM ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,CS ) ) ) ) - MUC ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6543948483757187}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}], "35": [{"determining": "Min( ( Const + PN ) ,( ( RRS + RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( ( MUR * MUC ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * ( ( PN * Min( Max( MRS,FirstVNF_Mem ) ,Min( RRS ,MRS ) ) ) / BR ) ) - ( FirstVNF_Mem_Server / RRS ) ) ,( ( MRS + Max( DDR,AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( Min( ( ( RRSe - ( MUR / CS ) ) * ( ( Min( CS ,Min( Min( MUR ,CS ) ,CS ) ) - MLU ) / MUM ) ) ,MLU ) ,( ( RMSe * ( MLU / MUM ) ) / ( ( CS - DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( ( MDR - ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) - ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) )", "obj1": 0.3592592592592593, "obj2": 0.5401559198466245}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS + FirstVNF_CPU_Server ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( CS ,RMSe ) ,( RCSe - Min( MUM ,( RRSe + MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1148462455579881}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + RCSe ),MUM ),( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4981481481481482, "obj2": 0.4092641141295591}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( MRS / MDR ) ) * Min( AMS ,AMS ) ) * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( MUC + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6432214276497844}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + Max( Max( RMSe,CS ),( MUM / DS ) ) ),RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7240180252951804}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) - ( ( ( ( ( ( Max( DDR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) + FirstVNF_RAM_Server ) - BR ) - ARS ) / Max( ( ARS + FirstVNF_Mem ),AMS ) ) + ( RRS / ( MDR * Min( BR ,Max( MRS,Min( MRS ,CRS ) ) ) ) ) ) )", "choosing": "Max( Max( DS,( Max( RCSe,RCSe ) / ( ( ( RCSe * Min( ( CS - CS ) ,Max( RRSe,CS ) ) ) + ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) - RMSe ) ) * ( ( Min( ( MUR * RCSe ) ,MLU ) / MUM ) + RCSe ) ) ) ),( Max( MLU,MUR ) / MUM ) )", "obj1": 0.18518518518518517, "obj2": 0.7223348226175796}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}], "36": [{"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "( ( RMSe * ( ( ( MUM - Min( MUR ,Max( Max( MUC,DS ),Min( MLU ,CS ) ) ) ) + RMSe ) * RCSe ) ) + ( MUM / ( MUC * Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( RMSe + MUC ) ) ) * ( RMSe - ( DS * Min( MLU ,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + PN ) ,( ( RRS + RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( CS - DS ) + MUC ) ) ) ),( CS * ( ( MUR * MUC ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( MDR - ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) - ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) )", "obj1": 0.3592592592592593, "obj2": 0.5401559198466245}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - ( ( Const / ARS ) / AMS ) ) ) ) ) ) )", "choosing": "( Max( DS,MUC ) / Max( ( RRSe + MUC ),MUM ) )", "obj1": 0.4981481481481482, "obj2": 0.4088101801725882}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( MRS / MDR ) ) * Min( AMS ,AMS ) ) * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( MUC + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6432214276497844}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( DDR + ( ( Max( Max( MRS,FirstVNF_Mem_Server ),DDR ) * ( AMS + ( PN - CRS ) ) ) / ( FirstVNF_CPU - BR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( ( RMSe / ( MUM * MUM ) ) / Min( MUC ,RMSe ) ) + MUM ) - ( Min( RCSe ,( ( ( ( MUM / ( RMSe - MUC ) ) - RRSe ) - RRSe ) * RCSe ) ) / Min( RRSe ,MUC ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6566114163546085}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}], "37": [{"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( ( RCSe + ( ( MUR / RMSe ) - ( Min( CS ,MUR ) + DS ) ) ) * Max( ( Min( ( RRSe / DS ) ,( Max( MUC,MUC ) / DS ) ) + Max( RMSe,MUC ) ),( MUC + Max( MLU,( MUM / MUR ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( DS + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( RRSe + CS ) + MUC ) ) ) ),( CS * ( ( DS * MUC ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "( ( RMSe * ( ( ( MUM - Min( MUR ,Max( Max( MUC,DS ),Min( MLU ,CS ) ) ) ) + RMSe ) * RCSe ) ) + ( MUM / ( MUC * Max( MUM,( ( MUM - Min( ( MUC + MUC ) ,( RMSe + MUC ) ) ) * ( RMSe - ( DS * Min( MLU ,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( MDR - ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) - ( Max( MUC,MLU ) + ( MLU * ( ( MUR - MUC ) - MUR ) ) ) )", "obj1": 0.3592592592592593, "obj2": 0.5401559198466245}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,( Max( BR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( Max( Const,RRS ) * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( ( MLU * MUC ) + Max( MUR,( MLU / ( MUR - MUC ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.38333333333333336, "obj2": 0.5350651519929703}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM - Min( ( ( MUC * ( RRSe + RMSe ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.37777777777777777, "obj2": 0.5371377123701938}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ARS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Max( CRS,( ( Const - AMS ) + Min( DDR ,Const ) ) ) ) + ( RRS / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * Min( Min( AMS ,( PN * MDR ) ) ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUC,DS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( RCSe ,( RMSe + DS ) ) ) ,Max( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - RRSe ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6529828234397462}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,MUR ) ) * MUC ) ) ) ) ) ,( ( DS * Min( DS ,MUM ) ) - MLU ) )", "obj1": 0.49444444444444446, "obj2": 0.4077945048665058}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( MRS / MDR ) ) * Min( AMS ,AMS ) ) * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( MUC + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6432214276497844}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}], "38": [{"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( ( RCSe + ( ( MUR / RMSe ) - ( Min( CS ,MUR ) + DS ) ) ) * Max( ( Min( ( RRSe / DS ) ,( Max( MUC,MUC ) / DS ) ) + Max( RMSe,MUC ) ),( MUC + Max( MLU,( MUM / MUR ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( DS + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( RRSe + CS ) + MUC ) ) ) ),( CS * ( ( DS * MUC ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( ( ( FirstVNF_Mem * MDR ) + ( Max( FirstVNF_RAM,DDR ) / ARS ) ),CRS ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ( ( PN * Max( Const,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem - DDR ) ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe / ( Min( ( ( ( MUR * RMSe ) / RCSe ) / MUM ) ,Max( ( ( MUM - MUR ) / CS ),Min( RMSe ,DS ) ) ) - DS ) ) - ( MUM + MUC ) )", "obj1": 0.35555555555555557, "obj2": 0.5307030081840346}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ARS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Max( CRS,( ( Const - AMS ) + Min( DDR ,Const ) ) ) ) + ( RRS / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * Min( Min( AMS ,( PN * MDR ) ) ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUC,DS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( RCSe ,( RMSe + DS ) ) ) ,Max( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - RRSe ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6529828234397462}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,MUR ) ) * MUC ) ) ) ) ) ,( ( DS * Min( DS ,MUM ) ) - MLU ) )", "obj1": 0.49444444444444446, "obj2": 0.4077945048665058}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - ( FirstVNF_RAM - ( ( ( DDR * AMS ) * Max( FirstVNF_RAM,MDR ) ) + DDR ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( Min( MUC ,RCSe ) - ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * Max( Max( MUR,CS ),( MUM / MUM ) ) ) / RRSe ) ) ) ) ,( DS + RRSe ) )", "obj1": 0.4425925925925926, "obj2": 0.4594187686248058}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.4888888888888889, "obj2": 0.41231467987733256}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( RRS - ( ( BR / FirstVNF_CPU_Server ) - RRS ) ) * ( FirstVNF_Mem_Server + ( FirstVNF_CPU - ( ( ( BR / FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) + RRS ) ) ) )", "choosing": "( Min( MUM ,MUR ) - ( ( ( Max( ( MUR - Max( MUR,MUC ) ),Min( MUM ,CS ) ) / CS ) / Min( RRSe ,DS ) ) - MUR ) )", "obj1": 0.9944444444444445, "obj2": 0.0032217086480698025}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + ( RRS * ( Min( CRS ,ACS ) + Min( CRS ,MDR ) ) ) ) ) / ( Min( CRS ,MDR ) / CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( Max( RMSe,Min( ( MUC * ( MLU - RCSe ) ) ,( ( RCSe * ( MLU / Max( Max( MUR,RMSe ),( RRSe * RRSe ) ) ) ) * Max( ( ( MUR * RRSe ) - MUM ),MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.25, "obj2": 0.6440060918412581}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}], "39": [{"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( ( RCSe + ( ( MUR / RMSe ) - ( Min( CS ,MUR ) + DS ) ) ) * Max( ( Min( ( RRSe / DS ) ,( Max( MUC,MUC ) / DS ) ) + Max( RMSe,MUC ) ),( MUC + Max( MLU,( MUM / MUR ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( DS + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( RRSe + CS ) + MUC ) ) ) ),( CS * ( ( DS * MUC ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( ( ( FirstVNF_Mem * MDR ) + ( Max( FirstVNF_RAM,DDR ) / ARS ) ),CRS ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ( ( PN * Max( Const,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem - DDR ) ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe / ( Min( ( ( ( MUR * RMSe ) / RCSe ) / MUM ) ,Max( ( ( MUM - MUR ) / CS ),Min( RMSe ,DS ) ) ) - DS ) ) - ( MUM + MUC ) )", "obj1": 0.35555555555555557, "obj2": 0.5307030081840346}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( MDR - ( Const - ( MDR + Min( AMS ,RRS ) ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM - FirstVNF_Mem ) * DDR ) - ( ACS + BR ) ) ) - MDR ) )", "choosing": "( ( MUC * ( RCSe + DS ) ) - ( ( RCSe - Max( ( ( RMSe - ( ( MUR + RMSe ) - Max( DS,RMSe ) ) ) * MLU ),MUM ) ) / Min( ( MUC + MUR ) ,( MUC - ( MUM - MUM ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.27507881005688517}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ARS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Max( CRS,( ( Const - AMS ) + Min( DDR ,Const ) ) ) ) + ( RRS / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * Min( Min( AMS ,( PN * MDR ) ) ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUC,DS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( RCSe ,( RMSe + DS ) ) ) ,Max( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - RRSe ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6529828234397462}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,MUR ) ) * MUC ) ) ) ) ) ,( ( DS * Min( DS ,MUM ) ) - MLU ) )", "obj1": 0.49444444444444446, "obj2": 0.4077945048665058}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - ( FirstVNF_RAM - ( ( ( DDR * AMS ) * Max( FirstVNF_RAM,MDR ) ) + DDR ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( Min( MUC ,RCSe ) - ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * Max( Max( MUR,CS ),( MUM / MUM ) ) ) / RRSe ) ) ) ) ,( DS + RRSe ) )", "obj1": 0.4425925925925926, "obj2": 0.4594187686248058}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( DS,MUC ) / MUC )", "obj1": 0.4888888888888889, "obj2": 0.4110130923129559}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + ( RRS * ( Min( CRS ,ACS ) + Min( CRS ,MDR ) ) ) ) ) / ( Min( CRS ,MDR ) / CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( Max( RMSe,Min( ( MUC * ( MLU - RCSe ) ) ,( ( RCSe * ( MLU / Max( Max( MUR,RMSe ),( RRSe * RRSe ) ) ) ) * Max( ( ( MUR * RRSe ) - MUM ),MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.25, "obj2": 0.6440060918412581}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}], "40": [{"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( ( RCSe + ( ( MUR / RMSe ) - ( Min( CS ,MUR ) + DS ) ) ) * Max( ( Min( ( RRSe / DS ) ,( Max( MUC,MUC ) / DS ) ) + Max( RMSe,MUC ) ),( MUC + Max( MLU,( MUM / MUR ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( DS + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( RRSe + CS ) + MUC ) ) ) ),( CS * ( ( DS * MUC ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( ( RCSe + ( ( MUR / RMSe ) - ( Min( CS ,MUR ) + DS ) ) ) * Max( ( Min( ( RRSe / DS ) ,( Max( MUC,MUC ) / DS ) ) + Max( RMSe,MUC ) ),( MUC + Max( MLU,( MUM / MUR ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( DS + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( RRSe + CS ) + MUC ) ) ) ),( CS * ( ( DS * MUC ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( ( ( FirstVNF_Mem * MDR ) + ( Max( FirstVNF_RAM,DDR ) / ARS ) ),CRS ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ( ( PN * Max( Const,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem - DDR ) ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe / ( Min( ( ( ( MUR * RMSe ) / RCSe ) / MUM ) ,Max( ( ( MUM - MUR ) / CS ),Min( RMSe ,DS ) ) ) - DS ) ) - ( MUM + MUC ) )", "obj1": 0.35555555555555557, "obj2": 0.5307030081840346}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "( ( MDR - ( Const - ( MDR + Min( AMS ,RRS ) ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM - FirstVNF_Mem ) * DDR ) - ( ACS + BR ) ) ) - MDR ) )", "choosing": "( ( MUC * ( RCSe + DS ) ) - ( ( RCSe - Max( ( ( RMSe - ( ( MUR + RMSe ) - Max( DS,RMSe ) ) ) * MLU ),MUM ) ) / Min( ( MUC + MUR ) ,( MUC - ( MUM - MUM ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.27507881005688517}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ARS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Max( CRS,( ( Const - AMS ) + Min( DDR ,Const ) ) ) ) + ( RRS / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * Min( Min( AMS ,( PN * MDR ) ) ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUC,DS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( RCSe ,( RMSe + DS ) ) ) ,Max( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - RRSe ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6529828234397462}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,MUR ) ) * MUC ) ) ) ) ) ,( ( DS * Min( DS ,MUM ) ) - MLU ) )", "obj1": 0.49444444444444446, "obj2": 0.4077945048665058}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - ( FirstVNF_RAM - ( ( ( DDR * AMS ) * Max( FirstVNF_RAM,MDR ) ) + DDR ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( Min( MUC ,RCSe ) - ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * Max( Max( MUR,CS ),( MUM / MUM ) ) ) / RRSe ) ) ) ) ,( DS + RRSe ) )", "obj1": 0.4425925925925926, "obj2": 0.4594187686248058}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( DS,MUC ) / MUC )", "obj1": 0.4888888888888889, "obj2": 0.4110130923129559}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - RRS ) ,ARS ) ,Const ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( MUC / MUR ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25555555555555554, "obj2": 0.6386222759059436}, {"determining": "( Min( Min( Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + Min( ACS ,( PN / FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + Min( ACS ,( PN / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( PN,CRS ) ) ) ,( Min( CRS ,MDR ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( RCSe,CS ) - Max( MUR,RRSe ) ) - MUM ) - ( RRSe + MUC ) )", "obj1": 0.25, "obj2": 0.6434143962245604}], "41": [{"determining": "( ( MDR - ( ACS - ( FirstVNF_Mem_Server + DDR ) ) ) * ( Min( FirstVNF_Mem_Server ,Min( ( ( RRS * Min( FirstVNF_RAM_Server ,DDR ) ) - CRS ) ,Min( CRS ,BR ) ) ) - MDR ) )", "choosing": "( Min( Max( MUC,MLU ) ,( MLU * Min( Max( ( ( MLU - ( CS + MUC ) ) + DS ),RRSe ) ,( CS * ( ( RRSe + CS ) - MUC ) ) ) ) ) - ( MUC * ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - FirstVNF_CPU ),ACS ) / Min( RRS ,( Min( ( PN / MRS ) ,( ( FirstVNF_Mem / RRS ) - DDR ) ) - AMS ) ) )", "choosing": "Min( ( ( ( RCSe + ( ( MUR / RMSe ) - ( Min( CS ,MUR ) + DS ) ) ) * Max( ( Min( ( RRSe / DS ) ,( Max( MUC,MUC ) / DS ) ) + Max( RMSe,MUC ) ),( MUC + Max( MLU,( MUM / MUR ) ) ) ) ) + ( MUM / MUR ) ) ,Min( ( DS + RCSe ) ,Max( ( MLU - Max( ( RRSe + CS ),( Min( Min( MUM ,MUR ) ,( CS * RCSe ) ) * ( ( RRSe + CS ) + MUC ) ) ) ),( CS * ( ( DS * MUC ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / Min( Const ,FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( DS - RRSe ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.10555555555555556, "obj2": 0.850382551544278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( ( ( FirstVNF_Mem * MDR ) + ( Max( FirstVNF_RAM,DDR ) / ARS ) ),CRS ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ( ( PN * Max( Const,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem - DDR ) ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe / ( Min( ( ( ( MUR * RMSe ) / RCSe ) / MUM ) ,Max( ( ( MUM - MUR ) / CS ),Min( RMSe ,DS ) ) ) - DS ) ) - ( MUM + MUC ) )", "obj1": 0.35555555555555557, "obj2": 0.5307030081840346}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / ( MDR - FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.5277777777777778, "obj2": 0.4002174866563644}, {"determining": "( ( MDR - ( Const - ( MDR + Min( AMS ,RRS ) ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM - FirstVNF_Mem ) * DDR ) - ( ACS + BR ) ) ) - MDR ) )", "choosing": "( ( MUC * ( RCSe + DS ) ) - ( ( RCSe - Max( ( ( RMSe - ( ( MUR + RMSe ) - Max( DS,RMSe ) ) ) * MLU ),MUM ) ) / Min( ( MUC + MUR ) ,( MUC - ( MUM - MUM ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.27507881005688517}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ARS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Max( CRS,( ( Const - AMS ) + Min( DDR ,Const ) ) ) ) + ( RRS / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * Min( Min( AMS ,( PN * MDR ) ) ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUC,DS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( RCSe ,( RMSe + DS ) ) ) ,Max( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - RRSe ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6529828234397462}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,MUR ) ) * MUC ) ) ) ) ) ,( ( DS * Min( DS ,MUM ) ) - MLU ) )", "obj1": 0.49444444444444446, "obj2": 0.4077945048665058}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - ( FirstVNF_RAM - ( ( ( DDR * AMS ) * Max( FirstVNF_RAM,MDR ) ) + DDR ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( Min( MUC ,RCSe ) - ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * Max( Max( MUR,CS ),( MUM / MUM ) ) ) / RRSe ) ) ) ) ,( DS + RRSe ) )", "obj1": 0.4425925925925926, "obj2": 0.4594187686248058}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( DS,MUC ) / MUC )", "obj1": 0.4888888888888889, "obj2": 0.4110130923129559}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + FirstVNF_RAM ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( RMSe * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0034685367235791965}, {"determining": "( Min( Min( Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + Min( ACS ,( PN / FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + Min( ACS ,( PN / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( PN,CRS ) ) ) ,( Min( CRS ,MDR ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( RCSe,CS ) - Max( MUR,RRSe ) ) - MUM ) - ( RRSe + MUC ) )", "obj1": 0.25, "obj2": 0.6434143962245604}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}], "42": [{"determining": "( ( MDR - ( ACS - ( FirstVNF_Mem_Server + DDR ) ) ) * Min( ( ( RRS * Min( FirstVNF_RAM_Server ,DDR ) ) - CRS ) ,Min( CRS ,BR ) ) )", "choosing": "( Min( Max( MUC,MLU ) ,( MLU * Min( Max( ( ( MLU - ( CS + MUC ) ) + DS ),RRSe ) ,( CS * ( MUC - ( MUM / MUR ) ) ) ) ) ) - ( MUC * ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ACS - ( FirstVNF_Mem_Server + DDR ) ) ) * ( Min( FirstVNF_Mem_Server ,Min( ( ( RRS * Min( FirstVNF_RAM_Server ,DDR ) ) - CRS ) ,Min( CRS ,BR ) ) ) - MDR ) )", "choosing": "( Min( Max( MUC,MLU ) ,( MLU * Min( Max( ( ( MLU - ( CS + MUC ) ) + DS ),RRSe ) ,( CS * ( ( RRSe + CS ) - MUC ) ) ) ) ) - ( MUC * ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( CRS / ( MRS * Max( MRS,PN ) ) ) ) + ( Max( AMS,( FirstVNF_Mem_Server / AMS ) ) * ( ( Max( ( Const / BR ),( FirstVNF_RAM - CRS ) ) / Max( PN,DDR ) ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS / Const ) * FirstVNF_Mem ) ) * ( Min( ( FirstVNF_CPU + Const ) ,DDR ) / ( CRS * ( ( CRS * AMS ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( RMSe ,( RCSe + DS ) ) - ( Max( ( Min( ( RCSe + Max( Min( MUM ,MUR ),MUR ) ) ,MUM ) / ( ( CS - Max( ( MUR * MUR ),( MUR + RRSe ) ) ) / RRSe ) ),MUM ) + ( ( RCSe + DS ) - MUC ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8464600633191086}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( ( ( FirstVNF_Mem * MDR ) + ( Max( FirstVNF_RAM,DDR ) / ARS ) ),CRS ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ( ( PN * Max( Const,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem - DDR ) ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe / ( Min( ( ( ( MUR * RMSe ) / RCSe ) / MUM ) ,Max( ( ( MUM - MUR ) / CS ),Min( RMSe ,DS ) ) ) - DS ) ) - ( MUM + MUC ) )", "obj1": 0.35555555555555557, "obj2": 0.5307030081840346}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / ( MDR - FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.5277777777777778, "obj2": 0.4002174866563644}, {"determining": "( ( MDR - ( Const - ( MDR + Min( AMS ,RRS ) ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM - FirstVNF_Mem ) * DDR ) - ( ACS + BR ) ) ) - MDR ) )", "choosing": "( ( MUC * ( RCSe + DS ) ) - ( ( RCSe - Max( ( ( RMSe - ( ( MUR + RMSe ) - Max( DS,RMSe ) ) ) * MLU ),MUM ) ) / Min( ( MUC + MUR ) ,( MUC - ( MUM - MUM ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.27507881005688517}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "( ( Min( Min( ( ( CRS + RRS ) + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( AMS,CRS ) ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + AMS ) ) * Min( AMS ,AMS ) )", "choosing": "( Min( RMSe ,Min( ( MUC * ( MLU - RCSe ) ) ,Max( CS,MUM ) ) ) - ( MUM + MUC ) )", "obj1": 0.2796296296296296, "obj2": 0.626862014709661}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "Min( Max( ( FirstVNF_Mem + RRS ),Max( PN,( Min( MRS ,CRS ) - CRS ) ) ) ,Min( CRS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( MUR - ( Min( MUM ,( MUC - RMSe ) ) + ( ( MUC + RCSe ) - ( CS / MUM ) ) ) ) ) ) - ( ( MUC - RRSe ) + ( Max( CS,MUR ) * Max( ( MLU + RCSe ),DS ) ) ) ) ,( ( Max( RRSe,Min( Min( RRSe ,( RMSe * ( MUR - MUM ) ) ) ,RMSe ) ) * ( Min( MUC ,MUR ) + RMSe ) ) - ( RMSe + ( DS / ( CS - Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6298795921074959}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ARS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Max( CRS,( ( Const - AMS ) + Min( DDR ,Const ) ) ) ) + ( RRS / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * Min( Min( AMS ,( PN * MDR ) ) ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUC,DS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( RCSe ,( RMSe + DS ) ) ) ,Max( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - RRSe ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6529828234397462}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,MUR ) ) * MUC ) ) ) ) ) ,( ( DS * Min( DS ,MUM ) ) - MLU ) )", "obj1": 0.49444444444444446, "obj2": 0.4077945048665058}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( Min( Min( ( Const + ( Min( BR ,CRS ) + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( AMS,CRS ) ) ) / Min( ( RRS + AMS ) ,CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( Max( RMSe,Min( ( Min( CS ,( Max( ( MUR * MUC ),MUM ) - CS ) ) * MUC ) ,( Min( MUR ,MUM ) * Max( ( ( ( RCSe + MUC ) - RMSe ) - MUM ),MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.2611111111111111, "obj2": 0.6338893587083564}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "Min( ( ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - ( FirstVNF_RAM - ( ( ( DDR * AMS ) * Max( FirstVNF_RAM,MDR ) ) + DDR ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( Min( MUC ,RCSe ) - ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * Max( Max( MUR,CS ),( MUM / MUM ) ) ) / RRSe ) ) ) ) ,( DS + RRSe ) )", "obj1": 0.4425925925925926, "obj2": 0.4594187686248058}, {"determining": "( ( Min( Min( ( Const + ( Min( BR ,CRS ) + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( AMS,CRS ) ) ) / Min( ( RRS + AMS ) ,CRS ) ) * ( ( Min( Min( ( ( CRS + RRS ) + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( AMS,CRS ) ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + AMS ) ) * Min( AMS ,AMS ) ) )", "choosing": "( Max( RMSe,Min( ( ( MUC * ( MLU - RCSe ) ) * MUC ) ,( Min( MUR ,MUM ) * Max( ( ( ( RCSe + MUC ) - RMSe ) - MUM ),MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.2537037037037037, "obj2": 0.642374361361401}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( DS,MUC ) / MUC )", "obj1": 0.4888888888888889, "obj2": 0.4110130923129559}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7521181390186445}], "43": [{"determining": "( ( MDR - ( ACS - ( ( Min( FirstVNF_RAM_Server ,DDR ) * RRS ) - CRS ) ) ) * ( Min( FirstVNF_Mem_Server ,ARS ) - MDR ) )", "choosing": "( Min( Max( MUC,MLU ) ,( MLU * Min( Max( ( ( MLU - ( CS + MUC ) ) + DS ),RRSe ) ,( Min( Min( MUM ,MUR ) ,( CS * MUM ) ) * ( MUC - MUC ) ) ) ) ) - ( MUC * ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ACS - ( FirstVNF_Mem_Server + DDR ) ) ) * Min( ( ( RRS * Min( FirstVNF_RAM_Server ,DDR ) ) - CRS ) ,Min( CRS ,BR ) ) )", "choosing": "( Min( Max( MUC,MLU ) ,( MLU * Min( Max( ( ( MLU - ( CS + MUC ) ) + DS ),RRSe ) ,( CS * ( MUC - ( MUM / MUR ) ) ) ) ) ) - ( MUC * ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( CRS / ( MRS * Max( MRS,PN ) ) ) ) + ( Max( AMS,( FirstVNF_Mem_Server / AMS ) ) * ( ( Max( ( Const / BR ),( FirstVNF_RAM - CRS ) ) / Max( PN,DDR ) ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS / Const ) * FirstVNF_Mem ) ) * ( Min( ( FirstVNF_CPU + Const ) ,DDR ) / ( CRS * ( ( CRS * AMS ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( RMSe ,( RCSe + DS ) ) - ( Max( ( Min( ( RCSe + Max( Min( MUM ,MUR ),MUR ) ) ,MUM ) / ( ( CS - Max( ( MUR * MUR ),( MUR + RRSe ) ) ) / RRSe ) ),MUM ) + ( ( RCSe + DS ) - MUC ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8464600633191086}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( AMS + FirstVNF_RAM ),( AMS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( MUR * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( Min( ( ( ( MLU + ( MLU - RRSe ) ) / MUR ) * RCSe ) ,DS ) / CS ) - ( DS + Min( ( RRSe + MUC ) ,RMSe ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.21624863529627614}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - Min( ( ( AMS - FirstVNF_CPU ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC / Min( MUM ,MUR ) ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.25936625252233825}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - DS ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( MLU ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04831530087320374}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - AMS ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,PN ) * PN ) ) ) )", "choosing": "( Max( MUM,Min( DS ,Min( MUM ,MUM ) ) ) - ( MUM - ( RMSe / Max( Min( DS ,Min( MUM ,MUM ) ),Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4497111534585912}, {"determining": "( ( Min( Min( ( Const + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( ( ( FirstVNF_Mem * MDR ) + ( Max( FirstVNF_RAM,DDR ) / ARS ) ),CRS ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ( ( PN * Max( Const,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem - DDR ) ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe / ( Min( ( ( ( MUR * RMSe ) / RCSe ) / MUM ) ,Max( ( ( MUM - MUR ) / CS ),Min( RMSe ,DS ) ) ) - DS ) ) - ( MUM + MUC ) )", "obj1": 0.35555555555555557, "obj2": 0.5307030081840346}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( MDR + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.5967975999745823}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( ( FirstVNF_Mem_Server * BR ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( Min( CS ,( MUC + CS ) ) - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08142051503080946}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + ( ( RRS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Max( Max( ( MUR / ( MUM + ( MUR * ( MUM + RRSe ) ) ) ),CS ),( MUM - Min( ( ( MUR - ( ( ( MUM + RRSe ) - DS ) - ( Max( MUR,CS ) / ( MLU + MUM ) ) ) ) / MUC ) ,RMSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3246235574528503}, {"determining": "( ( ( CRS / ( ARS + RRS ) ) * Min( Min( MRS ,CRS ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( Max( Min( RMSe ,RCSe ),Max( RRSe,Max( RRSe,DS ) ) ) - ( MUM + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.5203302065380644}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( ARS,( ( DDR - ( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) * ( Min( Min( PN ,Max( ( FirstVNF_RAM_Server * BR ),( ARS * ACS ) ) ) ,DDR ) * PN ) ) ) )", "choosing": "( ( MUC - ( RMSe - MUC ) ) - ( MUM - ( RMSe / Max( CS,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.48822131127196344}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( Min( AMS ,RRS ) * Min( FirstVNF_RAM ,ACS ) ) - ( Max( ( ( ( ACS * RRS ) / CRS ) + ACS ),Const ) + BR ) ) - DDR ) )", "choosing": "Min( ( CS / ( Min( MUM ,RRSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / Max( RCSe,Max( RRSe,MUC ) ) ) / DS ) ,RCSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.3018109189069991}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( ( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ),CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "( ( MUC + ( RCSe * ( ( CS * RMSe ) - ( MUC + ( ( RMSe * DS ) * MUR ) ) ) ) ) - ( ( MLU + ( MLU - RRSe ) ) / MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.27738624799565814}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / ( MDR - FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.5277777777777778, "obj2": 0.4002174866563644}, {"determining": "( ( MDR - ( Const - ( MDR + Min( AMS ,RRS ) ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM - FirstVNF_Mem ) * DDR ) - ( ACS + BR ) ) ) - MDR ) )", "choosing": "( ( MUC * ( RCSe + DS ) ) - ( ( RCSe - Max( ( ( RMSe - ( ( MUR + RMSe ) - Max( DS,RMSe ) ) ) * MLU ),MUM ) ) / Min( ( MUC + MUR ) ,( MUC - ( MUM - MUM ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.27507881005688517}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( MRS - FirstVNF_RAM_Server ) * BR ) + MDR ) ) * ( Min( ( MDR - ( PN - Max( ( Min( ARS ,FirstVNF_CPU ) * ( MDR + MDR ) ),( MDR - FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( RRS + ( PN / FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( MUR ,( MUR / MLU ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( ( ( BR + BR ) / FirstVNF_Mem ) / Min( ( Const / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + Max( MRS,Max( ( Max( MRS,ARS ) + Max( ( MRS + ( ( FirstVNF_CPU * MRS ) - FirstVNF_RAM ) ),AMS ) ),Const ) ) )", "choosing": "Max( ( CS / MUM ),( ( ( MUR + Max( CS,RMSe ) ) * RRSe ) / ( Max( RCSe,RMSe ) * DS ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8265515037208923}, {"determining": "Min( Min( AMS ,AMS ) ,( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - MDR ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( MUM + MUC ) ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.46477938358128}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.47962962962962963, "obj2": 0.4205791595262654}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( CRS ,ARS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ) * ( CRS + AMS ) ) )", "choosing": "( Max( Max( MUM,( MUM - MUR ) ),( DS + ( RRSe + Min( CS ,RMSe ) ) ) ) - ( CS / Max( RRSe,Max( CS,( RCSe / RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07066875966826863}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12095023037018787}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,ACS ) ) - MDR ) - DDR ) )", "choosing": "Min( ( CS * ( Min( MUM ,RCSe ) / Min( RRSe ,RCSe ) ) ) ,( RRSe - Min( ( ( RRSe / RRSe ) / DS ) ,RCSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2922744659385707}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( FirstVNF_CPU - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,RCSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.4074074074074074, "obj2": 0.4956167205983552}, {"determining": "( ( Min( Min( ( ( CRS + RRS ) + ( BR + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( AMS,CRS ) ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + AMS ) ) * Min( AMS ,AMS ) )", "choosing": "( Min( RMSe ,Min( ( MUC * ( MLU - RCSe ) ) ,Max( CS,MUM ) ) ) - ( MUM + MUC ) )", "obj1": 0.2796296296296296, "obj2": 0.626862014709661}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5907407407407408, "obj2": 0.3386313900686536}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( ( AMS / ( Min( ( ( ( FirstVNF_CPU - AMS ) - AMS ) - BR ) ,( FirstVNF_RAM + ( FirstVNF_RAM - PN ) ) ) - ( FirstVNF_CPU - ( ( ( FirstVNF_Mem_Server / RRS ) - PN ) / MDR ) ) ) ) / Min( PN ,ARS ) ) )", "choosing": "Min( ( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) - ( ( MLU - RCSe ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MLU,MUC ) ) - RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5485044738066168}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( DS - ( ( RRSe - MUR ) + ( MUM * RCSe ) ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( MUC ,RCSe ) ) ,( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - MUC ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ) - ( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - MUC ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08581399590377636}, {"determining": "Min( Min( MRS ,CRS ) ,( MDR + FirstVNF_CPU ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( RRSe * MUR ) ) ) ,( RCSe - MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.7758701732998664}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - MUR ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5762308299743858}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( ( ( ( Const + FirstVNF_Mem ) - ( Min( Const ,ARS ) - CRS ) ) * FirstVNF_Mem ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) + ( RCSe * ( ( RRSe + ( Max( MUR,CS ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.5814814814814815, "obj2": 0.35190057327467933}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5481481481481482, "obj2": 0.3729590743128279}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,( MRS / MDR ) ) )", "choosing": "( ( RRSe + Max( ( ( ( ( ( MUR / CS ) - ( MUR / RRSe ) ) + MLU ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.12407407407407407, "obj2": 0.804054023603548}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,( Max( DS,MUC ) / ( DS / MUC ) ) ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.5018518518518519, "obj2": 0.4022303905517431}, {"determining": "( ( ( CRS / ( FirstVNF_Mem * MRS ) ) * Min( Min( MRS ,CRS ) ,( ( ( Max( FirstVNF_CPU_Server,ACS ) - FirstVNF_Mem ) - CRS ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RMSe + MUC ) - ( ( ( MUR + ( RRSe / MUR ) ) * RMSe ) + ( RCSe * ( ( RRSe + MUM ) - ( Max( ( DS - DS ),RMSe ) + MUC ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.45674251529911564}, {"determining": "Min( ( PN * FirstVNF_CPU ) ,( ( ( Min( Max( ( CRS + FirstVNF_CPU_Server ),MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Max( ( ( MUC - RCSe ) - ( Max( ( Min( MLU ,MUR ) + ( MUC - RMSe ) ),RMSe ) * ( Min( Min( ( MUC - RMSe ) ,MUC ) ,( Min( RRSe ,MLU ) + ( MUC - RMSe ) ) ) - RRSe ) ) ),MUR ) ,( RCSe - MUM ) )", "obj1": 0.7703703703703704, "obj2": 0.10166827683278194}, {"determining": "( Min( MDR ,FirstVNF_CPU ) - ( Min( ( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,AMS ) ) * FirstVNF_Mem_Server ) ,Const ) - MDR ) )", "choosing": "( Max( DS,MUC ) * ( DS / MUC ) )", "obj1": 0.5666666666666667, "obj2": 0.3713538302999369}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,Const ) * Min( AMS ,( ( ( FirstVNF_RAM - PN ) - DDR ) - Min( FirstVNF_RAM ,( ( FirstVNF_RAM - Const ) * BR ) ) ) ) ) * ( ( RRS / ( Max( CRS,( ( FirstVNF_RAM - PN ) - DDR ) ) * FirstVNF_CPU ) ) + ( Max( RRS,CRS ) * MRS ) ) ) ,( FirstVNF_Mem_Server / AMS ) )", "choosing": "Min( ( ( ( ( Max( MUC,MUC ) / Min( Min( ( MUC / MUC ) ,MUC ) ,MLU ) ) - CS ) + Max( ( MUC + MUC ),MUM ) ) - RCSe ) ,( MLU / MUC ) )", "obj1": 0.5722222222222222, "obj2": 0.36202815273511874}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,MDR ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 0.18888888888888888, "obj2": 0.7186186724698724}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5655095694488343}, {"determining": "Min( Min( MRS ,CRS ) ,( ( CRS - ( CRS - FirstVNF_Mem ) ) - MDR ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,( MUC - RCSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5568005142673195}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( ( ( Const / ARS ) - ( ( ( MDR + FirstVNF_Mem ) * DDR ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * FirstVNF_CPU_Server ) ,Min( ( MRS / Min( Min( ARS ,( PN - MRS ) ) ,Max( Min( Min( Const ,BR ) ,FirstVNF_RAM_Server ),Min( MDR ,ACS ) ) ) ) ,Min( Max( ( ( MDR + CRS ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) ) ) )", "choosing": "( ( RRSe + Max( ( ( ( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) - ( RCSe + ( Max( MUC,MLU ) - CS ) ) ) * Max( MUM,MUR ) ),( ( RMSe / ( Max( ( DS + RCSe ),RRSe ) * ( RMSe / CS ) ) ) * MUR ) ) ) - ( RRSe * CS ) )", "obj1": 0.11666666666666667, "obj2": 0.8067794251087521}, {"determining": "( ( Const / ( Const * MDR ) ) - ( ( Min( Const ,( DDR - ( CRS + CRS ) ) ) - BR ) - Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( Max( RCSe,( MUR - ( ( Max( RMSe,( MUM - RCSe ) ) - Max( ( RRSe - MUR ),Max( MUR,MUC ) ) ) * RMSe ) ) ) / ( MUR * ( Min( DS ,CS ) * DS ) ) ) + Max( ( ( MUM - Min( ( MUM + MUM ) ,( ( ( MLU * CS ) / CS ) * MUR ) ) ) * Min( RMSe ,MLU ) ),( ( MUM - DS ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8460842692621009}, {"determining": "( Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) * ( Min( ( MDR / ( PN - Max( ( Min( ARS ,CRS ) / ( MDR + MDR ) ),( MDR - RRS ) ) ) ) ,( ( FirstVNF_Mem_Server - Const ) + ( ( PN / FirstVNF_CPU ) + RRS ) ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( Min( CS ,MUC ) + RRSe ) ),Max( MUM,( MUM - MUR ) ) ) - ( CS / ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11335531622076894}, {"determining": "( ( ( ( ARS + RRS ) / CRS ) * Min( Min( FirstVNF_Mem_Server ,( PN + ( BR + MRS ) ) ) ,( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - MDR ) ) ) * Min( AMS ,AMS ) )", "choosing": "( ( RRSe + ( RCSe * ( ( RRSe + ( ( RMSe * ( RRSe / MUM ) ) * ( DS / ( RRSe / RCSe ) ) ) ) - ( MUC + MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.09711362427711809}, {"determining": "Min( ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,( RCSe - MUM ) ) * ( Min( MUM ,( Min( MLU ,MUR ) + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.687051811227354}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( ( Min( ( RCSe * MUC ) ,( MUC / RCSe ) ) + Min( ( DS - ( ( ( DS * CS ) * MUR ) + ( MUM * RCSe ) ) ) ,( ( ( MUM - ( MUC - RMSe ) ) + ( Min( MUC ,MUR ) - ( CS / MUM ) ) ) - MUR ) ) ) - Max( ( RRSe + MLU ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10895253734334881}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * Const ) - ACS ) ) ) ,( Min( MDR ,FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,RCSe ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,MUC )", "obj1": 0.19074074074074074, "obj2": 0.7058163330313955}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( ( FirstVNF_RAM * FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( ( DS * Min( DS ,( RMSe + RMSe ) ) ) - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008766402829757937}, {"determining": "Min( ( PN - ( ACS * ( DDR * MDR ) ) ) ,Min( AMS ,( AMS / PN ) ) )", "choosing": "Max( ( ( Min( MLU ,MUR ) * RMSe ) - Min( DS ,Max( MLU,( ( MUR + ( Max( RMSe,MUM ) * ( MUM - MUC ) ) ) - Max( Max( MUR,RMSe ),Max( Max( MUR,RCSe ),CS ) ) ) ) ) ),Min( DS ,RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5090637528856701}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5604940976609328}, {"determining": "( ( Min( Min( ( Const + ( Min( BR ,CRS ) + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( AMS,CRS ) ) ) / Min( ( RRS + AMS ) ,CRS ) ) * Min( ( RRS + FirstVNF_CPU ) ,AMS ) )", "choosing": "( Max( RMSe,Min( ( Max( ( RRSe / Min( MUM ,RCSe ) ),RMSe ) * MUC ) ,( Min( MUR ,MUM ) * Max( ( ( ( RCSe + MUC ) - RMSe ) - MUM ),MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.25, "obj2": 0.6405829073925006}, {"determining": "Min( ( Min( MRS ,Const ) + Max( ( ( MDR * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * CRS ),( ( ( Const + Const ) + Const ) - CRS ) ) ) ,( CRS / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( ( ( MLU * ( Max( MUM,Max( MUM,Min( DS ,CS ) ) ) / Min( MUM ,MUR ) ) ) * ( ( ( ( ( ( CS * MLU ) - CS ) * ( CS - DS ) ) - RRSe ) - ( RCSe * RMSe ) ) - Max( CS,( ( RMSe / Max( ( RRSe * RRSe ),Min( RRSe ,RCSe ) ) ) + Max( MUM,( MLU * Min( CS ,DS ) ) ) ) ) ) ) ,( ( ( Min( Max( RMSe,( ( CS - MUC ) - Min( RCSe ,DS ) ) ) ,Max( ( MLU - Min( RCSe ,CS ) ),MLU ) ) + ( ( MUM - MUM ) + RMSe ) ) * ( RRSe * ( Min( CS ,Min( CS ,RCSe ) ) * ( MLU / ( MUR + MUR ) ) ) ) ) - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7269336372283925}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( AMS + FirstVNF_CPU_Server ) * Max( RRS,ACS ) ) - Max( FirstVNF_CPU,CRS ) ) ) - ( BR + DDR ) ) * ( ( PN - MDR ) / ARS ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( CS - ( MUR / CS ) ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.1048438837399031}, {"determining": "( Min( Min( Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + Min( ACS ,( PN / FirstVNF_Mem_Server ) ) ) + Const ) ,FirstVNF_Mem_Server ) ,( ACS + Max( PN,CRS ) ) ) ,( Min( CRS ,MDR ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) * Min( AMS ,AMS ) )", "choosing": "( Min( RMSe ,Min( ( MUC * ( Min( MUC ,DS ) - RCSe ) ) ,Max( MLU,MUM ) ) ) - ( ( ( Min( CS ,MUR ) - DS ) - RMSe ) + RMSe ) )", "obj1": 0.27037037037037037, "obj2": 0.6297478422111572}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( DDR / ( ( FirstVNF_Mem_Server - Const ) + ARS ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MUR + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.95, "obj2": 0.021455721343026736}, {"determining": "Min( Max( FirstVNF_RAM,BR ) ,Max( MDR,Max( CRS,( FirstVNF_RAM + ( ( FirstVNF_RAM / RRS ) - ( FirstVNF_Mem - DDR ) ) ) ) ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( ( Max( DS,MUM ) * DS ) - MLU ) )", "obj1": 0.21666666666666667, "obj2": 0.6840444417450975}, {"determining": "Min( ( Const + ( Min( FirstVNF_RAM_Server ,AMS ) + ( ( FirstVNF_Mem_Server + CRS ) + Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( Max( RRS,DDR ) ,MRS ) + PN ) ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( RRS * ( Const - FirstVNF_CPU_Server ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( RMSe / MUM ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) / Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( Min( ( ( CS + CS ) / ( RRSe / MUC ) ) ,Min( RMSe ,RRSe ) ) - ( RCSe - ( RMSe + MUR ) ) ) ) - RRSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7431527147903574}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ARS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Max( CRS,( ( Const - AMS ) + Min( DDR ,Const ) ) ) ) + ( RRS / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * Min( Min( AMS ,( PN * MDR ) ) ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUC,DS ) - Max( MUM,MUM ) ) ) / MUM ) ) ) - Min( RCSe ,( RMSe + DS ) ) ) ,Max( ( ( MUC - ( RCSe - ( ( MUC - ( RMSe - RRSe ) ) / RRSe ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6529828234397462}, {"determining": "Min( ( Const + PN ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU * Max( CRS,( ( ARS - PN ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( AMS / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * ( RRS / ARS ) ) ) - ARS ) ) - ( ( AMS + ( ( DDR * ( ( ARS + Const ) * ( Const - Const ) ) ) + ( MDR * AMS ) ) ) * ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MUM,( CS - MLU ) ) - ( DS / MUM ) ) - ( ( RMSe * Min( MUM ,( MUC - RCSe ) ) ) - MUC ) ) / ( MLU / ( ( ( RMSe * ( CS / MUC ) ) - ( ( CS - MLU ) - ( RRSe / CS ) ) ) - Max( MUR,MUM ) ) ) ),( ( RMSe * ( RCSe / RRSe ) ) * Max( ( MLU * MUM ),DS ) ) ) ,( ( ( MUR + RMSe ) / ( MUR - ( RCSe - ( RMSe + MUR ) ) ) ) - ( ( MUR / DS ) - MUC ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7356742415656303}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( FirstVNF_CPU + ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( MUC - RCSe ) - Max( MUR,MUM ) ) - MUR ) - RCSe ) - Max( MUR,MUM ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6458843824869728}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.23333333333333334, "obj2": 0.6604374143022003}, {"determining": "( ( ACS - PN ) / ( Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / FirstVNF_CPU ) + PN ) ) + ( CRS / CRS ) ) )", "choosing": "Min( ( ( MLU / ( MUC / Min( MUM ,MUR ) ) ) - ( ( MUM - Min( ( ( MUC * ( RRSe / CS ) ) - MLU ) ,( MUC + RMSe ) ) ) - Min( MUR ,RMSe ) ) ) ,( Max( MUM,Max( MUC,MLU ) ) - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6997383982154204}, {"determining": "( ( FirstVNF_Mem_Server * Max( ARS,PN ) ) - ( ( ( AMS / FirstVNF_Mem_Server ) + MDR ) - Max( CRS,PN ) ) )", "choosing": "Min( ( Max( MUR,Max( DS,( ( RMSe * DS ) + CS ) ) ) - Max( ( RRSe * ( RRSe + MLU ) ),DS ) ) ,( ( MUR + Min( ( RCSe - MLU ) ,CS ) ) - ( ( CS + MLU ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.09637375791621618}, {"determining": "( ( FirstVNF_RAM * ( ( PN * Const ) + ( FirstVNF_CPU_Server / ( MDR + Const ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( Max( RRSe,( DS - ( MLU - ( ( RCSe - ( DS / MUC ) ) - MLU ) ) ) ) / ( MUR - ( ( ( RMSe * ( RRSe / MUM ) ) + MUR ) * RCSe ) ) ) + ( MUM * MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004597193945797264}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015672168191350172}, {"determining": "( ( FirstVNF_RAM_Server - ( Max( FirstVNF_CPU_Server,( CRS / ( MRS * Max( MRS,PN ) ) ) ) + ( Min( AMS ,( FirstVNF_Mem_Server / AMS ) ) * ( BR - FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,DDR ) / ( CRS * ( ( CRS * AMS ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS + RCSe ) ,RMSe ) - ( ( ( ( RMSe + ( ( ( MLU - RRSe ) - MLU ) - ( ( RCSe * MUR ) / RCSe ) ) ) / ( RMSe / RRSe ) ) / MUM ) + ( Max( MLU,( RCSe + RMSe ) ) - MUC ) ) )", "obj1": 0.9925925925925926, "obj2": 0.002773544998687966}, {"determining": "( ( ( Min( PN ,Max( FirstVNF_RAM_Server,( ARS / FirstVNF_RAM ) ) ) - DDR ) * CRS ) * Max( ( DDR + AMS ),FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( RCSe / ( MLU + RRSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.9092592592592592, "obj2": 0.03852929393763772}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( RCSe * ( RCSe * RMSe ) ) - MUC ) + ( ( ( MUM / RRSe ) + Max( RRSe,MUR ) ) * MUC ) ) ) ) ) ,( ( DS * Min( DS ,MUM ) ) - MLU ) )", "obj1": 0.49444444444444446, "obj2": 0.4077945048665058}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,MUM ) * ( Min( MUM ,( MUR + ( MUC - RMSe ) ) ) - RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6635213725137444}, {"determining": "Min( Min( MRS ,CRS ) ,( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe * MUR ) - ( CS - Max( MLU,( ( RMSe - RRSe ) - ( CS - MLU ) ) ) ) ) - ( ( MUC - RCSe ) - ( Max( MUR,CS ) * Min( RRSe ,Max( DS,RMSe ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7615828382737574}, {"determining": "( ( ( ( ( ( ( AMS - ( FirstVNF_RAM_Server / CRS ) ) - FirstVNF_CPU_Server ) + FirstVNF_Mem ) / ( ( ( ( FirstVNF_RAM_Server + AMS ) * BR ) - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) / BR ) ) - ACS ) + MRS ) - Max( BR,RRS ) )", "choosing": "( ( ( ( RMSe / RMSe ) * RMSe ) / RRSe ) - ( CS + CS ) )", "obj1": 0.5407407407407407, "obj2": 0.3870516624351997}, {"determining": "( ( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) * CRS ) * ( CRS + ARS ) )", "choosing": "( Max( MUC,RMSe ) - ( Max( RCSe,( MUR - Max( ( RCSe - ( DS / MUC ) ),RMSe ) ) ) / RCSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02501839427668598}, {"determining": "Min( Max( ( ( MDR + ( ( MDR + CRS ) / MRS ) ) / MRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) + CRS ) ) ,Min( AMS ,BR ) )", "choosing": "Max( ( RCSe / CS ),( Max( Max( DS,RCSe ),MLU ) / Min( RRSe ,MUM ) ) )", "obj1": 0.15, "obj2": 0.7546586869452175}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) - MDR ) )", "choosing": "Min( Min( RCSe ,Min( MUC ,DS ) ) ,( RCSe - MUM ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUR * ( DS * Min( DS ,( RMSe + RMSe ) ) ) ) ) + ( RRSe + ( MUR / ( CS + RCSe ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02742821973201386}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Max( ( Min( ( RRSe * RMSe ) ,CS ) * MUM ),RCSe ) / MUC ) ,MUM ) - ( MUR * DS ) ) + Min( ( RMSe - ( ( MLU - RRSe ) + MUC ) ) ,DS ) )", "obj1": 0.9, "obj2": 0.04684465033696463}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem - ( ( MRS * BR ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.21851851851851853, "obj2": 0.6734045708569122}, {"determining": "Min( ( BR * FirstVNF_CPU ) ,( ( FirstVNF_Mem / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - MUC ) + Max( MUR,( ( Max( RRSe,MLU ) - ( CS - MUM ) ) + MUC ) ) ) / MUR ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.5889241267168505}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,( ( ( ( ( DDR * ( RRS * Min( MRS ,MDR ) ) ) + ( MDR * AMS ) ) + AMS ) * Min( Const ,( CRS - Min( FirstVNF_RAM ,( ( ACS + CRS ) * ( RRS / MRS ) ) ) ) ) ) - ( RRS * Min( MRS ,MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) - RCSe ) * RCSe ) ,( RRSe - ( ( ( Max( ( MUC / RRSe ),MUM ) - Min( MLU ,( ( MUR - RCSe ) + ( MLU * MUM ) ) ) ) - CS ) + ( DS + ( MUC - ( MLU * MUM ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.7021586518120915}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR - Max( Max( ( RRSe + MUC ),MUM ),( DS / ( ( ( DS * ( RCSe * RMSe ) ) + MUC ) + ( ( MLU + Max( RRSe,RRSe ) ) * MUC ) ) ) ) ) ,( MLU - MLU ) )", "obj1": 0.48518518518518516, "obj2": 0.4149346583602459}, {"determining": "( ( MDR - ( ACS - ( ( ( Max( CRS,FirstVNF_RAM ) + FirstVNF_Mem ) * ARS ) - Max( FirstVNF_RAM,( ( PN * RRS ) + DDR ) ) ) ) ) * ( Min( CRS ,ARS ) - MDR ) )", "choosing": "( ( MUM / CS ) - Min( ( Min( ( RRSe / Max( ( Max( MUR,CS ) + MLU ),( ( RCSe / CS ) / ( MUC * MUR ) ) ) ) ,DS ) - ( MLU / ( ( MUC / ( MLU * ( RCSe / RMSe ) ) ) - DS ) ) ) ,Max( Min( MUC ,Min( ( RMSe * ( ( RRSe / DS ) * CS ) ) ,MLU ) ),( ( ( Max( RCSe,Min( DS ,RRSe ) ) - MUM ) + ( ( Max( CS,MLU ) / CS ) / MUR ) ) / CS ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5118185987869627}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ARS ) ,( FirstVNF_Mem / ( PN - ( ( MRS + ( MDR * FirstVNF_CPU_Server ) ) / Max( MDR,FirstVNF_Mem ) ) ) ) ) * CRS ) * ( MRS + ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + MLU ) ) ) - ( RCSe / ( RCSe - ( MUC - ( ( Max( ( MUR - RMSe ),( MLU + MUC ) ) - ( ( MUR - MUC ) * RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01631104771075029}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.034473565781016756}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( MRS ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - RMSe ) * MLU ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.03041623479896401}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( AMS * ( ( ( ( FirstVNF_CPU_Server / CRS ) / ( ( DDR + Const ) / FirstVNF_CPU ) ) + MDR ) + ( Max( FirstVNF_CPU,PN ) / RRS ) ) ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,Min( Min( ( ( ( RCSe * ( DS + MUM ) ) + MUM ) + MLU ) ,MUM ) ,RRSe ) ) - ( MUM + MUC ) )", "obj1": 0.25925925925925924, "obj2": 0.6355400830282467}, {"determining": "Min( ( Min( Max( ( AMS / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,PN ) - DDR ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( Min( FirstVNF_CPU_Server ,BR ) * Min( AMS ,( PN * MDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * ( Max( MUR,CS ) - Max( MUM,MUM ) ) ) / RRSe ) ) ) - Min( MUC ,RCSe ) ) ,Max( ( ( MUC - ( RCSe - ( RRSe / ( MUC - ( RMSe - MUC ) ) ) ) ) * ( Min( CS ,MUR ) + RMSe ) ),( RMSe + ( Min( RMSe ,( MUM - Max( MUM,Min( RCSe ,MLU ) ) ) ) - MUC ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.041813038462151154}, {"determining": "Min( ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( BR * ( ( BR * Const ) - ACS ) ) - ACS ) ) ) ,( MDR * ( Max( Min( FirstVNF_Mem ,BR ),MRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR - ( Max( Min( Max( DS,MUR ) ,RMSe ),( CS - CS ) ) * ( ( MUR * MUR ) * RCSe ) ) ) ,( MLU - MLU ) )", "obj1": 0.2222222222222222, "obj2": 0.6706913126262509}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ARS * Min( ( FirstVNF_RAM_Server * Min( Const ,( AMS + BR ) ) ) ,PN ) ) )", "choosing": "( Max( MUR,Min( RMSe ,Max( Min( ( RRSe * Max( RMSe,Max( RMSe,MLU ) ) ) ,RCSe ),( MUM + MUM ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7648273584899479}, {"determining": "Min( ( ( Const - ( Max( ( FirstVNF_Mem + MDR ),FirstVNF_RAM ) - ( FirstVNF_RAM - ( ( ( DDR * AMS ) * Max( FirstVNF_RAM,MDR ) ) + DDR ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( Min( MUC ,RCSe ) - ( Min( ( MUC * RCSe ) ,( MUC / RCSe ) ) * Min( ( RRSe + ( MUM / DS ) ) ,( ( MUR * Max( Max( MUR,CS ),( MUM / MUM ) ) ) / RRSe ) ) ) ) ,( DS + RRSe ) )", "obj1": 0.4425925925925926, "obj2": 0.4594187686248058}, {"determining": "( ( Min( Min( ( Const + ( Min( BR ,CRS ) + MRS ) ) ,FirstVNF_Mem_Server ) ,( ACS + Max( AMS,CRS ) ) ) / Min( ( RRS + AMS ) ,CRS ) ) * Min( AMS ,AMS ) )", "choosing": "( Max( RMSe,Min( ( Min( CS ,( Max( ( MUR * MUC ),MUM ) - CS ) ) * MUC ) ,( Min( MUR ,MUM ) * Max( ( ( ( RCSe + MUC ) - RMSe ) - MUM ),MUC ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.2611111111111111, "obj2": 0.6338893587083564}, {"determining": "Min( ( Const / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MLU,MUM ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7489814813353481}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - Min( MDR ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( DS,MUC ) / MUC )", "obj1": 0.4888888888888889, "obj2": 0.4110130923129559}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( Const / FirstVNF_CPU_Server ) * RRS ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / ( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,ARS ) ) ) * PN ) + ( CRS * ACS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( Max( MUR,RMSe ) * Max( Min( MUM ,( RRSe + MLU ) ),RRSe ) ) ) - MUR ) ,( RCSe - MUM ) )", "obj1": 0.17407407407407408, "obj2": 0.7304501711769663}, {"determining": "( ( ( ARS + ( ( ( ( ARS * FirstVNF_CPU ) + BR ) - ARS ) * MDR ) ) / AMS ) * ( Max( ( FirstVNF_RAM - ARS ),( DDR + Max( ( BR / PN ),( ( MRS * ARS ) + DDR ) ) ) ) + MDR ) )", "choosing": "( ( RMSe / ( RRSe * RRSe ) ) - ( Max( MUC,RRSe ) + MUM ) )", "obj1": 0.13333333333333333, "obj2": 0.771834998968703}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_CPU * RRS ) ) ,( FirstVNF_Mem / ( PN - ( DDR / Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) ) ) * CRS ) * Min( PN ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( MUC + ( MUM + Min( CS ,RMSe ) ) ) ) - ( RCSe / ( RCSe - ( MUR - ( ( ( ( MUC * RCSe ) - ( MUM * CS ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03283910533484378}]}