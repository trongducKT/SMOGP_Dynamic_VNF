{"1": [{"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( DDR / BR ) )", "choosing": "( ( MUC + RCSe ) - ( MUM / RMSe ) )", "obj1": 0.29182156133828996, "obj2": 0.617731311543291}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + MUM ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,MUR ) / ( RRSe / MUR ) )", "obj1": 0.32899628252788105, "obj2": 0.5983353323163528}, {"determining": "( ( ACS + MRS ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Max( Min( MUC ,MUC ),( RCSe + DS ) )", "obj1": 0.46654275092936803, "obj2": 0.44510015248075785}, {"determining": "( ( AMS + RRS ) * Max( MDR,Const ) )", "choosing": "( Min( MUM ,RRSe ) * Max( MLU,MUM ) )", "obj1": 0.31970260223048325, "obj2": 0.6055752635439181}, {"determining": "Min( ( PN / ACS ) ,Max( MDR,CRS ) )", "choosing": "Min( ( MUR * CS ) ,( MUR - DS ) )", "obj1": 0.2211895910780669, "obj2": 0.7351373093976423}, {"determining": "( ( ARS - ( ( FirstVNF_RAM - ( ARS * FirstVNF_RAM_Server ) ) / BR ) ) + ( RRS * Const ) )", "choosing": "( ( MUC / MUR ) * ( ( RMSe * RRSe ) + DS ) )", "obj1": 0.33643122676579923, "obj2": 0.5511332827747962}, {"determining": "Max( Min( ARS ,FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MUR - RRSe ) + Min( MUR ,MUM ) )", "obj1": 0.3104089219330855, "obj2": 0.6025533976111668}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,Min( ACS ,PN ) )", "choosing": "Min( Max( CS,MUR ) ,Max( DS,RMSe ) )", "obj1": 0.4888475836431227, "obj2": 0.45811722528405613}, {"determining": "Max( ( MRS / RRS ),( MRS + ARS ) )", "choosing": "( Min( Max( MUC,MUC ) ,MLU ) / ( MUM / MUM ) )", "obj1": 0.2992565055762082, "obj2": 0.6203183830773222}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * BR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( RMSe + RCSe ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.7196255655859589}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / PN ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2992565055762082, "obj2": 0.5663281050145008}, {"determining": "( Max( FirstVNF_RAM,DDR ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( MUC * DS ) )", "obj1": 0.07992565055762081, "obj2": 0.8162681327746593}, {"determining": "( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( MUM,RRSe ) * ( CS + MUM ) )", "obj1": 0.3066914498141264, "obj2": 0.6447956270260609}, {"determining": "Max( ( DDR / Const ),Min( PN ,PN ) )", "choosing": "( ( MUR - RCSe ) / ( RRSe - MUM ) )", "obj1": 0.34014869888475835, "obj2": 0.6144623493531373}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS + MDR ),( MDR / CRS ) )", "choosing": "( Min( CS ,CS ) / ( MLU - CS ) )", "obj1": 0.1524163568773234, "obj2": 0.78837761355846}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server - Max( Min( BR ,FirstVNF_RAM ),FirstVNF_RAM ) ) - RRS ) - CRS ) + Max( DDR,CRS ) ) + Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( Max( MLU,( MUC - Max( RMSe,Max( RMSe,( Min( Max( RRSe,CS ) ,MUM ) + RRSe ) ) ) ) ) * ( MUM - MLU ) )", "obj1": 0.23605947955390336, "obj2": 0.6659350045844377}, {"determining": "( ( PN * PN ) + Max( ARS,PN ) )", "choosing": "Max( ( RRSe / RMSe ),( MUM + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.5466630958956878}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.2100371747211896, "obj2": 0.7212809763494804}, {"determining": "( Min( FirstVNF_CPU ,DDR ) + Min( DDR ,ARS ) )", "choosing": "( Min( MUC ,MLU ) - ( RRSe + RMSe ) )", "obj1": 0.19330855018587362, "obj2": 0.6753149994433729}, {"determining": "( ( MDR * DDR ) + ( DDR / ARS ) )", "choosing": "( Max( RMSe,MLU ) * ( RCSe / RMSe ) )", "obj1": 0.16728624535315986, "obj2": 0.7487666288939276}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( ARS * MRS ) )", "choosing": "Max( ( MUR + MUM ),( RMSe - RCSe ) )", "obj1": 0.31970260223048325, "obj2": 0.5909411423971889}, {"determining": "( ( PN + FirstVNF_Mem_Server ) * ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,MLU ) / ( MLU - RCSe ) )", "obj1": 0.11338289962825279, "obj2": 0.8159837936773624}, {"determining": "Min( ( RRS / ACS ) ,( RRS * BR ) )", "choosing": "( ( MUC + MLU ) * ( DS + MLU ) )", "obj1": 0.362453531598513, "obj2": 0.5671820478169799}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_RAM ) )", "choosing": "Max( ( MUM + CS ),( MUC + MUR ) )", "obj1": 0.29182156133828996, "obj2": 0.6379105169638657}, {"determining": "( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR / MUR ) ,( MUC * MUR ) )", "obj1": 0.3066914498141264, "obj2": 0.6049669949510929}, {"determining": "Min( Min( FirstVNF_RAM_Server ,ACS ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * RMSe ) + ( CS - RMSe ) )", "obj1": 0.22490706319702602, "obj2": 0.7438786061170275}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( PN * MDR ) ,Max( ARS,Max( ( PN * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + DS ) - Min( RMSe ,MUM ) ) - ( MUC - Max( Min( RCSe ,RRSe ),MLU ) ) )", "obj1": 0.395910780669145, "obj2": 0.5732297052025866}, {"determining": "( ( Max( MRS,ARS ) - ( MRS + FirstVNF_CPU ) ) / ( Min( FirstVNF_RAM_Server ,PN ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Min( MUR ,MLU ) ,Max( MUC,RCSe ) ),Min( ( DS + MUM ) ,( MUM / RCSe ) ) )", "obj1": 0.5018587360594795, "obj2": 0.43448352759220266}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) )", "choosing": "Max( Max( Min( RMSe ,MUR ),( MUC - MUC ) ),( ( RCSe / RMSe ) - Max( MLU,MUR ) ) )", "obj1": 0.3104089219330855, "obj2": 0.6025533976111668}, {"determining": "( Min( FirstVNF_CPU ,CRS ) / ( MRS / MRS ) )", "choosing": "Max( ( Min( MLU ,MLU ) * ( RRSe / MUM ) ),( ( MUM - MLU ) * ( RRSe + MUC ) ) )", "obj1": 0.3513011152416357, "obj2": 0.6196529543437148}, {"determining": "( ( RRS / ( CRS / BR ) ) * Min( RRS ,PN ) )", "choosing": "( ( Max( DS,MUR ) / ( MUR / RCSe ) ) / ( ( MUM - RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.25650557620817843, "obj2": 0.6494526785979031}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - RRSe ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.7732342007434945, "obj2": 0.21498951353887671}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + MRS ) ) ,( Max( MDR,ARS ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) )", "obj1": 0.3271375464684015, "obj2": 0.5822188525942668}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( CRS * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( RCSe,DS ) ) )", "obj1": 0.2100371747211896, "obj2": 0.7934327103942247}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,( ( MUM + RMSe ) + RRSe ) ) + Max( ( RCSe / MUR ),( MUM + MUC ) ) )", "obj1": 0.36617100371747213, "obj2": 0.576307471872781}, {"determining": "Max( Max( MDR,RRS ),Max( ( ( FirstVNF_RAM_Server + ( Min( ( MRS + PN ) ,( AMS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) ) - RRS ),FirstVNF_Mem ) )", "choosing": "( Max( Min( ( Min( MLU ,Min( ( MUR - Max( RMSe,MUC ) ) ,MUC ) ) / MUR ) ,RRSe ),Max( MUR,MUM ) ) - ( MUC + MUR ) )", "obj1": 0.23977695167286245, "obj2": 0.6267285890869828}, {"determining": "( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU / MRS ) + BR ) ,( FirstVNF_RAM_Server - BR ) )", "choosing": "Max( ( ( MLU * RCSe ) + ( MUR / RRSe ) ),( Max( CS,MUC ) * Min( MUM ,DS ) ) )", "obj1": 0.26765799256505574, "obj2": 0.648362490306205}, {"determining": "( ( ( Const + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( Min( DDR ,CRS ) / Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( MUM / RCSe ) + Min( CS ,CS ) )", "obj1": 0.24535315985130113, "obj2": 0.7618647509974119}, {"determining": "Min( ( Const * BR ) ,( MDR + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( CS * Max( DS,RCSe ) ) )", "obj1": 0.1821561338289963, "obj2": 0.7186430471205763}, {"determining": "( ( FirstVNF_Mem_Server + ( CRS / DDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( MUC / MUM ) ) * Min( ( MUM + MUM ) ,RRSe ) )", "obj1": 0.2695167286245353, "obj2": 0.6473015840995077}, {"determining": "Max( ( ( AMS / CRS ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Max( ( ARS - FirstVNF_CPU ),Max( BR,CRS ) ) )", "choosing": "( ( ( MUC * DS ) - Max( MUR,MUR ) ) * Max( ( MLU * MUR ),Min( CS ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6808959654988743}, {"determining": "( Min( ARS ,MDR ) / ( FirstVNF_Mem_Server * FirstVNF_RAM ) )", "choosing": "Min( Min( ( RMSe - MUM ) ,( RCSe / MUR ) ) ,Min( ( DS - MUR ) ,( MUM / CS ) ) )", "obj1": 0.3643122676579926, "obj2": 0.5908260089830946}, {"determining": "( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server / CRS ) ) - ( Min( FirstVNF_CPU_Server ,BR ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( RMSe + DS ) * ( DS - ( RMSe * MUM ) ) )", "obj1": 0.241635687732342, "obj2": 0.704911020875277}, {"determining": "( Min( DDR ,AMS ) + ( RRS + RRS ) )", "choosing": "( Max( Max( RRSe,Max( ( ( DS - ( RMSe + MUM ) ) - RMSe ),CS ) ),MUC ) - ( MUC + MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6446743281726295}, {"determining": "( ( FirstVNF_Mem_Server / MDR ) * Max( ( AMS - MRS ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - ( MUR + RRSe ) ) * DS ) )", "obj1": 0.4256505576208178, "obj2": 0.5030846956368322}, {"determining": "( ( ( AMS + FirstVNF_RAM ) * Min( CRS ,CRS ) ) / Max( ( BR * DDR ),( BR - AMS ) ) )", "choosing": "Max( Max( Max( RRSe,RRSe ),( MUR + CS ) ),( ( MUR - MLU ) - ( MLU / RRSe ) ) )", "obj1": 0.3420074349442379, "obj2": 0.6206817639440312}, {"determining": "( Max( ( FirstVNF_Mem + FirstVNF_CPU ),Max( DDR,FirstVNF_CPU_Server ) ) + ( ( CRS + ACS ) - ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( Min( RCSe ,CS ),Min( CS ,RRSe ) ) - Max( Min( CS ,RRSe ),Min( RRSe ,RRSe ) ) )", "obj1": 0.22676579925650558, "obj2": 0.8113808598920621}, {"determining": "Min( ( ( ( ( MDR + BR ) - CRS ) - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,Max( ( ( DDR + BR ) / BR ),PN ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ,Max( Max( ( MLU - ( DS * Max( Min( ( RMSe - RRSe ) ,( RRSe + RMSe ) ),( ( RMSe / MUR ) - MUM ) ) ) ),MUR ),( MLU * RCSe ) ) )", "obj1": 0.20074349442379183, "obj2": 0.7403339026601465}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.2137546468401487, "obj2": 0.6749638510603251}, {"determining": "Max( ( Max( RRS,FirstVNF_RAM ) - ( MDR + MDR ) ),Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe / MUC ) * ( RRSe - MUR ) ),Min( ( DS / DS ) ,( RRSe / MUM ) ) )", "obj1": 0.3141263940520446, "obj2": 0.5888341618264795}, {"determining": "( Max( ( ARS * AMS ),AMS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS - DS ) ) / ( CS + RRSe ) )", "obj1": 0.26765799256505574, "obj2": 0.5838621240516834}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,( ( Const / Const ) * FirstVNF_Mem ) ) + Max( DDR,BR ) ) / ( MDR * Const ) )", "choosing": "( ( Min( CS ,( ( MUR - ( Min( ( RCSe * CS ) ,Min( MUM ,MUM ) ) - Min( MLU ,( RCSe - MUM ) ) ) ) * RCSe ) ) - ( MLU + MUR ) ) - ( ( MUC + DS ) + ( MLU - MLU ) ) )", "obj1": 0.2899628252788104, "obj2": 0.6733155216262651}, {"determining": "Min( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,ARS ) ) ,Min( Min( Const ,Const ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / RRSe ) + MUR ) * ( CS * CS ) )", "obj1": 0.29739776951672864, "obj2": 0.6942055341608478}, {"determining": "( ( Const / ( ( CRS / AMS ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU / FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUM - RRSe ) - RCSe ),RCSe ) * ( ( Min( RRSe ,MLU ) - MUR ) * RMSe ) )", "obj1": 0.22676579925650558, "obj2": 0.7081835565319274}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,Min( ARS ,FirstVNF_CPU_Server ) ) - ( ( BR + ACS ) * ( FirstVNF_RAM / PN ) ) ) * ( ( ( ACS + DDR ) * ( DDR + FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_RAM ) / ( Const + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - MUR ) + Max( RCSe,RCSe ) )", "obj1": 0.2955390334572491, "obj2": 0.6109230316151519}, {"determining": "Min( Min( AMS ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_Mem ) )", "choosing": "( Min( ( MLU / ( RRSe * MLU ) ) ,MUR ) - ( MLU - ( ( RMSe * RMSe ) / ( RRSe * MUC ) ) ) )", "obj1": 0.3847583643122677, "obj2": 0.5596047792699232}, {"determining": "Max( Max( FirstVNF_RAM_Server,PN ),( Const - ( DDR * BR ) ) )", "choosing": "Max( Max( ( CS / ( MUR + MUC ) ),Max( DS,DS ) ),Max( RCSe,MUC ) )", "obj1": 0.29182156133828996, "obj2": 0.6167468911019475}, {"determining": "Min( Min( ( ( ACS - BR ) * Min( FirstVNF_Mem_Server ,MDR ) ) ,Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - Min( Const ,ACS ) ) / Min( ( DDR / RRS ) ,Min( FirstVNF_Mem ,AMS ) ) ) )", "choosing": "( ( ( ( MUC * RRSe ) / Max( RMSe,DS ) ) + Min( ( CS + RCSe ) ,( RMSe + MUC ) ) ) - ( ( ( RRSe / MLU ) * Max( MLU,CS ) ) / ( ( DS / DS ) + ( MUM * RMSe ) ) ) )", "obj1": 0.5037174721189591, "obj2": 0.45176981999807286}, {"determining": "( Max( ( Max( MDR,Const ) + Min( FirstVNF_CPU ,CRS ) ),( ( BR - FirstVNF_RAM ) * Min( CRS ,RRS ) ) ) / ( ( Max( PN,FirstVNF_Mem ) / ( ACS * ARS ) ) + ( ( Const - FirstVNF_CPU_Server ) + Max( CRS,PN ) ) ) )", "choosing": "( Max( ( Max( RRSe,RRSe ) - ( RRSe + CS ) ),Min( Max( MUC,MUC ) ,( DS + CS ) ) ) / ( ( Max( MUM,MUC ) * ( MLU / RRSe ) ) / ( ( RRSe + DS ) - ( DS + RRSe ) ) ) )", "obj1": 0.30297397769516726, "obj2": 0.6237147329307249}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / MRS ) - FirstVNF_RAM_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) * ( Max( CRS,Min( DDR ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUM * MUR ),( MUR + CS ) )", "obj1": 0.31784386617100374, "obj2": 0.6500989413372226}, {"determining": "( Max( RRS,MDR ) - ( PN / ARS ) )", "choosing": "Max( ( MUR + RMSe ),( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.6691897541519131}, {"determining": "Max( ( CRS / FirstVNF_RAM_Server ),( ARS + CRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( DS - RCSe ) ) ,( Min( MUC ,MUR ) + Min( RMSe ,RRSe ) ) ) - ( ( ( RMSe - RRSe ) / ( RCSe - RRSe ) ) / Min( ( DS - MUR ) ,Max( MUC,MLU ) ) ) )", "obj1": 0.25092936802973975, "obj2": 0.6451149388252754}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.7221835380390043}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,RRS ) - ( ARS * Const ) )", "choosing": "( ( MUM - ( ( RMSe / MUC ) / ( RCSe * RCSe ) ) ) - Max( Min( MUM ,( RRSe / MUR ) ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.10364409161405694}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Min( MRS ,DDR ) * DDR ) - ( ARS - ( Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) * ( ( Min( MRS ,ACS ) * PN ) + Max( FirstVNF_RAM,AMS ) ) ) ) ),FirstVNF_RAM ) / ( AMS / ( RRS + ( ( ( BR - ( ACS * MDR ) ) + FirstVNF_CPU ) + DDR ) ) ) )", "choosing": "( Max( Min( MUC ,DS ),MUC ) - ( ( Max( MUC,MUR ) - ( ( ( ( RCSe + DS ) * RMSe ) / Min( MUC ,RCSe ) ) - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6725077233325243}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46943707150766284}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( DDR + Const ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + ( MRS - MRS ) ) ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( PN / ARS ) ) * ( ( PN - ACS ) + Max( ARS,ARS ) ) ) )", "choosing": "( Max( Min( ( MUC / RCSe ) ,RCSe ),CS ) + Max( MUM,( ( MUC * MUC ) * MLU ) ) )", "obj1": 0.33271375464684017, "obj2": 0.6048351884109141}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( ( MDR * ARS ) + ( MDR * MRS ) ) - Min( ( BR / DDR ) ,( AMS + DDR ) ) ) / ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) + ( ( ARS - ACS ) * ( DDR - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU * MUM ),( ( CS + ( MUM - DS ) ) - ( RMSe / MUR ) ) )", "obj1": 0.32899628252788105, "obj2": 0.6240434145156096}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Max( Max( FirstVNF_CPU,DDR ),Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + RRSe ),( ( Min( MUR ,MUC ) - RMSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.2936802973977695, "obj2": 0.6315920249840891}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) / ( ARS / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUC ,RRSe ) + Max( Max( MUC,RMSe ),Min( Max( MUC,DS ) ,Min( DS ,MLU ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.607294334591284}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.803389483780645}, {"determining": "Max( Max( ( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_CPU_Server * MDR ) ),( Min( AMS ,FirstVNF_CPU ) / Max( DDR,MDR ) ) ),( ( Min( BR ,Const ) - ( MDR - FirstVNF_Mem_Server ) ) * Min( ( MDR / MRS ) ,Min( MRS ,AMS ) ) ) )", "choosing": "Max( ( Max( Max( MUR,CS ),( RCSe * MUM ) ) - ( ( MUR * CS ) - ( DS - MUC ) ) ),( ( Max( RRSe,RMSe ) / ( MUC / RRSe ) ) * ( Min( MUM ,MUR ) + Max( MUC,RRSe ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5962129254664048}, {"determining": "( ( MDR + ARS ) * ( FirstVNF_Mem_Server / AMS ) )", "choosing": "Max( Min( DS ,( MLU - RRSe ) ),Min( RCSe ,RRSe ) )", "obj1": 0.31784386617100374, "obj2": 0.5910114377483626}, {"determining": "( ( Max( ( ARS * RRS ),( AMS - BR ) ) + ( ( ACS / FirstVNF_Mem ) + ( ACS - FirstVNF_RAM_Server ) ) ) - Max( ( ( PN - Const ) - Min( FirstVNF_Mem ,Const ) ),( ( RRS - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUR + MUC ) + Max( MUM,RMSe ) ) ,Min( Min( MLU ,RMSe ) ,( MUR + CS ) ) ) / Min( ( ( MUR / MUM ) / ( MUC * MLU ) ) ,Min( ( RMSe + RRSe ) ,( MUM / CS ) ) ) )", "obj1": 0.2211895910780669, "obj2": 0.782199287726038}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "( ( Min( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / Min( ( PN / FirstVNF_RAM_Server ) ,( MRS / AMS ) ) ) * Min( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,BR ) ) ,Max( Min( FirstVNF_RAM ,MDR ),( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( RCSe + Max( MUM,RCSe ) ) / MUM ) * ( CS + DS ) ) + ( Min( MUR ,RMSe ) - ( MLU / MUC ) ) ) + ( Max( Min( CS ,DS ),( RCSe - MLU ) ) * ( ( MUC / RMSe ) * ( MUR / MLU ) ) ) )", "obj1": 0.33643122676579923, "obj2": 0.60037472796723}], "2": [{"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * BR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( RMSe + RCSe ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8620290719929625}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( ARS - AMS ) + ( RRS * Const ) )", "choosing": "( ( MUC / MUR ) * ( ( ( MUR - RRSe ) + Min( MUR ,MUM ) ) + DS ) )", "obj1": 0.7732342007434945, "obj2": 0.15501937747685685}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( MUM,RRSe ) * MUR )", "obj1": 0.7100371747211895, "obj2": 0.2593952415254702}, {"determining": "( ( FirstVNF_Mem_Server + ( CRS / DDR ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - ( MUC / MUM ) ) * Min( ( MUM + Min( CS ,CS ) ) ,RRSe ) )", "obj1": 0.6747211895910781, "obj2": 0.29769164869859993}, {"determining": "Max( Const,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( DS - RRSe ) + Min( MUR ,MUM ) )", "obj1": 0.4795539033457249, "obj2": 0.41445521611259156}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( ACS + MRS ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Max( Min( MUC ,MUC ),( RCSe + DS ) )", "obj1": 0.46654275092936803, "obj2": 0.44510015248075785}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Max( ( ( PN - Const ) - Min( FirstVNF_Mem ,Const ) ),( ( RRS - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUR + CS ) )", "obj1": 0.9256505576208178, "obj2": 0.04888779276595188}, {"determining": "( ( FirstVNF_Mem + ( ( MRS - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / Max( ( ( RMSe / MUC ) * ( RRSe - MUR ) ),Min( ( DS / DS ) ,( RRSe / MUM ) ) ) ) ) - Max( CS,RMSe ) )", "obj1": 0.9052044609665427, "obj2": 0.07706938888072673}, {"determining": "( ( ARS + DDR ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( MUM,RRSe ) * ( ( MUR / DS ) + MUM ) )", "obj1": 0.10037174721189591, "obj2": 0.7990572070545467}, {"determining": "( Max( DDR,RRS ) - ( ARS * Const ) )", "choosing": "( ( MUM - ( ( RMSe / MUC ) / ( RCSe * RCSe ) ) ) - Max( Min( MUM ,( RRSe / MUR ) ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.10364409161405694}, {"determining": "( ( BR + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + MUM ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * DDR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( MUR + DS ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8544000896588471}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( ( ( BR / PN ) * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / DS ) * Min( MLU ,RRSe ) )", "obj1": 0.9925650557620818, "obj2": 0.006586940976970965}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ) )", "choosing": "( ( MLU - ( Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) ) + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5803915692787487}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.2342007434944238, "obj2": 0.6227984242651259}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5919923484524804}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,( ( BR - FirstVNF_RAM ) * Min( CRS ,RRS ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( RRSe + DS ) - ( DS + RRSe ) ) )", "obj1": 0.08736059479553904, "obj2": 0.8110285835225117}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( ( ( MUC * CS ) * Min( CS ,MUC ) ) ,RMSe ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5827449542734694}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( ( BR + BR ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "Min( ( Max( ( ( AMS / CRS ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Max( ( ARS - FirstVNF_CPU ),Max( BR,CRS ) ) ) * BR ) ,( MDR + MRS ) )", "choosing": "Max( ( RCSe / Min( CS ,MUC ) ),( CS * Max( DS,RCSe ) ) )", "obj1": 0.3308550185873606, "obj2": 0.5351369814595838}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,RCSe ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - Min( BR ,( BR + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) * ( BR * Max( ( ACS + Const ),MRS ) ) )", "choosing": "Max( ( ( ( ( RMSe + ( MUC + MUC ) ) + ( ( DS * ( ( RRSe - RMSe ) + ( RRSe * MUM ) ) ) / ( ( CS / ( MUR / MLU ) ) - MLU ) ) ) + MUR ) + Min( Max( RCSe,MUM ) ,RCSe ) ),( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( Min( FirstVNF_CPU_Server ,Min( ( MRS / Const ) ,Min( ( AMS + MDR ) ,FirstVNF_Mem_Server ) ) ) / ( ( RRS * Max( PN,CRS ) ) * Max( FirstVNF_Mem,MDR ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( Max( ARS,( MDR - MDR ) ) - Min( DDR ,ACS ) ) + Const ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( RRS,( ARS / ( MRS - ( PN * CRS ) ) ) ) ) + Max( AMS,ARS ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( ( DS * MUR ) / ( CS / MUC ) ) ,( MLU * DS ) ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( CS * RCSe ) ) * ( RCSe + MLU ) ) ) ) ) + ( ( CS + ( MUM / ( Max( Min( RRSe ,RCSe ),( CS / MUM ) ) - ( MUM + RCSe ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( ( Max( AMS,MRS ) / AMS ) / FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe + CS ),( MLU / RCSe ) ) * Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,BR ) * RRS ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * Min( BR ,RRS ) ) ) )", "choosing": "Max( ( ( MLU / ( MLU + Min( RCSe ,CS ) ) ) * Max( MUC,( RRSe / ( MUR + ( ( MUC - Max( DS,RRSe ) ) - RRSe ) ) ) ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,MRS ) ,Max( ( RRS - RRS ),( Const - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Max( Min( RRSe ,DS ),MUM ),CS ) - MUM ),Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( MDR ,MRS ) + ( DDR / FirstVNF_Mem_Server ) ) ) - ( PN + Const ) ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "Max( ( MUC / Min( ( ( ( MUC - ( DS + ( MUR - DS ) ) ) * RRSe ) - CS ) ,( ( MUR + MUM ) * ( ( RMSe - RRSe ) / Min( Max( ( MLU * RCSe ),Min( MLU ,MLU ) ) ,MLU ) ) ) ) ),( DS + ( DS * Max( ( RMSe + ( MUC + ( MUC / ( RMSe - RMSe ) ) ) ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_CPU ) / ( ACS / ARS ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( ( MUM * MUM ) ,( ( ( ( MUM + ( MUC / MUM ) ) * ( RCSe / MLU ) ) * ( Max( RRSe,( DS + CS ) ) / Min( MUR ,Max( RCSe,CS ) ) ) ) - MUC ) ) ,MLU ) / ( MUR - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem ) / Min( Min( FirstVNF_RAM_Server ,ACS ) ,Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR / MUR ) ,( ( MUC * RMSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( ARS * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( MUR ,( ( MUM - RMSe ) / ( RMSe / MUR ) ) ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) ) - Max( ( ARS * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( MUR ,CS ) + Min( MLU ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / MDR ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / ( ( ( MUC * RCSe ) - RRSe ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) ) - RRSe ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( CRS * DDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / RMSe ) - Max( RCSe,DS ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,RRS ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( ( Max( ( MUR / MLU ),RMSe ) * Min( MUM ,MUM ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,( ( Const + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS - ( Min( FirstVNF_CPU_Server ,BR ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( RMSe + DS ) * ( DS - ( Min( Min( ( RMSe - MUM ) ,( RCSe / MUR ) ) ,Min( ( DS - MUR ) ,( MUM / CS ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( ( ARS * AMS ),AMS ) - ( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( MUC + ( DS - DS ) ) / ( CS + RRSe ) ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,( Max( MDR,BR ) + Max( DDR,BR ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( RRSe,( ( Min( CS ,CS ) - ( MLU + MUR ) ) - ( ( MUC + DS ) + ( MLU - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( ( CRS / AMS ) + FirstVNF_RAM_Server ) ) / ( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) ) )", "choosing": "( Max( ( ( MUM - RRSe ) - RCSe ),RCSe ) * ( ( Min( Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) ,MLU ) - MUR ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( Min( RRSe ,MLU ) - MUR ) * RMSe ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,Min( ARS ,FirstVNF_CPU_Server ) ) - ( ( BR + ACS ) * ( FirstVNF_RAM / PN ) ) ) * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,MRS ) - ( PN / ARS ) )", "choosing": "Max( Min( ( ( RRSe / MUR ) * ( RMSe / DS ) ) ,( Max( DS,MLU ) * ( MUR / RCSe ) ) ),( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / Max( ( CRS / FirstVNF_RAM_Server ),( ARS + CRS ) ) ) - FirstVNF_RAM_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) * ( Max( CRS,Min( DDR ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUM * Min( RMSe ,RRSe ) ),( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( ARS * Const ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( MUM - ( ( RMSe / MUC ) / ( RCSe * RCSe ) ) ) - Max( Min( MUM ,( RRSe / MUR ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,RRS ) - ( Max( ( ARS / CRS ),Min( ACS ,MRS ) ) * Const ) )", "choosing": "( ( MUM - ( ( RMSe / MUC ) / ( RCSe * RCSe ) ) ) - Max( Min( MUM ,( RRSe / MUR ) ),( CS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( RRS - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,DDR )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( ( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / CRS ) ) ,( RRS + ( DDR + DDR ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / CRS ) ) ,AMS )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) ) * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( ( Min( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / Min( ( PN / FirstVNF_RAM_Server ) ,( MRS / AMS ) ) ) * Min( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,BR ) ) ,Max( Min( FirstVNF_RAM ,MDR ),Min( Const ,PN ) ) ) ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( Max( Min( CS ,DS ),( RCSe - MLU ) ) * ( ( MUC / RMSe ) * ( MUR / MLU ) ) ) ) ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( PN,CRS ) ) ) ,( Min( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,BR ) ) ,Max( Min( FirstVNF_RAM ,MDR ),Min( Const ,PN ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( ( ( MLU / MUM ) * ( CS + DS ) ) + ( Min( MUR ,RMSe ) - ( MLU / MUC ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RMSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) ) * ( MUC - MLU ) ) ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * BR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( RMSe + RCSe ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8620290719929625}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( MUM,RRSe ) * MUR )", "obj1": 0.7100371747211895, "obj2": 0.2593952415254702}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( FirstVNF_Mem_Server + ( CRS / DDR ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - ( MUC / MUM ) ) * Min( ( MUM + Min( CS ,CS ) ) ,RRSe ) )", "obj1": 0.6747211895910781, "obj2": 0.29769164869859993}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Max( ( ( PN - Const ) - Min( FirstVNF_Mem ,Const ) ),( ( RRS - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUR + CS ) )", "obj1": 0.9256505576208178, "obj2": 0.04888779276595188}, {"determining": "( ( ACS + MRS ) - Max( ( Const + Min( ( Const + Min( FirstVNF_CPU_Server ,DDR ) ) ,DDR ) ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( MUR,( RCSe + ( CS * MUR ) ) ) / ( RRSe / MUR ) ) ,MUC ),( RCSe + ( CS * MUR ) ) )", "obj1": 0.895910780669145, "obj2": 0.06731727661454258}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Max( DDR,RRS ) - ( ARS * Const ) )", "choosing": "( ( MUM - ( ( RMSe / MUC ) / ( RCSe * RCSe ) ) ) - Max( Min( MUM ,( RRSe / MUR ) ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.10364409161405694}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( ( Min( MDR ,ACS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ) + Min( ( BR / RRS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6849244089565542}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) )", "choosing": "Min( ( ( Max( RRSe,( ( ( MUR * CS ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7958298975281418}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( Max( Min( ( ( ( ( ( FirstVNF_RAM_Server * MDR ) - Max( PN,DDR ) ) / FirstVNF_RAM ) * ( DDR / Min( Min( BR ,MDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) + BR ) ,( FirstVNF_Mem / ( Min( ( MRS / BR ) ,FirstVNF_RAM_Server ) - MRS ) ) ),( ( ( ( FirstVNF_Mem / ARS ) * Max( FirstVNF_Mem_Server,ACS ) ) / ( ( DDR / ( ( ARS * FirstVNF_RAM ) * CRS ) ) / ( BR + ( ( FirstVNF_CPU * FirstVNF_CPU ) - AMS ) ) ) ) + ACS ) ) - Min( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Max( ( CS / MLU ),( MUR + DS ) )", "obj1": 0.0724907063197026, "obj2": 0.8328151733409991}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( ( ARS + DDR ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( MUM,RRSe ) * ( ( MUR / DS ) + MUM ) )", "obj1": 0.10037174721189591, "obj2": 0.7990572070545467}, {"determining": "( ( ( ( ARS * MRS ) + Min( DDR ,ARS ) ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,MLU ) / Min( MUC ,MLU ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6650889551424867}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * DDR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( MUR + DS ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8544000896588471}, {"determining": "Min( ( ( MDR + ( RRS + ARS ) ) + AMS ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ) - ( MUM * MLU ) )", "obj1": 0.22862453531598512, "obj2": 0.6195431856228487}, {"determining": "( ( ( BR / PN ) * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / DS ) * Min( MLU ,RRSe ) )", "obj1": 0.9925650557620818, "obj2": 0.006586940976970965}, {"determining": "( ( Min( AMS ,Const ) + ( AMS / RRS ) ) * Min( ( FirstVNF_RAM_Server + ( Min( ( MRS + PN ) ,( AMS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( ( Min( MLU ,Min( ( MUR - Max( RMSe,MUC ) ) ,MUC ) ) / MUR ) ,RRSe ),Max( MUR,MUM ) ) * Min( MUM ,MUM ) )", "obj1": 0.6914498141263941, "obj2": 0.2699318404678803}, {"determining": "( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5919923484524804}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,( ( BR - FirstVNF_RAM ) * Min( CRS ,RRS ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( RRSe + DS ) - ( DS + RRSe ) ) )", "obj1": 0.08736059479553904, "obj2": 0.8110285835225117}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,PN ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / CS ) ) ) - Max( CS,CS ) )", "obj1": 0.27137546468401486, "obj2": 0.5791136392501125}, {"determining": "Min( ( BR / PN ) ,Max( ( Const / FirstVNF_CPU ),Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Max( ( MUC / CS ),Min( ( MUM / MUM ) ,RRSe ) )", "obj1": 0.2899628252788104, "obj2": 0.5727556734441787}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( ( ( MUC * CS ) * Min( CS ,MUC ) ) ,RMSe ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5827449542734694}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( ( BR + BR ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Max( ( Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) * AMS ),AMS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS - ( MUR * MUR ) ) ) / ( CS + RRSe ) )", "obj1": 0.31226765799256506, "obj2": 0.5522884969514753}, {"determining": "Min( Min( MRS ,ACS ) ,Min( ( FirstVNF_CPU * Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( ( MUR + DS ) - Min( RMSe ,MUM ) ) / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + RCSe ) + RMSe ) ),MUC ) ) ) ) - Max( CS,CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5571239307004036}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( BR / FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,Min( ( DS - DS ) ,( RRSe - CS ) ) ) / ( CS + RRSe ) ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.9981412639405205, "obj2": 0.0010301622876644583}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( PN,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MUC / CS ) / ( MUM / MUM ) )", "obj1": 0.2936802973977695, "obj2": 0.5669500085261149}, {"determining": "( FirstVNF_Mem_Server - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( MUR ,CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5673173325704056}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,RCSe ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - Min( BR ,( BR + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) * ( BR * Max( ( ACS + Const ),MRS ) ) )", "choosing": "Max( ( ( ( ( RMSe + ( MUC + MUC ) ) + ( ( DS * ( ( RRSe - RMSe ) + ( RRSe * MUM ) ) ) / ( ( CS / ( MUR / MLU ) ) - MLU ) ) ) + MUR ) + Min( Max( RCSe,MUM ) ,RCSe ) ),( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( Min( FirstVNF_CPU_Server ,Min( ( MRS / Const ) ,Min( ( AMS + MDR ) ,FirstVNF_Mem_Server ) ) ) / ( ( RRS * Max( PN,CRS ) ) * Max( FirstVNF_Mem,MDR ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( Max( ARS,( MDR - MDR ) ) - Min( DDR ,ACS ) ) + Const ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( RRS,( ARS / ( MRS - ( PN * CRS ) ) ) ) ) + Max( AMS,ARS ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( ( DS * MUR ) / ( CS / MUC ) ) ,( MLU * DS ) ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( CS * RCSe ) ) * ( RCSe + MLU ) ) ) ) ) + ( ( CS + ( MUM / ( Max( Min( RRSe ,RCSe ),( CS / MUM ) ) - ( MUM + RCSe ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( ( Max( AMS,MRS ) / AMS ) / FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe + CS ),( MLU / RCSe ) ) * Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,BR ) * RRS ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * Min( BR ,RRS ) ) ) )", "choosing": "Max( ( ( MLU / ( MLU + Min( RCSe ,CS ) ) ) * Max( MUC,( RRSe / ( MUR + ( ( MUC - Max( DS,RRSe ) ) - RRSe ) ) ) ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,MRS ) ,Max( ( RRS - RRS ),( Const - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Max( Min( RRSe ,DS ),MUM ),CS ) - MUM ),Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( MDR ,MRS ) + ( DDR / FirstVNF_Mem_Server ) ) ) - ( PN + Const ) ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "Max( ( MUC / Min( ( ( ( MUC - ( DS + ( MUR - DS ) ) ) * RRSe ) - CS ) ,( ( MUR + MUM ) * ( ( RMSe - RRSe ) / Min( Max( ( MLU * RCSe ),Min( MLU ,MLU ) ) ,MLU ) ) ) ) ),( DS + ( DS * Max( ( RMSe + ( MUC + ( MUC / ( RMSe - RMSe ) ) ) ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_CPU ) / ( ACS / ARS ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( ( MUM * MUM ) ,( ( ( ( MUM + ( MUC / MUM ) ) * ( RCSe / MLU ) ) * ( Max( RRSe,( DS + CS ) ) / Min( MUR ,Max( RCSe,CS ) ) ) ) - MUC ) ) ,MLU ) / ( MUR - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem ) / Min( Min( FirstVNF_RAM_Server ,ACS ) ,Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR / MUR ) ,( ( MUC * RMSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( ARS * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( MUR ,( ( MUM - RMSe ) / ( RMSe / MUR ) ) ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) ) - Max( ( ARS * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( MUR ,CS ) + Min( MLU ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / MDR ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / ( ( ( MUC * RCSe ) - RRSe ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) ) - RRSe ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( CRS * DDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / RMSe ) - Max( RCSe,DS ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,RRS ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( ( Max( ( MUR / MLU ),RMSe ) * Min( MUM ,MUM ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,( ( Const + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS - ( Min( FirstVNF_CPU_Server ,BR ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( RMSe + DS ) * ( DS - ( Min( Min( ( RMSe - MUM ) ,( RCSe / MUR ) ) ,Min( ( DS - MUR ) ,( MUM / CS ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( ( ARS * AMS ),AMS ) - ( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( MUC + ( DS - DS ) ) / ( CS + RRSe ) ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,( Max( MDR,BR ) + Max( DDR,BR ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( RRSe,( ( Min( CS ,CS ) - ( MLU + MUR ) ) - ( ( MUC + DS ) + ( MLU - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( ( CRS / AMS ) + FirstVNF_RAM_Server ) ) / ( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) ) )", "choosing": "( Max( ( ( MUM - RRSe ) - RCSe ),RCSe ) * ( ( Min( Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) ,MLU ) - MUR ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( Min( RRSe ,MLU ) - MUR ) * RMSe ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,Min( ARS ,FirstVNF_CPU_Server ) ) - ( ( BR + ACS ) * ( FirstVNF_RAM / PN ) ) ) * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,MRS ) - ( PN / ARS ) )", "choosing": "Max( Min( ( ( RRSe / MUR ) * ( RMSe / DS ) ) ,( Max( DS,MLU ) * ( MUR / RCSe ) ) ),( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / Max( ( CRS / FirstVNF_RAM_Server ),( ARS + CRS ) ) ) - FirstVNF_RAM_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) * ( Max( CRS,Min( DDR ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUM * Min( RMSe ,RRSe ) ),( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * BR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( RMSe + RCSe ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8620290719929625}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( DS ,MUC ) - DS ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.7286245353159851, "obj2": 0.13514870406415253}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Max( DDR,RRS ) - ( ARS * Const ) )", "choosing": "( ( MUM - ( ( RMSe / MUC ) / ( RCSe * RCSe ) ) ) - Max( Min( MUM ,( RRSe / MUR ) ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.10364409161405694}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ACS + MRS ) - Max( ( Const + Min( ( Const + Min( FirstVNF_CPU_Server ,DDR ) ) ,DDR ) ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( MUR,( RCSe + ( CS * MUR ) ) ) / ( RRSe / MUR ) ) ,MUC ),( RCSe + ( CS * MUR ) ) )", "obj1": 0.895910780669145, "obj2": 0.06731727661454258}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( MRS * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7914503268399525}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Max( ( ( PN - Const ) - Min( FirstVNF_Mem ,Const ) ),( ( RRS - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUR + CS ) )", "obj1": 0.9256505576208178, "obj2": 0.04888779276595188}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "Max( Min( DS ,MLU ),Max( ( Min( MUM ,MLU ) / ( MUM / MUM ) ),MLU ) )", "obj1": 0.9200743494423792, "obj2": 0.06631491529633861}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * DDR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( MUR + DS ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8544000896588471}, {"determining": "Min( ( ( MDR + ( RRS + ARS ) ) + AMS ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ) - ( MUM * MLU ) )", "obj1": 0.22862453531598512, "obj2": 0.6195431856228487}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "( ( ( BR / PN ) * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / DS ) * Min( MLU ,RRSe ) )", "obj1": 0.9925650557620818, "obj2": 0.006586940976970965}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Min( ( ACS * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,DDR ) - ( ( MDR + AMS ) - Min( Max( FirstVNF_RAM_Server,( ( ( Const - CRS ) * FirstVNF_RAM ) / FirstVNF_CPU ) ) ,( MRS / Max( Min( DDR ,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem * ARS ) ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RCSe * DS ) * RCSe ) * MLU ) - DS ) - ( RMSe / ( DS - RMSe ) ) ),MUR ) / DS ),( RRSe + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 0.9423791821561338, "obj2": 0.03647185454097119}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,PN ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / CS ) ) ) - Max( CS,CS ) )", "obj1": 0.27137546468401486, "obj2": 0.5791136392501125}, {"determining": "Min( Min( DDR ,PN ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM * ( MLU - MLU ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6594727468465661}, {"determining": "Min( ( BR / PN ) ,Max( ( Const / FirstVNF_CPU ),Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Max( ( MUC / CS ),Min( ( MUM / MUM ) ,RRSe ) )", "obj1": 0.2899628252788104, "obj2": 0.5727556734441787}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5919923484524804}, {"determining": "( ( RRS + ARS ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RRSe / RMSe ) / RMSe ),Min( CS ,CS ) )", "obj1": 0.17100371747211895, "obj2": 0.6995844956675787}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "( ( Min( MDR ,ACS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ) + Min( ( BR / RRS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6849244089565542}, {"determining": "( Max( Min( ( ( ( ( ( FirstVNF_RAM_Server * MDR ) - Max( PN,DDR ) ) / FirstVNF_RAM ) * ( DDR / Min( Min( BR ,MDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) + BR ) ,( FirstVNF_Mem / ( Min( ( MRS / BR ) ,FirstVNF_RAM_Server ) - MRS ) ) ),( ( ( ( FirstVNF_Mem / ARS ) * Max( FirstVNF_Mem_Server,ACS ) ) / ( ( DDR / ( ( ARS * FirstVNF_RAM ) * CRS ) ) / ( BR + ( ( FirstVNF_CPU * FirstVNF_CPU ) - AMS ) ) ) ) + ACS ) ) - Min( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Max( ( CS / MLU ),( MUR + DS ) )", "obj1": 0.0724907063197026, "obj2": 0.8328151733409991}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Max( ( Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) * AMS ),AMS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS - ( MUR * MUR ) ) ) / ( CS + RRSe ) )", "obj1": 0.31226765799256506, "obj2": 0.5522884969514753}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / ( CRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( MLU / DS ) ),Min( MLU ,RRSe ) ) / CS ),( ( RCSe / RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6791769555147332}, {"determining": "Min( Min( MRS ,ACS ) ,Min( ( FirstVNF_CPU * Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( ( MUR + DS ) - Min( RMSe ,MUM ) ) / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + RCSe ) + RMSe ) ),MUC ) ) ) ) - Max( CS,CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5571239307004036}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( ( FirstVNF_RAM + RRS ) / ( ARS * MRS ) ) - Max( DDR,( ( FirstVNF_Mem_Server - Max( DDR,( ( FirstVNF_Mem_Server - PN ) * BR ) ) ) * BR ) ) )", "choosing": "Max( ( Min( RMSe ,( MUC + ( RMSe - ( RMSe - RCSe ) ) ) ) / DS ),( MUR + DS ) )", "obj1": 0.0724907063197026, "obj2": 0.8328151733409991}, {"determining": "Min( ( Max( ( ARS * AMS ),AMS ) - ( Const * FirstVNF_Mem ) ) ,Min( ( PN * MDR ) ,( Const / Const ) ) )", "choosing": "( Max( RMSe,MUR ) - ( CS + RRSe ) )", "obj1": 0.25092936802973975, "obj2": 0.5968822217769695}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( FirstVNF_Mem_Server - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( MUR ,CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5673173325704056}, {"determining": "Min( ( BR / PN ) ,( ( Min( ( RRS / ( CRS / FirstVNF_RAM_Server ) ) ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( ( RCSe / RMSe ) / ( RMSe / MUR ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.18029739776951673, "obj2": 0.680145286593535}, {"determining": "( ( AMS / ( RRS + ( DDR + DDR ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.9442379182156134, "obj2": 0.033976391092613384}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( ( BR + BR ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( BR / FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,Min( ( DS - DS ) ,( RRSe - CS ) ) ) / ( CS + RRSe ) ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.9981412639405205, "obj2": 0.0010301622876644583}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,RCSe ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - Min( BR ,( BR + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) * ( BR * Max( ( ACS + Const ),MRS ) ) )", "choosing": "Max( ( ( ( ( RMSe + ( MUC + MUC ) ) + ( ( DS * ( ( RRSe - RMSe ) + ( RRSe * MUM ) ) ) / ( ( CS / ( MUR / MLU ) ) - MLU ) ) ) + MUR ) + Min( Max( RCSe,MUM ) ,RCSe ) ),( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( Min( FirstVNF_CPU_Server ,Min( ( MRS / Const ) ,Min( ( AMS + MDR ) ,FirstVNF_Mem_Server ) ) ) / ( ( RRS * Max( PN,CRS ) ) * Max( FirstVNF_Mem,MDR ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( Max( ARS,( MDR - MDR ) ) - Min( DDR ,ACS ) ) + Const ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( RRS,( ARS / ( MRS - ( PN * CRS ) ) ) ) ) + Max( AMS,ARS ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( ( DS * MUR ) / ( CS / MUC ) ) ,( MLU * DS ) ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( CS * RCSe ) ) * ( RCSe + MLU ) ) ) ) ) + ( ( CS + ( MUM / ( Max( Min( RRSe ,RCSe ),( CS / MUM ) ) - ( MUM + RCSe ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( ( Max( AMS,MRS ) / AMS ) / FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe + CS ),( MLU / RCSe ) ) * Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,BR ) * RRS ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * Min( BR ,RRS ) ) ) )", "choosing": "Max( ( ( MLU / ( MLU + Min( RCSe ,CS ) ) ) * Max( MUC,( RRSe / ( MUR + ( ( MUC - Max( DS,RRSe ) ) - RRSe ) ) ) ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,MRS ) ,Max( ( RRS - RRS ),( Const - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Max( Min( RRSe ,DS ),MUM ),CS ) - MUM ),Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( MDR ,MRS ) + ( DDR / FirstVNF_Mem_Server ) ) ) - ( PN + Const ) ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "Max( ( MUC / Min( ( ( ( MUC - ( DS + ( MUR - DS ) ) ) * RRSe ) - CS ) ,( ( MUR + MUM ) * ( ( RMSe - RRSe ) / Min( Max( ( MLU * RCSe ),Min( MLU ,MLU ) ) ,MLU ) ) ) ) ),( DS + ( DS * Max( ( RMSe + ( MUC + ( MUC / ( RMSe - RMSe ) ) ) ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_CPU ) / ( ACS / ARS ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( ( MUM * MUM ) ,( ( ( ( MUM + ( MUC / MUM ) ) * ( RCSe / MLU ) ) * ( Max( RRSe,( DS + CS ) ) / Min( MUR ,Max( RCSe,CS ) ) ) ) - MUC ) ) ,MLU ) / ( MUR - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem ) / Min( Min( FirstVNF_RAM_Server ,ACS ) ,Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR / MUR ) ,( ( MUC * RMSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( ARS * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( MUR ,( ( MUM - RMSe ) / ( RMSe / MUR ) ) ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) ) - Max( ( ARS * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( MUR ,CS ) + Min( MLU ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / MDR ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / ( ( ( MUC * RCSe ) - RRSe ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) ) - RRSe ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( CRS * DDR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / RMSe ) - Max( RCSe,DS ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * BR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( RMSe + RCSe ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8620290719929625}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( DS ,MUC ) - DS ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.7286245353159851, "obj2": 0.13514870406415253}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Max( ( ( PN - Const ) - Min( FirstVNF_Mem ,Const ) ),( ( RRS - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUR + CS ) )", "obj1": 0.9256505576208178, "obj2": 0.04888779276595188}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Max( ( ( ACS * DDR ) - ARS ),FirstVNF_RAM ) / ( AMS / ( RRS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe * MUC ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7749531252254119}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( ( ( BR / PN ) * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / DS ) * Min( MLU ,RRSe ) )", "obj1": 0.9925650557620818, "obj2": 0.006586940976970965}, {"determining": "( ( ( ( FirstVNF_Mem_Server - PN ) * DDR ) / CRS ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( MUR + DS ) - Min( ( RCSe * ( MLU * Max( RCSe,( Min( RMSe ,( MUC + CS ) ) / DS ) ) ) ) ,( ( RCSe / CS ) + ( ( Max( MUM,( RCSe * ( MLU + CS ) ) ) + ( RMSe - ( ( MLU / DS ) + MUM ) ) ) - RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8544000896588471}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( FirstVNF_RAM,( Min( ( Min( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,BR ) ) ,MDR ) - DDR ) ,( ( MRS + MDR ) - CRS ) ) / ( PN + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) + ACS )", "choosing": "( Max( RMSe,MLU ) * Max( ( ( RRSe + ( ( ( Min( MUC ,MUC ) - RCSe ) + MLU ) / DS ) ) + RCSe ),MLU ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "( Min( ARS ,DDR ) - ( ( ( ( MDR / ACS ) / ACS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + MRS ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Min( Max( RMSe,Min( MUR ,MUC ) ) ,( MUC + CS ) ) / DS ),( MUR + DS ) )", "obj1": 0.07063197026022305, "obj2": 0.8331464093678934}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,PN ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / CS ) ) ) - Max( CS,CS ) )", "obj1": 0.27137546468401486, "obj2": 0.5791136392501125}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 0.9423791821561338, "obj2": 0.03647185454097119}, {"determining": "Min( Min( DDR ,PN ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM * ( MLU - MLU ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6594727468465661}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - BR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),Min( Min( MLU ,RRSe ) ,RRSe ) )", "obj1": 0.2899628252788104, "obj2": 0.5707868491785006}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5919923484524804}, {"determining": "( ( RRS + ARS ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RRSe / RMSe ) / RMSe ),Min( CS ,CS ) )", "obj1": 0.17100371747211895, "obj2": 0.6995844956675787}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "( ( Min( MDR ,ACS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ) + Min( ( BR / RRS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6849244089565542}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * Min( PN ,( FirstVNF_RAM_Server + Max( Min( MDR ,PN ),Min( ARS ,AMS ) ) ) ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR * CS ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( RCSe + DS ) )", "obj1": 0.23048327137546468, "obj2": 0.6146200123349015}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Max( ( Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) * AMS ),AMS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS - ( MUR * MUR ) ) ) / ( CS + RRSe ) )", "obj1": 0.31226765799256506, "obj2": 0.5522884969514753}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / ( CRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( MLU / DS ) ),Min( MLU ,RRSe ) ) / CS ),( ( RCSe / RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6791769555147332}, {"determining": "Min( Min( MRS ,ACS ) ,Min( ( FirstVNF_CPU * Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( ( MUR + DS ) - Min( RMSe ,MUM ) ) / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + RCSe ) + RMSe ) ),MUC ) ) ) ) - Max( CS,CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5571239307004036}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "Min( ( ( MDR + ( RRS + ARS ) ) + AMS ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ) - ( MUM * MLU ) )", "obj1": 0.22862453531598512, "obj2": 0.6195431856228487}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - ( ( MDR / ACS ) * MRS ) ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,( DS - RRSe ) ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( Max( Min( ( ( ( ( ( FirstVNF_RAM_Server * MDR ) - Max( PN,DDR ) ) / FirstVNF_RAM ) * ( DDR / Min( Min( BR ,MDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) + BR ) ,( FirstVNF_Mem / ( Min( ( MRS / BR ) ,FirstVNF_RAM_Server ) - MRS ) ) ),( ( ( ( FirstVNF_Mem / ARS ) * Max( FirstVNF_Mem_Server,ACS ) ) / ( ( DDR / ( ( ARS * FirstVNF_RAM ) * CRS ) ) / ( BR + ( ( FirstVNF_CPU * FirstVNF_CPU ) - AMS ) ) ) ) + ACS ) ) - Min( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Max( ( CS / MLU ),( MUR + DS ) )", "obj1": 0.0724907063197026, "obj2": 0.8328151733409991}, {"determining": "( Min( ( ACS * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,DDR ) - ( ( MDR + AMS ) - Min( Max( FirstVNF_RAM_Server,( ( ( Const - CRS ) * FirstVNF_RAM ) / FirstVNF_CPU ) ) ,( MRS / Max( Min( DDR ,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem * ARS ) ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RCSe * DS ) * RCSe ) * MLU ) - DS ) - ( RMSe / ( DS - RMSe ) ) ),MUR ) / DS ),( RRSe + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( ( BR / PN ) ,( ( Min( ( RRS / ( CRS / FirstVNF_RAM_Server ) ) ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( ( RCSe / RMSe ) / ( RMSe / MUR ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.18029739776951673, "obj2": 0.680145286593535}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "( FirstVNF_Mem_Server - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( MUR ,CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5673173325704056}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "( ( AMS / ( RRS + ( DDR + DDR ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.9442379182156134, "obj2": 0.033976391092613384}, {"determining": "( ( RRS / Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,PN ) )", "choosing": "( Max( ( Max( ( MUC / ( MLU / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( RCSe / RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.24907063197026022, "obj2": 0.5970432446806466}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( ( BR + BR ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,FirstVNF_RAM ) )", "choosing": "Max( ( MLU / DS ),( MUR + DS ) )", "obj1": 0.05762081784386617, "obj2": 0.8605191602473901}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "Min( ( Max( ( ARS * AMS ),AMS ) - ( Const * FirstVNF_Mem ) ) ,Min( ( PN * MDR ) ,( Const / Const ) ) )", "choosing": "( Max( RMSe,MUR ) - ( CS + RRSe ) )", "obj1": 0.25092936802973975, "obj2": 0.5968822217769695}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( MDR * DDR ) + ACS )", "choosing": "( Max( Max( RMSe,MLU ),MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( BR / FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,Min( ( DS - DS ) ,( RRSe - CS ) ) ) / ( CS + RRSe ) ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.9981412639405205, "obj2": 0.0010301622876644583}, {"determining": "( ( ( FirstVNF_RAM + RRS ) / ( ARS * MRS ) ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem_Server - PN ) * BR ) ) )", "choosing": "Max( ( Min( RMSe ,( MUC + ( MUC + ( RMSe - RCSe ) ) ) ) / DS ),( MUR + DS ) )", "obj1": 0.0724907063197026, "obj2": 0.8328151733409991}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,RCSe ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - Min( BR ,( BR + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) * ( BR * Max( ( ACS + Const ),MRS ) ) )", "choosing": "Max( ( ( ( ( RMSe + ( MUC + MUC ) ) + ( ( DS * ( ( RRSe - RMSe ) + ( RRSe * MUM ) ) ) / ( ( CS / ( MUR / MLU ) ) - MLU ) ) ) + MUR ) + Min( Max( RCSe,MUM ) ,RCSe ) ),( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( Min( FirstVNF_CPU_Server ,Min( ( MRS / Const ) ,Min( ( AMS + MDR ) ,FirstVNF_Mem_Server ) ) ) / ( ( RRS * Max( PN,CRS ) ) * Max( FirstVNF_Mem,MDR ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( Max( ARS,( MDR - MDR ) ) - Min( DDR ,ACS ) ) + Const ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( RRS,( ARS / ( MRS - ( PN * CRS ) ) ) ) ) + Max( AMS,ARS ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( ( DS * MUR ) / ( CS / MUC ) ) ,( MLU * DS ) ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( CS * RCSe ) ) * ( RCSe + MLU ) ) ) ) ) + ( ( CS + ( MUM / ( Max( Min( RRSe ,RCSe ),( CS / MUM ) ) - ( MUM + RCSe ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( ( Max( AMS,MRS ) / AMS ) / FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe + CS ),( MLU / RCSe ) ) * Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,BR ) * RRS ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * Min( BR ,RRS ) ) ) )", "choosing": "Max( ( ( MLU / ( MLU + Min( RCSe ,CS ) ) ) * Max( MUC,( RRSe / ( MUR + ( ( MUC - Max( DS,RRSe ) ) - RRSe ) ) ) ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,MRS ) ,Max( ( RRS - RRS ),( Const - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Max( Min( RRSe ,DS ),MUM ),CS ) - MUM ),Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Max( ( ( PN - Const ) - Min( FirstVNF_Mem ,Const ) ),( ( RRS - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUR + CS ) )", "obj1": 0.9256505576208178, "obj2": 0.04888779276595188}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( ( ( ACS * DDR ) - ARS ),FirstVNF_RAM ) / ( AMS / ( RRS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe * MUC ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7749531252254119}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - BR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),Min( Min( MLU ,RRSe ) ,RRSe ) )", "obj1": 0.2899628252788104, "obj2": 0.5707868491785006}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( ( Min( MDR ,ACS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ) + Min( ( BR / RRS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6849244089565542}, {"determining": "Min( Min( DDR ,PN ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM * ( MLU - MLU ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6594727468465661}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( ( ARS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + ( RRSe * MUC ) ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.16728624535315986, "obj2": 0.6995467312658438}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * Min( PN ,( FirstVNF_RAM_Server + Max( Min( MDR ,PN ),Min( ARS ,AMS ) ) ) ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR * CS ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( RCSe + DS ) )", "obj1": 0.23048327137546468, "obj2": 0.6146200123349015}, {"determining": "( Max( ( Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) * AMS ),AMS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS - ( MUR * MUR ) ) ) / ( CS + RRSe ) )", "obj1": 0.31226765799256506, "obj2": 0.5522884969514753}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / ( CRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( MLU / DS ) ),Min( MLU ,RRSe ) ) / CS ),( ( RCSe / RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6791769555147332}, {"determining": "Min( ( ( MDR + ( RRS + ARS ) ) + AMS ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ) - ( MUM * MLU ) )", "obj1": 0.22862453531598512, "obj2": 0.6195431856228487}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.26022304832713755, "obj2": 0.5917280455571549}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Max( ( ( ( PN * ( ( ARS / DDR ) + Min( ARS ,MRS ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ),( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) ) )", "choosing": "( Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) - ( ( MUC * ( ( CS * ( CS * ( CS - MUR ) ) ) * ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) * Max( MUC,( RRSe / RCSe ) ) ) ) ) + MUR ) )", "obj1": 0.3048327137546468, "obj2": 0.5578286476687242}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MLU,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.2620817843866171, "obj2": 0.5811521535156905}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - ( ( MDR / ACS ) * MRS ) ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,( DS - RRSe ) ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( ( BR / PN ) ,( ( Min( ( RRS / ( CRS / FirstVNF_RAM_Server ) ) ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( ( RCSe / RMSe ) / ( RMSe / MUR ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.18029739776951673, "obj2": 0.680145286593535}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( FirstVNF_Mem_Server - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( MUR ,CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5673173325704056}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( Max( FirstVNF_RAM,( Min( ( Min( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,BR ) ) ,MDR ) - DDR ) ,( ( MRS + MDR ) - CRS ) ) / ( PN + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) + ACS )", "choosing": "( Max( RMSe,MLU ) * Max( ( ( RRSe + ( ( ( Min( MUC ,MUC ) - RCSe ) + MLU ) / DS ) ) + RCSe ),MLU ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( Min( MRS ,ACS ) ,Min( ( FirstVNF_CPU * Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( ( MUR + DS ) - Min( RMSe ,MUM ) ) / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + RCSe ) + RMSe ) ),MUC ) ) ) ) - Max( CS,CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5571239307004036}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5919923484524804}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "( ( ( MDR * ( ( MDR * DDR ) * DDR ) ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( BR / FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,Min( ( DS - DS ) ,( RRSe - CS ) ) ) / ( CS + RRSe ) ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.9981412639405205, "obj2": 0.0010301622876644583}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( MDR * DDR ) + ACS )", "choosing": "( Max( Max( RMSe,MLU ),MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,RCSe ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - Min( BR ,( BR + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) * ( BR * Max( ( ACS + Const ),MRS ) ) )", "choosing": "Max( ( ( ( ( RMSe + ( MUC + MUC ) ) + ( ( DS * ( ( RRSe - RMSe ) + ( RRSe * MUM ) ) ) / ( ( CS / ( MUR / MLU ) ) - MLU ) ) ) + MUR ) + Min( Max( RCSe,MUM ) ,RCSe ) ),( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( Min( FirstVNF_CPU_Server ,Min( ( MRS / Const ) ,Min( ( AMS + MDR ) ,FirstVNF_Mem_Server ) ) ) / ( ( RRS * Max( PN,CRS ) ) * Max( FirstVNF_Mem,MDR ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( Max( ARS,( MDR - MDR ) ) - Min( DDR ,ACS ) ) + Const ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( RRS,( ARS / ( MRS - ( PN * CRS ) ) ) ) ) + Max( AMS,ARS ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( ( DS * MUR ) / ( CS / MUC ) ) ,( MLU * DS ) ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( CS * RCSe ) ) * ( RCSe + MLU ) ) ) ) ) + ( ( CS + ( MUM / ( Max( Min( RRSe ,RCSe ),( CS / MUM ) ) - ( MUM + RCSe ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( ( Max( AMS,MRS ) / AMS ) / FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe + CS ),( MLU / RCSe ) ) * Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( ( ( ACS * DDR ) - ARS ),FirstVNF_RAM ) / ( AMS / ( RRS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe * MUC ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7749531252254119}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) )", "choosing": "( ( MLU - ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.275092936802974, "obj2": 0.5705516458924741}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( ( Min( MDR ,ACS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ) + Min( ( BR / RRS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6849244089565542}, {"determining": "Min( Min( DDR ,PN ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM * ( MLU - MLU ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6594727468465661}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "( ( ARS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + ( RRSe * MUC ) ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.16728624535315986, "obj2": 0.6995467312658438}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( FirstVNF_Mem_Server - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( MUR ,CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5673173325704056}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Max( ( Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) * AMS ),AMS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS - ( MUR * MUR ) ) ) / ( CS + RRSe ) )", "obj1": 0.31226765799256506, "obj2": 0.5522884969514753}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / ( CRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( MLU / DS ) ),Min( MLU ,RRSe ) ) / CS ),( ( RCSe / RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6791769555147332}, {"determining": "( Min( ARS ,DDR ) - ( ( ( Min( ARS ,DDR ) / ACS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + MRS ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Min( ( MUC / Max( ( ( MLU + ( MUC + CS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) ) ,( MUC + CS ) ) / DS ),( MUR + DS ) )", "obj1": 0.09851301115241635, "obj2": 0.7980779523781875}, {"determining": "( ( ( ARS - Const ) + ( RRS * Const ) ) - Max( ( ( ( ARS - Const ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Min( ( Max( MUR,MUR ) / ( RRSe / MUR ) ) ,MUC ),MUR ) / ( RRSe / MUR ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( Const,DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + Max( ( ( Max( MUR,( CS / MUR ) ) - ( MLU + MUC ) ) + RMSe ),RCSe ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5919923484524804}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( ( ( ( PN * ( ( ARS / DDR ) + Min( ARS ,MRS ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ),( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) ) )", "choosing": "( Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) - ( ( MUC * ( ( CS * ( CS * ( CS - MUR ) ) ) * ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) * Max( MUC,( RRSe / RCSe ) ) ) ) ) + MUR ) )", "obj1": 0.3048327137546468, "obj2": 0.5578286476687242}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( ( BR / PN ) ,( ( Min( ( RRS / ( CRS / FirstVNF_RAM_Server ) ) ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( ( RCSe / RMSe ) / ( RMSe / MUR ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.18029739776951673, "obj2": 0.680145286593535}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( Min( MRS ,ACS ) ,Min( ( FirstVNF_CPU * Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( ( MUR + DS ) - Min( RMSe ,MUM ) ) / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + RCSe ) + RMSe ) ),MUC ) ) ) ) - Max( CS,CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5571239307004036}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "( ( ( MDR * ( ( MDR * DDR ) * DDR ) ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( PN * ARS ) - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( ( MLU / DS ) * Max( MUC,RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ) + ( DS * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MLU,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.2620817843866171, "obj2": 0.5811521535156905}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( ( MDR * DDR ) * MDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,MLU ) ) / ( MLU - RCSe ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - Max( ( PN - Max( MDR,FirstVNF_CPU ) ),ARS ) ) ,( BR * Min( FirstVNF_RAM_Server ,Min( MRS ,ARS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - MUC ) ) ) ,( ( ( MUM - MUM ) / CS ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,RCSe ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - Min( BR ,( BR + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) * ( BR * Max( ( ACS + Const ),MRS ) ) )", "choosing": "Max( ( ( ( ( RMSe + ( MUC + MUC ) ) + ( ( DS * ( ( RRSe - RMSe ) + ( RRSe * MUM ) ) ) / ( ( CS / ( MUR / MLU ) ) - MLU ) ) ) + MUR ) + Min( Max( RCSe,MUM ) ,RCSe ) ),( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( Min( FirstVNF_CPU_Server ,Min( ( MRS / Const ) ,Min( ( AMS + MDR ) ,FirstVNF_Mem_Server ) ) ) / ( ( RRS * Max( PN,CRS ) ) * Max( FirstVNF_Mem,MDR ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM / DDR ) ) - ( ( PN + Max( Min( FirstVNF_RAM_Server ,( ACS * ( ( PN - BR ) + ( FirstVNF_RAM * MRS ) ) ) ),( Min( Max( AMS,MDR ) ,Max( ( DDR * PN ),CRS ) ) - DDR ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe / ( MUR * RMSe ) ) + RCSe ),Max( ( ( Min( RCSe ,MLU ) + ( ( CS / DS ) / CS ) ) / ( MUM / MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( ( ( ACS * DDR ) - ARS ),FirstVNF_RAM ) / ( AMS / ( RRS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe * MUC ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7749531252254119}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) )", "choosing": "( ( MLU - ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.275092936802974, "obj2": 0.5705516458924741}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( ( Min( MDR ,ACS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ) + Min( ( BR / RRS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6849244089565542}, {"determining": "Min( Min( DDR ,PN ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM * ( MLU - MLU ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6594727468465661}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "( ( ARS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + ( RRSe * MUC ) ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.16728624535315986, "obj2": 0.6995467312658438}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( FirstVNF_Mem_Server - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( MUR ,CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5673173325704056}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Max( ( Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) * AMS ),AMS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS - ( MUR * MUR ) ) ) / ( CS + RRSe ) )", "obj1": 0.31226765799256506, "obj2": 0.5522884969514753}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / ( CRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( MLU / DS ) ),Min( MLU ,RRSe ) ) / CS ),( ( RCSe / RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6791769555147332}, {"determining": "( Min( ARS ,DDR ) - ( ( ( Min( ARS ,DDR ) / ACS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + MRS ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Min( ( MUC / Max( ( ( MLU + ( MUC + CS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) ) ,( MUC + CS ) ) / DS ),( MUR + DS ) )", "obj1": 0.09851301115241635, "obj2": 0.7980779523781875}, {"determining": "( ( ( ARS - Const ) + ( RRS * Const ) ) - Max( ( ( ( ARS - Const ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Min( ( Max( MUR,MUR ) / ( RRSe / MUR ) ) ,MUC ),MUR ) / ( RRSe / MUR ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( ( ( ( PN * ( ( ARS / DDR ) + Min( ARS ,MRS ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ),( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) ) )", "choosing": "( Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) - ( ( MUC * ( ( CS * ( CS * ( CS - MUR ) ) ) * ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) * Max( MUC,( RRSe / RCSe ) ) ) ) ) + MUR ) )", "obj1": 0.3048327137546468, "obj2": 0.5578286476687242}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( ( BR / PN ) ,( ( Min( ( RRS / ( CRS / FirstVNF_RAM_Server ) ) ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( ( RCSe / RMSe ) / ( RMSe / MUR ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.18029739776951673, "obj2": 0.680145286593535}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( Min( MRS ,ACS ) ,Min( ( FirstVNF_CPU * Min( Min( MRS ,ACS ) ,Min( ( PN * MDR ) ,Max( ARS,PN ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( ( MUR + DS ) - Min( RMSe ,MUM ) ) / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + RCSe ) + RMSe ) ),MUC ) ) ) ) - Max( CS,CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5571239307004036}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "( ( ( MDR * ( ( MDR * DDR ) * DDR ) ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MLU,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.2620817843866171, "obj2": 0.5811521535156905}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( ( MDR * DDR ) * MDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,MLU ) ) / ( MLU - RCSe ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( ( ( ARS - Const ) + ( ( PN + MDR ) / ( AMS - Min( ACS ,PN ) ) ) ) - Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) )", "choosing": "Max( Min( ( Min( MLU ,MUR ) / ( RRSe / RCSe ) ) ,MUC ),( MUC / Max( RMSe,RRSe ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( PN * ARS ) - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( ( MLU / DS ) * Max( MUC,RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ) + ( DS * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( MRS / ( RRS - AMS ) ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),( ( CS + MUR ) - CS ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) / Min( ACS ,DDR ) ) - Max( ( BR * ACS ),( CRS + PN ) ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( MUC ,( CS - RCSe ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( RCSe / MUM ) / Max( DS,DS ) ) ,( ( MUC - MUC ) + Min( CS ,RRSe ) ) ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( ( ( RRS - DDR ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,( ( MRS / AMS ) / Min( ACS ,MDR ) ) ) + ( ARS / FirstVNF_CPU_Server ) ) * ( MDR + BR ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - Max( CS,Min( ( RRSe - RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6516991767605962}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "( FirstVNF_Mem_Server - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( MUR ,CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5673173325704056}, {"determining": "( ( Min( MDR ,ACS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ) + Min( ( BR / RRS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6849244089565542}, {"determining": "Min( Min( DDR ,PN ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM * ( MLU - MLU ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6594727468465661}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "( ( ARS + ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + ( RRSe * MUC ) ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.16728624535315986, "obj2": 0.6995467312658438}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6460925385904355}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / ( CRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( MLU / DS ) ),Min( MLU ,RRSe ) ) / CS ),( ( RCSe / RMSe ) / ( RMSe / MUR ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6791769555147332}, {"determining": "( Min( ARS ,DDR ) - ( ( ( Min( ARS ,DDR ) / ACS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + MRS ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Min( ( MUC / Max( ( ( MLU + ( MUC + CS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) ) ,( MUC + CS ) ) / DS ),( MUR + DS ) )", "obj1": 0.09851301115241635, "obj2": 0.7980779523781875}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( ( BR / PN ) ,( ( Min( ( RRS / ( CRS / FirstVNF_RAM_Server ) ) ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( ( RCSe / RMSe ) / ( RMSe / MUR ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.18029739776951673, "obj2": 0.680145286593535}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MLU,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.2620817843866171, "obj2": 0.5811521535156905}, {"determining": "( ( ( MDR * DDR ) * ( MDR * DDR ) ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "( ( ( MDR * ( ( MDR * DDR ) * DDR ) ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( ( MDR * DDR ) * MDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,MLU ) ) / ( MLU - RCSe ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( ( PN * ARS ) - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( ( MLU / DS ) * Max( MUC,RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ) + ( DS * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( ARS - Const ) + ( ( PN + MDR ) / ( AMS - Min( ACS ,PN ) ) ) ) - Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) )", "choosing": "Max( Min( ( Min( MLU ,MUR ) / ( RRSe / RCSe ) ) ,MUC ),( MUC / Max( RMSe,RRSe ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( ARS - ( Max( ( Const + PN ),FirstVNF_CPU_Server ) + RRS ) ) ) / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( ( Max( RMSe,MUM ) + ( MUC / RCSe ) ) - Min( ( CS / RMSe ) ,Min( RCSe ,MUR ) ) ) ) - DS ) * DS ) ) )", "obj1": 0.4033457249070632, "obj2": 0.4582081272916044}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( Min( ARS ,DDR ) - ( ( ( FirstVNF_CPU - CRS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + Min( Max( AMS,( RRS * MRS ) ) ,Min( FirstVNF_Mem_Server ,( Const - MDR ) ) ) ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.0687732342007435, "obj2": 0.8228611487309896}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( Min( ARS ,DDR ) - ( ( ( Min( ARS ,DDR ) / ACS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + MRS ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Min( ( MUC / Max( ( ( MLU + ( MUC + CS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) ) ,( MUC + CS ) ) / DS ),( MUR + DS ) )", "obj1": 0.09851301115241635, "obj2": 0.7980779523781875}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MLU,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.2620817843866171, "obj2": 0.5811521535156905}, {"determining": "( ( ( MDR * ( ( MDR * DDR ) * DDR ) ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "( ( ( MDR * DDR ) * ( MDR * DDR ) ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "( Max( PN,Max( BR,BR ) ) - Max( DDR,Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,MRS ) ,Const ) ) ) )", "choosing": "Max( ( ( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUM ) ) ),MUR ) * MLU ) + ( ( ( ( RRSe + ( MUC / RMSe ) ) + MUR ) - ( MLU / RRSe ) ) - ( MLU + ( ( Max( DS,MUM ) * ( MUR * RRSe ) ) * MLU ) ) ) ) + ( Min( ( CS - RMSe ) ,( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ) ) + ( MUM / DS ) ) ),Max( ( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ),( RRSe * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( PN * ARS ) - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( ( MLU / DS ) * Max( MUC,RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ) + ( DS * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( MRS + RRS ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - Max( ( ( ( RMSe * RRSe ) + RMSe ) * MUC ),( MUM / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ),FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( ( ( ( CRS - Const ) - CRS ) + FirstVNF_CPU_Server ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - MUC ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.76588246997256}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( Max( RRS,( Max( ( MRS / ( BR / FirstVNF_Mem ) ),FirstVNF_Mem ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) + ACS )", "choosing": "( ( Max( ( DS + RRSe ),( MLU * RMSe ) ) - Min( CS ,Max( ( ( ( MUM + ( MUM - MLU ) ) - Max( MUM,MUC ) ) - RRSe ),RMSe ) ) ) * ( ( ( RMSe * MLU ) - MUC ) / ( CS / ( RMSe * MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( ARS - ( Max( ( Const + PN ),FirstVNF_CPU_Server ) + RRS ) ) ) / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( ( Max( RMSe,MUM ) + ( MUC / RCSe ) ) - Min( ( CS / RMSe ) ,Min( RCSe ,MUR ) ) ) ) - DS ) * DS ) ) )", "obj1": 0.4033457249070632, "obj2": 0.4582081272916044}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Min( ARS ,DDR ) - ( ( ( FirstVNF_CPU - CRS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + Min( Max( AMS,( RRS * MRS ) ) ,Min( FirstVNF_Mem_Server ,( Const - MDR ) ) ) ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.0687732342007435, "obj2": 0.8228611487309896}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "( Min( ARS ,DDR ) - ( ( ( Min( ARS ,DDR ) / ACS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + MRS ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Min( ( MUC / Max( ( ( MLU + ( MUC + CS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) ) ,( MUC + CS ) ) / DS ),( MUR + DS ) )", "obj1": 0.09851301115241635, "obj2": 0.7980779523781875}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "Min( ( BR / PN ) ,( ( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUC,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5608892030854045}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5608668395517882}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( MDR * DDR ) * ( MDR * DDR ) ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - FirstVNF_RAM_Server )", "choosing": "( Max( Min( MUR ,MLU ),Min( RCSe ,( Min( MUC ,RRSe ) + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4107806691449814, "obj2": 0.4580600911564272}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "( ( ( MDR * ( ( MDR * DDR ) * DDR ) ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( ( Max( DS,MLU ) / ( MLU - RCSe ) ),MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13940520446096655, "obj2": 0.7441751677482008}, {"determining": "( ( ( MDR * DDR ) * ( ( ( MDR * DDR ) * DDR ) + ACS ) ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( RCSe - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7430124004410915}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( PN * ARS ) - ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RCSe ) + ( ( MUC / MUR ) * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Max( PN,Max( BR,BR ) ) - Max( DDR,Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,MRS ) ,Const ) ) ) )", "choosing": "Max( ( ( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUM ) ) ),MUR ) * MLU ) + ( ( ( ( RRSe + ( MUC / RMSe ) ) + MUR ) - ( MLU / RRSe ) ) - ( MLU + ( ( Max( DS,MUM ) * ( MUR * RRSe ) ) * MLU ) ) ) ) + ( Min( ( CS - RMSe ) ,( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ) ) + ( MUM / DS ) ) ),Max( ( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ),( RRSe * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( Min( ARS ,Min( CRS ,ARS ) ) - ( Min( MDR ,Min( ARS ,FirstVNF_Mem ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU - DS ) )", "obj1": 0.12639405204460966, "obj2": 0.7637183116420849}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / Max( MDR,RRS ) ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,Max( ( RCSe / MUR ),MUM ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7975179187899649}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Min( ARS ,DDR ) - ( ( ( FirstVNF_CPU - CRS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + Min( Max( AMS,( RRS * MRS ) ) ,Min( FirstVNF_Mem_Server ,( Const - MDR ) ) ) ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.0687732342007435, "obj2": 0.8228611487309896}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "Min( ( Min( MRS ,( ( DDR * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( ( ( MUM + MUR ) + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.555544965680419}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Min( ARS ,DDR ) - ( ( ( Min( ARS ,DDR ) / ACS ) * MRS ) - Min( ( FirstVNF_CPU_Server / ( ARS + MRS ) ) ,( BR / MRS ) ) ) )", "choosing": "Max( ( Min( ( MUC / Max( ( ( MLU + ( MUC + CS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) ) ,( MUC + CS ) ) / DS ),( MUR + DS ) )", "obj1": 0.09851301115241635, "obj2": 0.7980779523781875}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - DDR ) )", "choosing": "( ( DS / MUR ) + ( ( ( RRSe / MUC ) + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5546162938617987}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Max( PN,Max( BR,BR ) ) - Max( DDR,Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,MRS ) ,Const ) ) ) )", "choosing": "Max( ( ( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUM ) ) ),MUR ) * MLU ) + ( ( ( ( RRSe + ( MUC / RMSe ) ) + MUR ) - ( MLU / RRSe ) ) - ( MLU + ( ( Max( DS,MUM ) * ( MUR * RRSe ) ) * MLU ) ) ) ) + ( Min( ( CS - RMSe ) ,( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ) ) + ( MUM / DS ) ) ),Max( ( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ),( RRSe * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( PN * ARS ) - ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RCSe ) + ( ( MUC / MUR ) * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( ARS * ARS ) - FirstVNF_RAM_Server ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( MUC ,( ( MUR * ( ( ( MLU * MUR ) / DS ) * MUM ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( DDR * ARS ) - FirstVNF_RAM ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( MUC ,( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) / ( RRS - Max( ( RRS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),Const ) ) )", "choosing": "( ( DS + ( ( RMSe + ( MUR / MUM ) ) * ( ( CS + ( MUR + MUM ) ) * MUC ) ) ) - ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Max( ( Max( ( Const + Max( Const,Min( PN ,Min( FirstVNF_Mem_Server ,DDR ) ) ) ),FirstVNF_Mem ) + Max( Const,Min( PN ,Min( FirstVNF_Mem_Server ,DDR ) ) ) ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,RCSe ),( ( Min( ( RMSe + RCSe ) ,DS ) * CS ) + ( CS * MUR ) ) ) / ( ( RRSe / MUR ) / MUR ) ) ,MUC ),( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( ARS ,Min( CRS ,ARS ) ) - ( Min( MDR ,Min( ARS ,FirstVNF_Mem ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU - DS ) )", "obj1": 0.12639405204460966, "obj2": 0.7637183116420849}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "Min( ( Min( MRS ,( ( DDR * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( ( ( MUM + MUR ) + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.555544965680419}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - DDR ) )", "choosing": "( ( DS / MUR ) + ( ( ( RRSe / MUC ) + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5546162938617987}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( PN * ARS ) - ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RCSe ) + ( ( MUC / MUR ) * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Max( PN,Max( BR,BR ) ) - Max( DDR,Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,MRS ) ,Const ) ) ) )", "choosing": "Max( ( ( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUM ) ) ),MUR ) * MLU ) + ( ( ( ( RRSe + ( MUC / RMSe ) ) + MUR ) - ( MLU / RRSe ) ) - ( MLU + ( ( Max( DS,MUM ) * ( MUR * RRSe ) ) * MLU ) ) ) ) + ( Min( ( CS - RMSe ) ,( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ) ) + ( MUM / DS ) ) ),Max( ( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ),( RRSe * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( ARS * ARS ) - FirstVNF_RAM_Server ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( MUC ,( ( MUR * ( ( ( MLU * MUR ) / DS ) * MUM ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( DDR * ARS ) - FirstVNF_RAM ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( MUC ,( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) / ( RRS - Max( ( RRS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),Const ) ) )", "choosing": "( ( DS + ( ( RMSe + ( MUR / MUM ) ) * ( ( CS + ( MUR + MUM ) ) * MUC ) ) ) - ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Min( ARS ,Min( CRS ,ARS ) ) - ( Min( MDR ,Min( ARS ,FirstVNF_Mem ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU - DS ) )", "obj1": 0.12639405204460966, "obj2": 0.7637183116420849}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.09293680297397769, "obj2": 0.8032020289214178}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "Min( ( Min( MRS ,( ( DDR * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( ( ( MUM + MUR ) + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.555544965680419}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MRS / ACS ) * MRS ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( ( MUR + DS ) - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08364312267657993, "obj2": 0.8139561429201553}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - DDR ) )", "choosing": "( ( DS / MUR ) + ( ( ( RRSe / MUC ) + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5546162938617987}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,Max( Const,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + ( ( ( CS * CS ) + ( MUM - CS ) ) + Max( ( MLU + RMSe ),Max( CS,RRSe ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8144145248023035}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Min( ( ( MDR - DDR ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( ( Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( CS + DS ) ),( MUR + DS ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * ( ( MDR / ACS ) * MRS ) ) - PN ) * BR ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),DS )", "obj1": 0.08736059479553904, "obj2": 0.8089687057551216}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Max( PN,Max( BR,BR ) ) - Max( DDR,Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,MRS ) ,Const ) ) ) )", "choosing": "Max( ( ( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUM ) ) ),MUR ) * MLU ) + ( ( ( ( RRSe + ( MUC / RMSe ) ) + MUR ) - ( MLU / RRSe ) ) - ( MLU + ( ( Max( DS,MUM ) * ( MUR * RRSe ) ) * MLU ) ) ) ) + ( Min( ( CS - RMSe ) ,( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ) ) + ( MUM / DS ) ) ),Max( ( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ),( RRSe * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( PN * ARS ) - ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RCSe ) + ( ( MUC / MUR ) * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( ARS * ARS ) - FirstVNF_RAM_Server ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( MUC ,( ( MUR * ( ( ( MLU * MUR ) / DS ) * MUM ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( ARS ,Min( CRS ,ARS ) ) - ( Min( MDR ,Min( ARS ,FirstVNF_Mem ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU - DS ) )", "obj1": 0.12639405204460966, "obj2": 0.7637183116420849}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "Min( ( Min( MRS ,( ( DDR * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( ( ( MUM + MUR ) + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.555544965680419}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "( Min( ACS ,Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / Min( CS ,( MUM / MUC ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5527407470325759}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( PN * ARS ) - ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RCSe ) + ( ( MUC / MUR ) * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Max( PN,Max( BR,BR ) ) - Max( DDR,Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,MRS ) ,Const ) ) ) )", "choosing": "Max( ( ( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( MUR ,MUM ) ) ),MUR ) * MLU ) + ( ( ( ( RRSe + ( MUC / RMSe ) ) + MUR ) - ( MLU / RRSe ) ) - ( MLU + ( ( Max( DS,MUM ) * ( MUR * RRSe ) ) * MLU ) ) ) ) + ( Min( ( CS - RMSe ) ,( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ) ) + ( MUM / DS ) ) ),Max( ( Max( Min( MLU ,( RRSe / MLU ) ),MUC ) / ( MUC / MUC ) ),( RRSe * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( ARS * ARS ) - FirstVNF_RAM_Server ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( MUC ,( ( MUR * ( ( ( MLU * MUR ) / DS ) * MUM ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( DDR * ARS ) - FirstVNF_RAM_Server ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * MUM ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( Max( AMS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( RRS - Max( ARS,( ( ( ( DDR * ARS ) - FirstVNF_RAM_Server ) * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( ( ( MLU * MUR ) * ( RCSe * RRSe ) ) * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * MUC ) ) ) - Min( MUC ,( MUR * ( ( MUM / DS ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( RRS * ARS ) - ( Min( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( MLU * CS ) ) * Max( MUC,RCSe ) )", "obj1": 0.33643122676579923, "obj2": 0.5208630428638966}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( Min( ARS ,Min( CRS ,ARS ) ) - ( Min( MDR ,Min( ARS ,FirstVNF_Mem ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU - DS ) )", "obj1": 0.12639405204460966, "obj2": 0.7637183116420849}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "Min( ( Min( MRS ,( ( DDR * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( ( ( MUM + MUR ) + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.555544965680419}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "( Min( ACS ,Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / Min( CS ,( MUM / MUC ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5527407470325759}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( PN * ARS ) - ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RCSe ) + ( ( MUC / MUR ) * RMSe ) ) * Max( MUC,RCSe ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( BR / CRS ) ),RRS ) ) ,( DDR + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * Min( CS ,Min( ( Min( CS ,( RMSe - RCSe ) ) * ( RRSe * Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( MLU / ( RRSe / Max( ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ),MUC ) ) ) ) - ( MLU / ( ( ( RCSe - DS ) - ( MUR - MUC ) ) + MUR ) ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "Min( ( Min( MRS ,( ( DDR * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( ( ( MUM + MUR ) + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.555544965680419}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( DDR,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / PN ) ,( ( CRS * MDR ) / BR ) )", "choosing": "Max( ( ( RRSe + CS ) / CS ),( DS + RCSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5548057768206711}, {"determining": "( Min( ACS ,Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / Min( CS ,( MUM / MUC ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5527407470325759}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) - ( ( BR + FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( ( Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) ) / ( DDR - PN ) ) - ( CRS * DDR ) ) ) ) )", "choosing": "( ( RRSe / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),RMSe ) )", "obj1": 0.9944237918215614, "obj2": 0.0019447789090687045}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / Max( FirstVNF_RAM_Server,Min( PN ,BR ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( Max( MUM,Max( ( MUC + RCSe ),RMSe ) ) + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - AMS ) ) * CRS ) - FirstVNF_Mem_Server ) ) - Max( ( ARS * ( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + Min( Max( Min( RRSe ,( CS + Min( MUC ,MUM ) ) ),MUM ) ,Min( ( MUM / ( Max( DS,RRSe ) * MUC ) ) ,Max( ( RCSe * MLU ),( MLU - Max( MUC,MUR ) ) ) ) ) ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Max( ( MRS / BR ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( ( Const / PN ) / ( RRS / CRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server - MDR ) - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,( RMSe * ( ( ( MLU * MUR ) / MUC ) + DS ) ) ) * Min( ( CS + MUR ) ,( MUM * RMSe ) ) ) - ( ( RRSe - RMSe ) - RCSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( Max( Max( FirstVNF_Mem,MDR ),DDR ),FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe - CS ),Min( MUR ,Max( Min( MUM ,Max( MUR,MUM ) ),Min( MUC ,RRSe ) ) ) ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( Min( DDR ,MRS ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( DS + CS ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Max( Max( FirstVNF_Mem,MDR ),DDR ) - ( Min( AMS ,FirstVNF_CPU_Server ) - Max( ( Const + FirstVNF_Mem_Server ),( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "( MLU / Max( ( MUC * Max( MUR,MUM ) ),( ( RCSe / ( Max( MLU,( RMSe / RMSe ) ) * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.16171003717472118, "obj2": 0.6939583031403244}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * Min( Min( ( PN + DDR ) ,( ( BR + BR ) * MRS ) ) ,( Min( FirstVNF_CPU_Server ,AMS ) * Max( MRS,MDR ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,Min( ( RCSe + CS ) ,( RCSe / MLU ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.15985130111524162, "obj2": 0.7012434510719562}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "( Min( ACS ,Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / Min( CS ,( MUM / MUC ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5527407470325759}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "Min( ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0026468958770893007}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( MDR * DDR ) + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( Max( CS,( RCSe * DS ) ) * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / Max( FirstVNF_RAM_Server,Min( PN ,BR ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( Max( MUM,Max( ( MUC + RCSe ),RMSe ) ) + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( RRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),BR ) + CRS ) ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( RMSe * ( DS / CS ) ) ) * Max( ( RRSe * Min( Max( ( Min( MUM ,( DS * MLU ) ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "Min( ( ARS - ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( DS + ( ( ( MUR + MUM ) - MUR ) / Min( ( RRSe / RCSe ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,MRS ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( DS + CS ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "( Min( ACS ,Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / Min( CS ,( MUM / MUC ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5527407470325759}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( DDR / PN ) ) ,PN ) )", "choosing": "( ( RCSe * MUM ) - ( MUM - Max( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Max( DS,( RCSe * MUM ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0011300912141298848}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / Const ) - BR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( MDR * DDR ) + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( Max( CS,( RCSe * DS ) ) * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( MDR ,ACS ) )", "choosing": "( ( Min( CS ,MUC ) / RRSe ) - Max( ( Max( DS,MUM ) * ( RCSe * RRSe ) ),Min( ( DS - DS ) ,( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Max( ( Const + DDR ),FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( PN + PN ) / ( ARS - CRS ) ) ) )", "choosing": "( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * ( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( ( ( AMS + FirstVNF_RAM ) + DDR ),CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( FirstVNF_Mem_Server + ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( MLU - RMSe ) ) ) + ( ( ( ( Min( Min( MUM ,RRSe ) ,MUR ) / ( MLU - RMSe ) ) * MUR ) * ( ( RRSe / RCSe ) * RCSe ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( MDR + ( DDR / Min( FirstVNF_RAM ,AMS ) ) ) / RRS ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / RMSe ) * CS ),( ( MLU - Min( ( MUC * Min( ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ,Min( ( MUR / MUC ) ,Max( MUC,RMSe ) ) ) ) ,Min( ( ( DS - ( DS + DS ) ) / Max( RMSe,Max( MUR,CS ) ) ) ,MLU ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,( ACS / DDR ) ),Max( DDR,BR ) ) - Max( Min( RRS ,( Min( ARS ,RRS ) / Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,MDR ) / ( ( Const / DDR ) - ( Const + FirstVNF_RAM_Server ) ) ) ) ) ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Max( Min( ( MUR + ( ( ( MUC / DS ) * Max( RCSe,( ( DS + MUC ) * ( MLU + RCSe ) ) ) ) - MUC ) ) ,MUR ),( DS * ( ( RRSe * MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( Max( DS,( RRSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( DS + ( ( ( MUR + MUM ) - MUR ) / Min( ( RRSe / RCSe ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( Const * Max( MDR,Min( RRS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( MUR / Max( RMSe,( MUR - Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6621421993817385}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( Min( ACS ,Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / Min( CS ,( MUM / MUC ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5527407470325759}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( MDR * DDR ) + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( Max( CS,( RCSe * DS ) ) * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / Const ) - BR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( DDR ,MRS ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( DS + CS ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / DDR ) + Min( ARS ,MRS ) ) - Max( MDR,( Max( ( AMS + MDR ),( MDR / CRS ) ) + ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,RRSe ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / Max( ( RRSe / RMSe ),Min( CS ,CS ) ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) - Max( CRS,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / ( ( MLU * Min( RMSe ,( DS * ( MLU - ( RCSe + MUR ) ) ) ) ) * Max( ( ( CS / RMSe ) - Max( RCSe,DS ) ),Max( MUR,( DS + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,MRS ) - Max( MDR,RRS ) )", "choosing": "( ( ( ( Max( CS,MUM ) - ( MLU - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + Max( ( RCSe / MUR ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( BR - ( FirstVNF_CPU_Server + PN ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) + ( AMS - FirstVNF_Mem ) ) ) ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Max( RMSe,RMSe ) * MUC ) ) ) / Min( ( MUM - ( ( MUM + MUC ) - ( ( ( Min( RCSe ,MLU ) - RCSe ) - ( MUC + RMSe ) ) - MLU ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / ( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,Min( FirstVNF_Mem ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Max( Max( ( RCSe - Max( MUC,MLU ) ),RCSe ),MLU ) * ( ( Max( RCSe,( Max( DS,( RCSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( Max( DS,( RRSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( MDR + AMS ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( RMSe / RMSe ),( CS + ( ( RMSe + Min( MUM ,MUM ) ) * ( ( RMSe - MUM ) / RRSe ) ) ) ),MUR ) / DS ),( RMSe / RMSe ) )", "obj1": 0.05390334572490706, "obj2": 0.8667674256920262}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( Max( Const,AMS ) ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RRSe ) )", "obj1": 0.6226765799256505, "obj2": 0.2769450307394135}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( Const * Max( MDR,Min( RRS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( MUR / Max( RMSe,( MUR - Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6621421993817385}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Min( ARS ,( Min( ARS ,DDR ) - ( FirstVNF_CPU - CRS ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "Max( ( ( MLU + ( DS - RRSe ) ) / DS ),( DS + MUC ) )", "obj1": 0.9851301115241635, "obj2": 0.014818829448726627}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( ( RCSe / CS ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5509758992490549}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( RRS - ( CRS - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( ( CS / ( MUR / MLU ) ) - MLU ) ) )", "obj1": 0.241635687732342, "obj2": 0.5974937133518975}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( DS ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( MDR * DDR ) + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( Max( CS,( RCSe * DS ) ) * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "Min( ( ARS - ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( DS + ( ( ( MUR + MUM ) - MUR ) / Min( ( RRSe / RCSe ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,MRS ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( DS + CS ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - AMS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( ( ( RCSe + DS ) * RMSe ) / RMSe ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ( BR * PN ) + ( ( Const / FirstVNF_Mem ) / PN ) ) ) + Min( ARS ,MRS ) ) - ( MDR - ACS ) )", "choosing": "( ( ( ( Min( RCSe ,( DS - ( CS * Min( RRSe ,DS ) ) ) ) - ( Min( Min( MUM ,( RRSe / DS ) ) ,MUM ) - RCSe ) ) / MUC ) / Max( CS,MUM ) ) + ( ( MLU + Min( RMSe ,Max( MUR,( DS + DS ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * PN ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( MUR / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "Min( ( ( MDR - DDR ) - DDR ) ,( PN / DDR ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( RMSe ,MUR ) / ( Min( RMSe ,MUR ) / MUC ) ) ,MUR ) ) ) * ( ( Max( RCSe,( ( RMSe + MLU ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / ( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,Min( FirstVNF_Mem ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Max( Max( ( RCSe - Max( MUC,MLU ) ),RCSe ),MLU ) * ( ( Max( RCSe,( Max( DS,( RCSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( MDR + AMS ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( RMSe / RMSe ),( CS + ( ( RMSe + Min( MUM ,MUM ) ) * ( ( RMSe - MUM ) / RRSe ) ) ) ),MUR ) / DS ),( RMSe / RMSe ) )", "obj1": 0.05390334572490706, "obj2": 0.8667674256920262}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( Max( Const,AMS ) ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RRSe ) )", "obj1": 0.6226765799256505, "obj2": 0.2769450307394135}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 0.70817843866171, "obj2": 0.2355199917250995}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( Const * Max( MDR,Min( RRS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( MUR / Max( RMSe,( MUR - Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6621421993817385}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Max( Max( ( ( DDR - Max( ( Min( ACS ,CRS ) / FirstVNF_Mem_Server ),FirstVNF_CPU ) ) + ( FirstVNF_RAM / Max( BR,FirstVNF_RAM_Server ) ) ),MDR ),DDR ) - ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( MLU * Max( MLU,( Min( ( CS + MUR ) ,MUR ) * DS ) ) ) / Max( ( MUC * Max( MUR,MUM ) ),( ( RCSe / ( Max( CS,MLU ) * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.9814126394052045, "obj2": 0.01359204265518547}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( ( RCSe / CS ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5509758992490549}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( ( PN + BR ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) ) ) - DS ) )", "obj1": 0.9888475836431226, "obj2": 0.004050712926734826}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( RRS - ( CRS - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( ( CS / ( MUR / MLU ) ) - MLU ) ) )", "obj1": 0.241635687732342, "obj2": 0.5974937133518975}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( ( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( ( RMSe / Max( MUM,RRSe ) ) / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( CRS / ( MRS / ( DDR / MDR ) ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUR / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( DS ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( Max( DS,( RRSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( DS + ( ( ( MUR + MUM ) - MUR ) / Min( ( RRSe / RCSe ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,MRS ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( DS + CS ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( ( RRSe * MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / Min( ( Const * FirstVNF_CPU_Server ) ,ARS ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( AMS / ( CRS / ( MDR * DDR ) ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUR ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - DDR ) - DDR ) ,( PN / DDR ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( RMSe ,MUR ) / ( Min( RMSe ,MUR ) / MUC ) ) ,MUR ) ) ) * ( ( Max( RCSe,( ( RMSe + MLU ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( MDR + AMS ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( RMSe / RMSe ),( CS + ( ( RMSe + Min( MUM ,MUM ) ) * ( ( RMSe - MUM ) / RRSe ) ) ) ),MUR ) / DS ),( RMSe / RMSe ) )", "obj1": 0.05390334572490706, "obj2": 0.8667674256920262}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( Max( Const,AMS ) ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RRSe ) )", "obj1": 0.6226765799256505, "obj2": 0.2769450307394135}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( ( PN * FirstVNF_RAM ) / ( DDR - PN ) ) - ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( RMSe / MLU ) ,Max( MLU,MLU ) ) * ( ( CS / RMSe ) - Max( ( RCSe / MUR ),( MUM + MUC ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.1067090102421815}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( PN + BR ) - Min( RRS ,MRS ) )", "choosing": "( ( MUR * MUC ) / ( RRSe - ( Max( ( RRSe / RRSe ),( RRSe + Max( ( Max( RRSe,RCSe ) + ( DS * RMSe ) ),MUC ) ) ) + MLU ) ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 0.70817843866171, "obj2": 0.2355199917250995}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "Min( ( Max( ( ( ACS + Max( BR,PN ) ) * MDR ),ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( MUM * RRSe ) * MUC ) ,RCSe ) * MLU ) )", "obj1": 0.20817843866171004, "obj2": 0.6449692379253769}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( Const * Max( MDR,Min( RRS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( MUR / Max( RMSe,( MUR - Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6621421993817385}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Max( Max( ( ( DDR - Max( ( Min( ACS ,CRS ) / FirstVNF_Mem_Server ),FirstVNF_CPU ) ) + ( FirstVNF_RAM / Max( BR,FirstVNF_RAM_Server ) ) ),MDR ),DDR ) - ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( MLU * Max( MLU,( Min( ( CS + MUR ) ,MUR ) * DS ) ) ) / Max( ( MUC * Max( MUR,MUM ) ),( ( RCSe / ( Max( CS,MLU ) * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.9814126394052045, "obj2": 0.01359204265518547}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( Min( Const ,Max( Max( DDR,BR ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,Min( MUM ,RRSe ) ) ),( MUR + DS ) )", "obj1": 0.7118959107806692, "obj2": 0.2284019011156657}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( ( RCSe / CS ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5509758992490549}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "( ( ( ( ( PN * FirstVNF_RAM ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) / ( Const * ( Max( DDR,( ( ( ( PN * ACS ) * CRS ) - FirstVNF_Mem ) * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Max( ( CS + CS ),MUR ) ) - ( MUR + CS ) )", "obj1": 0.2527881040892193, "obj2": 0.5914503368618962}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ( MRS / ( DDR / MDR ) ) ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( MUR + MUR ) ) ) ) ) + DS ) )", "obj1": 0.9888475836431226, "obj2": 0.0038085163389699997}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( RRS - ( CRS - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( ( CS / ( MUR / MLU ) ) - MLU ) ) )", "obj1": 0.241635687732342, "obj2": 0.5974937133518975}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( DS ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( ( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( ( RMSe / Max( MUM,RRSe ) ) / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( CRS / ( MRS / ( DDR / MDR ) ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUR / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / ( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,Min( FirstVNF_Mem ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Max( Max( ( RCSe - Max( MUC,MLU ) ),RCSe ),MLU ) * ( ( Max( RCSe,( Max( DS,( RCSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( Max( DS,( RRSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( DS + ( ( ( MUR + MUM ) - MUR ) / Min( ( RRSe / RCSe ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,MRS ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( DS + CS ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + CRS ) + ( ARS / MRS ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / PN ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( Min( ( ACS - BR ) ,( DDR / ( ( DDR - Max( Max( MDR,BR ),ACS ) ) + ( FirstVNF_RAM / Max( BR,FirstVNF_RAM_Server ) ) ) ) ) - ( ( ARS + FirstVNF_CPU ) / Min( BR ,MDR ) ) )", "choosing": "( ( RCSe * ( Max( ( MUM / MUM ),( ( RCSe * Max( RCSe,( MUC + MUR ) ) ) + DS ) ) / ( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) ) / ( RMSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( AMS / ( CRS / ( MDR * DDR ) ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUR ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( MDR + AMS ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( RMSe / RMSe ),( CS + ( ( RMSe + Min( MUM ,MUM ) ) * ( ( RMSe - MUM ) / RRSe ) ) ) ),MUR ) / DS ),( RMSe / RMSe ) )", "obj1": 0.05390334572490706, "obj2": 0.8667674256920262}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( Max( Const,AMS ) ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RRSe ) )", "obj1": 0.6226765799256505, "obj2": 0.2769450307394135}, {"determining": "( Min( ( PN - Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( CS - ( MUC / RMSe ) ) ,RMSe ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( DS / RCSe ) ) ) ) ) ) + DS ) )", "obj1": 0.7546468401486989, "obj2": 0.10523656481291069}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 0.70817843866171, "obj2": 0.2355199917250995}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( Const * Max( MDR,Min( RRS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( MUR / Max( RMSe,( MUR - Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6621421993817385}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( MLU / ( ( ( ( DS / RMSe ) * DS ) + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.20817843866171004, "obj2": 0.6434449576574119}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,( ( RRSe * Min( MUR ,DS ) ) / RCSe ) ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.34572490706319703, "obj2": 0.50338177319366}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Max( Max( ( ( DDR - Max( ( Min( ACS ,CRS ) / FirstVNF_Mem_Server ),FirstVNF_CPU ) ) + ( FirstVNF_RAM / Max( BR,FirstVNF_RAM_Server ) ) ),MDR ),DDR ) - ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( MLU * Max( MLU,( Min( ( CS + MUR ) ,MUR ) * DS ) ) ) / Max( ( MUC * Max( MUR,MUM ) ),( ( RCSe / ( Max( CS,MLU ) * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.9814126394052045, "obj2": 0.01359204265518547}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( DDR / Min( FirstVNF_RAM ,AMS ) ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,MUR ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 0.21189591078066913, "obj2": 0.6325992781961561}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( Min( Const ,Max( Max( DDR,BR ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,Min( MUM ,RRSe ) ) ),( MUR + DS ) )", "obj1": 0.7118959107806692, "obj2": 0.2284019011156657}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( ( RCSe / CS ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5509758992490549}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( ( ( MDR - Max( ( DDR - Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_RAM_Server ) ) ),MDR ) ) * BR ) + ARS ) - ( CRS * ( ( BR * Max( ( Max( MDR,FirstVNF_CPU_Server ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( ( CS / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ) / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ),MUM ) ,CS ) )", "obj1": 0.2527881040892193, "obj2": 0.588668604695207}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ( MRS / ( DDR / MDR ) ) ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( MUR + MUR ) ) ) ) ) + DS ) )", "obj1": 0.9888475836431226, "obj2": 0.0038085163389699997}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( RRS - ( CRS - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( ( CS / ( MUR / MLU ) ) - MLU ) ) )", "obj1": 0.241635687732342, "obj2": 0.5974937133518975}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / Min( RRS ,( PN - RRS ) ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) ) ),( MUR + DS ) )", "obj1": 0.70817843866171, "obj2": 0.2355199917250995}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( ( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( ( RMSe / Max( MUM,RRSe ) ) / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / Max( FirstVNF_RAM_Server,Min( PN ,BR ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( Max( MUM,Max( ( MUC + RCSe ),RMSe ) ) + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( DS ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "Min( ( ( MDR - DDR ) - DDR ) ,( PN / DDR ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( RMSe ,MUR ) / ( Min( RMSe ,MUR ) / MUC ) ) ,MUR ) ) ) * ( ( Max( RCSe,( ( RMSe + MLU ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / ( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,Min( FirstVNF_Mem ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Max( Max( ( RCSe - Max( MUC,MLU ) ),RCSe ),MLU ) * ( ( Max( RCSe,( Max( DS,( RCSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( Max( DS,( RRSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( DS + ( ( ( MUR + MUM ) - MUR ) / Min( ( RRSe / RCSe ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,MRS ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( DS + CS ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( MRS / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( CS * ( MUM - Max( Min( ( RRSe + RMSe ) ,( RMSe / Max( RMSe,( MUM / MUC ) ) ) ),( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( ( Min( ACS ,( ( FirstVNF_Mem / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) ) / ACS ) / ARS ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "Min( ( MDR - DDR ) ,( ( Max( FirstVNF_RAM,DDR ) * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( Min( RMSe ,MUR ) ,MUR ) / MUC ) ,MUR ) ) ) * ( ( ( ( MUM * RMSe ) * ( DS - ( ( MUR + MUC ) + ( DS - CS ) ) ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,( DDR / ( ( DDR - Max( Max( MDR,BR ),ACS ) ) + ( FirstVNF_RAM / Max( BR,FirstVNF_RAM_Server ) ) ) ) ) - ( ( ARS + FirstVNF_CPU ) / Min( BR ,MDR ) ) )", "choosing": "( ( RCSe * ( Max( ( MUM / MUM ),( ( RCSe * Max( RCSe,( MUC + MUR ) ) ) + DS ) ) / ( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) ) / ( RMSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( MDR + AMS ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( RMSe / RMSe ),( CS + ( ( RMSe + Min( MUM ,MUM ) ) * ( ( RMSe - MUM ) / RRSe ) ) ) ),MUR ) / DS ),( RMSe / RMSe ) )", "obj1": 0.05390334572490706, "obj2": 0.8667674256920262}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( Max( Const,AMS ) ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RRSe ) )", "obj1": 0.6226765799256505, "obj2": 0.2769450307394135}, {"determining": "( Min( ( PN - Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( CS - ( MUC / RMSe ) ) ,RMSe ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( DS / RCSe ) ) ) ) ) ) + DS ) )", "obj1": 0.7546468401486989, "obj2": 0.10523656481291069}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( MUC * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.30048759875231706}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,CS ) ),( MUR + DS ) )", "obj1": 0.70817843866171, "obj2": 0.2355199917250995}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( Const * Max( MDR,Min( RRS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( MUR / Max( RMSe,( MUR - Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6621421993817385}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( MLU / ( ( ( ( DS / RMSe ) * DS ) + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.20817843866171004, "obj2": 0.6434449576574119}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,( ( RRSe * Min( MUR ,DS ) ) / RCSe ) ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.34572490706319703, "obj2": 0.50338177319366}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( ( BR / MDR ) - ( ( FirstVNF_Mem_Server / ARS ) + RRS ) )", "choosing": "Max( ( Max( RRSe,MLU ) * ( Max( ( CS / ( MUM / RRSe ) ),RRSe ) / MUM ) ),Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / Min( MUC ,( MUR / RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.9721189591078067, "obj2": 0.013075464503845148}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( ( DDR / Min( FirstVNF_RAM ,AMS ) ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,MUR ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 0.21189591078066913, "obj2": 0.6325992781961561}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU * Max( MLU,( RMSe * DS ) ) ) / Max( ( Max( ( Max( RRSe,MLU ) * MUC ),( RRSe + Min( ( MUR * CS ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ) ) * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.23048327137546468, "obj2": 0.6086409419917034}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( Min( Const ,Max( Max( DDR,BR ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,Min( MUM ,RRSe ) ) ),( MUR + DS ) )", "obj1": 0.7118959107806692, "obj2": 0.2284019011156657}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) )", "obj1": 0.33271375464684017, "obj2": 0.5242295810369147}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( ( RCSe / CS ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5509758992490549}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Const ) - FirstVNF_Mem ) - ( ( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( ( CS * MLU ) ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - ( ( RRSe / DS ) / ( RCSe / RCSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.828793046118631}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( Min( MDR ,DDR ) - ( FirstVNF_Mem_Server - Max( ( Max( FirstVNF_RAM_Server,MDR ) + Const ),ACS ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( DS - RRSe ) ) - Max( RMSe,Min( ( RMSe - ( DS + MUC ) ) ,MUC ) ) ),MUR ) / DS ),( DS + MUC ) )", "obj1": 0.0687732342007435, "obj2": 0.8226043204476722}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( ( ( MDR - Max( ( DDR - Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_RAM_Server ) ) ),MDR ) ) * BR ) + ARS ) - ( CRS * ( ( BR * Max( ( Max( MDR,FirstVNF_CPU_Server ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( ( CS / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ) / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ),MUM ) ,CS ) )", "obj1": 0.2527881040892193, "obj2": 0.588668604695207}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ( MRS / ( DDR / MDR ) ) ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( MUR + MUR ) ) ) ) ) + DS ) )", "obj1": 0.9888475836431226, "obj2": 0.0038085163389699997}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( RRS - ( CRS - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( ( CS / ( MUR / MLU ) ) - MLU ) ) )", "obj1": 0.241635687732342, "obj2": 0.5974937133518975}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "( Min( Const ,Max( ( DDR - RRS ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / Min( RRS ,( PN - RRS ) ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) ) ),( MUR + DS ) )", "obj1": 0.70817843866171, "obj2": 0.2355199917250995}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( DS ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( ( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( ( RMSe / Max( MUM,RRSe ) ) / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / Max( FirstVNF_RAM_Server,Min( PN ,BR ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( Max( MUM,Max( ( MUC + RCSe ),RMSe ) ) + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( AMS / ( CRS / ( MDR * DDR ) ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUR ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - DDR ) - DDR ) ,( PN / DDR ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( RMSe ,MUR ) / ( Min( RMSe ,MUR ) / MUC ) ) ,MUR ) ) ) * ( ( Max( RCSe,( ( RMSe + MLU ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / ( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,Min( FirstVNF_Mem ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Max( Max( ( RCSe - Max( MUC,MLU ) ),RCSe ),MLU ) * ( ( Max( RCSe,( Max( DS,( RCSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - FirstVNF_Mem ) ,MDR ) + ( Min( ( ARS / FirstVNF_RAM_Server ) ,( MRS + FirstVNF_RAM ) ) / MRS ) ) ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,MRS ) - Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( CS,MLU ) * ( ( Max( RCSe,( Max( DS,( RRSe + MUM ) ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( DS + ( ( ( MUR + MUM ) - MUR ) / Min( ( RRSe / RCSe ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "Min( ( MDR - DDR ) ,( Const * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / ( Min( CS ,CS ) + RCSe ) ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( RMSe ,MUR ) / MUC ) ,MUR ) ) ) * ( ( ( ( MUM * RMSe ) * ( DS - ( ( MUR + MUC ) + ( DS - CS ) ) ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,( ( Max( FirstVNF_RAM,DDR ) * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( Min( RMSe ,MUR ) ,MUR ) / MUC ) ,MUR ) ) ) * ( ( ( ( MUM * RMSe ) * ( DS - ( ( MUR + MUC ) + ( DS - CS ) ) ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( ( AMS + MDR ) / ( ( ( RRS * RRS ) * ( PN / MRS ) ) - ACS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( Max( DS,( MUC - MUM ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.853275727637516}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( Max( Const,AMS ) ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RRSe ) )", "obj1": 0.6226765799256505, "obj2": 0.2769450307394135}, {"determining": "( Min( ( PN - Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( CS - ( MUC / RMSe ) ) ,RMSe ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( DS / RCSe ) ) ) ) ) ) + DS ) )", "obj1": 0.7546468401486989, "obj2": 0.10523656481291069}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( ( ( MDR - Max( ( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( RRS - FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( RRS - FirstVNF_RAM_Server ) ) ),MDR ) ) * BR ) + ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( RRSe / ( Min( MUM ,( Min( MLU ,MLU ) + MUC ) ) + CS ) ),( MUC * ( RCSe / MUC ) ) ) ,CS ) )", "obj1": 0.4888475836431227, "obj2": 0.29828335793619737}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( Max( FirstVNF_RAM,ARS ) - ( ( PN + ( Max( ( ARS - ( DDR + ( BR + FirstVNF_RAM_Server ) ) ),( PN / ( DDR + ( BR + FirstVNF_RAM_Server ) ) ) ) + ( DDR + CRS ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( MLU,RCSe ) - ( MUM * RCSe ) ),Max( ( ( ( RMSe + ( DS * Min( ( DS + CS ) ,RMSe ) ) ) / ( ( MUC - MUR ) * ( DS * Min( ( DS + CS ) ,RMSe ) ) ) ) / Min( ( RCSe / MLU ) ,MLU ) ),Max( RRSe,MUC ) ) )", "obj1": 0.7044609665427509, "obj2": 0.23042626271881494}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( MLU / ( ( ( ( DS / RMSe ) * DS ) + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.20817843866171004, "obj2": 0.6434449576574119}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,( ( RRSe * Min( MUR ,DS ) ) / RCSe ) ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.34572490706319703, "obj2": 0.50338177319366}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( BR / MDR ) - Max( MDR,Min( ( RRS + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe * ( MLU * ( Min( ( ( Max( MUM,RMSe ) / ( MUC / MUR ) ) * RRSe ) ,RCSe ) * Max( MLU,( RCSe / CS ) ) ) ) ),( RRSe + Min( ( RCSe - Min( Min( MLU ,( MUR - ( MUM / MUR ) ) ) ,MLU ) ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.024911898330866038}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( ( ( ( ARS + DDR ) - ( AMS / ARS ) ) + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( DDR,BR ) + CRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( ( Min( MUM ,RRSe ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * Min( ( MUR * CS ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ),MUR ) ) )", "obj1": 0.06505576208178439, "obj2": 0.8186049494300303}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( ARS * FirstVNF_RAM ) * CRS ) ) - ( Min( MDR ,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUC / ( MUR * MUC ) ) / MUC ) )", "obj1": 0.17657992565055763, "obj2": 0.6582768383434203}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU * Max( MLU,( RMSe * DS ) ) ) / Max( ( Max( ( Max( RRSe,MLU ) * MUC ),( RRSe + Min( ( MUR * CS ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ) ) * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.23048327137546468, "obj2": 0.6086409419917034}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( BR / MDR ) - ( ( FirstVNF_Mem_Server / ARS ) + RRS ) )", "choosing": "Max( ( Max( RRSe,MLU ) * ( Max( ( CS / ( MUM / RRSe ) ),RRSe ) / MUM ) ),Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / Min( MUC ,( MUR / RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.9721189591078067, "obj2": 0.013075464503845148}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( ( BR / MDR ) - ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / Const ) ) )", "choosing": "Max( ( RRSe * ( MLU * ( Min( ( ( Max( MUM,RMSe ) / ( MUC / MUR ) ) * RRSe ) ,RCSe ) * Max( MLU,( RCSe / ( Max( MUM,RMSe ) / ( MUC / MUR ) ) ) ) ) ) ),( RRSe + Min( ( MUR * CS ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ) )", "obj1": 0.9851301115241635, "obj2": 0.008299172864923965}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( BR + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( RMSe + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + ( MLU - Min( RCSe ,MUC ) ) ) ) ) + CS ) )", "obj1": 0.17286245353159851, "obj2": 0.6642420271905077}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) )", "obj1": 0.33271375464684017, "obj2": 0.5242295810369147}, {"determining": "( Min( Const ,Max( Max( DDR,BR ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,Min( MUM ,RRSe ) ) ),( MUR + DS ) )", "obj1": 0.7118959107806692, "obj2": 0.2284019011156657}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( ( RCSe / CS ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5509758992490549}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "( ( ( ( MDR - Max( ( DDR - Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_RAM_Server ) ) ),MDR ) ) * BR ) + ARS ) - ( CRS * ( ( BR * Max( ( Max( MDR,FirstVNF_CPU_Server ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( ( CS / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ) / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ),MUM ) ,CS ) )", "obj1": 0.2527881040892193, "obj2": 0.588668604695207}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( DDR / Min( FirstVNF_RAM ,AMS ) ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,MUR ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 0.21189591078066913, "obj2": 0.6325992781961561}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_CPU ) ) / ( ( ( MDR * PN ) + ARS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) - Min( MUC ,( ( MUR * ( ( MUM / DS ) * ( DS * Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( RRSe + MUM ) ) ) )", "obj1": 0.21189591078066913, "obj2": 0.6325992781961561}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ( MRS / ( DDR / MDR ) ) ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( MUR + MUR ) ) ) ) ) + DS ) )", "obj1": 0.9888475836431226, "obj2": 0.0038085163389699997}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( RRS - ( CRS - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( ( CS / ( MUR / MLU ) ) - MLU ) ) )", "obj1": 0.241635687732342, "obj2": 0.5974937133518975}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( ( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( ( RMSe / Max( MUM,RRSe ) ) / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / Max( FirstVNF_RAM_Server,Min( PN ,BR ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( Max( MUM,Max( ( MUC + RCSe ),RMSe ) ) + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( DS ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( ACS - BR ) ,( DDR / ( ( DDR - Max( Max( MDR,BR ),ACS ) ) + ( FirstVNF_RAM / Max( BR,FirstVNF_RAM_Server ) ) ) ) ) - ( ( ARS + FirstVNF_CPU ) / Min( BR ,MDR ) ) )", "choosing": "( ( RCSe * ( Max( ( MUM / MUM ),( ( RCSe * Max( RCSe,( MUC + MUR ) ) ) + DS ) ) / ( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) ) / ( RMSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( AMS / ( CRS / ( MDR * DDR ) ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUR ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - DDR ) - DDR ) ,( PN / DDR ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( RMSe ,MUR ) / ( Min( RMSe ,MUR ) / MUC ) ) ,MUR ) ) ) * ( ( Max( RCSe,( ( RMSe + MLU ) - MUM ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( BR + MRS ),Const ) ) ) + MRS ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,( Const * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / ( Min( CS ,CS ) + RCSe ) ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( RMSe ,MUR ) / MUC ) ,MUR ) ) ) * ( ( ( ( MUM * RMSe ) * ( DS - ( ( MUR + MUC ) + ( DS - CS ) ) ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( Max( FirstVNF_CPU_Server,( ( AMS + MDR ) / ( ( ( RRS * RRS ) * ( PN / MRS ) ) - ACS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Min( ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ,( MUC * ( ( ( Max( DS,( MUC - MUM ) ) - ( MLU + MLU ) ) / MUC ) / ( ( Max( ( RCSe / MUC ),MUC ) * MUR ) * ( Min( Max( MUM,MLU ) ,MLU ) - DS ) ) ) ) ),( ( ( RRSe + MUC ) * MUM ) + ( Max( Max( MLU,( ( ( CS - MUC ) + ( RRSe + MUR ) ) + MUR ) ),( ( RRSe * ( MUM + MLU ) ) + ( CS * MUR ) ) ) / ( DS / ( MUR / ( RRSe * RCSe ) ) ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.853275727637516}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( ACS + Max( BR,PN ) ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,( ( MUM * RRSe ) * MUC ) ) - DS ) )", "obj1": 0.8680297397769516, "obj2": 0.057323666519176066}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( Max( Const,AMS ) ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RRSe ) )", "obj1": 0.6226765799256505, "obj2": 0.2769450307394135}, {"determining": "( Min( ( PN - Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_Mem / ( CRS * ACS ) ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( CS,( Min( ( CS - ( MUC / RMSe ) ) ,RMSe ) - MUR ) ) - ( ( CS - DS ) / ( DS + RMSe ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( DS / RCSe ) ) ) ) ) ) + DS ) )", "obj1": 0.7546468401486989, "obj2": 0.10523656481291069}, {"determining": "( Max( BR,PN ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.4628252788104089, "obj2": 0.3482122870755596}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) + Const ) / ( Const * ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - ( Min( RRSe ,( MUR + MUM ) ) / Max( RMSe,MUM ) ) ) ,Max( RRSe,RCSe ) ) - ( MUR + ( MLU * CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.2906816387884156}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + ( ACS + Max( BR,PN ) ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUM * RRSe ) * MUC ) / ( Min( DS ,MUC ) - MUC ) )", "obj1": 0.7286245353159851, "obj2": 0.1350543055373972}, {"determining": "( Max( ARS,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( ( RRSe - RMSe ) * MUR ) ) )", "obj1": 0.6338289962825279, "obj2": 0.23802587762214825}, {"determining": "( ( ( ( MDR - Max( ( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( RRS - FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( RRS - FirstVNF_RAM_Server ) ) ),MDR ) ) * BR ) + ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( RRSe / ( Min( MUM ,( Min( MLU ,MLU ) + MUC ) ) + CS ) ),( MUC * ( RCSe / MUC ) ) ) ,CS ) )", "obj1": 0.4888475836431227, "obj2": 0.29828335793619737}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( ACS ,( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) - ( Const / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( CS - MUR ) ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.7174721189591078, "obj2": 0.20936969211163367}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.3996282527881041, "obj2": 0.44886141199468127}, {"determining": "( Max( FirstVNF_RAM,ARS ) - ( ( PN + ( Max( ( ARS - ( DDR + ( BR + FirstVNF_RAM_Server ) ) ),( PN / ( DDR + ( BR + FirstVNF_RAM_Server ) ) ) ) + ( DDR + CRS ) ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( MLU,RCSe ) - ( MUM * RCSe ) ),Max( ( ( ( RMSe + ( DS * Min( ( DS + CS ) ,RMSe ) ) ) / ( ( MUC - MUR ) * ( DS * Min( ( DS + CS ) ,RMSe ) ) ) ) / Min( ( RCSe / MLU ) ,MLU ) ),Max( RRSe,MUC ) ) )", "obj1": 0.7044609665427509, "obj2": 0.23042626271881494}, {"determining": "( ( ( AMS / MDR ) + ( FirstVNF_CPU_Server * MRS ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( ( Min( MUR ,( MUC * RCSe ) ) + ( MUC + CS ) ) + ( RRSe * MUC ) ) ) / ( CS + DS ) )", "obj1": 0.4144981412639405, "obj2": 0.415690773079928}, {"determining": "( Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - ARS )", "choosing": "( Max( Min( MUR ,( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.38847583643122674, "obj2": 0.4723718223546112}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + ( ( ( ( ( PN / FirstVNF_RAM ) / CRS ) - PN ) + BR ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) ) ) - ( ( Max( MRS,Const ) * FirstVNF_RAM ) / ( CRS * ARS ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - ( ( RCSe - MUC ) / DS ) ) / DS ) ) ) ,Min( ( Min( RRSe ,Max( Min( DS ,( RMSe - RMSe ) ),CS ) ) / MUM ) ,RMSe ) ) / ( MLU / RCSe ) )", "obj1": 0.9200743494423792, "obj2": 0.05310885130454163}, {"determining": "( Max( ( MDR * MRS ),AMS ) - ( ( CRS / ( RRS * FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) ,Min( ( MUM - MUC ) ,Min( DS ,Min( CS ,( ( MLU / ( RRSe * MUR ) ) + RRSe ) ) ) ) ) / ( MLU / RCSe ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN + BR ) - ( ARS * ( ( ( ACS + Max( BR,PN ) ) * MDR ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.42379182156133827, "obj2": 0.39704039428682647}, {"determining": "( Max( PN,CRS ) - Max( PN,MDR ) )", "choosing": "( ( MUR + RRSe ) * Max( ( RRSe / RMSe ),Min( CS ,CS ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1135938469096497}, {"determining": "( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ( ( ARS + ( FirstVNF_CPU_Server * ( MDR * ( FirstVNF_Mem - CRS ) ) ) ) - ( ( ARS / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) ) / ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) + Const ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + ( Min( ( CS + MLU ) ,( MUC + ( RRSe * MUC ) ) ) / ( CS + DS ) ) ) ) / ( CS + DS ) )", "obj1": 0.13940520446096655, "obj2": 0.7075153064699528}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( Min( ARS ,DDR ) - Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * Max( DDR,( ( ( ( MDR / ACS ) * MRS ) - PN ) * BR ) ) ) ) )", "choosing": "Max( ( Max( ( ( MLU + ( MLU + ( DS - RRSe ) ) ) - Max( RMSe,Min( MUR ,MUC ) ) ),MUR ) / DS ),( MUR + DS ) )", "obj1": 0.055762081784386616, "obj2": 0.8301414253485688}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( MLU / ( ( ( ( DS / RMSe ) * DS ) + ( ( ( Max( MUM,RMSe ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.20817843866171004, "obj2": 0.6434449576574119}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ACS )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( ( Min( MUC ,RCSe ) / ( ( DS * Max( RMSe,MLU ) ) + CS ) ) * MLU ) ) / Max( Max( ( CS / Min( MUC ,( CS / Max( MUR,MUR ) ) ) ),( RCSe + ( RMSe + Max( MLU,RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6924336188486345}, {"determining": "( ( ( Max( Max( FirstVNF_Mem,( FirstVNF_RAM / RRS ) ),BR ) / DDR ) + Min( ARS ,MRS ) ) - ( ( ACS * MDR ) - ACS ) )", "choosing": "( ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) + ( ( MLU + Min( RRSe ,MLU ) ) / CS ) )", "obj1": 0.16728624535315986, "obj2": 0.6701711159664457}, {"determining": "( Const * Max( BR,( Const * Max( BR,( ( FirstVNF_RAM_Server - MRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( DS / DS ),( MUC / MLU ) ),( MUC / MLU ) )", "obj1": 0.12453531598513011, "obj2": 0.7586140969401651}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,( ( RRSe * Min( MUR ,DS ) ) / RCSe ) ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.34572490706319703, "obj2": 0.50338177319366}, {"determining": "( Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) - ( ( Max( PN,Min( ACS ,( DDR / ( Min( DDR ,FirstVNF_RAM ) * RRS ) ) ) ) - Max( PN,FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) )", "choosing": "( Min( DS ,Min( CS ,MUC ) ) / ( ( ( ( CS - Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) ) + Min( DS ,( MUR + RRSe ) ) ) - MLU ) - MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7825222986131529}, {"determining": "Min( ( FirstVNF_CPU_Server - ( Max( AMS,( Const - ( ARS * AMS ) ) ) * RRS ) ) ,Max( AMS,( Const - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( Min( Min( Min( RMSe ,RCSe ) ,RCSe ) ,MUC ) + ( RRSe / ( MUR + Min( DS ,Max( MUC,( MLU - MUR ) ) ) ) ) ) / CS ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( ( BR / MDR ) - Max( MDR,Min( ( RRS + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe * ( MLU * ( Min( ( ( Max( MUM,RMSe ) / ( MUC / MUR ) ) * RRSe ) ,RCSe ) * Max( MLU,( RCSe / CS ) ) ) ) ),( RRSe + Min( ( RCSe - Min( Min( MLU ,( MUR - ( MUM / MUR ) ) ) ,MLU ) ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.024911898330866038}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( ( MUM - Min( MUM ,MUM ) ) / MUC ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8012694323517993}, {"determining": "Min( ( ACS - FirstVNF_CPU_Server ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC / ( ( ( ( RCSe - CS ) * MLU ) - MUR ) / DS ) ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.3475836431226766, "obj2": 0.4901977570524091}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MLU / RCSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5141806192801767}, {"determining": "( Min( ACS ,Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Max( ( CRS * CRS ),FirstVNF_RAM_Server ) ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * Max( ( DS * ( DS + ( ( RCSe - MUR ) / Min( ( RRSe / MUC ) ,CS ) ) ) ),( MLU / MUC ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7664608207247394}, {"determining": "( ( ACS + MRS ) - Max( ( Const + DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( RMSe + RCSe ) ,DS ) ,MUC ),( RCSe + DS ) )", "obj1": 0.9368029739776952, "obj2": 0.030470839545476625}, {"determining": "( DDR - ( CRS * AMS ) )", "choosing": "( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) / Min( Max( ( CS / Max( MUM,( ( RCSe + MLU ) + MUM ) ) ),MUM ) ,CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5334821276436955}, {"determining": "Min( ( BR / PN ) ,( ( ( ( ( MDR * Const ) * Const ) * ARS ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( Max( MUR,MUR ) / DS ),Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.10223048327137546, "obj2": 0.7686851233529095}, {"determining": "( ( ( ( ARS + DDR ) - ( AMS / ARS ) ) + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + ( Max( DDR,BR ) + CRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( ( Min( MUM ,RRSe ) / MUM ),Min( MUM ,RCSe ) ) ,RRSe ) ),Max( ( RCSe * Min( ( MUR * CS ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ),MUR ) ) )", "obj1": 0.06505576208178439, "obj2": 0.8186049494300303}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ( ARS * FirstVNF_RAM ) * CRS ) ) - ( Min( MDR ,( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( MUR + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUC / ( MUR * MUC ) ) / MUC ) )", "obj1": 0.17657992565055763, "obj2": 0.6582768383434203}, {"determining": "( Min( ACS ,Max( ( Max( ( DDR + CRS ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( DS * ( ( ( RMSe / ( RMSe / DS ) ) + Min( Min( MLU ,RCSe ) ,( MUR * MLU ) ) ) + ( MLU - RRSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7789742327345386}, {"determining": "Min( Max( ( BR * ARS ),FirstVNF_CPU ) ,Min( ( FirstVNF_CPU * PN ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( MLU / ( RRSe / ( Max( RRSe,Max( MUC,MUM ) ) / ( ( CS + MUR ) + RMSe ) ) ) ) ) - Max( CS,CS ) )", "obj1": 0.32899628252788105, "obj2": 0.5293603667294514}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( ( PN * FirstVNF_RAM_Server ) * ( ARS - Max( ARS,( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS + ( ( RMSe + CS ) * ( ( ( RMSe * ( ( DS / MUC ) / ( DS + MUC ) ) ) + RMSe ) * ( ( RCSe * RMSe ) - Max( RMSe,MUR ) ) ) ) ) - Min( MUC ,MUM ) )", "obj1": 0.9349442379182156, "obj2": 0.039909854822142384}, {"determining": "( Min( ACS ,Max( ( Const + Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( MUR - DS ) / CS ) / ( MUR - DS ) )", "obj1": 0.26765799256505574, "obj2": 0.5688718461629175}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( MRS,( DDR * PN ) ) ),MDR ) - ( PN - ( MRS / Min( Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - MDR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "( CS / Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / ( MUR / RCSe ) ) ) ) * DS ) ) )", "obj1": 0.15613382899628253, "obj2": 0.7021709978175372}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_Mem - Min( AMS ,FirstVNF_RAM ) ) ) ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + MUM ) * Max( MLU,( RMSe * ( MUM / ( RRSe / Max( Max( CS,CS ),( MUR / RCSe ) ) ) ) ) ) ) / Max( ( MUC * ( RRSe * CS ) ),( ( ( CS + MUM ) / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.2100371747211896, "obj2": 0.6255211507512922}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + BR ) - ( ARS * ( ( ( ARS * ( ( FirstVNF_CPU * BR ) + MDR ) ) + Min( DDR ,ARS ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( MUM - RCSe ) - ( ( MUC - ( Max( MUC,MUC ) / ( CS * MUM ) ) ) + MUM ) ) ,MUM ) / Min( ( ( MUC - MUR ) + MUR ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.6104769954812292}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - ARS ) ) ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RMSe + Max( RRSe,DS ) ) / Min( CS ,( MUM / MUC ) ) ) / ( MUR - DS ) )", "obj1": 0.28066914498141265, "obj2": 0.5637840926793104}, {"determining": "( ( BR / MDR ) - ( ( FirstVNF_Mem_Server / ARS ) + RRS ) )", "choosing": "Max( ( Max( RRSe,MLU ) * ( Max( ( CS / ( MUM / RRSe ) ),RRSe ) / MUM ) ),Max( ( MUC * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / Min( MUC ,( MUR / RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.9721189591078067, "obj2": 0.013075464503845148}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - Max( FirstVNF_Mem_Server,( DDR + CRS ) ) )", "choosing": "( ( MUC * RCSe ) / ( MUR - ( MUC * ( ( ( MUC / Min( Min( DS ,DS ) ,( CS - MUM ) ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.22060065487119074}, {"determining": "( ( BR / MDR ) - ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / Const ) ) )", "choosing": "Max( ( RRSe * ( MLU * ( Min( ( ( Max( MUM,RMSe ) / ( MUC / MUR ) ) * RRSe ) ,RCSe ) * Max( MLU,( RCSe / ( Max( MUM,RMSe ) / ( MUC / MUR ) ) ) ) ) ) ),( RRSe + Min( ( MUR * CS ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ) )", "obj1": 0.9851301115241635, "obj2": 0.008299172864923965}, {"determining": "( Min( ACS ,Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) ) - ( FirstVNF_CPU_Server * Const ) )", "choosing": "( ( ( RCSe / CS ) / ( MUR - DS ) ) / ( MUR - DS ) )", "obj1": 0.31226765799256506, "obj2": 0.5443344789906767}, {"determining": "( ( FirstVNF_Mem + ( ARS / FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUR / RMSe ) / ( MUR / RRSe ) ) - ( CS + ( DS / RCSe ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7031375328940122}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( BR + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( RMSe + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + ( MLU - Min( RCSe ,MUC ) ) ) ) ) + CS ) )", "obj1": 0.17286245353159851, "obj2": 0.6642420271905077}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - ( Min( MDR ,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( ( AMS / ( CRS / ( MDR * FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ) ) - ARS ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( MUC - Min( RRSe ,( ( RCSe - MUC ) / ( RCSe * MUR ) ) ) ) )", "obj1": 0.33271375464684017, "obj2": 0.5242295810369147}, {"determining": "( Min( Const ,Max( Max( DDR,BR ),AMS ) ) - Max( ( RRS + Min( FirstVNF_RAM ,ACS ) ),( ( BR / ( ARS / ( RRS / DDR ) ) ) * ARS ) ) )", "choosing": "Max( ( RRSe + Min( Min( ( ( ( MUR / Max( MUC,RRSe ) ) * RMSe ) - RCSe ) ,MUR ) ,Min( MUM ,RRSe ) ) ),( MUR + DS ) )", "obj1": 0.7118959107806692, "obj2": 0.2284019011156657}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( Max( MUM,RMSe ) / ( ( RCSe / CS ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5509758992490549}, {"determining": "Max( Min( ( AMS - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),Min( ( Max( ( MRS - MRS ),DDR ) + Max( AMS,ACS ) ) ,Min( ( CRS + CRS ) ,( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUC + ( MUC * MUC ) ) ) + ( Min( ( MUR / RRSe ) ,( RMSe / RCSe ) ) / Min( Max( CS,DS ) ,( MUR + MLU ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5991975154225667}, {"determining": "( Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ),MDR ) - ( PN - ( MRS / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU * Max( MLU,( RMSe * DS ) ) ) / Max( ( Max( ( Max( RRSe,MLU ) * MUC ),( RRSe + Min( ( MUR * CS ) ,Max( ( MLU - RMSe ),Max( MLU,DS ) ) ) ) ) * ( RRSe * CS ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.23048327137546468, "obj2": 0.6086409419917034}, {"determining": "( ( ( ARS - Const ) + ( RRS * ( ( RRS * ARS ) - ( BR - ( Min( Const ,FirstVNF_RAM ) / ( Const - ( Const - FirstVNF_Mem_Server ) ) ) ) ) ) ) - Max( ( ( ( PN * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( ( MLU / DS ) * Max( Max( RRSe,RCSe ),RCSe ) ) / ( ( MUC + MUC ) * ( RRSe + MLU ) ) ) ,MUC ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "Min( Max( AMS,MRS ) ,Max( AMS,( Const - ( ARS * Const ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( Min( Min( RMSe ,RCSe ) ,MUC ) + MUC ) + MUC ) / CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5507427744735316}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( Min( DS ,MUC ) - DS ) )", "obj1": 0.9628252788104089, "obj2": 0.019948516789106845}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - ( ( PN + Max( ( ( BR / DDR ) * ARS ),RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / MUM ) / DS ) * Max( ( RRSe * Min( Max( Min( RCSe ,DS ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.07806691449814127, "obj2": 0.8079644415437912}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,Max( ( AMS / FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * MLU ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( ( MDR - Max( ( DDR - Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_RAM_Server ) ) ),MDR ) ) * BR ) + ARS ) - ( CRS * ( ( BR * Max( ( Max( MDR,FirstVNF_CPU_Server ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( ( CS / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ) / Min( ( ( MUC + MLU ) / RCSe ) ,Max( RMSe,MLU ) ) ),MUM ) ,CS ) )", "obj1": 0.2527881040892193, "obj2": 0.588668604695207}, {"determining": "( ( ( ARS + ACS ) - Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Max( MUM,RRSe ) * ( CS + MUM ) ) * DS ) )", "obj1": 0.07434944237918216, "obj2": 0.817764878649052}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( ( ( Min( MLU ,MUC ) + MUM ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5611090257379223}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + ( AMS + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( RMSe * CS ) )", "obj1": 0.26579925650557623, "obj2": 0.5762570865121306}, {"determining": "( ( ( MDR * DDR ) * DDR ) + ( ( MDR * DDR ) * DDR ) )", "choosing": "( Max( RMSe,MLU ) * ( Max( DS,( Max( RMSe,MLU ) * ( Max( DS,MLU ) / ( MLU - RCSe ) ) ) ) / ( MLU - RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.7485404151121979}, {"determining": "( ( ARS + ( FirstVNF_Mem_Server + MDR ) ) - Max( DDR,( ( BR / DDR ) * ARS ) ) )", "choosing": "( ( MLU / DS ) * Max( ( RRSe * Min( Max( Min( Min( RCSe ,DS ) ,RRSe ),RMSe ) ,RRSe ) ),Max( ( RCSe * MUR ),MUR ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8140006849826235}, {"determining": "( ( ARS + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * MRS ) ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( Min( MUR ,CS ),RRSe ) * MUR )", "obj1": 0.9684014869888475, "obj2": 0.01768875404363715}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + AMS ) ) - ( ( FirstVNF_Mem_Server - CRS ) - ( ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + MRS ),FirstVNF_CPU_Server ) * RRS ) / PN ) ) )", "choosing": "( ( RCSe / CS ) / ( ( RRSe + ( ( Min( RCSe ,( MUM - Min( MUM ,MUM ) ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5560651889951616}, {"determining": "( ( Min( MDR ,ACS ) / Min( ACS ,MDR ) ) + Max( ( AMS + Max( CRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( ( MUR * MUM ) + ( RMSe * CS ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5849143631385155}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,( PN + BR ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RRSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.24907063197026022, "obj2": 0.5931210852139707}, {"determining": "( Max( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ACS + Const ) - ACS ) ),MRS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / ( ( ARS + RRS ) / DDR ) ) ) )", "choosing": "( ( MLU * Max( MLU,( RMSe * DS ) ) ) / Max( ( MUC * ( ( ( MUC / ( MUC - DS ) ) * CS ) * ( Min( CS ,CS ) + RCSe ) ) ),( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6093950450920645}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( ( BR / ACS ),Min( AMS ,ARS ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + Min( ( CS - DS ) ,Min( MUC ,MLU ) ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( CS,RCSe ) / DS ) ) ) * MUM ) ,RCSe ) * MLU ) )", "obj1": 0.258364312267658, "obj2": 0.5815059051926668}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Min( ( ( Const * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_RAM_Server * ( ( MRS + ARS ) + MRS ) ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( FirstVNF_RAM + ACS ) ) ) ) + ACS ) ,( AMS * AMS ) )", "choosing": "Max( Max( MUC,( Max( RMSe,( CS + ( CS + RRSe ) ) ) + RCSe ) ),( ( Min( Min( RMSe ,( Max( MUC,MUR ) / ( MLU * MUR ) ) ) ,MUC ) + ( RRSe / Max( ( ( ( DS * RCSe ) - ( RCSe + RMSe ) ) * ( CS + DS ) ),( Max( ( DS + MLU ),Min( RMSe ,RCSe ) ) * ( MUC - ( RRSe + DS ) ) ) ) ) ) / ( Max( RMSe,( MLU / RCSe ) ) + Min( MLU ,MLU ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6456533739908563}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ( MRS / ( DDR / MDR ) ) ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( MUR + MUR ) ) ) ) ) + DS ) )", "obj1": 0.9888475836431226, "obj2": 0.0038085163389699997}, {"determining": "( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / MRS ) ) ) - FirstVNF_CPU_Server ) ) + ( RRS * Const ) ) - Max( ( Const + FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR / Max( RMSe,DS ) ),( MUC / MUR ) )", "obj1": 0.9237918215613383, "obj2": 0.04468191684159412}, {"determining": "( Min( ACS ,PN ) - ( ( ARS - Const ) + ( RRS * Const ) ) )", "choosing": "( ( RCSe / CS ) / ( MUC - MUR ) )", "obj1": 0.9869888475836431, "obj2": 0.005659233009504579}, {"determining": "Min( Min( ( BR / PN ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( Const ,MDR ) - Max( DDR,FirstVNF_RAM ) ) / ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MLU,Min( MLU ,RRSe ) ) / CS ),Min( MLU ,RRSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5966572358927296}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( Min( MUC ,Min( ( MUC / MLU ) ,DS ) ) * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9925650557620818, "obj2": 0.002425268596943987}, {"determining": "( ( PN + BR ) - ( ARS * ( Max( Const,( ( ACS + Max( BR,PN ) ) * MDR ) ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * MUC ) / ( ( Max( Min( Min( ( MUM * RRSe ) ,( RMSe - CS ) ) ,( RRSe * MUC ) ),MUR ) * MLU ) + ( ( MLU - ( MLU / RRSe ) ) - ( MLU + ( ( Max( RMSe,MUM ) * RMSe ) * MLU ) ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.019461874413811888}, {"determining": "( ( DDR + ARS ) - ( CRS * ( ( BR * Max( ( Max( FirstVNF_Mem_Server,( DDR + ARS ) ) - RRS ),FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MLU ,MLU ) / Min( Max( ( CS / ( CS / Min( ( CS / RCSe ) ,RCSe ) ) ),MUM ) ,CS ) )", "obj1": 0.24721189591078066, "obj2": 0.5948193355654513}, {"determining": "( ( BR + ( FirstVNF_Mem / BR ) ) / ( RRS - ( CRS - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC - ( RRSe + ( RCSe * MUC ) ) ) - ( MUR + ( ( CS / ( MUR / MLU ) ) - MLU ) ) )", "obj1": 0.241635687732342, "obj2": 0.5974937133518975}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,( ( ACS + Max( BR,PN ) ) * MDR ) ) + ( ARS / MRS ) ) ,Min( DDR ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( Min( ( ( CS / ( DS * ( Max( MUM,RCSe ) / DS ) ) ) * MUM ) ,( MUM * RRSe ) ) * MLU ) )", "obj1": 0.23977695167286245, "obj2": 0.5984145005457638}, {"determining": "Min( ( MDR * DDR ) ,( Const / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MLU * CS ),( MUR + ( RMSe + ( MLU * MUM ) ) ) ) / ( ( ( ( MUR / Max( DS,RMSe ) ) + MUM ) * ( Max( Min( MUM ,( RRSe * MUR ) ),Max( MLU,( MUR * MUM ) ) ) * MLU ) ) + ( ( RMSe + CS ) * ( ( CS + RMSe ) * MUC ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5806540019854145}, {"determining": "( ( ( Const * ( FirstVNF_CPU_Server * Max( ( ( Max( RRS,DDR ) * MRS ) + MRS ),Const ) ) ) + ( FirstVNF_RAM_Server + ( MRS - CRS ) ) ) - Max( ( PN + FirstVNF_Mem ),ARS ) )", "choosing": "( ( RCSe / CS ) / ( ( ( ( ( ( ( CS + DS ) * MLU ) / RRSe ) / RMSe ) * DS ) + ( ( ( ( MLU - Min( RCSe ,MUC ) ) / ( Min( MLU ,MUC ) + MUM ) ) + MUC ) - ( MUR + MUM ) ) ) + CS ) )", "obj1": 0.29182156133828996, "obj2": 0.5537675295064335}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( ACS + Const ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9944237918215614, "obj2": 0.0014914194805970987}, {"determining": "Min( ( Min( MDR ,( ( DDR * FirstVNF_RAM_Server ) * Min( ( MRS * MRS ) ,( FirstVNF_RAM - Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) ) + ( ARS / ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,( MRS - MRS ) ) * RRS ) / ( Const - MDR ) ) ) ,PN ) )", "choosing": "( ( MLU - RRSe ) - ( MUM - Max( ( DS * ( ( MUR / CS ) - RRSe ) ),( ( DS + Min( RMSe ,DS ) ) / ( MUC / RRSe ) ) ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5799394434769585}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - ( PN - ( Max( ( Const + FirstVNF_Mem_Server ),( DDR + CRS ) ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( CS / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) - Min( FirstVNF_CPU ,( BR / ( ( FirstVNF_Mem_Server / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( DS ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / ( ( ( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ACS ) - BR ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( MLU + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( ( RMSe / Max( MUM,RRSe ) ) / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0009146166214042465}, {"determining": "( Min( ( PN - FirstVNF_Mem ) ,( ACS + Const ) ) - Min( FirstVNF_CPU ,( BR / Max( FirstVNF_RAM_Server,Min( PN ,BR ) ) ) ) )", "choosing": "Max( ( ( Max( RCSe,MLU ) * ( ( Max( MUM,Max( ( MUC + RCSe ),RMSe ) ) + DS ) + RRSe ) ) - ( ( MUC * CS ) + DS ) ),( ( MUR / ( MLU * ( RRSe * ( ( MUC / ( MLU * RCSe ) ) * ( Min( RCSe ,MLU ) - ( RCSe * DS ) ) ) ) ) ) + DS ) )", "obj1": 0.9981412639405205, "obj2": 0.0004279742461092883}, {"determining": "Min( ( MDR - DDR ) ,( ( Max( FirstVNF_RAM,DDR ) * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) * Max( FirstVNF_RAM_Server,( ARS / ARS ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( Max( ( RMSe * ( ( ( RMSe + RRSe ) / Min( MUC ,Min( CS ,RCSe ) ) ) / RRSe ) ),( Min( Max( ( RCSe / ( RMSe / RMSe ) ),MLU ) ,Min( MUC ,DS ) ) / Min( ( Min( Min( RMSe ,MUR ) ,MUR ) / MUC ) ,MUR ) ) ) * ( ( ( ( MUM * RMSe ) * ( DS - ( ( MUR + MUC ) + ( DS - CS ) ) ) ) - DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,( DDR / ( ( DDR - Max( Max( MDR,BR ),ACS ) ) + ( FirstVNF_RAM / Max( BR,FirstVNF_RAM_Server ) ) ) ) ) - ( ( ARS + FirstVNF_CPU ) / Min( BR ,MDR ) ) )", "choosing": "( ( RCSe * ( Max( ( MUM / MUM ),( ( RCSe * Max( RCSe,( MUC + MUR ) ) ) + DS ) ) / ( ( RCSe / ( CS * ( RRSe / MUR ) ) ) * DS ) ) ) / ( RMSe + CS ) )", "obj1": 1.0, "obj2": 0.0}]}